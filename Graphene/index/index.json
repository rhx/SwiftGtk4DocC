{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/box\/init(_:)-1nn5r","title":"init!(UnsafePointer<graphene_box_t>?)","type":"init"},{"path":"\/documentation\/graphene\/box\/init(_:)-2oh9r","title":"init(UnsafeMutablePointer<graphene_box_t>)","type":"init"},{"path":"\/documentation\/graphene\/box\/init(_:)-4ad5y","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/box\/init(_:)-4dx0f","title":"init(UnsafePointer<graphene_box_t>)","type":"init"},{"path":"\/documentation\/graphene\/box\/init(_:)-6qwln","title":"init!(UnsafeMutablePointer<graphene_box_t>?)","type":"init"},{"path":"\/documentation\/graphene\/box\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/box\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/box\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/box\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/box\/init(raw:)-6op9u","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/box\/init(raw:)-6xonv","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/box\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<graphene_box_t>)","type":"init"},{"path":"\/documentation\/graphene\/box\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/box\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/box\/init(retainingraw:)-2miu6","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/box\/init(retainingraw:)-9h46o","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/box\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/box\/alloc()","title":"static func alloc() -> Box!","type":"method"},{"path":"\/documentation\/graphene\/box\/empty()","title":"static func empty() -> Box!","type":"method"},{"path":"\/documentation\/graphene\/box\/infinite()","title":"static func infinite() -> Box!","type":"method"},{"path":"\/documentation\/graphene\/box\/minusone()","title":"static func minusOne() -> Box!","type":"method"},{"path":"\/documentation\/graphene\/box\/one()","title":"static func one() -> Box!","type":"method"},{"path":"\/documentation\/graphene\/box\/oneminusone()","title":"static func oneMinusOne() -> Box!","type":"method"},{"path":"\/documentation\/graphene\/box\/zero()","title":"static func zero() -> Box!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/box\/box_ptr","title":"var box_ptr: UnsafeMutablePointer<graphene_box_t>!","type":"property"},{"path":"\/documentation\/graphene\/box\/depth","title":"var depth: CFloat","type":"property"},{"path":"\/documentation\/graphene\/box\/height","title":"var height: CFloat","type":"property"},{"path":"\/documentation\/graphene\/box\/width","title":"var width: CFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/box\/contains(point:)","title":"func contains<Point3DT>(point: Point3DT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/box\/containsbox(b:)","title":"func containsBox<BoxT>(b: BoxT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/box\/equal(b:)","title":"func equal<BoxT>(b: BoxT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/box\/expand(point:res:)","title":"func expand<BoxT, Point3DT>(point: Point3DT, res: BoxT)","type":"method"},{"path":"\/documentation\/graphene\/box\/expand(scalar:res:)","title":"func expand<BoxT>(scalar: CFloat, res: BoxT)","type":"method"},{"path":"\/documentation\/graphene\/box\/expandvec3(vec:res:)","title":"func expandVec3<BoxT, Vec3T>(vec: Vec3T, res: BoxT)","type":"method"},{"path":"\/documentation\/graphene\/box\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/box\/get(center:)","title":"func get<Point3DT>(center: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/box\/get(max:)","title":"func get<Point3DT>(max: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/box\/get(min:)","title":"func get<Point3DT>(min: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/box\/get(size:)","title":"func get<Vec3T>(size: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/box\/get(vertices:)","title":"func get(vertices: UnsafeMutablePointer<graphene_vec3_t>!)","type":"method"},{"path":"\/documentation\/graphene\/box\/getbounding(sphere:)","title":"func getBounding<SphereT>(sphere: SphereT)","type":"method"},{"path":"\/documentation\/graphene\/box\/getdepth()","title":"func getDepth() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/box\/getheight()","title":"func getHeight() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/box\/getwidth()","title":"func getWidth() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/box\/initfrombox(src:)","title":"func initFromBox<BoxT>(src: BoxT) -> BoxRef!","type":"method"},{"path":"\/documentation\/graphene\/box\/initfrompoints(npoints:points:)","title":"func initFromPoints(nPoints: Int, points: UnsafePointer<graphene_point3d_t>!) -> BoxRef!","type":"method"},{"path":"\/documentation\/graphene\/box\/initfromvec3(min:max:)","title":"func initFromVec3(min: Vec3Ref?, max: Vec3Ref?) -> BoxRef!","type":"method"},{"path":"\/documentation\/graphene\/box\/initfromvectors(nvectors:vectors:)","title":"func initFromVectors(nVectors: Int, vectors: UnsafePointer<graphene_vec3_t>!) -> BoxRef!","type":"method"},{"path":"\/documentation\/graphene\/box\/init_(min:max:)","title":"func init_(min: Point3DRef?, max: Point3DRef?) -> BoxRef!","type":"method"},{"path":"\/documentation\/graphene\/box\/intersection(b:res:)","title":"func intersection<BoxT>(b: BoxT, res: BoxT?) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/box\/union(b:res:)","title":"func union<BoxT>(b: BoxT, res: BoxT)","type":"method"}],"path":"\/documentation\/graphene\/box\/boxprotocol-implementations","title":"BoxProtocol Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/box","title":"Box","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/euler\/init(_:)-2abhy","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/euler\/init(_:)-3zqeh","title":"init(UnsafePointer<graphene_euler_t>)","type":"init"},{"path":"\/documentation\/graphene\/euler\/init(_:)-43a6b","title":"init!(UnsafePointer<graphene_euler_t>?)","type":"init"},{"path":"\/documentation\/graphene\/euler\/init(_:)-6a2by","title":"init(UnsafeMutablePointer<graphene_euler_t>)","type":"init"},{"path":"\/documentation\/graphene\/euler\/init(_:)-97bx9","title":"init!(UnsafeMutablePointer<graphene_euler_t>?)","type":"init"},{"path":"\/documentation\/graphene\/euler\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/euler\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/euler\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/euler\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/euler\/init(raw:)-123ag","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/euler\/init(raw:)-94zdw","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/euler\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<graphene_euler_t>)","type":"init"},{"path":"\/documentation\/graphene\/euler\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/euler\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/euler\/init(retainingraw:)-2qcq2","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/euler\/init(retainingraw:)-6l735","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/euler\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/euler\/alloc()","title":"static func alloc() -> Euler!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/euler\/alpha","title":"var alpha: CFloat","type":"property"},{"path":"\/documentation\/graphene\/euler\/beta","title":"var beta: CFloat","type":"property"},{"path":"\/documentation\/graphene\/euler\/euler_ptr","title":"var euler_ptr: UnsafeMutablePointer<graphene_euler_t>!","type":"property"},{"path":"\/documentation\/graphene\/euler\/gamma","title":"var gamma: CFloat","type":"property"},{"path":"\/documentation\/graphene\/euler\/order","title":"var order: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/euler\/x","title":"var x: CFloat","type":"property"},{"path":"\/documentation\/graphene\/euler\/y","title":"var y: CFloat","type":"property"},{"path":"\/documentation\/graphene\/euler\/z","title":"var z: CFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/euler\/equal(b:)","title":"func equal<EulerT>(b: EulerT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/euler\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/euler\/getalpha()","title":"func getAlpha() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/euler\/getbeta()","title":"func getBeta() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/euler\/getgamma()","title":"func getGamma() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/euler\/getorder()","title":"func getOrder() -> graphene_euler_order_t","type":"method"},{"path":"\/documentation\/graphene\/euler\/getx()","title":"func getX() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/euler\/gety()","title":"func getY() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/euler\/getz()","title":"func getZ() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/euler\/initfromeuler(src:)","title":"func initFromEuler(src: EulerRef?) -> EulerRef!","type":"method"},{"path":"\/documentation\/graphene\/euler\/initfrommatrix(m:order:)","title":"func initFromMatrix(m: MatrixRef?, order: graphene_euler_order_t) -> EulerRef!","type":"method"},{"path":"\/documentation\/graphene\/euler\/initfromquaternion(q:order:)","title":"func initFromQuaternion(q: QuaternionRef?, order: graphene_euler_order_t) -> EulerRef!","type":"method"},{"path":"\/documentation\/graphene\/euler\/initfromradians(x:y:z:order:)","title":"func initFromRadians(x: CFloat, y: CFloat, z: CFloat, order: graphene_euler_order_t) -> EulerRef!","type":"method"},{"path":"\/documentation\/graphene\/euler\/initfromvec3(v:order:)","title":"func initFromVec3(v: Vec3Ref?, order: graphene_euler_order_t) -> EulerRef!","type":"method"},{"path":"\/documentation\/graphene\/euler\/initwithorder(x:y:z:order:)","title":"func initWithOrder(x: CFloat, y: CFloat, z: CFloat, order: graphene_euler_order_t) -> EulerRef!","type":"method"},{"path":"\/documentation\/graphene\/euler\/init_(x:y:z:)","title":"func init_(x: CFloat, y: CFloat, z: CFloat) -> EulerRef!","type":"method"},{"path":"\/documentation\/graphene\/euler\/reorder(order:res:)","title":"func reorder<EulerT>(order: graphene_euler_order_t, res: EulerT)","type":"method"},{"path":"\/documentation\/graphene\/euler\/tomatrix(res:)","title":"func toMatrix<MatrixT>(res: MatrixT)","type":"method"},{"path":"\/documentation\/graphene\/euler\/toquaternion(res:)","title":"func toQuaternion<QuaternionT>(res: QuaternionT)","type":"method"},{"path":"\/documentation\/graphene\/euler\/tovec3(res:)","title":"func toVec3<Vec3T>(res: Vec3T)","type":"method"}],"path":"\/documentation\/graphene\/euler\/eulerprotocol-implementations","title":"EulerProtocol Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/euler","title":"Euler","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/frustum\/init(_:)-3giac","title":"init!(UnsafeMutablePointer<graphene_frustum_t>?)","type":"init"},{"path":"\/documentation\/graphene\/frustum\/init(_:)-4il72","title":"init!(UnsafePointer<graphene_frustum_t>?)","type":"init"},{"path":"\/documentation\/graphene\/frustum\/init(_:)-5klw0","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/frustum\/init(_:)-6unjs","title":"init(UnsafePointer<graphene_frustum_t>)","type":"init"},{"path":"\/documentation\/graphene\/frustum\/init(_:)-9n8rv","title":"init(UnsafeMutablePointer<graphene_frustum_t>)","type":"init"},{"path":"\/documentation\/graphene\/frustum\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/frustum\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/frustum\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/frustum\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/frustum\/init(raw:)-33q37","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/frustum\/init(raw:)-9w3sl","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/frustum\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<graphene_frustum_t>)","type":"init"},{"path":"\/documentation\/graphene\/frustum\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/frustum\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/frustum\/init(retainingraw:)-3nqa","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/frustum\/init(retainingraw:)-7iwk2","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/frustum\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/frustum\/alloc()","title":"static func alloc() -> Frustum!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/frustum\/frustum_ptr","title":"var frustum_ptr: UnsafeMutablePointer<graphene_frustum_t>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/frustum\/contains(point:)","title":"func contains<Point3DT>(point: Point3DT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/frustum\/equal(b:)","title":"func equal<FrustumT>(b: FrustumT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/frustum\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/frustum\/get(planes:)","title":"func get(planes: UnsafeMutablePointer<graphene_plane_t>!)","type":"method"},{"path":"\/documentation\/graphene\/frustum\/initfrom(matrix:)","title":"func initFrom<MatrixT>(matrix: MatrixT) -> FrustumRef!","type":"method"},{"path":"\/documentation\/graphene\/frustum\/initfromfrustum(src:)","title":"func initFromFrustum<FrustumT>(src: FrustumT) -> FrustumRef!","type":"method"},{"path":"\/documentation\/graphene\/frustum\/init_(p0:p1:p2:p3:p4:p5:)","title":"func init_<PlaneT>(p0: PlaneT, p1: PlaneT, p2: PlaneT, p3: PlaneT, p4: PlaneT, p5: PlaneT) -> FrustumRef!","type":"method"},{"path":"\/documentation\/graphene\/frustum\/intersects(box:)","title":"func intersects<BoxT>(box: BoxT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/frustum\/intersects(sphere:)","title":"func intersects<SphereT>(sphere: SphereT) -> _Bool","type":"method"}],"path":"\/documentation\/graphene\/frustum\/frustumprotocol-implementations","title":"FrustumProtocol Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/frustum","title":"Frustum","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/matrix\/init(_:)-3afzl","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/matrix\/init(_:)-5nkr9","title":"init!(UnsafeMutablePointer<graphene_matrix_t>?)","type":"init"},{"path":"\/documentation\/graphene\/matrix\/init(_:)-5sif5","title":"init(UnsafePointer<graphene_matrix_t>)","type":"init"},{"path":"\/documentation\/graphene\/matrix\/init(_:)-6nq02","title":"init!(UnsafePointer<graphene_matrix_t>?)","type":"init"},{"path":"\/documentation\/graphene\/matrix\/init(_:)-t495","title":"init(UnsafeMutablePointer<graphene_matrix_t>)","type":"init"},{"path":"\/documentation\/graphene\/matrix\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/matrix\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/matrix\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/matrix\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/matrix\/init(raw:)-duge","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/matrix\/init(raw:)-p1l5","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/matrix\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<graphene_matrix_t>)","type":"init"},{"path":"\/documentation\/graphene\/matrix\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/matrix\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/matrix\/init(retainingraw:)-6eihz","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/matrix\/init(retainingraw:)-912ly","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/matrix\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/matrix\/alloc()","title":"static func alloc() -> Matrix!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/matrix\/is2d","title":"var is2d: _Bool","type":"property"},{"path":"\/documentation\/graphene\/matrix\/isbackfacevisible","title":"var isBackfaceVisible: _Bool","type":"property"},{"path":"\/documentation\/graphene\/matrix\/isidentity","title":"var isIdentity: _Bool","type":"property"},{"path":"\/documentation\/graphene\/matrix\/issingular","title":"var isSingular: _Bool","type":"property"},{"path":"\/documentation\/graphene\/matrix\/matrix_ptr","title":"var matrix_ptr: UnsafeMutablePointer<graphene_matrix_t>!","type":"property"},{"path":"\/documentation\/graphene\/matrix\/xscale","title":"var xScale: CFloat","type":"property"},{"path":"\/documentation\/graphene\/matrix\/xtranslation","title":"var xTranslation: CFloat","type":"property"},{"path":"\/documentation\/graphene\/matrix\/yscale","title":"var yScale: CFloat","type":"property"},{"path":"\/documentation\/graphene\/matrix\/ytranslation","title":"var yTranslation: CFloat","type":"property"},{"path":"\/documentation\/graphene\/matrix\/zscale","title":"var zScale: CFloat","type":"property"},{"path":"\/documentation\/graphene\/matrix\/ztranslation","title":"var zTranslation: CFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/matrix\/decompose(translate:scale:rotate:shear:perspective:)","title":"func decompose<QuaternionT, Vec3T, Vec4T>(translate: Vec3T, scale: Vec3T, rotate: QuaternionT, shear: Vec3T, perspective: Vec4T) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/matrix\/determinant()","title":"func determinant() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/matrix\/equal(b:)","title":"func equal<MatrixT>(b: MatrixT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/matrix\/equalfast(b:)","title":"func equalFast<MatrixT>(b: MatrixT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/matrix\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/matrix\/getrow(index:res:)","title":"func getRow<Vec4T>(index: Int, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/getvalue(row:col:)","title":"func getValue(row: Int, col: Int) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/matrix\/getxscale()","title":"func getXScale() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/matrix\/getxtranslation()","title":"func getXTranslation() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/matrix\/getyscale()","title":"func getYScale() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/matrix\/getytranslation()","title":"func getYTranslation() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/matrix\/getzscale()","title":"func getZScale() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/matrix\/getztranslation()","title":"func getZTranslation() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/matrix\/initfrom2d(xx:yx:xy:yy:x0:y0:)","title":"func initFrom2d(xx: CDouble, yx: CDouble, xy: CDouble, yy: CDouble, x0: CDouble, y0: CDouble) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrix\/initfromfloat(v:)","title":"func initFromFloat(v: UnsafePointer<CFloat>!) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrix\/initfrommatrix(src:)","title":"func initFromMatrix<MatrixT>(src: MatrixT) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrix\/initfromvec4(v0:v1:v2:v3:)","title":"func initFromVec4<Vec4T>(v0: Vec4T, v1: Vec4T, v2: Vec4T, v3: Vec4T) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrix\/initfrustum(left:right:bottom:top:znear:zfar:)","title":"func initFrustum(left: CFloat, right: CFloat, bottom: CFloat, top: CFloat, zNear: CFloat, zFar: CFloat) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrix\/initidentity()","title":"func initIdentity() -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrix\/initlookat(eye:center:up:)","title":"func initLookAt<Vec3T>(eye: Vec3T, center: Vec3T, up: Vec3T) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrix\/initortho(left:right:top:bottom:znear:zfar:)","title":"func initOrtho(left: CFloat, right: CFloat, top: CFloat, bottom: CFloat, zNear: CFloat, zFar: CFloat) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrix\/initperspective(fovy:aspect:znear:zfar:)","title":"func initPerspective(fovy: CFloat, aspect: CFloat, zNear: CFloat, zFar: CFloat) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrix\/initrotate(angle:axis:)","title":"func initRotate<Vec3T>(angle: CFloat, axis: Vec3T) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrix\/initscale(x:y:z:)","title":"func initScale(x: CFloat, y: CFloat, z: CFloat) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrix\/initskew(xskew:yskew:)","title":"func initSkew(xSkew: CFloat, ySkew: CFloat) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrix\/inittranslate(p:)","title":"func initTranslate<Point3DT>(p: Point3DT) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrix\/interpolate(b:factor:res:)","title":"func interpolate<MatrixT>(b: MatrixT, factor: CDouble, res: MatrixT)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/inverse(res:)","title":"func inverse<MatrixT>(res: MatrixT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/matrix\/multiply(b:res:)","title":"func multiply<MatrixT>(b: MatrixT, res: MatrixT)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/near(b:epsilon:)","title":"func near<MatrixT>(b: MatrixT, epsilon: CFloat) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/matrix\/normalize(res:)","title":"func normalize<MatrixT>(res: MatrixT)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/perspective(depth:res:)","title":"func perspective<MatrixT>(depth: CFloat, res: MatrixT)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/print()","title":"func print()","type":"method"},{"path":"\/documentation\/graphene\/matrix\/projectpoint(p:res:)","title":"func projectPoint<PointT>(p: PointT, res: PointT)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/projectrect(r:res:)","title":"func projectRect<QuadT, RectT>(r: RectT, res: QuadT)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/projectrectbounds(r:res:)","title":"func projectRectBounds<RectT>(r: RectT, res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/rotate(angle:axis:)","title":"func rotate<Vec3T>(angle: CFloat, axis: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/rotateeuler(e:)","title":"func rotateEuler<EulerT>(e: EulerT)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/rotatequaternion(q:)","title":"func rotateQuaternion<QuaternionT>(q: QuaternionT)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/rotatex(angle:)","title":"func rotateX(angle: CFloat)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/rotatey(angle:)","title":"func rotateY(angle: CFloat)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/rotatez(angle:)","title":"func rotateZ(angle: CFloat)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/scale(factorx:factory:factorz:)","title":"func scale(factorX: CFloat, factorY: CFloat, factorZ: CFloat)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/skewxy(factor:)","title":"func skewXy(factor: CFloat)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/skewxz(factor:)","title":"func skewXz(factor: CFloat)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/skewyz(factor:)","title":"func skewYz(factor: CFloat)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/to2d(xx:yx:xy:yy:x0:y0:)","title":"func to2d(xx: UnsafeMutablePointer<CDouble>!, yx: UnsafeMutablePointer<CDouble>!, xy: UnsafeMutablePointer<CDouble>!, yy: UnsafeMutablePointer<CDouble>!, x0: UnsafeMutablePointer<CDouble>!, y0: UnsafeMutablePointer<CDouble>!) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/matrix\/tofloat(v:)","title":"func toFloat(v: UnsafeMutablePointer<CFloat>!)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/transformbounds(r:res:)","title":"func transformBounds<RectT>(r: RectT, res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/transformbox(b:res:)","title":"func transformBox<BoxT>(b: BoxT, res: BoxT)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/transformpoint(p:res:)","title":"func transformPoint<PointT>(p: PointT, res: PointT)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/transformpoint3d(p:res:)","title":"func transformPoint3d<Point3DT>(p: Point3DT, res: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/transformray(r:res:)","title":"func transformRay<RayT>(r: RayT, res: RayT)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/transformrect(r:res:)","title":"func transformRect<QuadT, RectT>(r: RectT, res: QuadT)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/transformsphere(s:res:)","title":"func transformSphere<SphereT>(s: SphereT, res: SphereT)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/transformvec3(v:res:)","title":"func transformVec3<Vec3T>(v: Vec3T, res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/transformvec4(v:res:)","title":"func transformVec4<Vec4T>(v: Vec4T, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/translate(pos:)","title":"func translate<Point3DT>(pos: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/transpose(res:)","title":"func transpose<MatrixT>(res: MatrixT)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/unprojectpoint3d(modelview:point:res:)","title":"func unprojectPoint3d<MatrixT, Point3DT>(modelview: MatrixT, point: Point3DT, res: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/untransformbounds(r:bounds:res:)","title":"func untransformBounds<RectT>(r: RectT, bounds: RectT, res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/matrix\/untransformpoint(p:bounds:res:)","title":"func untransformPoint<PointT, RectT>(p: PointT, bounds: RectT, res: PointT) -> _Bool","type":"method"}],"path":"\/documentation\/graphene\/matrix\/matrixprotocol-implementations","title":"MatrixProtocol Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/matrix","title":"Matrix","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/plane\/init(_:)-11p8c","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/plane\/init(_:)-2plf9","title":"init(UnsafePointer<graphene_plane_t>)","type":"init"},{"path":"\/documentation\/graphene\/plane\/init(_:)-5undy","title":"init!(UnsafeMutablePointer<graphene_plane_t>?)","type":"init"},{"path":"\/documentation\/graphene\/plane\/init(_:)-9wel3","title":"init!(UnsafePointer<graphene_plane_t>?)","type":"init"},{"path":"\/documentation\/graphene\/plane\/init(_:)-bdbv","title":"init(UnsafeMutablePointer<graphene_plane_t>)","type":"init"},{"path":"\/documentation\/graphene\/plane\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/plane\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/plane\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/plane\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/plane\/init(raw:)-3hbvw","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/plane\/init(raw:)-8kgzt","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/plane\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<graphene_plane_t>)","type":"init"},{"path":"\/documentation\/graphene\/plane\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/plane\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/plane\/init(retainingraw:)-23tb9","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/plane\/init(retainingraw:)-8arqn","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/plane\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/plane\/alloc()","title":"static func alloc() -> Plane!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/plane\/constant","title":"var constant: CFloat","type":"property"},{"path":"\/documentation\/graphene\/plane\/plane_ptr","title":"var plane_ptr: UnsafeMutablePointer<graphene_plane_t>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/plane\/distance(point:)","title":"func distance<Point3DT>(point: Point3DT) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/plane\/equal(b:)","title":"func equal<PlaneT>(b: PlaneT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/plane\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/plane\/get(normal:)","title":"func get<Vec3T>(normal: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/plane\/getconstant()","title":"func getConstant() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/plane\/initfromplane(src:)","title":"func initFromPlane<PlaneT>(src: PlaneT) -> PlaneRef!","type":"method"},{"path":"\/documentation\/graphene\/plane\/initfrompoint(normal:point:)","title":"func initFromPoint<Point3DT, Vec3T>(normal: Vec3T, point: Point3DT) -> PlaneRef!","type":"method"},{"path":"\/documentation\/graphene\/plane\/initfrompoints(a:b:c:)","title":"func initFromPoints<Point3DT>(a: Point3DT, b: Point3DT, c: Point3DT) -> PlaneRef!","type":"method"},{"path":"\/documentation\/graphene\/plane\/initfromvec4(src:)","title":"func initFromVec4<Vec4T>(src: Vec4T) -> PlaneRef!","type":"method"},{"path":"\/documentation\/graphene\/plane\/init_(normal:constant:)","title":"func init_(normal: Vec3Ref?, constant: CFloat) -> PlaneRef!","type":"method"},{"path":"\/documentation\/graphene\/plane\/negate(res:)","title":"func negate<PlaneT>(res: PlaneT)","type":"method"},{"path":"\/documentation\/graphene\/plane\/normalize(res:)","title":"func normalize<PlaneT>(res: PlaneT)","type":"method"},{"path":"\/documentation\/graphene\/plane\/transform(matrix:normalmatrix:res:)","title":"func transform<MatrixT, PlaneT>(matrix: MatrixT, normalMatrix: MatrixT?, res: PlaneT)","type":"method"}],"path":"\/documentation\/graphene\/plane\/planeprotocol-implementations","title":"PlaneProtocol Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/plane","title":"Plane","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/point\/init(_:)-3dt7d","title":"init!(UnsafePointer<graphene_point_t>?)","type":"init"},{"path":"\/documentation\/graphene\/point\/init(_:)-7cao4","title":"init(UnsafePointer<graphene_point_t>)","type":"init"},{"path":"\/documentation\/graphene\/point\/init(_:)-82p6o","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/point\/init(_:)-8symh","title":"init!(UnsafeMutablePointer<graphene_point_t>?)","type":"init"},{"path":"\/documentation\/graphene\/point\/init(_:)-m7v6","title":"init(UnsafeMutablePointer<graphene_point_t>)","type":"init"},{"path":"\/documentation\/graphene\/point\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/point\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/point\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/point\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/point\/init(raw:)-86019","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/point\/init(raw:)-bsht","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/point\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<graphene_point_t>)","type":"init"},{"path":"\/documentation\/graphene\/point\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/point\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/point\/init(retainingraw:)-2q3dm","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/point\/init(retainingraw:)-8x1ng","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/point\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/point\/alloc()","title":"static func alloc() -> Point!","type":"method"},{"path":"\/documentation\/graphene\/point\/zero()","title":"static func zero() -> Point!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/point\/point_ptr","title":"var point_ptr: UnsafeMutablePointer<graphene_point_t>!","type":"property"},{"path":"\/documentation\/graphene\/point\/x","title":"var x: CFloat","type":"property"},{"path":"\/documentation\/graphene\/point\/y","title":"var y: CFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/point\/distance(b:dx:dy:)","title":"func distance<PointT>(b: PointT, dX: UnsafeMutablePointer<CFloat>!, dY: UnsafeMutablePointer<CFloat>!) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/point\/equal(b:)","title":"func equal<PointT>(b: PointT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/point\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/point\/initfrompoint(src:)","title":"func initFromPoint<PointT>(src: PointT) -> PointRef!","type":"method"},{"path":"\/documentation\/graphene\/point\/initfromvec2(src:)","title":"func initFromVec2<Vec2T>(src: Vec2T) -> PointRef!","type":"method"},{"path":"\/documentation\/graphene\/point\/init_(x:y:)","title":"func init_(x: CFloat, y: CFloat) -> PointRef!","type":"method"},{"path":"\/documentation\/graphene\/point\/interpolate(b:factor:res:)","title":"func interpolate<PointT>(b: PointT, factor: CDouble, res: PointT)","type":"method"},{"path":"\/documentation\/graphene\/point\/near(b:epsilon:)","title":"func near<PointT>(b: PointT, epsilon: CFloat) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/point\/tovec2(v:)","title":"func toVec2<Vec2T>(v: Vec2T)","type":"method"}],"path":"\/documentation\/graphene\/point\/pointprotocol-implementations","title":"PointProtocol Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/point","title":"Point","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/point3d\/init(_:)-406th","title":"init!(UnsafePointer<graphene_point3d_t>?)","type":"init"},{"path":"\/documentation\/graphene\/point3d\/init(_:)-555jz","title":"init!(UnsafeMutablePointer<graphene_point3d_t>?)","type":"init"},{"path":"\/documentation\/graphene\/point3d\/init(_:)-6dmc1","title":"init(UnsafePointer<graphene_point3d_t>)","type":"init"},{"path":"\/documentation\/graphene\/point3d\/init(_:)-6i0a2","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/point3d\/init(_:)-7g4de","title":"init(UnsafeMutablePointer<graphene_point3d_t>)","type":"init"},{"path":"\/documentation\/graphene\/point3d\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/point3d\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/point3d\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/point3d\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/point3d\/init(raw:)-41dba","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/point3d\/init(raw:)-8ensh","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/point3d\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<graphene_point3d_t>)","type":"init"},{"path":"\/documentation\/graphene\/point3d\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/point3d\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/point3d\/init(retainingraw:)-58c0a","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/point3d\/init(retainingraw:)-936np","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/point3d\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/point3d\/alloc()","title":"static func alloc() -> Point3D!","type":"method"},{"path":"\/documentation\/graphene\/point3d\/zero()","title":"static func zero() -> Point3D!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/point3d\/point3d_ptr","title":"var point3d_ptr: UnsafeMutablePointer<graphene_point3d_t>!","type":"property"},{"path":"\/documentation\/graphene\/point3d\/x","title":"var x: CFloat","type":"property"},{"path":"\/documentation\/graphene\/point3d\/y","title":"var y: CFloat","type":"property"},{"path":"\/documentation\/graphene\/point3d\/z","title":"var z: CFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/point3d\/cross(b:res:)","title":"func cross<Point3DT>(b: Point3DT, res: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/point3d\/distance(b:delta:)-3d4r4","title":"func distance<Point3DT>(b: Point3DT, delta: Vec3Ref?) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/point3d\/distance(b:delta:)-464eo","title":"func distance<Point3DT, Vec3T>(b: Point3DT, delta: Vec3T?) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/point3d\/dot(b:)","title":"func dot<Point3DT>(b: Point3DT) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/point3d\/equal(b:)","title":"func equal<Point3DT>(b: Point3DT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/point3d\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/point3d\/initfrompoint(src:)","title":"func initFromPoint<Point3DT>(src: Point3DT) -> Point3DRef!","type":"method"},{"path":"\/documentation\/graphene\/point3d\/initfromvec3(v:)","title":"func initFromVec3<Vec3T>(v: Vec3T) -> Point3DRef!","type":"method"},{"path":"\/documentation\/graphene\/point3d\/init_(x:y:z:)","title":"func init_(x: CFloat, y: CFloat, z: CFloat) -> Point3DRef!","type":"method"},{"path":"\/documentation\/graphene\/point3d\/interpolate(b:factor:res:)","title":"func interpolate<Point3DT>(b: Point3DT, factor: CDouble, res: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/point3d\/length()","title":"func length() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/point3d\/near(b:epsilon:)","title":"func near<Point3DT>(b: Point3DT, epsilon: CFloat) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/point3d\/normalize(res:)","title":"func normalize<Point3DT>(res: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/point3d\/normalize(viewport:znear:zfar:res:)","title":"func normalize<Point3DT, RectT>(viewport: RectT, zNear: CFloat, zFar: CFloat, res: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/point3d\/scale(factor:res:)","title":"func scale<Point3DT>(factor: CFloat, res: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/point3d\/tovec3(v:)","title":"func toVec3<Vec3T>(v: Vec3T)","type":"method"}],"path":"\/documentation\/graphene\/point3d\/point3dprotocol-implementations","title":"Point3DProtocol Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/point3d","title":"Point3D","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/quad\/init(_:)-2svay","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/quad\/init(_:)-36lnu","title":"init!(UnsafeMutablePointer<graphene_quad_t>?)","type":"init"},{"path":"\/documentation\/graphene\/quad\/init(_:)-7psl4","title":"init!(UnsafePointer<graphene_quad_t>?)","type":"init"},{"path":"\/documentation\/graphene\/quad\/init(_:)-me2h","title":"init(UnsafeMutablePointer<graphene_quad_t>)","type":"init"},{"path":"\/documentation\/graphene\/quad\/init(_:)-rb5v","title":"init(UnsafePointer<graphene_quad_t>)","type":"init"},{"path":"\/documentation\/graphene\/quad\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/quad\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/quad\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/quad\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/quad\/init(raw:)-3uj7j","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/quad\/init(raw:)-87tms","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/quad\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<graphene_quad_t>)","type":"init"},{"path":"\/documentation\/graphene\/quad\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/quad\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/quad\/init(retainingraw:)-21aio","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/quad\/init(retainingraw:)-74fmj","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/quad\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/quad\/alloc()","title":"static func alloc() -> Quad!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/quad\/quad_ptr","title":"var quad_ptr: UnsafeMutablePointer<graphene_quad_t>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/quad\/bounds(r:)","title":"func bounds<RectT>(r: RectT)","type":"method"},{"path":"\/documentation\/graphene\/quad\/contains(p:)","title":"func contains<PointT>(p: PointT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/quad\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/quad\/getpoint(index:)","title":"func getPoint(index: Int) -> PointRef!","type":"method"},{"path":"\/documentation\/graphene\/quad\/initfrom(points:)","title":"func initFrom(points: UnsafePointer<graphene_point_t>!) -> QuadRef!","type":"method"},{"path":"\/documentation\/graphene\/quad\/initfromrect(r:)","title":"func initFromRect<RectT>(r: RectT) -> QuadRef!","type":"method"},{"path":"\/documentation\/graphene\/quad\/init_(p1:p2:p3:p4:)","title":"func init_<PointT>(p1: PointT, p2: PointT, p3: PointT, p4: PointT) -> QuadRef!","type":"method"}],"path":"\/documentation\/graphene\/quad\/quadprotocol-implementations","title":"QuadProtocol Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/quad","title":"Quad","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/quaternion\/init(_:)-19ofq","title":"init!(UnsafeMutablePointer<graphene_quaternion_t>?)","type":"init"},{"path":"\/documentation\/graphene\/quaternion\/init(_:)-3bq5t","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/quaternion\/init(_:)-4y7cl","title":"init(UnsafePointer<graphene_quaternion_t>)","type":"init"},{"path":"\/documentation\/graphene\/quaternion\/init(_:)-5siss","title":"init!(UnsafePointer<graphene_quaternion_t>?)","type":"init"},{"path":"\/documentation\/graphene\/quaternion\/init(_:)-8vdyn","title":"init(UnsafeMutablePointer<graphene_quaternion_t>)","type":"init"},{"path":"\/documentation\/graphene\/quaternion\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/quaternion\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/quaternion\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/quaternion\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/quaternion\/init(raw:)-2ctjl","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/quaternion\/init(raw:)-67o2c","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/quaternion\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<graphene_quaternion_t>)","type":"init"},{"path":"\/documentation\/graphene\/quaternion\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/quaternion\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/quaternion\/init(retainingraw:)-5iwn5","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/quaternion\/init(retainingraw:)-6g01u","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/quaternion\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/quaternion\/alloc()","title":"static func alloc() -> Quaternion!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/quaternion\/quaternion_ptr","title":"var quaternion_ptr: UnsafeMutablePointer<graphene_quaternion_t>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/quaternion\/add(b:res:)","title":"func add<QuaternionT>(b: QuaternionT, res: QuaternionT)","type":"method"},{"path":"\/documentation\/graphene\/quaternion\/dot(b:)","title":"func dot<QuaternionT>(b: QuaternionT) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/quaternion\/equal(b:)","title":"func equal<QuaternionT>(b: QuaternionT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/quaternion\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/quaternion\/initfromanglevec3(angle:axis:)","title":"func initFromAngleVec3<Vec3T>(angle: CFloat, axis: Vec3T) -> QuaternionRef!","type":"method"},{"path":"\/documentation\/graphene\/quaternion\/initfromangles(degx:degy:degz:)","title":"func initFromAngles(degX: CFloat, degY: CFloat, degZ: CFloat) -> QuaternionRef!","type":"method"},{"path":"\/documentation\/graphene\/quaternion\/initfromeuler(e:)","title":"func initFromEuler<EulerT>(e: EulerT) -> QuaternionRef!","type":"method"},{"path":"\/documentation\/graphene\/quaternion\/initfrommatrix(m:)","title":"func initFromMatrix<MatrixT>(m: MatrixT) -> QuaternionRef!","type":"method"},{"path":"\/documentation\/graphene\/quaternion\/initfromquaternion(src:)","title":"func initFromQuaternion<QuaternionT>(src: QuaternionT) -> QuaternionRef!","type":"method"},{"path":"\/documentation\/graphene\/quaternion\/initfromradians(radx:rady:radz:)","title":"func initFromRadians(radX: CFloat, radY: CFloat, radZ: CFloat) -> QuaternionRef!","type":"method"},{"path":"\/documentation\/graphene\/quaternion\/initfromvec4(src:)","title":"func initFromVec4<Vec4T>(src: Vec4T) -> QuaternionRef!","type":"method"},{"path":"\/documentation\/graphene\/quaternion\/initidentity()","title":"func initIdentity() -> QuaternionRef!","type":"method"},{"path":"\/documentation\/graphene\/quaternion\/init_(x:y:z:w:)","title":"func init_(x: CFloat, y: CFloat, z: CFloat, w: CFloat) -> QuaternionRef!","type":"method"},{"path":"\/documentation\/graphene\/quaternion\/invert(res:)","title":"func invert<QuaternionT>(res: QuaternionT)","type":"method"},{"path":"\/documentation\/graphene\/quaternion\/multiply(b:res:)","title":"func multiply<QuaternionT>(b: QuaternionT, res: QuaternionT)","type":"method"},{"path":"\/documentation\/graphene\/quaternion\/normalize(res:)","title":"func normalize<QuaternionT>(res: QuaternionT)","type":"method"},{"path":"\/documentation\/graphene\/quaternion\/scale(factor:res:)","title":"func scale<QuaternionT>(factor: CFloat, res: QuaternionT)","type":"method"},{"path":"\/documentation\/graphene\/quaternion\/slerp(b:factor:res:)","title":"func slerp<QuaternionT>(b: QuaternionT, factor: CFloat, res: QuaternionT)","type":"method"},{"path":"\/documentation\/graphene\/quaternion\/toanglevec3(angle:axis:)","title":"func toAngleVec3<Vec3T>(angle: UnsafeMutablePointer<CFloat>!, axis: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/quaternion\/toangles(degx:degy:degz:)","title":"func toAngles(degX: UnsafeMutablePointer<CFloat>!, degY: UnsafeMutablePointer<CFloat>!, degZ: UnsafeMutablePointer<CFloat>!)","type":"method"},{"path":"\/documentation\/graphene\/quaternion\/tomatrix(m:)","title":"func toMatrix<MatrixT>(m: MatrixT)","type":"method"},{"path":"\/documentation\/graphene\/quaternion\/toradians(radx:rady:radz:)","title":"func toRadians(radX: UnsafeMutablePointer<CFloat>!, radY: UnsafeMutablePointer<CFloat>!, radZ: UnsafeMutablePointer<CFloat>!)","type":"method"},{"path":"\/documentation\/graphene\/quaternion\/tovec4(res:)","title":"func toVec4<Vec4T>(res: Vec4T)","type":"method"}],"path":"\/documentation\/graphene\/quaternion\/quaternionprotocol-implementations","title":"QuaternionProtocol Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/quaternion","title":"Quaternion","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/ray\/init(_:)-25ngl","title":"init(UnsafeMutablePointer<graphene_ray_t>)","type":"init"},{"path":"\/documentation\/graphene\/ray\/init(_:)-34b13","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/ray\/init(_:)-406zk","title":"init!(UnsafeMutablePointer<graphene_ray_t>?)","type":"init"},{"path":"\/documentation\/graphene\/ray\/init(_:)-4q810","title":"init(UnsafePointer<graphene_ray_t>)","type":"init"},{"path":"\/documentation\/graphene\/ray\/init(_:)-9z5p0","title":"init!(UnsafePointer<graphene_ray_t>?)","type":"init"},{"path":"\/documentation\/graphene\/ray\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/ray\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/ray\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/ray\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/ray\/init(raw:)-29rxy","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/ray\/init(raw:)-94dlg","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/ray\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<graphene_ray_t>)","type":"init"},{"path":"\/documentation\/graphene\/ray\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/ray\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/ray\/init(retainingraw:)-1i24x","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/ray\/init(retainingraw:)-9iqkl","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/ray\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/ray\/alloc()","title":"static func alloc() -> Ray!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/ray\/ray_ptr","title":"var ray_ptr: UnsafeMutablePointer<graphene_ray_t>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/ray\/equal(b:)","title":"func equal<RayT>(b: RayT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/ray\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/ray\/get(direction:)","title":"func get<Vec3T>(direction: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/ray\/get(origin:)","title":"func get<Point3DT>(origin: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/ray\/getclosestpointtopoint(p:res:)","title":"func getClosestPointToPoint<Point3DT>(p: Point3DT, res: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/ray\/getdistancetoplane(p:)","title":"func getDistanceToPlane<PlaneT>(p: PlaneT) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/ray\/getdistancetopoint(p:)","title":"func getDistanceToPoint<Point3DT>(p: Point3DT) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/ray\/getpositionat(t:position:)","title":"func getPositionAt<Point3DT>(t: CFloat, position: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/ray\/initfromray(src:)","title":"func initFromRay<RayT>(src: RayT) -> RayRef!","type":"method"},{"path":"\/documentation\/graphene\/ray\/initfromvec3(origin:direction:)","title":"func initFromVec3(origin: Vec3Ref?, direction: Vec3Ref?) -> RayRef!","type":"method"},{"path":"\/documentation\/graphene\/ray\/init_(origin:direction:)","title":"func init_(origin: Point3DRef?, direction: Vec3Ref?) -> RayRef!","type":"method"},{"path":"\/documentation\/graphene\/ray\/intersectbox(b:tout:)","title":"func intersectBox<BoxT>(b: BoxT, tOut: UnsafeMutablePointer<CFloat>!) -> graphene_ray_intersection_kind_t","type":"method"},{"path":"\/documentation\/graphene\/ray\/intersectsphere(s:tout:)","title":"func intersectSphere<SphereT>(s: SphereT, tOut: UnsafeMutablePointer<CFloat>!) -> graphene_ray_intersection_kind_t","type":"method"},{"path":"\/documentation\/graphene\/ray\/intersecttriangle(t:tout:)","title":"func intersectTriangle<TriangleT>(t: TriangleT, tOut: UnsafeMutablePointer<CFloat>!) -> graphene_ray_intersection_kind_t","type":"method"},{"path":"\/documentation\/graphene\/ray\/intersectsbox(b:)","title":"func intersectsBox<BoxT>(b: BoxT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/ray\/intersectssphere(s:)","title":"func intersectsSphere<SphereT>(s: SphereT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/ray\/intersectstriangle(t:)","title":"func intersectsTriangle<TriangleT>(t: TriangleT) -> _Bool","type":"method"}],"path":"\/documentation\/graphene\/ray\/rayprotocol-implementations","title":"RayProtocol Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/ray","title":"Ray","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/rect\/init(_:)-38ahn","title":"init!(UnsafePointer<graphene_rect_t>?)","type":"init"},{"path":"\/documentation\/graphene\/rect\/init(_:)-5z4a","title":"init(UnsafeMutablePointer<graphene_rect_t>)","type":"init"},{"path":"\/documentation\/graphene\/rect\/init(_:)-6nbqt","title":"init(UnsafePointer<graphene_rect_t>)","type":"init"},{"path":"\/documentation\/graphene\/rect\/init(_:)-6p32k","title":"init!(UnsafeMutablePointer<graphene_rect_t>?)","type":"init"},{"path":"\/documentation\/graphene\/rect\/init(_:)-9w0fp","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/rect\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/rect\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/rect\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/rect\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/rect\/init(raw:)-48460","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/rect\/init(raw:)-6717r","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/rect\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<graphene_rect_t>)","type":"init"},{"path":"\/documentation\/graphene\/rect\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/rect\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/rect\/init(retainingraw:)-30xee","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/rect\/init(retainingraw:)-gl2d","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/rect\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/rect\/alloc()","title":"static func alloc() -> Rect!","type":"method"},{"path":"\/documentation\/graphene\/rect\/zero()","title":"static func zero() -> Rect!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/rect\/area","title":"var area: CFloat","type":"property"},{"path":"\/documentation\/graphene\/rect\/height","title":"var height: CFloat","type":"property"},{"path":"\/documentation\/graphene\/rect\/origin","title":"var origin: graphene_point_t","type":"property"},{"path":"\/documentation\/graphene\/rect\/rect_ptr","title":"var rect_ptr: UnsafeMutablePointer<graphene_rect_t>!","type":"property"},{"path":"\/documentation\/graphene\/rect\/size","title":"var size: graphene_size_t","type":"property"},{"path":"\/documentation\/graphene\/rect\/width","title":"var width: CFloat","type":"property"},{"path":"\/documentation\/graphene\/rect\/x","title":"var x: CFloat","type":"property"},{"path":"\/documentation\/graphene\/rect\/y","title":"var y: CFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/rect\/containspoint(p:)","title":"func containsPoint<PointT>(p: PointT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/rect\/containsrect(b:)","title":"func containsRect<RectT>(b: RectT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/rect\/equal(b:)","title":"func equal<RectT>(b: RectT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/rect\/expand(p:res:)","title":"func expand<PointT, RectT>(p: PointT, res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/rect\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/rect\/get(vertices:)","title":"func get(vertices: UnsafeMutablePointer<graphene_vec2_t>!)","type":"method"},{"path":"\/documentation\/graphene\/rect\/getarea()","title":"func getArea() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/rect\/getbottomleft(p:)","title":"func getBottomLeft<PointT>(p: PointT)","type":"method"},{"path":"\/documentation\/graphene\/rect\/getbottomright(p:)","title":"func getBottomRight<PointT>(p: PointT)","type":"method"},{"path":"\/documentation\/graphene\/rect\/getcenter(p:)","title":"func getCenter<PointT>(p: PointT)","type":"method"},{"path":"\/documentation\/graphene\/rect\/getheight()","title":"func getHeight() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/rect\/gettopleft(p:)","title":"func getTopLeft<PointT>(p: PointT)","type":"method"},{"path":"\/documentation\/graphene\/rect\/gettopright(p:)","title":"func getTopRight<PointT>(p: PointT)","type":"method"},{"path":"\/documentation\/graphene\/rect\/getwidth()","title":"func getWidth() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/rect\/getx()","title":"func getX() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/rect\/gety()","title":"func getY() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/rect\/initfromrect(src:)","title":"func initFromRect<RectT>(src: RectT) -> RectRef!","type":"method"},{"path":"\/documentation\/graphene\/rect\/init_(x:y:width:height:)","title":"func init_(x: CFloat, y: CFloat, width: CFloat, height: CFloat) -> RectRef!","type":"method"},{"path":"\/documentation\/graphene\/rect\/inset(dx:dy:)","title":"func inset(dX: CFloat, dY: CFloat) -> RectRef!","type":"method"},{"path":"\/documentation\/graphene\/rect\/insetr(dx:dy:res:)","title":"func insetR<RectT>(dX: CFloat, dY: CFloat, res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/rect\/interpolate(b:factor:res:)","title":"func interpolate<RectT>(b: RectT, factor: CDouble, res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/rect\/intersection(b:res:)","title":"func intersection<RectT>(b: RectT, res: RectT?) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/rect\/normalize()","title":"func normalize() -> RectRef!","type":"method"},{"path":"\/documentation\/graphene\/rect\/normalizer(res:)","title":"func normalizeR<RectT>(res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/rect\/offset(dx:dy:)","title":"func offset(dX: CFloat, dY: CFloat) -> RectRef!","type":"method"},{"path":"\/documentation\/graphene\/rect\/offsetr(dx:dy:res:)","title":"func offsetR<RectT>(dX: CFloat, dY: CFloat, res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/rect\/round(res:)","title":"func round<RectT>(res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/rect\/roundextents(res:)","title":"func roundExtents<RectT>(res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/rect\/roundtopixel()","title":"func roundToPixel() -> RectRef!","type":"method"},{"path":"\/documentation\/graphene\/rect\/scale(sh:sv:res:)","title":"func scale<RectT>(sH: CFloat, sV: CFloat, res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/rect\/union(b:res:)","title":"func union<RectT>(b: RectT, res: RectT)","type":"method"}],"path":"\/documentation\/graphene\/rect\/rectprotocol-implementations","title":"RectProtocol Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/rect","title":"Rect","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/simd4f\/init(_:)-1zzwv","title":"init!(UnsafePointer<graphene_simd4f_t>?)","type":"init"},{"path":"\/documentation\/graphene\/simd4f\/init(_:)-2bf8h","title":"init(UnsafeMutablePointer<graphene_simd4f_t>)","type":"init"},{"path":"\/documentation\/graphene\/simd4f\/init(_:)-7zrht","title":"init(UnsafePointer<graphene_simd4f_t>)","type":"init"},{"path":"\/documentation\/graphene\/simd4f\/init(_:)-99xub","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/simd4f\/init(_:)-9mh4n","title":"init!(UnsafeMutablePointer<graphene_simd4f_t>?)","type":"init"},{"path":"\/documentation\/graphene\/simd4f\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/simd4f\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/simd4f\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/simd4f\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/simd4f\/init(raw:)-51n9w","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/simd4f\/init(raw:)-7o7et","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/simd4f\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<graphene_simd4f_t>)","type":"init"},{"path":"\/documentation\/graphene\/simd4f\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/simd4f\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/simd4f\/init(retainingraw:)-3pv7v","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/simd4f\/init(retainingraw:)-kvca","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/simd4f\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"}],"path":"\/documentation\/graphene\/simd4f","title":"Simd4F","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/simd4x4f\/init(_:)-1nwf3","title":"init!(UnsafeMutablePointer<graphene_simd4x4f_t>?)","type":"init"},{"path":"\/documentation\/graphene\/simd4x4f\/init(_:)-37k1","title":"init!(UnsafePointer<graphene_simd4x4f_t>?)","type":"init"},{"path":"\/documentation\/graphene\/simd4x4f\/init(_:)-4q1bi","title":"init(UnsafeMutablePointer<graphene_simd4x4f_t>)","type":"init"},{"path":"\/documentation\/graphene\/simd4x4f\/init(_:)-5k5d2","title":"init(UnsafePointer<graphene_simd4x4f_t>)","type":"init"},{"path":"\/documentation\/graphene\/simd4x4f\/init(_:)-6r84x","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/simd4x4f\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/simd4x4f\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/simd4x4f\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/simd4x4f\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/simd4x4f\/init(raw:)-3isqa","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/simd4x4f\/init(raw:)-w8hx","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/simd4x4f\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<graphene_simd4x4f_t>)","type":"init"},{"path":"\/documentation\/graphene\/simd4x4f\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/simd4x4f\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/simd4x4f\/init(retainingraw:)-8c7pu","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/simd4x4f\/init(retainingraw:)-z6hu","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/simd4x4f\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"}],"path":"\/documentation\/graphene\/simd4x4f","title":"Simd4X4F","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/size\/init(_:)-2b6b3","title":"init(UnsafeMutablePointer<graphene_size_t>)","type":"init"},{"path":"\/documentation\/graphene\/size\/init(_:)-3o2oc","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/size\/init(_:)-3skrj","title":"init!(UnsafePointer<graphene_size_t>?)","type":"init"},{"path":"\/documentation\/graphene\/size\/init(_:)-4380p","title":"init!(UnsafeMutablePointer<graphene_size_t>?)","type":"init"},{"path":"\/documentation\/graphene\/size\/init(_:)-6sggq","title":"init(UnsafePointer<graphene_size_t>)","type":"init"},{"path":"\/documentation\/graphene\/size\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/size\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/size\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/size\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/size\/init(raw:)-1hhjy","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/size\/init(raw:)-2el1d","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/size\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<graphene_size_t>)","type":"init"},{"path":"\/documentation\/graphene\/size\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/size\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/size\/init(retainingraw:)-47kns","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/size\/init(retainingraw:)-9apx3","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/size\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/size\/alloc()","title":"static func alloc() -> Size!","type":"method"},{"path":"\/documentation\/graphene\/size\/zero()","title":"static func zero() -> Size!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/size\/height","title":"var height: CFloat","type":"property"},{"path":"\/documentation\/graphene\/size\/size_ptr","title":"var size_ptr: UnsafeMutablePointer<graphene_size_t>!","type":"property"},{"path":"\/documentation\/graphene\/size\/width","title":"var width: CFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/size\/equal(b:)","title":"func equal<SizeT>(b: SizeT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/size\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/size\/initfromsize(src:)","title":"func initFromSize<SizeT>(src: SizeT) -> SizeRef!","type":"method"},{"path":"\/documentation\/graphene\/size\/init_(width:height:)","title":"func init_(width: CFloat, height: CFloat) -> SizeRef!","type":"method"},{"path":"\/documentation\/graphene\/size\/interpolate(b:factor:res:)","title":"func interpolate<SizeT>(b: SizeT, factor: CDouble, res: SizeT)","type":"method"},{"path":"\/documentation\/graphene\/size\/scale(factor:res:)","title":"func scale<SizeT>(factor: CFloat, res: SizeT)","type":"method"}],"path":"\/documentation\/graphene\/size\/sizeprotocol-implementations","title":"SizeProtocol Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/size","title":"Size","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/sphere\/init(_:)-4n94x","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/sphere\/init(_:)-7ie9u","title":"init(UnsafeMutablePointer<graphene_sphere_t>)","type":"init"},{"path":"\/documentation\/graphene\/sphere\/init(_:)-8ecn1","title":"init!(UnsafePointer<graphene_sphere_t>?)","type":"init"},{"path":"\/documentation\/graphene\/sphere\/init(_:)-8rc6a","title":"init(UnsafePointer<graphene_sphere_t>)","type":"init"},{"path":"\/documentation\/graphene\/sphere\/init(_:)-8vezo","title":"init!(UnsafeMutablePointer<graphene_sphere_t>?)","type":"init"},{"path":"\/documentation\/graphene\/sphere\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/sphere\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/sphere\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/sphere\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/sphere\/init(raw:)-4gztm","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/sphere\/init(raw:)-4s6sl","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/sphere\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<graphene_sphere_t>)","type":"init"},{"path":"\/documentation\/graphene\/sphere\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/sphere\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/sphere\/init(retainingraw:)-853dh","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/sphere\/init(retainingraw:)-s25h","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/sphere\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/sphere\/alloc()","title":"static func alloc() -> Sphere!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/sphere\/isempty","title":"var isEmpty: _Bool","type":"property"},{"path":"\/documentation\/graphene\/sphere\/radius","title":"var radius: CFloat","type":"property"},{"path":"\/documentation\/graphene\/sphere\/sphere_ptr","title":"var sphere_ptr: UnsafeMutablePointer<graphene_sphere_t>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/sphere\/contains(point:)","title":"func contains<Point3DT>(point: Point3DT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/sphere\/distance(point:)","title":"func distance<Point3DT>(point: Point3DT) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/sphere\/equal(b:)","title":"func equal<SphereT>(b: SphereT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/sphere\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/sphere\/get(center:)","title":"func get<Point3DT>(center: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/sphere\/getbounding(box:)","title":"func getBounding<BoxT>(box: BoxT)","type":"method"},{"path":"\/documentation\/graphene\/sphere\/getradius()","title":"func getRadius() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/sphere\/initfrompoints(npoints:points:center:)","title":"func initFromPoints(nPoints: Int, points: UnsafePointer<graphene_point3d_t>!, center: Point3DRef?) -> SphereRef!","type":"method"},{"path":"\/documentation\/graphene\/sphere\/initfromvectors(nvectors:vectors:center:)","title":"func initFromVectors(nVectors: Int, vectors: UnsafePointer<graphene_vec3_t>!, center: Point3DRef?) -> SphereRef!","type":"method"},{"path":"\/documentation\/graphene\/sphere\/init_(center:radius:)","title":"func init_(center: Point3DRef?, radius: CFloat) -> SphereRef!","type":"method"},{"path":"\/documentation\/graphene\/sphere\/translate(point:res:)","title":"func translate<Point3DT, SphereT>(point: Point3DT, res: SphereT)","type":"method"}],"path":"\/documentation\/graphene\/sphere\/sphereprotocol-implementations","title":"SphereProtocol Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/sphere","title":"Sphere","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/triangle\/init(_:)-16hz4","title":"init!(UnsafeMutablePointer<graphene_triangle_t>?)","type":"init"},{"path":"\/documentation\/graphene\/triangle\/init(_:)-1oogn","title":"init(UnsafeMutablePointer<graphene_triangle_t>)","type":"init"},{"path":"\/documentation\/graphene\/triangle\/init(_:)-2m0ae","title":"init!(UnsafePointer<graphene_triangle_t>?)","type":"init"},{"path":"\/documentation\/graphene\/triangle\/init(_:)-6y2qr","title":"init(UnsafePointer<graphene_triangle_t>)","type":"init"},{"path":"\/documentation\/graphene\/triangle\/init(_:)-8xja7","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/triangle\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/triangle\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/triangle\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/triangle\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/triangle\/init(raw:)-75g79","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/triangle\/init(raw:)-9s08k","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/triangle\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<graphene_triangle_t>)","type":"init"},{"path":"\/documentation\/graphene\/triangle\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/triangle\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/triangle\/init(retainingraw:)-187s","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/triangle\/init(retainingraw:)-cf9f","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/triangle\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/triangle\/alloc()","title":"static func alloc() -> Triangle!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/triangle\/area","title":"var area: CFloat","type":"property"},{"path":"\/documentation\/graphene\/triangle\/triangle_ptr","title":"var triangle_ptr: UnsafeMutablePointer<graphene_triangle_t>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/triangle\/containspoint(p:)","title":"func containsPoint<Point3DT>(p: Point3DT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/triangle\/equal(b:)","title":"func equal<TriangleT>(b: TriangleT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/triangle\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/triangle\/getarea()","title":"func getArea() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/triangle\/getbarycoords(p:res:)-7etg9","title":"func getBarycoords<Point3DT, Vec2T>(p: Point3DT?, res: Vec2T) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/triangle\/getbarycoords(p:res:)-9c0n1","title":"func getBarycoords<Vec2T>(p: Point3DRef?, res: Vec2T) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/triangle\/getboundingbox(res:)","title":"func getBoundingBox<BoxT>(res: BoxT)","type":"method"},{"path":"\/documentation\/graphene\/triangle\/getmidpoint(res:)","title":"func getMidpoint<Point3DT>(res: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/triangle\/getnormal(res:)","title":"func getNormal<Vec3T>(res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/triangle\/getplane(res:)","title":"func getPlane<PlaneT>(res: PlaneT)","type":"method"},{"path":"\/documentation\/graphene\/triangle\/getpoints(a:b:c:)","title":"func getPoints(a: Point3DRef?, b: Point3DRef?, c: Point3DRef?)","type":"method"},{"path":"\/documentation\/graphene\/triangle\/getuv(p:uva:uvb:uvc:res:)-6rgzg","title":"func getUv<Point3DT, Vec2T>(p: Point3DT?, uvA: Vec2T, uvB: Vec2T, uvC: Vec2T, res: Vec2T) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/triangle\/getuv(p:uva:uvb:uvc:res:)-7p5kr","title":"func getUv<Vec2T>(p: Point3DRef?, uvA: Vec2T, uvB: Vec2T, uvC: Vec2T, res: Vec2T) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/triangle\/getvertices(a:b:c:)","title":"func getVertices(a: Vec3Ref?, b: Vec3Ref?, c: Vec3Ref?)","type":"method"},{"path":"\/documentation\/graphene\/triangle\/initfromfloat(a:b:c:)","title":"func initFromFloat(a: UnsafePointer<CFloat>!, b: UnsafePointer<CFloat>!, c: UnsafePointer<CFloat>!) -> TriangleRef!","type":"method"},{"path":"\/documentation\/graphene\/triangle\/initfrompoint3d(a:b:c:)","title":"func initFromPoint3d(a: Point3DRef?, b: Point3DRef?, c: Point3DRef?) -> TriangleRef!","type":"method"},{"path":"\/documentation\/graphene\/triangle\/initfromvec3(a:b:c:)","title":"func initFromVec3(a: Vec3Ref?, b: Vec3Ref?, c: Vec3Ref?) -> TriangleRef!","type":"method"}],"path":"\/documentation\/graphene\/triangle\/triangleprotocol-implementations","title":"TriangleProtocol Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/triangle","title":"Triangle","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec2\/init(_:)-2rk84","title":"init!(UnsafeMutablePointer<graphene_vec2_t>?)","type":"init"},{"path":"\/documentation\/graphene\/vec2\/init(_:)-469ah","title":"init!(UnsafePointer<graphene_vec2_t>?)","type":"init"},{"path":"\/documentation\/graphene\/vec2\/init(_:)-8d5dj","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/vec2\/init(_:)-93myr","title":"init(UnsafeMutablePointer<graphene_vec2_t>)","type":"init"},{"path":"\/documentation\/graphene\/vec2\/init(_:)-pu2m","title":"init(UnsafePointer<graphene_vec2_t>)","type":"init"},{"path":"\/documentation\/graphene\/vec2\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/vec2\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/vec2\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/vec2\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/vec2\/init(raw:)-3fpcn","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/vec2\/init(raw:)-629ie","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/vec2\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<graphene_vec2_t>)","type":"init"},{"path":"\/documentation\/graphene\/vec2\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/vec2\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/vec2\/init(retainingraw:)-4u0in","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/vec2\/init(retainingraw:)-8ov16","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec2\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec2\/alloc()","title":"static func alloc() -> Vec2!","type":"method"},{"path":"\/documentation\/graphene\/vec2\/one()","title":"static func one() -> Vec2!","type":"method"},{"path":"\/documentation\/graphene\/vec2\/xaxis()","title":"static func xAxis() -> Vec2!","type":"method"},{"path":"\/documentation\/graphene\/vec2\/yaxis()","title":"static func yAxis() -> Vec2!","type":"method"},{"path":"\/documentation\/graphene\/vec2\/zero()","title":"static func zero() -> Vec2!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec2\/vec2_ptr","title":"var vec2_ptr: UnsafeMutablePointer<graphene_vec2_t>!","type":"property"},{"path":"\/documentation\/graphene\/vec2\/x","title":"var x: CFloat","type":"property"},{"path":"\/documentation\/graphene\/vec2\/y","title":"var y: CFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec2\/add(b:res:)","title":"func add<Vec2T>(b: Vec2T, res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec2\/divide(b:res:)","title":"func divide<Vec2T>(b: Vec2T, res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec2\/dot(b:)","title":"func dot<Vec2T>(b: Vec2T) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec2\/equal(v2:)","title":"func equal<Vec2T>(v2: Vec2T) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/vec2\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/vec2\/getx()","title":"func getX() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec2\/gety()","title":"func getY() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec2\/initfromfloat(src:)","title":"func initFromFloat(src: UnsafePointer<CFloat>!) -> Vec2Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec2\/initfromvec2(src:)","title":"func initFromVec2<Vec2T>(src: Vec2T) -> Vec2Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec2\/init_(x:y:)","title":"func init_(x: CFloat, y: CFloat) -> Vec2Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec2\/interpolate(v2:factor:res:)","title":"func interpolate<Vec2T>(v2: Vec2T, factor: CDouble, res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec2\/length()","title":"func length() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec2\/max(b:res:)","title":"func max<Vec2T>(b: Vec2T, res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec2\/min(b:res:)","title":"func min<Vec2T>(b: Vec2T, res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec2\/multiply(b:res:)","title":"func multiply<Vec2T>(b: Vec2T, res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec2\/near(v2:epsilon:)","title":"func near<Vec2T>(v2: Vec2T, epsilon: CFloat) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/vec2\/negate(res:)","title":"func negate<Vec2T>(res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec2\/normalize(res:)","title":"func normalize<Vec2T>(res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec2\/scale(factor:res:)","title":"func scale<Vec2T>(factor: CFloat, res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec2\/subtract(b:res:)","title":"func subtract<Vec2T>(b: Vec2T, res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec2\/tofloat(dest:)","title":"func toFloat(dest: UnsafeMutablePointer<CFloat>!)","type":"method"}],"path":"\/documentation\/graphene\/vec2\/vec2protocol-implementations","title":"Vec2Protocol Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/vec2","title":"Vec2","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec3\/init(_:)-19rtg","title":"init(UnsafePointer<graphene_vec3_t>)","type":"init"},{"path":"\/documentation\/graphene\/vec3\/init(_:)-3ut1u","title":"init!(UnsafeMutablePointer<graphene_vec3_t>?)","type":"init"},{"path":"\/documentation\/graphene\/vec3\/init(_:)-70g1u","title":"init!(UnsafePointer<graphene_vec3_t>?)","type":"init"},{"path":"\/documentation\/graphene\/vec3\/init(_:)-84dal","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/vec3\/init(_:)-8w8yf","title":"init(UnsafeMutablePointer<graphene_vec3_t>)","type":"init"},{"path":"\/documentation\/graphene\/vec3\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/vec3\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/vec3\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/vec3\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/vec3\/init(raw:)-6g7za","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/vec3\/init(raw:)-9l7zt","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/vec3\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<graphene_vec3_t>)","type":"init"},{"path":"\/documentation\/graphene\/vec3\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/vec3\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/vec3\/init(retainingraw:)-1vh3z","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/vec3\/init(retainingraw:)-4i0y6","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec3\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec3\/alloc()","title":"static func alloc() -> Vec3!","type":"method"},{"path":"\/documentation\/graphene\/vec3\/one()","title":"static func one() -> Vec3!","type":"method"},{"path":"\/documentation\/graphene\/vec3\/xaxis()","title":"static func xAxis() -> Vec3!","type":"method"},{"path":"\/documentation\/graphene\/vec3\/yaxis()","title":"static func yAxis() -> Vec3!","type":"method"},{"path":"\/documentation\/graphene\/vec3\/zaxis()","title":"static func zAxis() -> Vec3!","type":"method"},{"path":"\/documentation\/graphene\/vec3\/zero()","title":"static func zero() -> Vec3!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec3\/vec3_ptr","title":"var vec3_ptr: UnsafeMutablePointer<graphene_vec3_t>!","type":"property"},{"path":"\/documentation\/graphene\/vec3\/x","title":"var x: CFloat","type":"property"},{"path":"\/documentation\/graphene\/vec3\/y","title":"var y: CFloat","type":"property"},{"path":"\/documentation\/graphene\/vec3\/z","title":"var z: CFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec3\/add(b:res:)","title":"func add<Vec3T>(b: Vec3T, res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3\/cross(b:res:)","title":"func cross<Vec3T>(b: Vec3T, res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3\/divide(b:res:)","title":"func divide<Vec3T>(b: Vec3T, res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3\/dot(b:)","title":"func dot<Vec3T>(b: Vec3T) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec3\/equal(v2:)","title":"func equal<Vec3T>(v2: Vec3T) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/vec3\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/vec3\/getx()","title":"func getX() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec3\/getxy(res:)","title":"func getXy<Vec2T>(res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec3\/getxy0(res:)","title":"func getXy0<Vec3T>(res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3\/getxyz0(res:)","title":"func getXyz0<Vec4T>(res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec3\/getxyz1(res:)","title":"func getXyz1<Vec4T>(res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec3\/getxyzw(w:res:)","title":"func getXyzw<Vec4T>(w: CFloat, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec3\/gety()","title":"func getY() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec3\/getz()","title":"func getZ() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec3\/initfromfloat(src:)","title":"func initFromFloat(src: UnsafePointer<CFloat>!) -> Vec3Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec3\/initfromvec3(src:)","title":"func initFromVec3<Vec3T>(src: Vec3T) -> Vec3Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec3\/init_(x:y:z:)","title":"func init_(x: CFloat, y: CFloat, z: CFloat) -> Vec3Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec3\/interpolate(v2:factor:res:)","title":"func interpolate<Vec3T>(v2: Vec3T, factor: CDouble, res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3\/length()","title":"func length() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec3\/max(b:res:)","title":"func max<Vec3T>(b: Vec3T, res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3\/min(b:res:)","title":"func min<Vec3T>(b: Vec3T, res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3\/multiply(b:res:)","title":"func multiply<Vec3T>(b: Vec3T, res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3\/near(v2:epsilon:)","title":"func near<Vec3T>(v2: Vec3T, epsilon: CFloat) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/vec3\/negate(res:)","title":"func negate<Vec3T>(res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3\/normalize(res:)","title":"func normalize<Vec3T>(res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3\/scale(factor:res:)","title":"func scale<Vec3T>(factor: CFloat, res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3\/subtract(b:res:)","title":"func subtract<Vec3T>(b: Vec3T, res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3\/tofloat(dest:)","title":"func toFloat(dest: UnsafeMutablePointer<CFloat>!)","type":"method"}],"path":"\/documentation\/graphene\/vec3\/vec3protocol-implementations","title":"Vec3Protocol Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/vec3","title":"Vec3","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec4\/init(_:)-1l86e","title":"init(UnsafePointer<graphene_vec4_t>)","type":"init"},{"path":"\/documentation\/graphene\/vec4\/init(_:)-2bcy5","title":"init!(UnsafeMutablePointer<graphene_vec4_t>?)","type":"init"},{"path":"\/documentation\/graphene\/vec4\/init(_:)-2qqec","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/vec4\/init(_:)-4rs7p","title":"init!(UnsafePointer<graphene_vec4_t>?)","type":"init"},{"path":"\/documentation\/graphene\/vec4\/init(_:)-669p6","title":"init(UnsafeMutablePointer<graphene_vec4_t>)","type":"init"},{"path":"\/documentation\/graphene\/vec4\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/vec4\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/vec4\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/vec4\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/vec4\/init(raw:)-1t5vx","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/vec4\/init(raw:)-66ges","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/vec4\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<graphene_vec4_t>)","type":"init"},{"path":"\/documentation\/graphene\/vec4\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/vec4\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/graphene\/vec4\/init(retainingraw:)-35trs","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/vec4\/init(retainingraw:)-70o83","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec4\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec4\/alloc()","title":"static func alloc() -> Vec4!","type":"method"},{"path":"\/documentation\/graphene\/vec4\/one()","title":"static func one() -> Vec4!","type":"method"},{"path":"\/documentation\/graphene\/vec4\/waxis()","title":"static func wAxis() -> Vec4!","type":"method"},{"path":"\/documentation\/graphene\/vec4\/xaxis()","title":"static func xAxis() -> Vec4!","type":"method"},{"path":"\/documentation\/graphene\/vec4\/yaxis()","title":"static func yAxis() -> Vec4!","type":"method"},{"path":"\/documentation\/graphene\/vec4\/zaxis()","title":"static func zAxis() -> Vec4!","type":"method"},{"path":"\/documentation\/graphene\/vec4\/zero()","title":"static func zero() -> Vec4!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec4\/vec4_ptr","title":"var vec4_ptr: UnsafeMutablePointer<graphene_vec4_t>!","type":"property"},{"path":"\/documentation\/graphene\/vec4\/w","title":"var w: CFloat","type":"property"},{"path":"\/documentation\/graphene\/vec4\/x","title":"var x: CFloat","type":"property"},{"path":"\/documentation\/graphene\/vec4\/y","title":"var y: CFloat","type":"property"},{"path":"\/documentation\/graphene\/vec4\/z","title":"var z: CFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec4\/add(b:res:)","title":"func add<Vec4T>(b: Vec4T, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec4\/divide(b:res:)","title":"func divide<Vec4T>(b: Vec4T, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec4\/dot(b:)","title":"func dot<Vec4T>(b: Vec4T) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec4\/equal(v2:)","title":"func equal<Vec4T>(v2: Vec4T) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/vec4\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/vec4\/getw()","title":"func getW() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec4\/getx()","title":"func getX() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec4\/getxy(res:)","title":"func getXy<Vec2T>(res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec4\/getxyz(res:)","title":"func getXyz<Vec3T>(res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec4\/gety()","title":"func getY() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec4\/getz()","title":"func getZ() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec4\/initfromfloat(src:)","title":"func initFromFloat(src: UnsafePointer<CFloat>!) -> Vec4Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec4\/initfromvec2(src:z:w:)","title":"func initFromVec2<Vec2T>(src: Vec2T, z: CFloat, w: CFloat) -> Vec4Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec4\/initfromvec3(src:w:)","title":"func initFromVec3<Vec3T>(src: Vec3T, w: CFloat) -> Vec4Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec4\/initfromvec4(src:)","title":"func initFromVec4<Vec4T>(src: Vec4T) -> Vec4Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec4\/init_(x:y:z:w:)","title":"func init_(x: CFloat, y: CFloat, z: CFloat, w: CFloat) -> Vec4Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec4\/interpolate(v2:factor:res:)","title":"func interpolate<Vec4T>(v2: Vec4T, factor: CDouble, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec4\/length()","title":"func length() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec4\/max(b:res:)","title":"func max<Vec4T>(b: Vec4T, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec4\/min(b:res:)","title":"func min<Vec4T>(b: Vec4T, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec4\/multiply(b:res:)","title":"func multiply<Vec4T>(b: Vec4T, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec4\/near(v2:epsilon:)","title":"func near<Vec4T>(v2: Vec4T, epsilon: CFloat) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/vec4\/negate(res:)","title":"func negate<Vec4T>(res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec4\/normalize(res:)","title":"func normalize<Vec4T>(res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec4\/scale(factor:res:)","title":"func scale<Vec4T>(factor: CFloat, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec4\/subtract(b:res:)","title":"func subtract<Vec4T>(b: Vec4T, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec4\/tofloat(dest:)","title":"func toFloat(dest: UnsafeMutablePointer<CFloat>!)","type":"method"}],"path":"\/documentation\/graphene\/vec4\/vec4protocol-implementations","title":"Vec4Protocol Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/vec4","title":"Vec4","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/graphene\/boxprotocol\/box_ptr-9ac1e","title":"var box_ptr: UnsafeMutablePointer<graphene_box_t>!","type":"property"}],"title":"BoxProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/graphene\/boxprotocol\/box_ptr-9ibjh","title":"var box_ptr: UnsafeMutablePointer<graphene_box_t>!","type":"property"},{"path":"\/documentation\/graphene\/boxprotocol\/depth","title":"var depth: CFloat","type":"property"},{"path":"\/documentation\/graphene\/boxprotocol\/height","title":"var height: CFloat","type":"property"},{"path":"\/documentation\/graphene\/boxprotocol\/width","title":"var width: CFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/boxprotocol\/contains(point:)","title":"func contains<Point3DT>(point: Point3DT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/boxprotocol\/containsbox(b:)","title":"func containsBox<BoxT>(b: BoxT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/boxprotocol\/equal(b:)","title":"func equal<BoxT>(b: BoxT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/boxprotocol\/expand(point:res:)","title":"func expand<BoxT, Point3DT>(point: Point3DT, res: BoxT)","type":"method"},{"path":"\/documentation\/graphene\/boxprotocol\/expand(scalar:res:)","title":"func expand<BoxT>(scalar: CFloat, res: BoxT)","type":"method"},{"path":"\/documentation\/graphene\/boxprotocol\/expandvec3(vec:res:)","title":"func expandVec3<BoxT, Vec3T>(vec: Vec3T, res: BoxT)","type":"method"},{"path":"\/documentation\/graphene\/boxprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/boxprotocol\/get(center:)","title":"func get<Point3DT>(center: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/boxprotocol\/get(max:)","title":"func get<Point3DT>(max: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/boxprotocol\/get(min:)","title":"func get<Point3DT>(min: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/boxprotocol\/get(size:)","title":"func get<Vec3T>(size: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/boxprotocol\/get(vertices:)","title":"func get(vertices: UnsafeMutablePointer<graphene_vec3_t>!)","type":"method"},{"path":"\/documentation\/graphene\/boxprotocol\/getbounding(sphere:)","title":"func getBounding<SphereT>(sphere: SphereT)","type":"method"},{"path":"\/documentation\/graphene\/boxprotocol\/getdepth()","title":"func getDepth() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/boxprotocol\/getheight()","title":"func getHeight() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/boxprotocol\/getwidth()","title":"func getWidth() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/boxprotocol\/initfrombox(src:)","title":"func initFromBox<BoxT>(src: BoxT) -> BoxRef!","type":"method"},{"path":"\/documentation\/graphene\/boxprotocol\/initfrompoints(npoints:points:)","title":"func initFromPoints(nPoints: Int, points: UnsafePointer<graphene_point3d_t>!) -> BoxRef!","type":"method"},{"path":"\/documentation\/graphene\/boxprotocol\/initfromvec3(min:max:)-6u6ck","title":"func initFromVec3<Vec3T>(min: Vec3T?, max: Vec3T?) -> BoxRef!","type":"method"},{"path":"\/documentation\/graphene\/boxprotocol\/initfromvec3(min:max:)-9t8nk","title":"func initFromVec3(min: Vec3Ref?, max: Vec3Ref?) -> BoxRef!","type":"method"},{"path":"\/documentation\/graphene\/boxprotocol\/initfromvectors(nvectors:vectors:)","title":"func initFromVectors(nVectors: Int, vectors: UnsafePointer<graphene_vec3_t>!) -> BoxRef!","type":"method"},{"path":"\/documentation\/graphene\/boxprotocol\/init_(min:max:)-2tr2j","title":"func init_<Point3DT>(min: Point3DT?, max: Point3DT?) -> BoxRef!","type":"method"},{"path":"\/documentation\/graphene\/boxprotocol\/init_(min:max:)-5wui3","title":"func init_(min: Point3DRef?, max: Point3DRef?) -> BoxRef!","type":"method"},{"path":"\/documentation\/graphene\/boxprotocol\/intersection(b:res:)","title":"func intersection<BoxT>(b: BoxT, res: BoxT?) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/boxprotocol\/union(b:res:)","title":"func union<BoxT>(b: BoxT, res: BoxT)","type":"method"}],"path":"\/documentation\/graphene\/boxprotocol","title":"BoxProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/eulerprotocol\/alpha","title":"var alpha: CFloat","type":"property"},{"path":"\/documentation\/graphene\/eulerprotocol\/beta","title":"var beta: CFloat","type":"property"},{"children":[{"children":[{"path":"\/documentation\/graphene\/eulerprotocol\/euler_ptr-69bns","title":"var euler_ptr: UnsafeMutablePointer<graphene_euler_t>!","type":"property"}],"title":"EulerProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/graphene\/eulerprotocol\/euler_ptr-5u988","title":"var euler_ptr: UnsafeMutablePointer<graphene_euler_t>!","type":"property"},{"path":"\/documentation\/graphene\/eulerprotocol\/gamma","title":"var gamma: CFloat","type":"property"},{"path":"\/documentation\/graphene\/eulerprotocol\/order","title":"var order: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/eulerprotocol\/x","title":"var x: CFloat","type":"property"},{"path":"\/documentation\/graphene\/eulerprotocol\/y","title":"var y: CFloat","type":"property"},{"path":"\/documentation\/graphene\/eulerprotocol\/z","title":"var z: CFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/eulerprotocol\/equal(b:)","title":"func equal<EulerT>(b: EulerT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/eulerprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/eulerprotocol\/getalpha()","title":"func getAlpha() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/eulerprotocol\/getbeta()","title":"func getBeta() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/eulerprotocol\/getgamma()","title":"func getGamma() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/eulerprotocol\/getorder()","title":"func getOrder() -> graphene_euler_order_t","type":"method"},{"path":"\/documentation\/graphene\/eulerprotocol\/getx()","title":"func getX() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/eulerprotocol\/gety()","title":"func getY() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/eulerprotocol\/getz()","title":"func getZ() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/eulerprotocol\/initfromeuler(src:)-4u9k9","title":"func initFromEuler(src: EulerRef?) -> EulerRef!","type":"method"},{"path":"\/documentation\/graphene\/eulerprotocol\/initfromeuler(src:)-64voi","title":"func initFromEuler<EulerT>(src: EulerT?) -> EulerRef!","type":"method"},{"path":"\/documentation\/graphene\/eulerprotocol\/initfrommatrix(m:order:)-1zcsl","title":"func initFromMatrix<MatrixT>(m: MatrixT?, order: graphene_euler_order_t) -> EulerRef!","type":"method"},{"path":"\/documentation\/graphene\/eulerprotocol\/initfrommatrix(m:order:)-6ldsd","title":"func initFromMatrix(m: MatrixRef?, order: graphene_euler_order_t) -> EulerRef!","type":"method"},{"path":"\/documentation\/graphene\/eulerprotocol\/initfromquaternion(q:order:)-317i2","title":"func initFromQuaternion(q: QuaternionRef?, order: graphene_euler_order_t) -> EulerRef!","type":"method"},{"path":"\/documentation\/graphene\/eulerprotocol\/initfromquaternion(q:order:)-hcp2","title":"func initFromQuaternion<QuaternionT>(q: QuaternionT?, order: graphene_euler_order_t) -> EulerRef!","type":"method"},{"path":"\/documentation\/graphene\/eulerprotocol\/initfromradians(x:y:z:order:)","title":"func initFromRadians(x: CFloat, y: CFloat, z: CFloat, order: graphene_euler_order_t) -> EulerRef!","type":"method"},{"path":"\/documentation\/graphene\/eulerprotocol\/initfromvec3(v:order:)-3jqbw","title":"func initFromVec3(v: Vec3Ref?, order: graphene_euler_order_t) -> EulerRef!","type":"method"},{"path":"\/documentation\/graphene\/eulerprotocol\/initfromvec3(v:order:)-vkb1","title":"func initFromVec3<Vec3T>(v: Vec3T?, order: graphene_euler_order_t) -> EulerRef!","type":"method"},{"path":"\/documentation\/graphene\/eulerprotocol\/initwithorder(x:y:z:order:)","title":"func initWithOrder(x: CFloat, y: CFloat, z: CFloat, order: graphene_euler_order_t) -> EulerRef!","type":"method"},{"path":"\/documentation\/graphene\/eulerprotocol\/init_(x:y:z:)","title":"func init_(x: CFloat, y: CFloat, z: CFloat) -> EulerRef!","type":"method"},{"path":"\/documentation\/graphene\/eulerprotocol\/reorder(order:res:)","title":"func reorder<EulerT>(order: graphene_euler_order_t, res: EulerT)","type":"method"},{"path":"\/documentation\/graphene\/eulerprotocol\/tomatrix(res:)","title":"func toMatrix<MatrixT>(res: MatrixT)","type":"method"},{"path":"\/documentation\/graphene\/eulerprotocol\/toquaternion(res:)","title":"func toQuaternion<QuaternionT>(res: QuaternionT)","type":"method"},{"path":"\/documentation\/graphene\/eulerprotocol\/tovec3(res:)","title":"func toVec3<Vec3T>(res: Vec3T)","type":"method"}],"path":"\/documentation\/graphene\/eulerprotocol","title":"EulerProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/graphene\/frustumprotocol\/frustum_ptr-3n9o6","title":"var frustum_ptr: UnsafeMutablePointer<graphene_frustum_t>!","type":"property"}],"title":"FrustumProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/graphene\/frustumprotocol\/frustum_ptr-3f0tz","title":"var frustum_ptr: UnsafeMutablePointer<graphene_frustum_t>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/frustumprotocol\/contains(point:)","title":"func contains<Point3DT>(point: Point3DT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/frustumprotocol\/equal(b:)","title":"func equal<FrustumT>(b: FrustumT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/frustumprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/frustumprotocol\/get(planes:)","title":"func get(planes: UnsafeMutablePointer<graphene_plane_t>!)","type":"method"},{"path":"\/documentation\/graphene\/frustumprotocol\/initfrom(matrix:)","title":"func initFrom<MatrixT>(matrix: MatrixT) -> FrustumRef!","type":"method"},{"path":"\/documentation\/graphene\/frustumprotocol\/initfromfrustum(src:)","title":"func initFromFrustum<FrustumT>(src: FrustumT) -> FrustumRef!","type":"method"},{"path":"\/documentation\/graphene\/frustumprotocol\/init_(p0:p1:p2:p3:p4:p5:)","title":"func init_<PlaneT>(p0: PlaneT, p1: PlaneT, p2: PlaneT, p3: PlaneT, p4: PlaneT, p5: PlaneT) -> FrustumRef!","type":"method"},{"path":"\/documentation\/graphene\/frustumprotocol\/intersects(box:)","title":"func intersects<BoxT>(box: BoxT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/frustumprotocol\/intersects(sphere:)","title":"func intersects<SphereT>(sphere: SphereT) -> _Bool","type":"method"}],"path":"\/documentation\/graphene\/frustumprotocol","title":"FrustumProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/matrixprotocol\/is2d","title":"var is2d: _Bool","type":"property"},{"path":"\/documentation\/graphene\/matrixprotocol\/isbackfacevisible","title":"var isBackfaceVisible: _Bool","type":"property"},{"path":"\/documentation\/graphene\/matrixprotocol\/isidentity","title":"var isIdentity: _Bool","type":"property"},{"path":"\/documentation\/graphene\/matrixprotocol\/issingular","title":"var isSingular: _Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/graphene\/matrixprotocol\/matrix_ptr-2r1eg","title":"var matrix_ptr: UnsafeMutablePointer<graphene_matrix_t>!","type":"property"}],"title":"MatrixProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/graphene\/matrixprotocol\/matrix_ptr-92nh5","title":"var matrix_ptr: UnsafeMutablePointer<graphene_matrix_t>!","type":"property"},{"path":"\/documentation\/graphene\/matrixprotocol\/xscale","title":"var xScale: CFloat","type":"property"},{"path":"\/documentation\/graphene\/matrixprotocol\/xtranslation","title":"var xTranslation: CFloat","type":"property"},{"path":"\/documentation\/graphene\/matrixprotocol\/yscale","title":"var yScale: CFloat","type":"property"},{"path":"\/documentation\/graphene\/matrixprotocol\/ytranslation","title":"var yTranslation: CFloat","type":"property"},{"path":"\/documentation\/graphene\/matrixprotocol\/zscale","title":"var zScale: CFloat","type":"property"},{"path":"\/documentation\/graphene\/matrixprotocol\/ztranslation","title":"var zTranslation: CFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/matrixprotocol\/decompose(translate:scale:rotate:shear:perspective:)","title":"func decompose<QuaternionT, Vec3T, Vec4T>(translate: Vec3T, scale: Vec3T, rotate: QuaternionT, shear: Vec3T, perspective: Vec4T) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/determinant()","title":"func determinant() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/equal(b:)","title":"func equal<MatrixT>(b: MatrixT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/equalfast(b:)","title":"func equalFast<MatrixT>(b: MatrixT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/getrow(index:res:)","title":"func getRow<Vec4T>(index: Int, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/getvalue(row:col:)","title":"func getValue(row: Int, col: Int) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/getxscale()","title":"func getXScale() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/getxtranslation()","title":"func getXTranslation() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/getyscale()","title":"func getYScale() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/getytranslation()","title":"func getYTranslation() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/getzscale()","title":"func getZScale() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/getztranslation()","title":"func getZTranslation() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/initfrom2d(xx:yx:xy:yy:x0:y0:)","title":"func initFrom2d(xx: CDouble, yx: CDouble, xy: CDouble, yy: CDouble, x0: CDouble, y0: CDouble) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/initfromfloat(v:)","title":"func initFromFloat(v: UnsafePointer<CFloat>!) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/initfrommatrix(src:)","title":"func initFromMatrix<MatrixT>(src: MatrixT) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/initfromvec4(v0:v1:v2:v3:)","title":"func initFromVec4<Vec4T>(v0: Vec4T, v1: Vec4T, v2: Vec4T, v3: Vec4T) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/initfrustum(left:right:bottom:top:znear:zfar:)","title":"func initFrustum(left: CFloat, right: CFloat, bottom: CFloat, top: CFloat, zNear: CFloat, zFar: CFloat) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/initidentity()","title":"func initIdentity() -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/initlookat(eye:center:up:)","title":"func initLookAt<Vec3T>(eye: Vec3T, center: Vec3T, up: Vec3T) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/initortho(left:right:top:bottom:znear:zfar:)","title":"func initOrtho(left: CFloat, right: CFloat, top: CFloat, bottom: CFloat, zNear: CFloat, zFar: CFloat) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/initperspective(fovy:aspect:znear:zfar:)","title":"func initPerspective(fovy: CFloat, aspect: CFloat, zNear: CFloat, zFar: CFloat) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/initrotate(angle:axis:)","title":"func initRotate<Vec3T>(angle: CFloat, axis: Vec3T) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/initscale(x:y:z:)","title":"func initScale(x: CFloat, y: CFloat, z: CFloat) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/initskew(xskew:yskew:)","title":"func initSkew(xSkew: CFloat, ySkew: CFloat) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/inittranslate(p:)","title":"func initTranslate<Point3DT>(p: Point3DT) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/interpolate(b:factor:res:)","title":"func interpolate<MatrixT>(b: MatrixT, factor: CDouble, res: MatrixT)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/inverse(res:)","title":"func inverse<MatrixT>(res: MatrixT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/multiply(b:res:)","title":"func multiply<MatrixT>(b: MatrixT, res: MatrixT)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/near(b:epsilon:)","title":"func near<MatrixT>(b: MatrixT, epsilon: CFloat) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/normalize(res:)","title":"func normalize<MatrixT>(res: MatrixT)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/perspective(depth:res:)","title":"func perspective<MatrixT>(depth: CFloat, res: MatrixT)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/print()","title":"func print()","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/projectpoint(p:res:)","title":"func projectPoint<PointT>(p: PointT, res: PointT)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/projectrect(r:res:)","title":"func projectRect<QuadT, RectT>(r: RectT, res: QuadT)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/projectrectbounds(r:res:)","title":"func projectRectBounds<RectT>(r: RectT, res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/rotate(angle:axis:)","title":"func rotate<Vec3T>(angle: CFloat, axis: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/rotateeuler(e:)","title":"func rotateEuler<EulerT>(e: EulerT)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/rotatequaternion(q:)","title":"func rotateQuaternion<QuaternionT>(q: QuaternionT)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/rotatex(angle:)","title":"func rotateX(angle: CFloat)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/rotatey(angle:)","title":"func rotateY(angle: CFloat)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/rotatez(angle:)","title":"func rotateZ(angle: CFloat)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/scale(factorx:factory:factorz:)","title":"func scale(factorX: CFloat, factorY: CFloat, factorZ: CFloat)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/skewxy(factor:)","title":"func skewXy(factor: CFloat)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/skewxz(factor:)","title":"func skewXz(factor: CFloat)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/skewyz(factor:)","title":"func skewYz(factor: CFloat)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/to2d(xx:yx:xy:yy:x0:y0:)","title":"func to2d(xx: UnsafeMutablePointer<CDouble>!, yx: UnsafeMutablePointer<CDouble>!, xy: UnsafeMutablePointer<CDouble>!, yy: UnsafeMutablePointer<CDouble>!, x0: UnsafeMutablePointer<CDouble>!, y0: UnsafeMutablePointer<CDouble>!) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/tofloat(v:)","title":"func toFloat(v: UnsafeMutablePointer<CFloat>!)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/transformbounds(r:res:)","title":"func transformBounds<RectT>(r: RectT, res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/transformbox(b:res:)","title":"func transformBox<BoxT>(b: BoxT, res: BoxT)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/transformpoint(p:res:)","title":"func transformPoint<PointT>(p: PointT, res: PointT)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/transformpoint3d(p:res:)","title":"func transformPoint3d<Point3DT>(p: Point3DT, res: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/transformray(r:res:)","title":"func transformRay<RayT>(r: RayT, res: RayT)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/transformrect(r:res:)","title":"func transformRect<QuadT, RectT>(r: RectT, res: QuadT)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/transformsphere(s:res:)","title":"func transformSphere<SphereT>(s: SphereT, res: SphereT)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/transformvec3(v:res:)","title":"func transformVec3<Vec3T>(v: Vec3T, res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/transformvec4(v:res:)","title":"func transformVec4<Vec4T>(v: Vec4T, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/translate(pos:)","title":"func translate<Point3DT>(pos: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/transpose(res:)","title":"func transpose<MatrixT>(res: MatrixT)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/unprojectpoint3d(modelview:point:res:)","title":"func unprojectPoint3d<MatrixT, Point3DT>(modelview: MatrixT, point: Point3DT, res: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/untransformbounds(r:bounds:res:)","title":"func untransformBounds<RectT>(r: RectT, bounds: RectT, res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/matrixprotocol\/untransformpoint(p:bounds:res:)","title":"func untransformPoint<PointT, RectT>(p: PointT, bounds: RectT, res: PointT) -> _Bool","type":"method"}],"path":"\/documentation\/graphene\/matrixprotocol","title":"MatrixProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/planeprotocol\/constant","title":"var constant: CFloat","type":"property"},{"children":[{"children":[{"path":"\/documentation\/graphene\/planeprotocol\/plane_ptr-9lxix","title":"var plane_ptr: UnsafeMutablePointer<graphene_plane_t>!","type":"property"}],"title":"PlaneProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/graphene\/planeprotocol\/plane_ptr-3feyu","title":"var plane_ptr: UnsafeMutablePointer<graphene_plane_t>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/planeprotocol\/distance(point:)","title":"func distance<Point3DT>(point: Point3DT) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/planeprotocol\/equal(b:)","title":"func equal<PlaneT>(b: PlaneT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/planeprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/planeprotocol\/get(normal:)","title":"func get<Vec3T>(normal: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/planeprotocol\/getconstant()","title":"func getConstant() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/planeprotocol\/initfromplane(src:)","title":"func initFromPlane<PlaneT>(src: PlaneT) -> PlaneRef!","type":"method"},{"path":"\/documentation\/graphene\/planeprotocol\/initfrompoint(normal:point:)","title":"func initFromPoint<Point3DT, Vec3T>(normal: Vec3T, point: Point3DT) -> PlaneRef!","type":"method"},{"path":"\/documentation\/graphene\/planeprotocol\/initfrompoints(a:b:c:)","title":"func initFromPoints<Point3DT>(a: Point3DT, b: Point3DT, c: Point3DT) -> PlaneRef!","type":"method"},{"path":"\/documentation\/graphene\/planeprotocol\/initfromvec4(src:)","title":"func initFromVec4<Vec4T>(src: Vec4T) -> PlaneRef!","type":"method"},{"path":"\/documentation\/graphene\/planeprotocol\/init_(normal:constant:)-5i4ar","title":"func init_(normal: Vec3Ref?, constant: CFloat) -> PlaneRef!","type":"method"},{"path":"\/documentation\/graphene\/planeprotocol\/init_(normal:constant:)-9qww9","title":"func init_<Vec3T>(normal: Vec3T?, constant: CFloat) -> PlaneRef!","type":"method"},{"path":"\/documentation\/graphene\/planeprotocol\/negate(res:)","title":"func negate<PlaneT>(res: PlaneT)","type":"method"},{"path":"\/documentation\/graphene\/planeprotocol\/normalize(res:)","title":"func normalize<PlaneT>(res: PlaneT)","type":"method"},{"path":"\/documentation\/graphene\/planeprotocol\/transform(matrix:normalmatrix:res:)","title":"func transform<MatrixT, PlaneT>(matrix: MatrixT, normalMatrix: MatrixT?, res: PlaneT)","type":"method"}],"path":"\/documentation\/graphene\/planeprotocol","title":"PlaneProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/graphene\/point3dprotocol\/point3d_ptr-1x7tj","title":"var point3d_ptr: UnsafeMutablePointer<graphene_point3d_t>!","type":"property"}],"title":"Point3DProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/graphene\/point3dprotocol\/point3d_ptr-3cgjs","title":"var point3d_ptr: UnsafeMutablePointer<graphene_point3d_t>!","type":"property"},{"path":"\/documentation\/graphene\/point3dprotocol\/x","title":"var x: CFloat","type":"property"},{"path":"\/documentation\/graphene\/point3dprotocol\/y","title":"var y: CFloat","type":"property"},{"path":"\/documentation\/graphene\/point3dprotocol\/z","title":"var z: CFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/point3dprotocol\/cross(b:res:)","title":"func cross<Point3DT>(b: Point3DT, res: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/point3dprotocol\/distance(b:delta:)-1gl1r","title":"func distance<Point3DT, Vec3T>(b: Point3DT, delta: Vec3T?) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/point3dprotocol\/distance(b:delta:)-6r51b","title":"func distance<Point3DT>(b: Point3DT, delta: Vec3Ref?) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/point3dprotocol\/dot(b:)","title":"func dot<Point3DT>(b: Point3DT) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/point3dprotocol\/equal(b:)","title":"func equal<Point3DT>(b: Point3DT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/point3dprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/point3dprotocol\/initfrompoint(src:)","title":"func initFromPoint<Point3DT>(src: Point3DT) -> Point3DRef!","type":"method"},{"path":"\/documentation\/graphene\/point3dprotocol\/initfromvec3(v:)","title":"func initFromVec3<Vec3T>(v: Vec3T) -> Point3DRef!","type":"method"},{"path":"\/documentation\/graphene\/point3dprotocol\/init_(x:y:z:)","title":"func init_(x: CFloat, y: CFloat, z: CFloat) -> Point3DRef!","type":"method"},{"path":"\/documentation\/graphene\/point3dprotocol\/interpolate(b:factor:res:)","title":"func interpolate<Point3DT>(b: Point3DT, factor: CDouble, res: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/point3dprotocol\/length()","title":"func length() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/point3dprotocol\/near(b:epsilon:)","title":"func near<Point3DT>(b: Point3DT, epsilon: CFloat) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/point3dprotocol\/normalize(res:)","title":"func normalize<Point3DT>(res: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/point3dprotocol\/normalize(viewport:znear:zfar:res:)","title":"func normalize<Point3DT, RectT>(viewport: RectT, zNear: CFloat, zFar: CFloat, res: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/point3dprotocol\/scale(factor:res:)","title":"func scale<Point3DT>(factor: CFloat, res: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/point3dprotocol\/tovec3(v:)","title":"func toVec3<Vec3T>(v: Vec3T)","type":"method"}],"path":"\/documentation\/graphene\/point3dprotocol","title":"Point3DProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/graphene\/pointprotocol\/point_ptr-2wnt6","title":"var point_ptr: UnsafeMutablePointer<graphene_point_t>!","type":"property"}],"title":"PointProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/graphene\/pointprotocol\/point_ptr-3fv6y","title":"var point_ptr: UnsafeMutablePointer<graphene_point_t>!","type":"property"},{"path":"\/documentation\/graphene\/pointprotocol\/x","title":"var x: CFloat","type":"property"},{"path":"\/documentation\/graphene\/pointprotocol\/y","title":"var y: CFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/pointprotocol\/distance(b:dx:dy:)","title":"func distance<PointT>(b: PointT, dX: UnsafeMutablePointer<CFloat>!, dY: UnsafeMutablePointer<CFloat>!) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/pointprotocol\/equal(b:)","title":"func equal<PointT>(b: PointT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/pointprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/pointprotocol\/initfrompoint(src:)","title":"func initFromPoint<PointT>(src: PointT) -> PointRef!","type":"method"},{"path":"\/documentation\/graphene\/pointprotocol\/initfromvec2(src:)","title":"func initFromVec2<Vec2T>(src: Vec2T) -> PointRef!","type":"method"},{"path":"\/documentation\/graphene\/pointprotocol\/init_(x:y:)","title":"func init_(x: CFloat, y: CFloat) -> PointRef!","type":"method"},{"path":"\/documentation\/graphene\/pointprotocol\/interpolate(b:factor:res:)","title":"func interpolate<PointT>(b: PointT, factor: CDouble, res: PointT)","type":"method"},{"path":"\/documentation\/graphene\/pointprotocol\/near(b:epsilon:)","title":"func near<PointT>(b: PointT, epsilon: CFloat) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/pointprotocol\/tovec2(v:)","title":"func toVec2<Vec2T>(v: Vec2T)","type":"method"}],"path":"\/documentation\/graphene\/pointprotocol","title":"PointProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/graphene\/quadprotocol\/quad_ptr-4fqvk","title":"var quad_ptr: UnsafeMutablePointer<graphene_quad_t>!","type":"property"}],"title":"QuadProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/graphene\/quadprotocol\/quad_ptr-67qzf","title":"var quad_ptr: UnsafeMutablePointer<graphene_quad_t>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/quadprotocol\/bounds(r:)","title":"func bounds<RectT>(r: RectT)","type":"method"},{"path":"\/documentation\/graphene\/quadprotocol\/contains(p:)","title":"func contains<PointT>(p: PointT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/quadprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/quadprotocol\/getpoint(index:)","title":"func getPoint(index: Int) -> PointRef!","type":"method"},{"path":"\/documentation\/graphene\/quadprotocol\/initfrom(points:)","title":"func initFrom(points: UnsafePointer<graphene_point_t>!) -> QuadRef!","type":"method"},{"path":"\/documentation\/graphene\/quadprotocol\/initfromrect(r:)","title":"func initFromRect<RectT>(r: RectT) -> QuadRef!","type":"method"},{"path":"\/documentation\/graphene\/quadprotocol\/init_(p1:p2:p3:p4:)","title":"func init_<PointT>(p1: PointT, p2: PointT, p3: PointT, p4: PointT) -> QuadRef!","type":"method"}],"path":"\/documentation\/graphene\/quadprotocol","title":"QuadProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/graphene\/quaternionprotocol\/quaternion_ptr-4yy44","title":"var quaternion_ptr: UnsafeMutablePointer<graphene_quaternion_t>!","type":"property"}],"title":"QuaternionProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/graphene\/quaternionprotocol\/quaternion_ptr-41iyy","title":"var quaternion_ptr: UnsafeMutablePointer<graphene_quaternion_t>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/quaternionprotocol\/add(b:res:)","title":"func add<QuaternionT>(b: QuaternionT, res: QuaternionT)","type":"method"},{"path":"\/documentation\/graphene\/quaternionprotocol\/dot(b:)","title":"func dot<QuaternionT>(b: QuaternionT) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/quaternionprotocol\/equal(b:)","title":"func equal<QuaternionT>(b: QuaternionT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/quaternionprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/quaternionprotocol\/initfromanglevec3(angle:axis:)","title":"func initFromAngleVec3<Vec3T>(angle: CFloat, axis: Vec3T) -> QuaternionRef!","type":"method"},{"path":"\/documentation\/graphene\/quaternionprotocol\/initfromangles(degx:degy:degz:)","title":"func initFromAngles(degX: CFloat, degY: CFloat, degZ: CFloat) -> QuaternionRef!","type":"method"},{"path":"\/documentation\/graphene\/quaternionprotocol\/initfromeuler(e:)","title":"func initFromEuler<EulerT>(e: EulerT) -> QuaternionRef!","type":"method"},{"path":"\/documentation\/graphene\/quaternionprotocol\/initfrommatrix(m:)","title":"func initFromMatrix<MatrixT>(m: MatrixT) -> QuaternionRef!","type":"method"},{"path":"\/documentation\/graphene\/quaternionprotocol\/initfromquaternion(src:)","title":"func initFromQuaternion<QuaternionT>(src: QuaternionT) -> QuaternionRef!","type":"method"},{"path":"\/documentation\/graphene\/quaternionprotocol\/initfromradians(radx:rady:radz:)","title":"func initFromRadians(radX: CFloat, radY: CFloat, radZ: CFloat) -> QuaternionRef!","type":"method"},{"path":"\/documentation\/graphene\/quaternionprotocol\/initfromvec4(src:)","title":"func initFromVec4<Vec4T>(src: Vec4T) -> QuaternionRef!","type":"method"},{"path":"\/documentation\/graphene\/quaternionprotocol\/initidentity()","title":"func initIdentity() -> QuaternionRef!","type":"method"},{"path":"\/documentation\/graphene\/quaternionprotocol\/init_(x:y:z:w:)","title":"func init_(x: CFloat, y: CFloat, z: CFloat, w: CFloat) -> QuaternionRef!","type":"method"},{"path":"\/documentation\/graphene\/quaternionprotocol\/invert(res:)","title":"func invert<QuaternionT>(res: QuaternionT)","type":"method"},{"path":"\/documentation\/graphene\/quaternionprotocol\/multiply(b:res:)","title":"func multiply<QuaternionT>(b: QuaternionT, res: QuaternionT)","type":"method"},{"path":"\/documentation\/graphene\/quaternionprotocol\/normalize(res:)","title":"func normalize<QuaternionT>(res: QuaternionT)","type":"method"},{"path":"\/documentation\/graphene\/quaternionprotocol\/scale(factor:res:)","title":"func scale<QuaternionT>(factor: CFloat, res: QuaternionT)","type":"method"},{"path":"\/documentation\/graphene\/quaternionprotocol\/slerp(b:factor:res:)","title":"func slerp<QuaternionT>(b: QuaternionT, factor: CFloat, res: QuaternionT)","type":"method"},{"path":"\/documentation\/graphene\/quaternionprotocol\/toanglevec3(angle:axis:)","title":"func toAngleVec3<Vec3T>(angle: UnsafeMutablePointer<CFloat>!, axis: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/quaternionprotocol\/toangles(degx:degy:degz:)","title":"func toAngles(degX: UnsafeMutablePointer<CFloat>!, degY: UnsafeMutablePointer<CFloat>!, degZ: UnsafeMutablePointer<CFloat>!)","type":"method"},{"path":"\/documentation\/graphene\/quaternionprotocol\/tomatrix(m:)","title":"func toMatrix<MatrixT>(m: MatrixT)","type":"method"},{"path":"\/documentation\/graphene\/quaternionprotocol\/toradians(radx:rady:radz:)","title":"func toRadians(radX: UnsafeMutablePointer<CFloat>!, radY: UnsafeMutablePointer<CFloat>!, radZ: UnsafeMutablePointer<CFloat>!)","type":"method"},{"path":"\/documentation\/graphene\/quaternionprotocol\/tovec4(res:)","title":"func toVec4<Vec4T>(res: Vec4T)","type":"method"}],"path":"\/documentation\/graphene\/quaternionprotocol","title":"QuaternionProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/graphene\/rayprotocol\/ray_ptr-2tp7j","title":"var ray_ptr: UnsafeMutablePointer<graphene_ray_t>!","type":"property"}],"title":"RayProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/graphene\/rayprotocol\/ray_ptr-38opb","title":"var ray_ptr: UnsafeMutablePointer<graphene_ray_t>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/rayprotocol\/equal(b:)","title":"func equal<RayT>(b: RayT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/rayprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/rayprotocol\/get(direction:)","title":"func get<Vec3T>(direction: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/rayprotocol\/get(origin:)","title":"func get<Point3DT>(origin: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/rayprotocol\/getclosestpointtopoint(p:res:)","title":"func getClosestPointToPoint<Point3DT>(p: Point3DT, res: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/rayprotocol\/getdistancetoplane(p:)","title":"func getDistanceToPlane<PlaneT>(p: PlaneT) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/rayprotocol\/getdistancetopoint(p:)","title":"func getDistanceToPoint<Point3DT>(p: Point3DT) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/rayprotocol\/getpositionat(t:position:)","title":"func getPositionAt<Point3DT>(t: CFloat, position: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/rayprotocol\/initfromray(src:)","title":"func initFromRay<RayT>(src: RayT) -> RayRef!","type":"method"},{"path":"\/documentation\/graphene\/rayprotocol\/initfromvec3(origin:direction:)-2f1b2","title":"func initFromVec3(origin: Vec3Ref?, direction: Vec3Ref?) -> RayRef!","type":"method"},{"path":"\/documentation\/graphene\/rayprotocol\/initfromvec3(origin:direction:)-5atha","title":"func initFromVec3<Vec3T>(origin: Vec3T?, direction: Vec3T?) -> RayRef!","type":"method"},{"path":"\/documentation\/graphene\/rayprotocol\/init_(origin:direction:)-892ea","title":"func init_<Point3DT, Vec3T>(origin: Point3DT?, direction: Vec3T?) -> RayRef!","type":"method"},{"path":"\/documentation\/graphene\/rayprotocol\/init_(origin:direction:)-8rtsp","title":"func init_(origin: Point3DRef?, direction: Vec3Ref?) -> RayRef!","type":"method"},{"path":"\/documentation\/graphene\/rayprotocol\/intersectbox(b:tout:)","title":"func intersectBox<BoxT>(b: BoxT, tOut: UnsafeMutablePointer<CFloat>!) -> graphene_ray_intersection_kind_t","type":"method"},{"path":"\/documentation\/graphene\/rayprotocol\/intersectsphere(s:tout:)","title":"func intersectSphere<SphereT>(s: SphereT, tOut: UnsafeMutablePointer<CFloat>!) -> graphene_ray_intersection_kind_t","type":"method"},{"path":"\/documentation\/graphene\/rayprotocol\/intersecttriangle(t:tout:)","title":"func intersectTriangle<TriangleT>(t: TriangleT, tOut: UnsafeMutablePointer<CFloat>!) -> graphene_ray_intersection_kind_t","type":"method"},{"path":"\/documentation\/graphene\/rayprotocol\/intersectsbox(b:)","title":"func intersectsBox<BoxT>(b: BoxT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/rayprotocol\/intersectssphere(s:)","title":"func intersectsSphere<SphereT>(s: SphereT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/rayprotocol\/intersectstriangle(t:)","title":"func intersectsTriangle<TriangleT>(t: TriangleT) -> _Bool","type":"method"}],"path":"\/documentation\/graphene\/rayprotocol","title":"RayProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/rectprotocol\/area","title":"var area: CFloat","type":"property"},{"path":"\/documentation\/graphene\/rectprotocol\/height","title":"var height: CFloat","type":"property"},{"path":"\/documentation\/graphene\/rectprotocol\/origin","title":"var origin: graphene_point_t","type":"property"},{"children":[{"children":[{"path":"\/documentation\/graphene\/rectprotocol\/rect_ptr-u4kq","title":"var rect_ptr: UnsafeMutablePointer<graphene_rect_t>!","type":"property"}],"title":"RectProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/graphene\/rectprotocol\/rect_ptr-42l5j","title":"var rect_ptr: UnsafeMutablePointer<graphene_rect_t>!","type":"property"},{"path":"\/documentation\/graphene\/rectprotocol\/size","title":"var size: graphene_size_t","type":"property"},{"path":"\/documentation\/graphene\/rectprotocol\/width","title":"var width: CFloat","type":"property"},{"path":"\/documentation\/graphene\/rectprotocol\/x","title":"var x: CFloat","type":"property"},{"path":"\/documentation\/graphene\/rectprotocol\/y","title":"var y: CFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/rectprotocol\/containspoint(p:)","title":"func containsPoint<PointT>(p: PointT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/rectprotocol\/containsrect(b:)","title":"func containsRect<RectT>(b: RectT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/rectprotocol\/equal(b:)","title":"func equal<RectT>(b: RectT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/rectprotocol\/expand(p:res:)","title":"func expand<PointT, RectT>(p: PointT, res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/rectprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/rectprotocol\/get(vertices:)","title":"func get(vertices: UnsafeMutablePointer<graphene_vec2_t>!)","type":"method"},{"path":"\/documentation\/graphene\/rectprotocol\/getarea()","title":"func getArea() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/rectprotocol\/getbottomleft(p:)","title":"func getBottomLeft<PointT>(p: PointT)","type":"method"},{"path":"\/documentation\/graphene\/rectprotocol\/getbottomright(p:)","title":"func getBottomRight<PointT>(p: PointT)","type":"method"},{"path":"\/documentation\/graphene\/rectprotocol\/getcenter(p:)","title":"func getCenter<PointT>(p: PointT)","type":"method"},{"path":"\/documentation\/graphene\/rectprotocol\/getheight()","title":"func getHeight() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/rectprotocol\/gettopleft(p:)","title":"func getTopLeft<PointT>(p: PointT)","type":"method"},{"path":"\/documentation\/graphene\/rectprotocol\/gettopright(p:)","title":"func getTopRight<PointT>(p: PointT)","type":"method"},{"path":"\/documentation\/graphene\/rectprotocol\/getwidth()","title":"func getWidth() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/rectprotocol\/getx()","title":"func getX() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/rectprotocol\/gety()","title":"func getY() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/rectprotocol\/initfromrect(src:)","title":"func initFromRect<RectT>(src: RectT) -> RectRef!","type":"method"},{"path":"\/documentation\/graphene\/rectprotocol\/init_(x:y:width:height:)","title":"func init_(x: CFloat, y: CFloat, width: CFloat, height: CFloat) -> RectRef!","type":"method"},{"path":"\/documentation\/graphene\/rectprotocol\/inset(dx:dy:)","title":"func inset(dX: CFloat, dY: CFloat) -> RectRef!","type":"method"},{"path":"\/documentation\/graphene\/rectprotocol\/insetr(dx:dy:res:)","title":"func insetR<RectT>(dX: CFloat, dY: CFloat, res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/rectprotocol\/interpolate(b:factor:res:)","title":"func interpolate<RectT>(b: RectT, factor: CDouble, res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/rectprotocol\/intersection(b:res:)","title":"func intersection<RectT>(b: RectT, res: RectT?) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/rectprotocol\/normalize()","title":"func normalize() -> RectRef!","type":"method"},{"path":"\/documentation\/graphene\/rectprotocol\/normalizer(res:)","title":"func normalizeR<RectT>(res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/rectprotocol\/offset(dx:dy:)","title":"func offset(dX: CFloat, dY: CFloat) -> RectRef!","type":"method"},{"path":"\/documentation\/graphene\/rectprotocol\/offsetr(dx:dy:res:)","title":"func offsetR<RectT>(dX: CFloat, dY: CFloat, res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/rectprotocol\/round(res:)","title":"func round<RectT>(res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/rectprotocol\/roundextents(res:)","title":"func roundExtents<RectT>(res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/rectprotocol\/roundtopixel()","title":"func roundToPixel() -> RectRef!","type":"method"},{"path":"\/documentation\/graphene\/rectprotocol\/scale(sh:sv:res:)","title":"func scale<RectT>(sH: CFloat, sV: CFloat, res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/rectprotocol\/union(b:res:)","title":"func union<RectT>(b: RectT, res: RectT)","type":"method"}],"path":"\/documentation\/graphene\/rectprotocol","title":"RectProtocol","type":"protocol"},{"path":"\/documentation\/graphene\/simd4fprotocol","title":"Simd4FProtocol","type":"protocol"},{"path":"\/documentation\/graphene\/simd4x4fprotocol","title":"Simd4X4FProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/sizeprotocol\/height","title":"var height: CFloat","type":"property"},{"children":[{"children":[{"path":"\/documentation\/graphene\/sizeprotocol\/size_ptr-8z8w7","title":"var size_ptr: UnsafeMutablePointer<graphene_size_t>!","type":"property"}],"title":"SizeProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/graphene\/sizeprotocol\/size_ptr-4djwp","title":"var size_ptr: UnsafeMutablePointer<graphene_size_t>!","type":"property"},{"path":"\/documentation\/graphene\/sizeprotocol\/width","title":"var width: CFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/sizeprotocol\/equal(b:)","title":"func equal<SizeT>(b: SizeT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/sizeprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/sizeprotocol\/initfromsize(src:)","title":"func initFromSize<SizeT>(src: SizeT) -> SizeRef!","type":"method"},{"path":"\/documentation\/graphene\/sizeprotocol\/init_(width:height:)","title":"func init_(width: CFloat, height: CFloat) -> SizeRef!","type":"method"},{"path":"\/documentation\/graphene\/sizeprotocol\/interpolate(b:factor:res:)","title":"func interpolate<SizeT>(b: SizeT, factor: CDouble, res: SizeT)","type":"method"},{"path":"\/documentation\/graphene\/sizeprotocol\/scale(factor:res:)","title":"func scale<SizeT>(factor: CFloat, res: SizeT)","type":"method"}],"path":"\/documentation\/graphene\/sizeprotocol","title":"SizeProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/sphereprotocol\/isempty","title":"var isEmpty: _Bool","type":"property"},{"path":"\/documentation\/graphene\/sphereprotocol\/radius","title":"var radius: CFloat","type":"property"},{"children":[{"children":[{"path":"\/documentation\/graphene\/sphereprotocol\/sphere_ptr-6lxun","title":"var sphere_ptr: UnsafeMutablePointer<graphene_sphere_t>!","type":"property"}],"title":"SphereProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/graphene\/sphereprotocol\/sphere_ptr-97su1","title":"var sphere_ptr: UnsafeMutablePointer<graphene_sphere_t>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/sphereprotocol\/contains(point:)","title":"func contains<Point3DT>(point: Point3DT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/sphereprotocol\/distance(point:)","title":"func distance<Point3DT>(point: Point3DT) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/sphereprotocol\/equal(b:)","title":"func equal<SphereT>(b: SphereT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/sphereprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/sphereprotocol\/get(center:)","title":"func get<Point3DT>(center: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/sphereprotocol\/getbounding(box:)","title":"func getBounding<BoxT>(box: BoxT)","type":"method"},{"path":"\/documentation\/graphene\/sphereprotocol\/getradius()","title":"func getRadius() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/sphereprotocol\/initfrompoints(npoints:points:center:)-74vjw","title":"func initFromPoints<Point3DT>(nPoints: Int, points: UnsafePointer<graphene_point3d_t>!, center: Point3DT?) -> SphereRef!","type":"method"},{"path":"\/documentation\/graphene\/sphereprotocol\/initfrompoints(npoints:points:center:)-9c2r9","title":"func initFromPoints(nPoints: Int, points: UnsafePointer<graphene_point3d_t>!, center: Point3DRef?) -> SphereRef!","type":"method"},{"path":"\/documentation\/graphene\/sphereprotocol\/initfromvectors(nvectors:vectors:center:)-1n7um","title":"func initFromVectors<Point3DT>(nVectors: Int, vectors: UnsafePointer<graphene_vec3_t>!, center: Point3DT?) -> SphereRef!","type":"method"},{"path":"\/documentation\/graphene\/sphereprotocol\/initfromvectors(nvectors:vectors:center:)-dvh3","title":"func initFromVectors(nVectors: Int, vectors: UnsafePointer<graphene_vec3_t>!, center: Point3DRef?) -> SphereRef!","type":"method"},{"path":"\/documentation\/graphene\/sphereprotocol\/init_(center:radius:)-48nt7","title":"func init_(center: Point3DRef?, radius: CFloat) -> SphereRef!","type":"method"},{"path":"\/documentation\/graphene\/sphereprotocol\/init_(center:radius:)-8xhfq","title":"func init_<Point3DT>(center: Point3DT?, radius: CFloat) -> SphereRef!","type":"method"},{"path":"\/documentation\/graphene\/sphereprotocol\/translate(point:res:)","title":"func translate<Point3DT, SphereT>(point: Point3DT, res: SphereT)","type":"method"}],"path":"\/documentation\/graphene\/sphereprotocol","title":"SphereProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/triangleprotocol\/area","title":"var area: CFloat","type":"property"},{"children":[{"children":[{"path":"\/documentation\/graphene\/triangleprotocol\/triangle_ptr-5xn3t","title":"var triangle_ptr: UnsafeMutablePointer<graphene_triangle_t>!","type":"property"}],"title":"TriangleProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/graphene\/triangleprotocol\/triangle_ptr-6xenk","title":"var triangle_ptr: UnsafeMutablePointer<graphene_triangle_t>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/triangleprotocol\/containspoint(p:)","title":"func containsPoint<Point3DT>(p: Point3DT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/triangleprotocol\/equal(b:)","title":"func equal<TriangleT>(b: TriangleT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/triangleprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/triangleprotocol\/getarea()","title":"func getArea() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/triangleprotocol\/getbarycoords(p:res:)-4uoiy","title":"func getBarycoords<Vec2T>(p: Point3DRef?, res: Vec2T) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/triangleprotocol\/getbarycoords(p:res:)-68u8n","title":"func getBarycoords<Point3DT, Vec2T>(p: Point3DT?, res: Vec2T) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/triangleprotocol\/getboundingbox(res:)","title":"func getBoundingBox<BoxT>(res: BoxT)","type":"method"},{"path":"\/documentation\/graphene\/triangleprotocol\/getmidpoint(res:)","title":"func getMidpoint<Point3DT>(res: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/triangleprotocol\/getnormal(res:)","title":"func getNormal<Vec3T>(res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/triangleprotocol\/getplane(res:)","title":"func getPlane<PlaneT>(res: PlaneT)","type":"method"},{"path":"\/documentation\/graphene\/triangleprotocol\/getpoints(a:b:c:)-2u0fo","title":"func getPoints<Point3DT>(a: Point3DT?, b: Point3DT?, c: Point3DT?)","type":"method"},{"path":"\/documentation\/graphene\/triangleprotocol\/getpoints(a:b:c:)-5561a","title":"func getPoints(a: Point3DRef?, b: Point3DRef?, c: Point3DRef?)","type":"method"},{"path":"\/documentation\/graphene\/triangleprotocol\/getuv(p:uva:uvb:uvc:res:)-1149e","title":"func getUv<Point3DT, Vec2T>(p: Point3DT?, uvA: Vec2T, uvB: Vec2T, uvC: Vec2T, res: Vec2T) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/triangleprotocol\/getuv(p:uva:uvb:uvc:res:)-2xe0w","title":"func getUv<Vec2T>(p: Point3DRef?, uvA: Vec2T, uvB: Vec2T, uvC: Vec2T, res: Vec2T) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/triangleprotocol\/getvertices(a:b:c:)-7l90d","title":"func getVertices<Vec3T>(a: Vec3T?, b: Vec3T?, c: Vec3T?)","type":"method"},{"path":"\/documentation\/graphene\/triangleprotocol\/getvertices(a:b:c:)-an26","title":"func getVertices(a: Vec3Ref?, b: Vec3Ref?, c: Vec3Ref?)","type":"method"},{"path":"\/documentation\/graphene\/triangleprotocol\/initfromfloat(a:b:c:)","title":"func initFromFloat(a: UnsafePointer<CFloat>!, b: UnsafePointer<CFloat>!, c: UnsafePointer<CFloat>!) -> TriangleRef!","type":"method"},{"path":"\/documentation\/graphene\/triangleprotocol\/initfrompoint3d(a:b:c:)-5g4hw","title":"func initFromPoint3d(a: Point3DRef?, b: Point3DRef?, c: Point3DRef?) -> TriangleRef!","type":"method"},{"path":"\/documentation\/graphene\/triangleprotocol\/initfrompoint3d(a:b:c:)-60n9o","title":"func initFromPoint3d<Point3DT>(a: Point3DT?, b: Point3DT?, c: Point3DT?) -> TriangleRef!","type":"method"},{"path":"\/documentation\/graphene\/triangleprotocol\/initfromvec3(a:b:c:)-3sca5","title":"func initFromVec3(a: Vec3Ref?, b: Vec3Ref?, c: Vec3Ref?) -> TriangleRef!","type":"method"},{"path":"\/documentation\/graphene\/triangleprotocol\/initfromvec3(a:b:c:)-8x7eh","title":"func initFromVec3<Vec3T>(a: Vec3T?, b: Vec3T?, c: Vec3T?) -> TriangleRef!","type":"method"}],"path":"\/documentation\/graphene\/triangleprotocol","title":"TriangleProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/graphene\/vec2protocol\/vec2_ptr-62c9q","title":"var vec2_ptr: UnsafeMutablePointer<graphene_vec2_t>!","type":"property"}],"title":"Vec2Protocol Implementations","type":"groupMarker"}],"path":"\/documentation\/graphene\/vec2protocol\/vec2_ptr-3rbwr","title":"var vec2_ptr: UnsafeMutablePointer<graphene_vec2_t>!","type":"property"},{"path":"\/documentation\/graphene\/vec2protocol\/x","title":"var x: CFloat","type":"property"},{"path":"\/documentation\/graphene\/vec2protocol\/y","title":"var y: CFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec2protocol\/add(b:res:)","title":"func add<Vec2T>(b: Vec2T, res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec2protocol\/divide(b:res:)","title":"func divide<Vec2T>(b: Vec2T, res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec2protocol\/dot(b:)","title":"func dot<Vec2T>(b: Vec2T) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec2protocol\/equal(v2:)","title":"func equal<Vec2T>(v2: Vec2T) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/vec2protocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/vec2protocol\/getx()","title":"func getX() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec2protocol\/gety()","title":"func getY() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec2protocol\/initfromfloat(src:)","title":"func initFromFloat(src: UnsafePointer<CFloat>!) -> Vec2Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec2protocol\/initfromvec2(src:)","title":"func initFromVec2<Vec2T>(src: Vec2T) -> Vec2Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec2protocol\/init_(x:y:)","title":"func init_(x: CFloat, y: CFloat) -> Vec2Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec2protocol\/interpolate(v2:factor:res:)","title":"func interpolate<Vec2T>(v2: Vec2T, factor: CDouble, res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec2protocol\/length()","title":"func length() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec2protocol\/max(b:res:)","title":"func max<Vec2T>(b: Vec2T, res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec2protocol\/min(b:res:)","title":"func min<Vec2T>(b: Vec2T, res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec2protocol\/multiply(b:res:)","title":"func multiply<Vec2T>(b: Vec2T, res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec2protocol\/near(v2:epsilon:)","title":"func near<Vec2T>(v2: Vec2T, epsilon: CFloat) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/vec2protocol\/negate(res:)","title":"func negate<Vec2T>(res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec2protocol\/normalize(res:)","title":"func normalize<Vec2T>(res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec2protocol\/scale(factor:res:)","title":"func scale<Vec2T>(factor: CFloat, res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec2protocol\/subtract(b:res:)","title":"func subtract<Vec2T>(b: Vec2T, res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec2protocol\/tofloat(dest:)","title":"func toFloat(dest: UnsafeMutablePointer<CFloat>!)","type":"method"}],"path":"\/documentation\/graphene\/vec2protocol","title":"Vec2Protocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/graphene\/vec3protocol\/vec3_ptr-73gdu","title":"var vec3_ptr: UnsafeMutablePointer<graphene_vec3_t>!","type":"property"}],"title":"Vec3Protocol Implementations","type":"groupMarker"}],"path":"\/documentation\/graphene\/vec3protocol\/vec3_ptr-3vx4g","title":"var vec3_ptr: UnsafeMutablePointer<graphene_vec3_t>!","type":"property"},{"path":"\/documentation\/graphene\/vec3protocol\/x","title":"var x: CFloat","type":"property"},{"path":"\/documentation\/graphene\/vec3protocol\/y","title":"var y: CFloat","type":"property"},{"path":"\/documentation\/graphene\/vec3protocol\/z","title":"var z: CFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec3protocol\/add(b:res:)","title":"func add<Vec3T>(b: Vec3T, res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3protocol\/cross(b:res:)","title":"func cross<Vec3T>(b: Vec3T, res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3protocol\/divide(b:res:)","title":"func divide<Vec3T>(b: Vec3T, res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3protocol\/dot(b:)","title":"func dot<Vec3T>(b: Vec3T) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec3protocol\/equal(v2:)","title":"func equal<Vec3T>(v2: Vec3T) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/vec3protocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/vec3protocol\/getx()","title":"func getX() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec3protocol\/getxy(res:)","title":"func getXy<Vec2T>(res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec3protocol\/getxy0(res:)","title":"func getXy0<Vec3T>(res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3protocol\/getxyz0(res:)","title":"func getXyz0<Vec4T>(res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec3protocol\/getxyz1(res:)","title":"func getXyz1<Vec4T>(res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec3protocol\/getxyzw(w:res:)","title":"func getXyzw<Vec4T>(w: CFloat, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec3protocol\/gety()","title":"func getY() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec3protocol\/getz()","title":"func getZ() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec3protocol\/initfromfloat(src:)","title":"func initFromFloat(src: UnsafePointer<CFloat>!) -> Vec3Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec3protocol\/initfromvec3(src:)","title":"func initFromVec3<Vec3T>(src: Vec3T) -> Vec3Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec3protocol\/init_(x:y:z:)","title":"func init_(x: CFloat, y: CFloat, z: CFloat) -> Vec3Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec3protocol\/interpolate(v2:factor:res:)","title":"func interpolate<Vec3T>(v2: Vec3T, factor: CDouble, res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3protocol\/length()","title":"func length() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec3protocol\/max(b:res:)","title":"func max<Vec3T>(b: Vec3T, res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3protocol\/min(b:res:)","title":"func min<Vec3T>(b: Vec3T, res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3protocol\/multiply(b:res:)","title":"func multiply<Vec3T>(b: Vec3T, res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3protocol\/near(v2:epsilon:)","title":"func near<Vec3T>(v2: Vec3T, epsilon: CFloat) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/vec3protocol\/negate(res:)","title":"func negate<Vec3T>(res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3protocol\/normalize(res:)","title":"func normalize<Vec3T>(res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3protocol\/scale(factor:res:)","title":"func scale<Vec3T>(factor: CFloat, res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3protocol\/subtract(b:res:)","title":"func subtract<Vec3T>(b: Vec3T, res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3protocol\/tofloat(dest:)","title":"func toFloat(dest: UnsafeMutablePointer<CFloat>!)","type":"method"}],"path":"\/documentation\/graphene\/vec3protocol","title":"Vec3Protocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/graphene\/vec4protocol\/vec4_ptr-7u1ck","title":"var vec4_ptr: UnsafeMutablePointer<graphene_vec4_t>!","type":"property"}],"title":"Vec4Protocol Implementations","type":"groupMarker"}],"path":"\/documentation\/graphene\/vec4protocol\/vec4_ptr-4kmpi","title":"var vec4_ptr: UnsafeMutablePointer<graphene_vec4_t>!","type":"property"},{"path":"\/documentation\/graphene\/vec4protocol\/w","title":"var w: CFloat","type":"property"},{"path":"\/documentation\/graphene\/vec4protocol\/x","title":"var x: CFloat","type":"property"},{"path":"\/documentation\/graphene\/vec4protocol\/y","title":"var y: CFloat","type":"property"},{"path":"\/documentation\/graphene\/vec4protocol\/z","title":"var z: CFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec4protocol\/add(b:res:)","title":"func add<Vec4T>(b: Vec4T, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec4protocol\/divide(b:res:)","title":"func divide<Vec4T>(b: Vec4T, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec4protocol\/dot(b:)","title":"func dot<Vec4T>(b: Vec4T) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec4protocol\/equal(v2:)","title":"func equal<Vec4T>(v2: Vec4T) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/vec4protocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/vec4protocol\/getw()","title":"func getW() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec4protocol\/getx()","title":"func getX() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec4protocol\/getxy(res:)","title":"func getXy<Vec2T>(res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec4protocol\/getxyz(res:)","title":"func getXyz<Vec3T>(res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec4protocol\/gety()","title":"func getY() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec4protocol\/getz()","title":"func getZ() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec4protocol\/initfromfloat(src:)","title":"func initFromFloat(src: UnsafePointer<CFloat>!) -> Vec4Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec4protocol\/initfromvec2(src:z:w:)","title":"func initFromVec2<Vec2T>(src: Vec2T, z: CFloat, w: CFloat) -> Vec4Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec4protocol\/initfromvec3(src:w:)","title":"func initFromVec3<Vec3T>(src: Vec3T, w: CFloat) -> Vec4Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec4protocol\/initfromvec4(src:)","title":"func initFromVec4<Vec4T>(src: Vec4T) -> Vec4Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec4protocol\/init_(x:y:z:w:)","title":"func init_(x: CFloat, y: CFloat, z: CFloat, w: CFloat) -> Vec4Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec4protocol\/interpolate(v2:factor:res:)","title":"func interpolate<Vec4T>(v2: Vec4T, factor: CDouble, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec4protocol\/length()","title":"func length() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec4protocol\/max(b:res:)","title":"func max<Vec4T>(b: Vec4T, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec4protocol\/min(b:res:)","title":"func min<Vec4T>(b: Vec4T, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec4protocol\/multiply(b:res:)","title":"func multiply<Vec4T>(b: Vec4T, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec4protocol\/near(v2:epsilon:)","title":"func near<Vec4T>(v2: Vec4T, epsilon: CFloat) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/vec4protocol\/negate(res:)","title":"func negate<Vec4T>(res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec4protocol\/normalize(res:)","title":"func normalize<Vec4T>(res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec4protocol\/scale(factor:res:)","title":"func scale<Vec4T>(factor: CFloat, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec4protocol\/subtract(b:res:)","title":"func subtract<Vec4T>(b: Vec4T, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec4protocol\/tofloat(dest:)","title":"func toFloat(dest: UnsafeMutablePointer<CFloat>!)","type":"method"}],"path":"\/documentation\/graphene\/vec4protocol","title":"Vec4Protocol","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/boxref\/init(_:)-64ta5","title":"init(UnsafePointer<graphene_box_t>)","type":"init"},{"path":"\/documentation\/graphene\/boxref\/init(_:)-6vyrt","title":"init!(UnsafePointer<graphene_box_t>?)","type":"init"},{"path":"\/documentation\/graphene\/boxref\/init(_:)-7bwu","title":"init!(UnsafeMutablePointer<graphene_box_t>?)","type":"init"},{"path":"\/documentation\/graphene\/boxref\/init(_:)-8gnys","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/boxref\/init(_:)-8y7le","title":"init(UnsafeMutablePointer<graphene_box_t>)","type":"init"},{"path":"\/documentation\/graphene\/boxref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/boxref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/boxref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/boxref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/boxref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/boxref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/boxref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/boxref\/alloc()","title":"static func alloc() -> BoxRef!","type":"method"},{"path":"\/documentation\/graphene\/boxref\/empty()","title":"static func empty() -> BoxRef!","type":"method"},{"path":"\/documentation\/graphene\/boxref\/infinite()","title":"static func infinite() -> BoxRef!","type":"method"},{"path":"\/documentation\/graphene\/boxref\/minusone()","title":"static func minusOne() -> BoxRef!","type":"method"},{"path":"\/documentation\/graphene\/boxref\/one()","title":"static func one() -> BoxRef!","type":"method"},{"path":"\/documentation\/graphene\/boxref\/oneminusone()","title":"static func oneMinusOne() -> BoxRef!","type":"method"},{"path":"\/documentation\/graphene\/boxref\/zero()","title":"static func zero() -> BoxRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/boxref\/box_ptr","title":"var box_ptr: UnsafeMutablePointer<graphene_box_t>!","type":"property"},{"path":"\/documentation\/graphene\/boxref\/depth","title":"var depth: CFloat","type":"property"},{"path":"\/documentation\/graphene\/boxref\/height","title":"var height: CFloat","type":"property"},{"path":"\/documentation\/graphene\/boxref\/width","title":"var width: CFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/boxref\/contains(point:)","title":"func contains<Point3DT>(point: Point3DT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/boxref\/containsbox(b:)","title":"func containsBox<BoxT>(b: BoxT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/boxref\/equal(b:)","title":"func equal<BoxT>(b: BoxT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/boxref\/expand(point:res:)","title":"func expand<BoxT, Point3DT>(point: Point3DT, res: BoxT)","type":"method"},{"path":"\/documentation\/graphene\/boxref\/expand(scalar:res:)","title":"func expand<BoxT>(scalar: CFloat, res: BoxT)","type":"method"},{"path":"\/documentation\/graphene\/boxref\/expandvec3(vec:res:)","title":"func expandVec3<BoxT, Vec3T>(vec: Vec3T, res: BoxT)","type":"method"},{"path":"\/documentation\/graphene\/boxref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/boxref\/get(center:)","title":"func get<Point3DT>(center: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/boxref\/get(max:)","title":"func get<Point3DT>(max: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/boxref\/get(min:)","title":"func get<Point3DT>(min: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/boxref\/get(size:)","title":"func get<Vec3T>(size: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/boxref\/get(vertices:)","title":"func get(vertices: UnsafeMutablePointer<graphene_vec3_t>!)","type":"method"},{"path":"\/documentation\/graphene\/boxref\/getbounding(sphere:)","title":"func getBounding<SphereT>(sphere: SphereT)","type":"method"},{"path":"\/documentation\/graphene\/boxref\/getdepth()","title":"func getDepth() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/boxref\/getheight()","title":"func getHeight() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/boxref\/getwidth()","title":"func getWidth() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/boxref\/initfrombox(src:)","title":"func initFromBox<BoxT>(src: BoxT) -> BoxRef!","type":"method"},{"path":"\/documentation\/graphene\/boxref\/initfrompoints(npoints:points:)","title":"func initFromPoints(nPoints: Int, points: UnsafePointer<graphene_point3d_t>!) -> BoxRef!","type":"method"},{"path":"\/documentation\/graphene\/boxref\/initfromvec3(min:max:)","title":"func initFromVec3(min: Vec3Ref?, max: Vec3Ref?) -> BoxRef!","type":"method"},{"path":"\/documentation\/graphene\/boxref\/initfromvectors(nvectors:vectors:)","title":"func initFromVectors(nVectors: Int, vectors: UnsafePointer<graphene_vec3_t>!) -> BoxRef!","type":"method"},{"path":"\/documentation\/graphene\/boxref\/init_(min:max:)","title":"func init_(min: Point3DRef?, max: Point3DRef?) -> BoxRef!","type":"method"},{"path":"\/documentation\/graphene\/boxref\/intersection(b:res:)","title":"func intersection<BoxT>(b: BoxT, res: BoxT?) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/boxref\/union(b:res:)","title":"func union<BoxT>(b: BoxT, res: BoxT)","type":"method"}],"path":"\/documentation\/graphene\/boxref\/boxprotocol-implementations","title":"BoxProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/boxref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/graphene\/boxref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/boxref","title":"BoxRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/eulerref\/init(_:)-3aoj4","title":"init(UnsafePointer<graphene_euler_t>)","type":"init"},{"path":"\/documentation\/graphene\/eulerref\/init(_:)-6smx0","title":"init!(UnsafeMutablePointer<graphene_euler_t>?)","type":"init"},{"path":"\/documentation\/graphene\/eulerref\/init(_:)-81mj3","title":"init(UnsafeMutablePointer<graphene_euler_t>)","type":"init"},{"path":"\/documentation\/graphene\/eulerref\/init(_:)-9ga85","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/eulerref\/init(_:)-cxt6","title":"init!(UnsafePointer<graphene_euler_t>?)","type":"init"},{"path":"\/documentation\/graphene\/eulerref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/eulerref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/eulerref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/eulerref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/eulerref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/eulerref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/eulerref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/eulerref\/alloc()","title":"static func alloc() -> EulerRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/eulerref\/alpha","title":"var alpha: CFloat","type":"property"},{"path":"\/documentation\/graphene\/eulerref\/beta","title":"var beta: CFloat","type":"property"},{"path":"\/documentation\/graphene\/eulerref\/euler_ptr","title":"var euler_ptr: UnsafeMutablePointer<graphene_euler_t>!","type":"property"},{"path":"\/documentation\/graphene\/eulerref\/gamma","title":"var gamma: CFloat","type":"property"},{"path":"\/documentation\/graphene\/eulerref\/order","title":"var order: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/eulerref\/x","title":"var x: CFloat","type":"property"},{"path":"\/documentation\/graphene\/eulerref\/y","title":"var y: CFloat","type":"property"},{"path":"\/documentation\/graphene\/eulerref\/z","title":"var z: CFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/eulerref\/equal(b:)","title":"func equal<EulerT>(b: EulerT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/eulerref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/eulerref\/getalpha()","title":"func getAlpha() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/eulerref\/getbeta()","title":"func getBeta() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/eulerref\/getgamma()","title":"func getGamma() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/eulerref\/getorder()","title":"func getOrder() -> graphene_euler_order_t","type":"method"},{"path":"\/documentation\/graphene\/eulerref\/getx()","title":"func getX() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/eulerref\/gety()","title":"func getY() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/eulerref\/getz()","title":"func getZ() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/eulerref\/initfromeuler(src:)","title":"func initFromEuler(src: EulerRef?) -> EulerRef!","type":"method"},{"path":"\/documentation\/graphene\/eulerref\/initfrommatrix(m:order:)","title":"func initFromMatrix(m: MatrixRef?, order: graphene_euler_order_t) -> EulerRef!","type":"method"},{"path":"\/documentation\/graphene\/eulerref\/initfromquaternion(q:order:)","title":"func initFromQuaternion(q: QuaternionRef?, order: graphene_euler_order_t) -> EulerRef!","type":"method"},{"path":"\/documentation\/graphene\/eulerref\/initfromradians(x:y:z:order:)","title":"func initFromRadians(x: CFloat, y: CFloat, z: CFloat, order: graphene_euler_order_t) -> EulerRef!","type":"method"},{"path":"\/documentation\/graphene\/eulerref\/initfromvec3(v:order:)","title":"func initFromVec3(v: Vec3Ref?, order: graphene_euler_order_t) -> EulerRef!","type":"method"},{"path":"\/documentation\/graphene\/eulerref\/initwithorder(x:y:z:order:)","title":"func initWithOrder(x: CFloat, y: CFloat, z: CFloat, order: graphene_euler_order_t) -> EulerRef!","type":"method"},{"path":"\/documentation\/graphene\/eulerref\/init_(x:y:z:)","title":"func init_(x: CFloat, y: CFloat, z: CFloat) -> EulerRef!","type":"method"},{"path":"\/documentation\/graphene\/eulerref\/reorder(order:res:)","title":"func reorder<EulerT>(order: graphene_euler_order_t, res: EulerT)","type":"method"},{"path":"\/documentation\/graphene\/eulerref\/tomatrix(res:)","title":"func toMatrix<MatrixT>(res: MatrixT)","type":"method"},{"path":"\/documentation\/graphene\/eulerref\/toquaternion(res:)","title":"func toQuaternion<QuaternionT>(res: QuaternionT)","type":"method"},{"path":"\/documentation\/graphene\/eulerref\/tovec3(res:)","title":"func toVec3<Vec3T>(res: Vec3T)","type":"method"}],"path":"\/documentation\/graphene\/eulerref\/eulerprotocol-implementations","title":"EulerProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/eulerref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/graphene\/eulerref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/eulerref","title":"EulerRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/frustumref\/init(_:)-2a08b","title":"init(UnsafePointer<graphene_frustum_t>)","type":"init"},{"path":"\/documentation\/graphene\/frustumref\/init(_:)-31b56","title":"init!(UnsafePointer<graphene_frustum_t>?)","type":"init"},{"path":"\/documentation\/graphene\/frustumref\/init(_:)-3wrm1","title":"init!(UnsafeMutablePointer<graphene_frustum_t>?)","type":"init"},{"path":"\/documentation\/graphene\/frustumref\/init(_:)-5xyi6","title":"init(UnsafeMutablePointer<graphene_frustum_t>)","type":"init"},{"path":"\/documentation\/graphene\/frustumref\/init(_:)-qxc6","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/frustumref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/frustumref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/frustumref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/frustumref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/frustumref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/frustumref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/frustumref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/frustumref\/alloc()","title":"static func alloc() -> FrustumRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/frustumref\/frustum_ptr","title":"var frustum_ptr: UnsafeMutablePointer<graphene_frustum_t>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/frustumref\/contains(point:)","title":"func contains<Point3DT>(point: Point3DT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/frustumref\/equal(b:)","title":"func equal<FrustumT>(b: FrustumT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/frustumref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/frustumref\/get(planes:)","title":"func get(planes: UnsafeMutablePointer<graphene_plane_t>!)","type":"method"},{"path":"\/documentation\/graphene\/frustumref\/initfrom(matrix:)","title":"func initFrom<MatrixT>(matrix: MatrixT) -> FrustumRef!","type":"method"},{"path":"\/documentation\/graphene\/frustumref\/initfromfrustum(src:)","title":"func initFromFrustum<FrustumT>(src: FrustumT) -> FrustumRef!","type":"method"},{"path":"\/documentation\/graphene\/frustumref\/init_(p0:p1:p2:p3:p4:p5:)","title":"func init_<PlaneT>(p0: PlaneT, p1: PlaneT, p2: PlaneT, p3: PlaneT, p4: PlaneT, p5: PlaneT) -> FrustumRef!","type":"method"},{"path":"\/documentation\/graphene\/frustumref\/intersects(box:)","title":"func intersects<BoxT>(box: BoxT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/frustumref\/intersects(sphere:)","title":"func intersects<SphereT>(sphere: SphereT) -> _Bool","type":"method"}],"path":"\/documentation\/graphene\/frustumref\/frustumprotocol-implementations","title":"FrustumProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/frustumref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/graphene\/frustumref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/frustumref","title":"FrustumRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/matrixref\/init(_:)-2orwe","title":"init(UnsafePointer<graphene_matrix_t>)","type":"init"},{"path":"\/documentation\/graphene\/matrixref\/init(_:)-3nka","title":"init!(UnsafeMutablePointer<graphene_matrix_t>?)","type":"init"},{"path":"\/documentation\/graphene\/matrixref\/init(_:)-4okyh","title":"init(UnsafeMutablePointer<graphene_matrix_t>)","type":"init"},{"path":"\/documentation\/graphene\/matrixref\/init(_:)-7mbj9","title":"init!(UnsafePointer<graphene_matrix_t>?)","type":"init"},{"path":"\/documentation\/graphene\/matrixref\/init(_:)-7xgy4","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/matrixref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/matrixref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/matrixref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/matrixref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/matrixref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/matrixref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/matrixref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/matrixref\/alloc()","title":"static func alloc() -> MatrixRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/matrixref\/is2d","title":"var is2d: _Bool","type":"property"},{"path":"\/documentation\/graphene\/matrixref\/isbackfacevisible","title":"var isBackfaceVisible: _Bool","type":"property"},{"path":"\/documentation\/graphene\/matrixref\/isidentity","title":"var isIdentity: _Bool","type":"property"},{"path":"\/documentation\/graphene\/matrixref\/issingular","title":"var isSingular: _Bool","type":"property"},{"path":"\/documentation\/graphene\/matrixref\/matrix_ptr","title":"var matrix_ptr: UnsafeMutablePointer<graphene_matrix_t>!","type":"property"},{"path":"\/documentation\/graphene\/matrixref\/xscale","title":"var xScale: CFloat","type":"property"},{"path":"\/documentation\/graphene\/matrixref\/xtranslation","title":"var xTranslation: CFloat","type":"property"},{"path":"\/documentation\/graphene\/matrixref\/yscale","title":"var yScale: CFloat","type":"property"},{"path":"\/documentation\/graphene\/matrixref\/ytranslation","title":"var yTranslation: CFloat","type":"property"},{"path":"\/documentation\/graphene\/matrixref\/zscale","title":"var zScale: CFloat","type":"property"},{"path":"\/documentation\/graphene\/matrixref\/ztranslation","title":"var zTranslation: CFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/matrixref\/decompose(translate:scale:rotate:shear:perspective:)","title":"func decompose<QuaternionT, Vec3T, Vec4T>(translate: Vec3T, scale: Vec3T, rotate: QuaternionT, shear: Vec3T, perspective: Vec4T) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/determinant()","title":"func determinant() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/equal(b:)","title":"func equal<MatrixT>(b: MatrixT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/equalfast(b:)","title":"func equalFast<MatrixT>(b: MatrixT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/getrow(index:res:)","title":"func getRow<Vec4T>(index: Int, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/getvalue(row:col:)","title":"func getValue(row: Int, col: Int) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/getxscale()","title":"func getXScale() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/getxtranslation()","title":"func getXTranslation() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/getyscale()","title":"func getYScale() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/getytranslation()","title":"func getYTranslation() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/getzscale()","title":"func getZScale() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/getztranslation()","title":"func getZTranslation() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/initfrom2d(xx:yx:xy:yy:x0:y0:)","title":"func initFrom2d(xx: CDouble, yx: CDouble, xy: CDouble, yy: CDouble, x0: CDouble, y0: CDouble) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/initfromfloat(v:)","title":"func initFromFloat(v: UnsafePointer<CFloat>!) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/initfrommatrix(src:)","title":"func initFromMatrix<MatrixT>(src: MatrixT) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/initfromvec4(v0:v1:v2:v3:)","title":"func initFromVec4<Vec4T>(v0: Vec4T, v1: Vec4T, v2: Vec4T, v3: Vec4T) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/initfrustum(left:right:bottom:top:znear:zfar:)","title":"func initFrustum(left: CFloat, right: CFloat, bottom: CFloat, top: CFloat, zNear: CFloat, zFar: CFloat) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/initidentity()","title":"func initIdentity() -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/initlookat(eye:center:up:)","title":"func initLookAt<Vec3T>(eye: Vec3T, center: Vec3T, up: Vec3T) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/initortho(left:right:top:bottom:znear:zfar:)","title":"func initOrtho(left: CFloat, right: CFloat, top: CFloat, bottom: CFloat, zNear: CFloat, zFar: CFloat) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/initperspective(fovy:aspect:znear:zfar:)","title":"func initPerspective(fovy: CFloat, aspect: CFloat, zNear: CFloat, zFar: CFloat) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/initrotate(angle:axis:)","title":"func initRotate<Vec3T>(angle: CFloat, axis: Vec3T) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/initscale(x:y:z:)","title":"func initScale(x: CFloat, y: CFloat, z: CFloat) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/initskew(xskew:yskew:)","title":"func initSkew(xSkew: CFloat, ySkew: CFloat) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/inittranslate(p:)","title":"func initTranslate<Point3DT>(p: Point3DT) -> MatrixRef!","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/interpolate(b:factor:res:)","title":"func interpolate<MatrixT>(b: MatrixT, factor: CDouble, res: MatrixT)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/inverse(res:)","title":"func inverse<MatrixT>(res: MatrixT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/multiply(b:res:)","title":"func multiply<MatrixT>(b: MatrixT, res: MatrixT)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/near(b:epsilon:)","title":"func near<MatrixT>(b: MatrixT, epsilon: CFloat) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/normalize(res:)","title":"func normalize<MatrixT>(res: MatrixT)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/perspective(depth:res:)","title":"func perspective<MatrixT>(depth: CFloat, res: MatrixT)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/print()","title":"func print()","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/projectpoint(p:res:)","title":"func projectPoint<PointT>(p: PointT, res: PointT)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/projectrect(r:res:)","title":"func projectRect<QuadT, RectT>(r: RectT, res: QuadT)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/projectrectbounds(r:res:)","title":"func projectRectBounds<RectT>(r: RectT, res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/rotate(angle:axis:)","title":"func rotate<Vec3T>(angle: CFloat, axis: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/rotateeuler(e:)","title":"func rotateEuler<EulerT>(e: EulerT)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/rotatequaternion(q:)","title":"func rotateQuaternion<QuaternionT>(q: QuaternionT)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/rotatex(angle:)","title":"func rotateX(angle: CFloat)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/rotatey(angle:)","title":"func rotateY(angle: CFloat)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/rotatez(angle:)","title":"func rotateZ(angle: CFloat)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/scale(factorx:factory:factorz:)","title":"func scale(factorX: CFloat, factorY: CFloat, factorZ: CFloat)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/skewxy(factor:)","title":"func skewXy(factor: CFloat)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/skewxz(factor:)","title":"func skewXz(factor: CFloat)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/skewyz(factor:)","title":"func skewYz(factor: CFloat)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/to2d(xx:yx:xy:yy:x0:y0:)","title":"func to2d(xx: UnsafeMutablePointer<CDouble>!, yx: UnsafeMutablePointer<CDouble>!, xy: UnsafeMutablePointer<CDouble>!, yy: UnsafeMutablePointer<CDouble>!, x0: UnsafeMutablePointer<CDouble>!, y0: UnsafeMutablePointer<CDouble>!) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/tofloat(v:)","title":"func toFloat(v: UnsafeMutablePointer<CFloat>!)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/transformbounds(r:res:)","title":"func transformBounds<RectT>(r: RectT, res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/transformbox(b:res:)","title":"func transformBox<BoxT>(b: BoxT, res: BoxT)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/transformpoint(p:res:)","title":"func transformPoint<PointT>(p: PointT, res: PointT)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/transformpoint3d(p:res:)","title":"func transformPoint3d<Point3DT>(p: Point3DT, res: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/transformray(r:res:)","title":"func transformRay<RayT>(r: RayT, res: RayT)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/transformrect(r:res:)","title":"func transformRect<QuadT, RectT>(r: RectT, res: QuadT)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/transformsphere(s:res:)","title":"func transformSphere<SphereT>(s: SphereT, res: SphereT)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/transformvec3(v:res:)","title":"func transformVec3<Vec3T>(v: Vec3T, res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/transformvec4(v:res:)","title":"func transformVec4<Vec4T>(v: Vec4T, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/translate(pos:)","title":"func translate<Point3DT>(pos: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/transpose(res:)","title":"func transpose<MatrixT>(res: MatrixT)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/unprojectpoint3d(modelview:point:res:)","title":"func unprojectPoint3d<MatrixT, Point3DT>(modelview: MatrixT, point: Point3DT, res: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/untransformbounds(r:bounds:res:)","title":"func untransformBounds<RectT>(r: RectT, bounds: RectT, res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/matrixref\/untransformpoint(p:bounds:res:)","title":"func untransformPoint<PointT, RectT>(p: PointT, bounds: RectT, res: PointT) -> _Bool","type":"method"}],"path":"\/documentation\/graphene\/matrixref\/matrixprotocol-implementations","title":"MatrixProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/matrixref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/graphene\/matrixref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/matrixref","title":"MatrixRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/planeref\/init(_:)-3kmfk","title":"init!(UnsafeMutablePointer<graphene_plane_t>?)","type":"init"},{"path":"\/documentation\/graphene\/planeref\/init(_:)-52zbc","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/planeref\/init(_:)-69b4n","title":"init(UnsafeMutablePointer<graphene_plane_t>)","type":"init"},{"path":"\/documentation\/graphene\/planeref\/init(_:)-ljno","title":"init(UnsafePointer<graphene_plane_t>)","type":"init"},{"path":"\/documentation\/graphene\/planeref\/init(_:)-xhvk","title":"init!(UnsafePointer<graphene_plane_t>?)","type":"init"},{"path":"\/documentation\/graphene\/planeref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/planeref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/planeref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/planeref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/planeref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/planeref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/planeref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/planeref\/alloc()","title":"static func alloc() -> PlaneRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/planeref\/constant","title":"var constant: CFloat","type":"property"},{"path":"\/documentation\/graphene\/planeref\/plane_ptr","title":"var plane_ptr: UnsafeMutablePointer<graphene_plane_t>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/planeref\/distance(point:)","title":"func distance<Point3DT>(point: Point3DT) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/planeref\/equal(b:)","title":"func equal<PlaneT>(b: PlaneT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/planeref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/planeref\/get(normal:)","title":"func get<Vec3T>(normal: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/planeref\/getconstant()","title":"func getConstant() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/planeref\/initfromplane(src:)","title":"func initFromPlane<PlaneT>(src: PlaneT) -> PlaneRef!","type":"method"},{"path":"\/documentation\/graphene\/planeref\/initfrompoint(normal:point:)","title":"func initFromPoint<Point3DT, Vec3T>(normal: Vec3T, point: Point3DT) -> PlaneRef!","type":"method"},{"path":"\/documentation\/graphene\/planeref\/initfrompoints(a:b:c:)","title":"func initFromPoints<Point3DT>(a: Point3DT, b: Point3DT, c: Point3DT) -> PlaneRef!","type":"method"},{"path":"\/documentation\/graphene\/planeref\/initfromvec4(src:)","title":"func initFromVec4<Vec4T>(src: Vec4T) -> PlaneRef!","type":"method"},{"path":"\/documentation\/graphene\/planeref\/init_(normal:constant:)","title":"func init_(normal: Vec3Ref?, constant: CFloat) -> PlaneRef!","type":"method"},{"path":"\/documentation\/graphene\/planeref\/negate(res:)","title":"func negate<PlaneT>(res: PlaneT)","type":"method"},{"path":"\/documentation\/graphene\/planeref\/normalize(res:)","title":"func normalize<PlaneT>(res: PlaneT)","type":"method"},{"path":"\/documentation\/graphene\/planeref\/transform(matrix:normalmatrix:res:)","title":"func transform<MatrixT, PlaneT>(matrix: MatrixT, normalMatrix: MatrixT?, res: PlaneT)","type":"method"}],"path":"\/documentation\/graphene\/planeref\/planeprotocol-implementations","title":"PlaneProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/planeref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/graphene\/planeref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/planeref","title":"PlaneRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/point3dref\/init(_:)-4p370","title":"init(UnsafeMutablePointer<graphene_point3d_t>)","type":"init"},{"path":"\/documentation\/graphene\/point3dref\/init(_:)-4v104","title":"init!(UnsafeMutablePointer<graphene_point3d_t>?)","type":"init"},{"path":"\/documentation\/graphene\/point3dref\/init(_:)-74gs0","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/point3dref\/init(_:)-8a4n1","title":"init(UnsafePointer<graphene_point3d_t>)","type":"init"},{"path":"\/documentation\/graphene\/point3dref\/init(_:)-8nux6","title":"init!(UnsafePointer<graphene_point3d_t>?)","type":"init"},{"path":"\/documentation\/graphene\/point3dref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/point3dref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/point3dref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/point3dref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/point3dref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/point3dref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/point3dref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/point3dref\/alloc()","title":"static func alloc() -> Point3DRef!","type":"method"},{"path":"\/documentation\/graphene\/point3dref\/zero()","title":"static func zero() -> Point3DRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/point3dref\/point3d_ptr","title":"var point3d_ptr: UnsafeMutablePointer<graphene_point3d_t>!","type":"property"},{"path":"\/documentation\/graphene\/point3dref\/x","title":"var x: CFloat","type":"property"},{"path":"\/documentation\/graphene\/point3dref\/y","title":"var y: CFloat","type":"property"},{"path":"\/documentation\/graphene\/point3dref\/z","title":"var z: CFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/point3dref\/cross(b:res:)","title":"func cross<Point3DT>(b: Point3DT, res: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/point3dref\/distance(b:delta:)-2hhm7","title":"func distance<Point3DT, Vec3T>(b: Point3DT, delta: Vec3T?) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/point3dref\/distance(b:delta:)-8cnxe","title":"func distance<Point3DT>(b: Point3DT, delta: Vec3Ref?) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/point3dref\/dot(b:)","title":"func dot<Point3DT>(b: Point3DT) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/point3dref\/equal(b:)","title":"func equal<Point3DT>(b: Point3DT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/point3dref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/point3dref\/initfrompoint(src:)","title":"func initFromPoint<Point3DT>(src: Point3DT) -> Point3DRef!","type":"method"},{"path":"\/documentation\/graphene\/point3dref\/initfromvec3(v:)","title":"func initFromVec3<Vec3T>(v: Vec3T) -> Point3DRef!","type":"method"},{"path":"\/documentation\/graphene\/point3dref\/init_(x:y:z:)","title":"func init_(x: CFloat, y: CFloat, z: CFloat) -> Point3DRef!","type":"method"},{"path":"\/documentation\/graphene\/point3dref\/interpolate(b:factor:res:)","title":"func interpolate<Point3DT>(b: Point3DT, factor: CDouble, res: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/point3dref\/length()","title":"func length() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/point3dref\/near(b:epsilon:)","title":"func near<Point3DT>(b: Point3DT, epsilon: CFloat) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/point3dref\/normalize(res:)","title":"func normalize<Point3DT>(res: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/point3dref\/normalize(viewport:znear:zfar:res:)","title":"func normalize<Point3DT, RectT>(viewport: RectT, zNear: CFloat, zFar: CFloat, res: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/point3dref\/scale(factor:res:)","title":"func scale<Point3DT>(factor: CFloat, res: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/point3dref\/tovec3(v:)","title":"func toVec3<Vec3T>(v: Vec3T)","type":"method"}],"path":"\/documentation\/graphene\/point3dref\/point3dprotocol-implementations","title":"Point3DProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/point3dref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/graphene\/point3dref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/point3dref","title":"Point3DRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/pointref\/init(_:)-41mtf","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/pointref\/init(_:)-432z0","title":"init!(UnsafeMutablePointer<graphene_point_t>?)","type":"init"},{"path":"\/documentation\/graphene\/pointref\/init(_:)-95loq","title":"init!(UnsafePointer<graphene_point_t>?)","type":"init"},{"path":"\/documentation\/graphene\/pointref\/init(_:)-9jc0l","title":"init(UnsafeMutablePointer<graphene_point_t>)","type":"init"},{"path":"\/documentation\/graphene\/pointref\/init(_:)-9k0zj","title":"init(UnsafePointer<graphene_point_t>)","type":"init"},{"path":"\/documentation\/graphene\/pointref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/pointref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/pointref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/pointref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/pointref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/pointref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/pointref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/pointref\/alloc()","title":"static func alloc() -> PointRef!","type":"method"},{"path":"\/documentation\/graphene\/pointref\/zero()","title":"static func zero() -> PointRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/pointref\/point_ptr","title":"var point_ptr: UnsafeMutablePointer<graphene_point_t>!","type":"property"},{"path":"\/documentation\/graphene\/pointref\/x","title":"var x: CFloat","type":"property"},{"path":"\/documentation\/graphene\/pointref\/y","title":"var y: CFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/pointref\/distance(b:dx:dy:)","title":"func distance<PointT>(b: PointT, dX: UnsafeMutablePointer<CFloat>!, dY: UnsafeMutablePointer<CFloat>!) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/pointref\/equal(b:)","title":"func equal<PointT>(b: PointT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/pointref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/pointref\/initfrompoint(src:)","title":"func initFromPoint<PointT>(src: PointT) -> PointRef!","type":"method"},{"path":"\/documentation\/graphene\/pointref\/initfromvec2(src:)","title":"func initFromVec2<Vec2T>(src: Vec2T) -> PointRef!","type":"method"},{"path":"\/documentation\/graphene\/pointref\/init_(x:y:)","title":"func init_(x: CFloat, y: CFloat) -> PointRef!","type":"method"},{"path":"\/documentation\/graphene\/pointref\/interpolate(b:factor:res:)","title":"func interpolate<PointT>(b: PointT, factor: CDouble, res: PointT)","type":"method"},{"path":"\/documentation\/graphene\/pointref\/near(b:epsilon:)","title":"func near<PointT>(b: PointT, epsilon: CFloat) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/pointref\/tovec2(v:)","title":"func toVec2<Vec2T>(v: Vec2T)","type":"method"}],"path":"\/documentation\/graphene\/pointref\/pointprotocol-implementations","title":"PointProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/pointref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/graphene\/pointref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/pointref","title":"PointRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/quadref\/init(_:)-2gsr9","title":"init(UnsafePointer<graphene_quad_t>)","type":"init"},{"path":"\/documentation\/graphene\/quadref\/init(_:)-57zg","title":"init(UnsafeMutablePointer<graphene_quad_t>)","type":"init"},{"path":"\/documentation\/graphene\/quadref\/init(_:)-65jqe","title":"init!(UnsafeMutablePointer<graphene_quad_t>?)","type":"init"},{"path":"\/documentation\/graphene\/quadref\/init(_:)-87ktp","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/quadref\/init(_:)-8egy1","title":"init!(UnsafePointer<graphene_quad_t>?)","type":"init"},{"path":"\/documentation\/graphene\/quadref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/quadref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/quadref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/quadref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/quadref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/quadref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/quadref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/quadref\/alloc()","title":"static func alloc() -> QuadRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/quadref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/graphene\/quadref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/quadref\/quad_ptr","title":"var quad_ptr: UnsafeMutablePointer<graphene_quad_t>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/quadref\/bounds(r:)","title":"func bounds<RectT>(r: RectT)","type":"method"},{"path":"\/documentation\/graphene\/quadref\/contains(p:)","title":"func contains<PointT>(p: PointT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/quadref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/quadref\/getpoint(index:)","title":"func getPoint(index: Int) -> PointRef!","type":"method"},{"path":"\/documentation\/graphene\/quadref\/initfrom(points:)","title":"func initFrom(points: UnsafePointer<graphene_point_t>!) -> QuadRef!","type":"method"},{"path":"\/documentation\/graphene\/quadref\/initfromrect(r:)","title":"func initFromRect<RectT>(r: RectT) -> QuadRef!","type":"method"},{"path":"\/documentation\/graphene\/quadref\/init_(p1:p2:p3:p4:)","title":"func init_<PointT>(p1: PointT, p2: PointT, p3: PointT, p4: PointT) -> QuadRef!","type":"method"}],"path":"\/documentation\/graphene\/quadref\/quadprotocol-implementations","title":"QuadProtocol Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/quadref","title":"QuadRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/quaternionref\/init(_:)-47axl","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/quaternionref\/init(_:)-5w4p","title":"init(UnsafePointer<graphene_quaternion_t>)","type":"init"},{"path":"\/documentation\/graphene\/quaternionref\/init(_:)-6n9qc","title":"init!(UnsafeMutablePointer<graphene_quaternion_t>?)","type":"init"},{"path":"\/documentation\/graphene\/quaternionref\/init(_:)-9jbyh","title":"init!(UnsafePointer<graphene_quaternion_t>?)","type":"init"},{"path":"\/documentation\/graphene\/quaternionref\/init(_:)-9z7ss","title":"init(UnsafeMutablePointer<graphene_quaternion_t>)","type":"init"},{"path":"\/documentation\/graphene\/quaternionref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/quaternionref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/quaternionref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/quaternionref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/quaternionref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/quaternionref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/quaternionref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/quaternionref\/alloc()","title":"static func alloc() -> QuaternionRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/quaternionref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/graphene\/quaternionref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/quaternionref\/quaternion_ptr","title":"var quaternion_ptr: UnsafeMutablePointer<graphene_quaternion_t>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/quaternionref\/add(b:res:)","title":"func add<QuaternionT>(b: QuaternionT, res: QuaternionT)","type":"method"},{"path":"\/documentation\/graphene\/quaternionref\/dot(b:)","title":"func dot<QuaternionT>(b: QuaternionT) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/quaternionref\/equal(b:)","title":"func equal<QuaternionT>(b: QuaternionT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/quaternionref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/quaternionref\/initfromanglevec3(angle:axis:)","title":"func initFromAngleVec3<Vec3T>(angle: CFloat, axis: Vec3T) -> QuaternionRef!","type":"method"},{"path":"\/documentation\/graphene\/quaternionref\/initfromangles(degx:degy:degz:)","title":"func initFromAngles(degX: CFloat, degY: CFloat, degZ: CFloat) -> QuaternionRef!","type":"method"},{"path":"\/documentation\/graphene\/quaternionref\/initfromeuler(e:)","title":"func initFromEuler<EulerT>(e: EulerT) -> QuaternionRef!","type":"method"},{"path":"\/documentation\/graphene\/quaternionref\/initfrommatrix(m:)","title":"func initFromMatrix<MatrixT>(m: MatrixT) -> QuaternionRef!","type":"method"},{"path":"\/documentation\/graphene\/quaternionref\/initfromquaternion(src:)","title":"func initFromQuaternion<QuaternionT>(src: QuaternionT) -> QuaternionRef!","type":"method"},{"path":"\/documentation\/graphene\/quaternionref\/initfromradians(radx:rady:radz:)","title":"func initFromRadians(radX: CFloat, radY: CFloat, radZ: CFloat) -> QuaternionRef!","type":"method"},{"path":"\/documentation\/graphene\/quaternionref\/initfromvec4(src:)","title":"func initFromVec4<Vec4T>(src: Vec4T) -> QuaternionRef!","type":"method"},{"path":"\/documentation\/graphene\/quaternionref\/initidentity()","title":"func initIdentity() -> QuaternionRef!","type":"method"},{"path":"\/documentation\/graphene\/quaternionref\/init_(x:y:z:w:)","title":"func init_(x: CFloat, y: CFloat, z: CFloat, w: CFloat) -> QuaternionRef!","type":"method"},{"path":"\/documentation\/graphene\/quaternionref\/invert(res:)","title":"func invert<QuaternionT>(res: QuaternionT)","type":"method"},{"path":"\/documentation\/graphene\/quaternionref\/multiply(b:res:)","title":"func multiply<QuaternionT>(b: QuaternionT, res: QuaternionT)","type":"method"},{"path":"\/documentation\/graphene\/quaternionref\/normalize(res:)","title":"func normalize<QuaternionT>(res: QuaternionT)","type":"method"},{"path":"\/documentation\/graphene\/quaternionref\/scale(factor:res:)","title":"func scale<QuaternionT>(factor: CFloat, res: QuaternionT)","type":"method"},{"path":"\/documentation\/graphene\/quaternionref\/slerp(b:factor:res:)","title":"func slerp<QuaternionT>(b: QuaternionT, factor: CFloat, res: QuaternionT)","type":"method"},{"path":"\/documentation\/graphene\/quaternionref\/toanglevec3(angle:axis:)","title":"func toAngleVec3<Vec3T>(angle: UnsafeMutablePointer<CFloat>!, axis: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/quaternionref\/toangles(degx:degy:degz:)","title":"func toAngles(degX: UnsafeMutablePointer<CFloat>!, degY: UnsafeMutablePointer<CFloat>!, degZ: UnsafeMutablePointer<CFloat>!)","type":"method"},{"path":"\/documentation\/graphene\/quaternionref\/tomatrix(m:)","title":"func toMatrix<MatrixT>(m: MatrixT)","type":"method"},{"path":"\/documentation\/graphene\/quaternionref\/toradians(radx:rady:radz:)","title":"func toRadians(radX: UnsafeMutablePointer<CFloat>!, radY: UnsafeMutablePointer<CFloat>!, radZ: UnsafeMutablePointer<CFloat>!)","type":"method"},{"path":"\/documentation\/graphene\/quaternionref\/tovec4(res:)","title":"func toVec4<Vec4T>(res: Vec4T)","type":"method"}],"path":"\/documentation\/graphene\/quaternionref\/quaternionprotocol-implementations","title":"QuaternionProtocol Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/quaternionref","title":"QuaternionRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/rayref\/init(_:)-1kvk0","title":"init(UnsafeMutablePointer<graphene_ray_t>)","type":"init"},{"path":"\/documentation\/graphene\/rayref\/init(_:)-1oc23","title":"init!(UnsafeMutablePointer<graphene_ray_t>?)","type":"init"},{"path":"\/documentation\/graphene\/rayref\/init(_:)-1ujjs","title":"init!(UnsafePointer<graphene_ray_t>?)","type":"init"},{"path":"\/documentation\/graphene\/rayref\/init(_:)-31cgw","title":"init(UnsafePointer<graphene_ray_t>)","type":"init"},{"path":"\/documentation\/graphene\/rayref\/init(_:)-97ub2","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/rayref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/rayref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/rayref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/rayref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/rayref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/rayref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/rayref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/rayref\/alloc()","title":"static func alloc() -> RayRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/rayref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/graphene\/rayref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/rayref\/ray_ptr","title":"var ray_ptr: UnsafeMutablePointer<graphene_ray_t>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/rayref\/equal(b:)","title":"func equal<RayT>(b: RayT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/rayref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/rayref\/get(direction:)","title":"func get<Vec3T>(direction: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/rayref\/get(origin:)","title":"func get<Point3DT>(origin: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/rayref\/getclosestpointtopoint(p:res:)","title":"func getClosestPointToPoint<Point3DT>(p: Point3DT, res: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/rayref\/getdistancetoplane(p:)","title":"func getDistanceToPlane<PlaneT>(p: PlaneT) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/rayref\/getdistancetopoint(p:)","title":"func getDistanceToPoint<Point3DT>(p: Point3DT) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/rayref\/getpositionat(t:position:)","title":"func getPositionAt<Point3DT>(t: CFloat, position: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/rayref\/initfromray(src:)","title":"func initFromRay<RayT>(src: RayT) -> RayRef!","type":"method"},{"path":"\/documentation\/graphene\/rayref\/initfromvec3(origin:direction:)","title":"func initFromVec3(origin: Vec3Ref?, direction: Vec3Ref?) -> RayRef!","type":"method"},{"path":"\/documentation\/graphene\/rayref\/init_(origin:direction:)","title":"func init_(origin: Point3DRef?, direction: Vec3Ref?) -> RayRef!","type":"method"},{"path":"\/documentation\/graphene\/rayref\/intersectbox(b:tout:)","title":"func intersectBox<BoxT>(b: BoxT, tOut: UnsafeMutablePointer<CFloat>!) -> graphene_ray_intersection_kind_t","type":"method"},{"path":"\/documentation\/graphene\/rayref\/intersectsphere(s:tout:)","title":"func intersectSphere<SphereT>(s: SphereT, tOut: UnsafeMutablePointer<CFloat>!) -> graphene_ray_intersection_kind_t","type":"method"},{"path":"\/documentation\/graphene\/rayref\/intersecttriangle(t:tout:)","title":"func intersectTriangle<TriangleT>(t: TriangleT, tOut: UnsafeMutablePointer<CFloat>!) -> graphene_ray_intersection_kind_t","type":"method"},{"path":"\/documentation\/graphene\/rayref\/intersectsbox(b:)","title":"func intersectsBox<BoxT>(b: BoxT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/rayref\/intersectssphere(s:)","title":"func intersectsSphere<SphereT>(s: SphereT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/rayref\/intersectstriangle(t:)","title":"func intersectsTriangle<TriangleT>(t: TriangleT) -> _Bool","type":"method"}],"path":"\/documentation\/graphene\/rayref\/rayprotocol-implementations","title":"RayProtocol Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/rayref","title":"RayRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/rectref\/init(_:)-29k6n","title":"init!(UnsafeMutablePointer<graphene_rect_t>?)","type":"init"},{"path":"\/documentation\/graphene\/rectref\/init(_:)-2nwni","title":"init(UnsafeMutablePointer<graphene_rect_t>)","type":"init"},{"path":"\/documentation\/graphene\/rectref\/init(_:)-64a26","title":"init!(UnsafePointer<graphene_rect_t>?)","type":"init"},{"path":"\/documentation\/graphene\/rectref\/init(_:)-7gawk","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/rectref\/init(_:)-9qas5","title":"init(UnsafePointer<graphene_rect_t>)","type":"init"},{"path":"\/documentation\/graphene\/rectref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/rectref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/rectref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/rectref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/rectref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/rectref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/rectref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/rectref\/alloc()","title":"static func alloc() -> RectRef!","type":"method"},{"path":"\/documentation\/graphene\/rectref\/zero()","title":"static func zero() -> RectRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/rectref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/graphene\/rectref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/rectref\/area","title":"var area: CFloat","type":"property"},{"path":"\/documentation\/graphene\/rectref\/height","title":"var height: CFloat","type":"property"},{"path":"\/documentation\/graphene\/rectref\/origin","title":"var origin: graphene_point_t","type":"property"},{"path":"\/documentation\/graphene\/rectref\/rect_ptr","title":"var rect_ptr: UnsafeMutablePointer<graphene_rect_t>!","type":"property"},{"path":"\/documentation\/graphene\/rectref\/size","title":"var size: graphene_size_t","type":"property"},{"path":"\/documentation\/graphene\/rectref\/width","title":"var width: CFloat","type":"property"},{"path":"\/documentation\/graphene\/rectref\/x","title":"var x: CFloat","type":"property"},{"path":"\/documentation\/graphene\/rectref\/y","title":"var y: CFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/rectref\/containspoint(p:)","title":"func containsPoint<PointT>(p: PointT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/rectref\/containsrect(b:)","title":"func containsRect<RectT>(b: RectT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/rectref\/equal(b:)","title":"func equal<RectT>(b: RectT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/rectref\/expand(p:res:)","title":"func expand<PointT, RectT>(p: PointT, res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/rectref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/rectref\/get(vertices:)","title":"func get(vertices: UnsafeMutablePointer<graphene_vec2_t>!)","type":"method"},{"path":"\/documentation\/graphene\/rectref\/getarea()","title":"func getArea() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/rectref\/getbottomleft(p:)","title":"func getBottomLeft<PointT>(p: PointT)","type":"method"},{"path":"\/documentation\/graphene\/rectref\/getbottomright(p:)","title":"func getBottomRight<PointT>(p: PointT)","type":"method"},{"path":"\/documentation\/graphene\/rectref\/getcenter(p:)","title":"func getCenter<PointT>(p: PointT)","type":"method"},{"path":"\/documentation\/graphene\/rectref\/getheight()","title":"func getHeight() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/rectref\/gettopleft(p:)","title":"func getTopLeft<PointT>(p: PointT)","type":"method"},{"path":"\/documentation\/graphene\/rectref\/gettopright(p:)","title":"func getTopRight<PointT>(p: PointT)","type":"method"},{"path":"\/documentation\/graphene\/rectref\/getwidth()","title":"func getWidth() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/rectref\/getx()","title":"func getX() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/rectref\/gety()","title":"func getY() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/rectref\/initfromrect(src:)","title":"func initFromRect<RectT>(src: RectT) -> RectRef!","type":"method"},{"path":"\/documentation\/graphene\/rectref\/init_(x:y:width:height:)","title":"func init_(x: CFloat, y: CFloat, width: CFloat, height: CFloat) -> RectRef!","type":"method"},{"path":"\/documentation\/graphene\/rectref\/inset(dx:dy:)","title":"func inset(dX: CFloat, dY: CFloat) -> RectRef!","type":"method"},{"path":"\/documentation\/graphene\/rectref\/insetr(dx:dy:res:)","title":"func insetR<RectT>(dX: CFloat, dY: CFloat, res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/rectref\/interpolate(b:factor:res:)","title":"func interpolate<RectT>(b: RectT, factor: CDouble, res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/rectref\/intersection(b:res:)","title":"func intersection<RectT>(b: RectT, res: RectT?) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/rectref\/normalize()","title":"func normalize() -> RectRef!","type":"method"},{"path":"\/documentation\/graphene\/rectref\/normalizer(res:)","title":"func normalizeR<RectT>(res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/rectref\/offset(dx:dy:)","title":"func offset(dX: CFloat, dY: CFloat) -> RectRef!","type":"method"},{"path":"\/documentation\/graphene\/rectref\/offsetr(dx:dy:res:)","title":"func offsetR<RectT>(dX: CFloat, dY: CFloat, res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/rectref\/round(res:)","title":"func round<RectT>(res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/rectref\/roundextents(res:)","title":"func roundExtents<RectT>(res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/rectref\/roundtopixel()","title":"func roundToPixel() -> RectRef!","type":"method"},{"path":"\/documentation\/graphene\/rectref\/scale(sh:sv:res:)","title":"func scale<RectT>(sH: CFloat, sV: CFloat, res: RectT)","type":"method"},{"path":"\/documentation\/graphene\/rectref\/union(b:res:)","title":"func union<RectT>(b: RectT, res: RectT)","type":"method"}],"path":"\/documentation\/graphene\/rectref\/rectprotocol-implementations","title":"RectProtocol Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/rectref","title":"RectRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/simd4fref\/init(_:)-1au8c","title":"init!(UnsafePointer<graphene_simd4f_t>?)","type":"init"},{"path":"\/documentation\/graphene\/simd4fref\/init(_:)-2tv8c","title":"init!(UnsafeMutablePointer<graphene_simd4f_t>?)","type":"init"},{"path":"\/documentation\/graphene\/simd4fref\/init(_:)-3x5n5","title":"init(UnsafeMutablePointer<graphene_simd4f_t>)","type":"init"},{"path":"\/documentation\/graphene\/simd4fref\/init(_:)-6qbwe","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/simd4fref\/init(_:)-74fy8","title":"init(UnsafePointer<graphene_simd4f_t>)","type":"init"},{"path":"\/documentation\/graphene\/simd4fref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/simd4fref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/simd4fref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/simd4fref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/simd4fref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/simd4fref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/simd4fref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/simd4fref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/graphene\/simd4fref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/simd4fref","title":"Simd4FRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/simd4x4fref\/init(_:)-33lid","title":"init(UnsafePointer<graphene_simd4x4f_t>)","type":"init"},{"path":"\/documentation\/graphene\/simd4x4fref\/init(_:)-3genu","title":"init(UnsafeMutablePointer<graphene_simd4x4f_t>)","type":"init"},{"path":"\/documentation\/graphene\/simd4x4fref\/init(_:)-4yw0g","title":"init!(UnsafePointer<graphene_simd4x4f_t>?)","type":"init"},{"path":"\/documentation\/graphene\/simd4x4fref\/init(_:)-7eoh4","title":"init!(UnsafeMutablePointer<graphene_simd4x4f_t>?)","type":"init"},{"path":"\/documentation\/graphene\/simd4x4fref\/init(_:)-98fpv","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/simd4x4fref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/simd4x4fref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/simd4x4fref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/simd4x4fref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/simd4x4fref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/simd4x4fref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/simd4x4fref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/simd4x4fref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/graphene\/simd4x4fref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/simd4x4fref","title":"Simd4X4FRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/sizeref\/init(_:)-2ddz7","title":"init!(UnsafePointer<graphene_size_t>?)","type":"init"},{"path":"\/documentation\/graphene\/sizeref\/init(_:)-6ejpf","title":"init!(UnsafeMutablePointer<graphene_size_t>?)","type":"init"},{"path":"\/documentation\/graphene\/sizeref\/init(_:)-7yged","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/sizeref\/init(_:)-9gr4v","title":"init(UnsafePointer<graphene_size_t>)","type":"init"},{"path":"\/documentation\/graphene\/sizeref\/init(_:)-v4xo","title":"init(UnsafeMutablePointer<graphene_size_t>)","type":"init"},{"path":"\/documentation\/graphene\/sizeref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/sizeref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/sizeref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/sizeref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/sizeref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/sizeref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/sizeref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/sizeref\/alloc()","title":"static func alloc() -> SizeRef!","type":"method"},{"path":"\/documentation\/graphene\/sizeref\/zero()","title":"static func zero() -> SizeRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/sizeref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/graphene\/sizeref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/sizeref\/height","title":"var height: CFloat","type":"property"},{"path":"\/documentation\/graphene\/sizeref\/size_ptr","title":"var size_ptr: UnsafeMutablePointer<graphene_size_t>!","type":"property"},{"path":"\/documentation\/graphene\/sizeref\/width","title":"var width: CFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/sizeref\/equal(b:)","title":"func equal<SizeT>(b: SizeT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/sizeref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/sizeref\/initfromsize(src:)","title":"func initFromSize<SizeT>(src: SizeT) -> SizeRef!","type":"method"},{"path":"\/documentation\/graphene\/sizeref\/init_(width:height:)","title":"func init_(width: CFloat, height: CFloat) -> SizeRef!","type":"method"},{"path":"\/documentation\/graphene\/sizeref\/interpolate(b:factor:res:)","title":"func interpolate<SizeT>(b: SizeT, factor: CDouble, res: SizeT)","type":"method"},{"path":"\/documentation\/graphene\/sizeref\/scale(factor:res:)","title":"func scale<SizeT>(factor: CFloat, res: SizeT)","type":"method"}],"path":"\/documentation\/graphene\/sizeref\/sizeprotocol-implementations","title":"SizeProtocol Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/sizeref","title":"SizeRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/sphereref\/init(_:)-4vyga","title":"init(UnsafeMutablePointer<graphene_sphere_t>)","type":"init"},{"path":"\/documentation\/graphene\/sphereref\/init(_:)-6e7zv","title":"init(UnsafePointer<graphene_sphere_t>)","type":"init"},{"path":"\/documentation\/graphene\/sphereref\/init(_:)-6uysb","title":"init!(UnsafePointer<graphene_sphere_t>?)","type":"init"},{"path":"\/documentation\/graphene\/sphereref\/init(_:)-8q5jx","title":"init!(UnsafeMutablePointer<graphene_sphere_t>?)","type":"init"},{"path":"\/documentation\/graphene\/sphereref\/init(_:)-9hmzt","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/sphereref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/sphereref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/sphereref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/sphereref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/sphereref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/sphereref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/sphereref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/sphereref\/alloc()","title":"static func alloc() -> SphereRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/sphereref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/graphene\/sphereref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/sphereref\/isempty","title":"var isEmpty: _Bool","type":"property"},{"path":"\/documentation\/graphene\/sphereref\/radius","title":"var radius: CFloat","type":"property"},{"path":"\/documentation\/graphene\/sphereref\/sphere_ptr","title":"var sphere_ptr: UnsafeMutablePointer<graphene_sphere_t>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/sphereref\/contains(point:)","title":"func contains<Point3DT>(point: Point3DT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/sphereref\/distance(point:)","title":"func distance<Point3DT>(point: Point3DT) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/sphereref\/equal(b:)","title":"func equal<SphereT>(b: SphereT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/sphereref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/sphereref\/get(center:)","title":"func get<Point3DT>(center: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/sphereref\/getbounding(box:)","title":"func getBounding<BoxT>(box: BoxT)","type":"method"},{"path":"\/documentation\/graphene\/sphereref\/getradius()","title":"func getRadius() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/sphereref\/initfrompoints(npoints:points:center:)","title":"func initFromPoints(nPoints: Int, points: UnsafePointer<graphene_point3d_t>!, center: Point3DRef?) -> SphereRef!","type":"method"},{"path":"\/documentation\/graphene\/sphereref\/initfromvectors(nvectors:vectors:center:)","title":"func initFromVectors(nVectors: Int, vectors: UnsafePointer<graphene_vec3_t>!, center: Point3DRef?) -> SphereRef!","type":"method"},{"path":"\/documentation\/graphene\/sphereref\/init_(center:radius:)","title":"func init_(center: Point3DRef?, radius: CFloat) -> SphereRef!","type":"method"},{"path":"\/documentation\/graphene\/sphereref\/translate(point:res:)","title":"func translate<Point3DT, SphereT>(point: Point3DT, res: SphereT)","type":"method"}],"path":"\/documentation\/graphene\/sphereref\/sphereprotocol-implementations","title":"SphereProtocol Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/sphereref","title":"SphereRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/triangleref\/init(_:)-1w5bl","title":"init!(UnsafeMutablePointer<graphene_triangle_t>?)","type":"init"},{"path":"\/documentation\/graphene\/triangleref\/init(_:)-4liwe","title":"init(UnsafePointer<graphene_triangle_t>)","type":"init"},{"path":"\/documentation\/graphene\/triangleref\/init(_:)-5hgje","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/triangleref\/init(_:)-8e4h","title":"init(UnsafeMutablePointer<graphene_triangle_t>)","type":"init"},{"path":"\/documentation\/graphene\/triangleref\/init(_:)-91xbp","title":"init!(UnsafePointer<graphene_triangle_t>?)","type":"init"},{"path":"\/documentation\/graphene\/triangleref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/triangleref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/triangleref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/triangleref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/triangleref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/triangleref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/triangleref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/triangleref\/alloc()","title":"static func alloc() -> TriangleRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/triangleref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/graphene\/triangleref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/triangleref\/area","title":"var area: CFloat","type":"property"},{"path":"\/documentation\/graphene\/triangleref\/triangle_ptr","title":"var triangle_ptr: UnsafeMutablePointer<graphene_triangle_t>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/triangleref\/containspoint(p:)","title":"func containsPoint<Point3DT>(p: Point3DT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/triangleref\/equal(b:)","title":"func equal<TriangleT>(b: TriangleT) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/triangleref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/triangleref\/getarea()","title":"func getArea() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/triangleref\/getbarycoords(p:res:)-186zt","title":"func getBarycoords<Vec2T>(p: Point3DRef?, res: Vec2T) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/triangleref\/getbarycoords(p:res:)-2zdre","title":"func getBarycoords<Point3DT, Vec2T>(p: Point3DT?, res: Vec2T) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/triangleref\/getboundingbox(res:)","title":"func getBoundingBox<BoxT>(res: BoxT)","type":"method"},{"path":"\/documentation\/graphene\/triangleref\/getmidpoint(res:)","title":"func getMidpoint<Point3DT>(res: Point3DT)","type":"method"},{"path":"\/documentation\/graphene\/triangleref\/getnormal(res:)","title":"func getNormal<Vec3T>(res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/triangleref\/getplane(res:)","title":"func getPlane<PlaneT>(res: PlaneT)","type":"method"},{"path":"\/documentation\/graphene\/triangleref\/getpoints(a:b:c:)","title":"func getPoints(a: Point3DRef?, b: Point3DRef?, c: Point3DRef?)","type":"method"},{"path":"\/documentation\/graphene\/triangleref\/getuv(p:uva:uvb:uvc:res:)-2xbvh","title":"func getUv<Vec2T>(p: Point3DRef?, uvA: Vec2T, uvB: Vec2T, uvC: Vec2T, res: Vec2T) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/triangleref\/getuv(p:uva:uvb:uvc:res:)-8oi1r","title":"func getUv<Point3DT, Vec2T>(p: Point3DT?, uvA: Vec2T, uvB: Vec2T, uvC: Vec2T, res: Vec2T) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/triangleref\/getvertices(a:b:c:)","title":"func getVertices(a: Vec3Ref?, b: Vec3Ref?, c: Vec3Ref?)","type":"method"},{"path":"\/documentation\/graphene\/triangleref\/initfromfloat(a:b:c:)","title":"func initFromFloat(a: UnsafePointer<CFloat>!, b: UnsafePointer<CFloat>!, c: UnsafePointer<CFloat>!) -> TriangleRef!","type":"method"},{"path":"\/documentation\/graphene\/triangleref\/initfrompoint3d(a:b:c:)","title":"func initFromPoint3d(a: Point3DRef?, b: Point3DRef?, c: Point3DRef?) -> TriangleRef!","type":"method"},{"path":"\/documentation\/graphene\/triangleref\/initfromvec3(a:b:c:)","title":"func initFromVec3(a: Vec3Ref?, b: Vec3Ref?, c: Vec3Ref?) -> TriangleRef!","type":"method"}],"path":"\/documentation\/graphene\/triangleref\/triangleprotocol-implementations","title":"TriangleProtocol Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/triangleref","title":"TriangleRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec2ref\/init(_:)-1bxyj","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/vec2ref\/init(_:)-4c78c","title":"init(UnsafeMutablePointer<graphene_vec2_t>)","type":"init"},{"path":"\/documentation\/graphene\/vec2ref\/init(_:)-6ev8g","title":"init!(UnsafePointer<graphene_vec2_t>?)","type":"init"},{"path":"\/documentation\/graphene\/vec2ref\/init(_:)-6o3om","title":"init(UnsafePointer<graphene_vec2_t>)","type":"init"},{"path":"\/documentation\/graphene\/vec2ref\/init(_:)-6s2da","title":"init!(UnsafeMutablePointer<graphene_vec2_t>?)","type":"init"},{"path":"\/documentation\/graphene\/vec2ref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/vec2ref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/vec2ref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/vec2ref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/vec2ref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/vec2ref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec2ref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec2ref\/alloc()","title":"static func alloc() -> Vec2Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec2ref\/one()","title":"static func one() -> Vec2Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec2ref\/xaxis()","title":"static func xAxis() -> Vec2Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec2ref\/yaxis()","title":"static func yAxis() -> Vec2Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec2ref\/zero()","title":"static func zero() -> Vec2Ref!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec2ref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/graphene\/vec2ref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec2ref\/vec2_ptr","title":"var vec2_ptr: UnsafeMutablePointer<graphene_vec2_t>!","type":"property"},{"path":"\/documentation\/graphene\/vec2ref\/x","title":"var x: CFloat","type":"property"},{"path":"\/documentation\/graphene\/vec2ref\/y","title":"var y: CFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec2ref\/add(b:res:)","title":"func add<Vec2T>(b: Vec2T, res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec2ref\/divide(b:res:)","title":"func divide<Vec2T>(b: Vec2T, res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec2ref\/dot(b:)","title":"func dot<Vec2T>(b: Vec2T) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec2ref\/equal(v2:)","title":"func equal<Vec2T>(v2: Vec2T) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/vec2ref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/vec2ref\/getx()","title":"func getX() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec2ref\/gety()","title":"func getY() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec2ref\/initfromfloat(src:)","title":"func initFromFloat(src: UnsafePointer<CFloat>!) -> Vec2Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec2ref\/initfromvec2(src:)","title":"func initFromVec2<Vec2T>(src: Vec2T) -> Vec2Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec2ref\/init_(x:y:)","title":"func init_(x: CFloat, y: CFloat) -> Vec2Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec2ref\/interpolate(v2:factor:res:)","title":"func interpolate<Vec2T>(v2: Vec2T, factor: CDouble, res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec2ref\/length()","title":"func length() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec2ref\/max(b:res:)","title":"func max<Vec2T>(b: Vec2T, res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec2ref\/min(b:res:)","title":"func min<Vec2T>(b: Vec2T, res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec2ref\/multiply(b:res:)","title":"func multiply<Vec2T>(b: Vec2T, res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec2ref\/near(v2:epsilon:)","title":"func near<Vec2T>(v2: Vec2T, epsilon: CFloat) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/vec2ref\/negate(res:)","title":"func negate<Vec2T>(res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec2ref\/normalize(res:)","title":"func normalize<Vec2T>(res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec2ref\/scale(factor:res:)","title":"func scale<Vec2T>(factor: CFloat, res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec2ref\/subtract(b:res:)","title":"func subtract<Vec2T>(b: Vec2T, res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec2ref\/tofloat(dest:)","title":"func toFloat(dest: UnsafeMutablePointer<CFloat>!)","type":"method"}],"path":"\/documentation\/graphene\/vec2ref\/vec2protocol-implementations","title":"Vec2Protocol Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/vec2ref","title":"Vec2Ref","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec3ref\/init(_:)-2a6b7","title":"init!(UnsafeMutablePointer<graphene_vec3_t>?)","type":"init"},{"path":"\/documentation\/graphene\/vec3ref\/init(_:)-2k30s","title":"init(UnsafePointer<graphene_vec3_t>)","type":"init"},{"path":"\/documentation\/graphene\/vec3ref\/init(_:)-5yymo","title":"init(UnsafeMutablePointer<graphene_vec3_t>)","type":"init"},{"path":"\/documentation\/graphene\/vec3ref\/init(_:)-6quk6","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/vec3ref\/init(_:)-77t8u","title":"init!(UnsafePointer<graphene_vec3_t>?)","type":"init"},{"path":"\/documentation\/graphene\/vec3ref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/vec3ref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/vec3ref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/vec3ref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/vec3ref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/vec3ref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec3ref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec3ref\/alloc()","title":"static func alloc() -> Vec3Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/one()","title":"static func one() -> Vec3Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/xaxis()","title":"static func xAxis() -> Vec3Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/yaxis()","title":"static func yAxis() -> Vec3Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/zaxis()","title":"static func zAxis() -> Vec3Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/zero()","title":"static func zero() -> Vec3Ref!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec3ref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/graphene\/vec3ref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec3ref\/vec3_ptr","title":"var vec3_ptr: UnsafeMutablePointer<graphene_vec3_t>!","type":"property"},{"path":"\/documentation\/graphene\/vec3ref\/x","title":"var x: CFloat","type":"property"},{"path":"\/documentation\/graphene\/vec3ref\/y","title":"var y: CFloat","type":"property"},{"path":"\/documentation\/graphene\/vec3ref\/z","title":"var z: CFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec3ref\/add(b:res:)","title":"func add<Vec3T>(b: Vec3T, res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/cross(b:res:)","title":"func cross<Vec3T>(b: Vec3T, res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/divide(b:res:)","title":"func divide<Vec3T>(b: Vec3T, res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/dot(b:)","title":"func dot<Vec3T>(b: Vec3T) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/equal(v2:)","title":"func equal<Vec3T>(v2: Vec3T) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/getx()","title":"func getX() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/getxy(res:)","title":"func getXy<Vec2T>(res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/getxy0(res:)","title":"func getXy0<Vec3T>(res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/getxyz0(res:)","title":"func getXyz0<Vec4T>(res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/getxyz1(res:)","title":"func getXyz1<Vec4T>(res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/getxyzw(w:res:)","title":"func getXyzw<Vec4T>(w: CFloat, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/gety()","title":"func getY() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/getz()","title":"func getZ() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/initfromfloat(src:)","title":"func initFromFloat(src: UnsafePointer<CFloat>!) -> Vec3Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/initfromvec3(src:)","title":"func initFromVec3<Vec3T>(src: Vec3T) -> Vec3Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/init_(x:y:z:)","title":"func init_(x: CFloat, y: CFloat, z: CFloat) -> Vec3Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/interpolate(v2:factor:res:)","title":"func interpolate<Vec3T>(v2: Vec3T, factor: CDouble, res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/length()","title":"func length() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/max(b:res:)","title":"func max<Vec3T>(b: Vec3T, res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/min(b:res:)","title":"func min<Vec3T>(b: Vec3T, res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/multiply(b:res:)","title":"func multiply<Vec3T>(b: Vec3T, res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/near(v2:epsilon:)","title":"func near<Vec3T>(v2: Vec3T, epsilon: CFloat) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/negate(res:)","title":"func negate<Vec3T>(res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/normalize(res:)","title":"func normalize<Vec3T>(res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/scale(factor:res:)","title":"func scale<Vec3T>(factor: CFloat, res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/subtract(b:res:)","title":"func subtract<Vec3T>(b: Vec3T, res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec3ref\/tofloat(dest:)","title":"func toFloat(dest: UnsafeMutablePointer<CFloat>!)","type":"method"}],"path":"\/documentation\/graphene\/vec3ref\/vec3protocol-implementations","title":"Vec3Protocol Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/vec3ref","title":"Vec3Ref","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec4ref\/init(_:)-58qvd","title":"init(UnsafePointer<graphene_vec4_t>)","type":"init"},{"path":"\/documentation\/graphene\/vec4ref\/init(_:)-8lf53","title":"init(UnsafeMutablePointer<graphene_vec4_t>)","type":"init"},{"path":"\/documentation\/graphene\/vec4ref\/init(_:)-969bp","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/graphene\/vec4ref\/init(_:)-9a1yv","title":"init!(UnsafeMutablePointer<graphene_vec4_t>?)","type":"init"},{"path":"\/documentation\/graphene\/vec4ref\/init(_:)-9rgbc","title":"init!(UnsafePointer<graphene_vec4_t>?)","type":"init"},{"path":"\/documentation\/graphene\/vec4ref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/vec4ref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/graphene\/vec4ref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/graphene\/vec4ref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/graphene\/vec4ref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/graphene\/vec4ref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec4ref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec4ref\/alloc()","title":"static func alloc() -> Vec4Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/one()","title":"static func one() -> Vec4Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/waxis()","title":"static func wAxis() -> Vec4Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/xaxis()","title":"static func xAxis() -> Vec4Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/yaxis()","title":"static func yAxis() -> Vec4Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/zaxis()","title":"static func zAxis() -> Vec4Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/zero()","title":"static func zero() -> Vec4Ref!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec4ref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/graphene\/vec4ref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec4ref\/vec4_ptr","title":"var vec4_ptr: UnsafeMutablePointer<graphene_vec4_t>!","type":"property"},{"path":"\/documentation\/graphene\/vec4ref\/w","title":"var w: CFloat","type":"property"},{"path":"\/documentation\/graphene\/vec4ref\/x","title":"var x: CFloat","type":"property"},{"path":"\/documentation\/graphene\/vec4ref\/y","title":"var y: CFloat","type":"property"},{"path":"\/documentation\/graphene\/vec4ref\/z","title":"var z: CFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/graphene\/vec4ref\/add(b:res:)","title":"func add<Vec4T>(b: Vec4T, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/divide(b:res:)","title":"func divide<Vec4T>(b: Vec4T, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/dot(b:)","title":"func dot<Vec4T>(b: Vec4T) -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/equal(v2:)","title":"func equal<Vec4T>(v2: Vec4T) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/getw()","title":"func getW() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/getx()","title":"func getX() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/getxy(res:)","title":"func getXy<Vec2T>(res: Vec2T)","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/getxyz(res:)","title":"func getXyz<Vec3T>(res: Vec3T)","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/gety()","title":"func getY() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/getz()","title":"func getZ() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/initfromfloat(src:)","title":"func initFromFloat(src: UnsafePointer<CFloat>!) -> Vec4Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/initfromvec2(src:z:w:)","title":"func initFromVec2<Vec2T>(src: Vec2T, z: CFloat, w: CFloat) -> Vec4Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/initfromvec3(src:w:)","title":"func initFromVec3<Vec3T>(src: Vec3T, w: CFloat) -> Vec4Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/initfromvec4(src:)","title":"func initFromVec4<Vec4T>(src: Vec4T) -> Vec4Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/init_(x:y:z:w:)","title":"func init_(x: CFloat, y: CFloat, z: CFloat, w: CFloat) -> Vec4Ref!","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/interpolate(v2:factor:res:)","title":"func interpolate<Vec4T>(v2: Vec4T, factor: CDouble, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/length()","title":"func length() -> CFloat","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/max(b:res:)","title":"func max<Vec4T>(b: Vec4T, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/min(b:res:)","title":"func min<Vec4T>(b: Vec4T, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/multiply(b:res:)","title":"func multiply<Vec4T>(b: Vec4T, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/near(v2:epsilon:)","title":"func near<Vec4T>(v2: Vec4T, epsilon: CFloat) -> _Bool","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/negate(res:)","title":"func negate<Vec4T>(res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/normalize(res:)","title":"func normalize<Vec4T>(res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/scale(factor:res:)","title":"func scale<Vec4T>(factor: CFloat, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/subtract(b:res:)","title":"func subtract<Vec4T>(b: Vec4T, res: Vec4T)","type":"method"},{"path":"\/documentation\/graphene\/vec4ref\/tofloat(dest:)","title":"func toFloat(dest: UnsafeMutablePointer<CFloat>!)","type":"method"}],"path":"\/documentation\/graphene\/vec4ref\/vec4protocol-implementations","title":"Vec4Protocol Implementations","type":"symbol"}],"path":"\/documentation\/graphene\/vec4ref","title":"Vec4Ref","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/graphene\/pi-12z4x","title":"let PI: Float","type":"var"},{"path":"\/documentation\/graphene\/pi_2","title":"let PI_2: Float","type":"var"},{"path":"\/documentation\/graphene\/vec2_len","title":"let VEC2_LEN: Int32","type":"var"},{"path":"\/documentation\/graphene\/vec3_len","title":"let VEC3_LEN: Int32","type":"var"},{"path":"\/documentation\/graphene\/vec4_len","title":"let VEC4_LEN: Int32","type":"var"},{"path":"\/documentation\/graphene\/pi-74qwt","title":"let pi: Float","type":"var"},{"path":"\/documentation\/graphene\/pi2","title":"let pi2: Float","type":"var"},{"path":"\/documentation\/graphene\/vec2len","title":"let vec2Len: Int32","type":"var"},{"path":"\/documentation\/graphene\/vec3len","title":"let vec3Len: Int32","type":"var"},{"path":"\/documentation\/graphene\/vec4len","title":"let vec4Len: Int32","type":"var"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/graphene\/boxempty()","title":"func boxEmpty() -> BoxRef!","type":"func"},{"path":"\/documentation\/graphene\/boxinfinite()","title":"func boxInfinite() -> BoxRef!","type":"func"},{"path":"\/documentation\/graphene\/boxminusone()","title":"func boxMinusOne() -> BoxRef!","type":"func"},{"path":"\/documentation\/graphene\/boxone()","title":"func boxOne() -> BoxRef!","type":"func"},{"path":"\/documentation\/graphene\/boxoneminusone()","title":"func boxOneMinusOne() -> BoxRef!","type":"func"},{"path":"\/documentation\/graphene\/boxzero()","title":"func boxZero() -> BoxRef!","type":"func"},{"path":"\/documentation\/graphene\/point3dzero()","title":"func point3dZero() -> Point3DRef!","type":"func"},{"path":"\/documentation\/graphene\/pointzero()","title":"func pointZero() -> PointRef!","type":"func"},{"path":"\/documentation\/graphene\/rectalloc()","title":"func rectAlloc() -> RectRef!","type":"func"},{"path":"\/documentation\/graphene\/rectzero()","title":"func rectZero() -> RectRef!","type":"func"},{"path":"\/documentation\/graphene\/sizezero()","title":"func sizeZero() -> SizeRef!","type":"func"},{"path":"\/documentation\/graphene\/vec2one()","title":"func vec2One() -> Vec2Ref!","type":"func"},{"path":"\/documentation\/graphene\/vec2xaxis()","title":"func vec2XAxis() -> Vec2Ref!","type":"func"},{"path":"\/documentation\/graphene\/vec2yaxis()","title":"func vec2YAxis() -> Vec2Ref!","type":"func"},{"path":"\/documentation\/graphene\/vec2zero()","title":"func vec2Zero() -> Vec2Ref!","type":"func"},{"path":"\/documentation\/graphene\/vec3one()","title":"func vec3One() -> Vec3Ref!","type":"func"},{"path":"\/documentation\/graphene\/vec3xaxis()","title":"func vec3XAxis() -> Vec3Ref!","type":"func"},{"path":"\/documentation\/graphene\/vec3yaxis()","title":"func vec3YAxis() -> Vec3Ref!","type":"func"},{"path":"\/documentation\/graphene\/vec3zaxis()","title":"func vec3ZAxis() -> Vec3Ref!","type":"func"},{"path":"\/documentation\/graphene\/vec3zero()","title":"func vec3Zero() -> Vec3Ref!","type":"func"},{"path":"\/documentation\/graphene\/vec4one()","title":"func vec4One() -> Vec4Ref!","type":"func"},{"path":"\/documentation\/graphene\/vec4waxis()","title":"func vec4WAxis() -> Vec4Ref!","type":"func"},{"path":"\/documentation\/graphene\/vec4xaxis()","title":"func vec4XAxis() -> Vec4Ref!","type":"func"},{"path":"\/documentation\/graphene\/vec4yaxis()","title":"func vec4YAxis() -> Vec4Ref!","type":"func"},{"path":"\/documentation\/graphene\/vec4zaxis()","title":"func vec4ZAxis() -> Vec4Ref!","type":"func"},{"path":"\/documentation\/graphene\/vec4zero()","title":"func vec4Zero() -> Vec4Ref!","type":"func"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/graphene\/eulerorder","title":"EulerOrder","type":"typealias"},{"path":"\/documentation\/graphene\/rayintersectionkind","title":"RayIntersectionKind","type":"typealias"},{"path":"\/documentation\/graphene\/bool","title":"bool","type":"typealias"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/default","title":"static let `default`: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/rxyx","title":"static let rxyx: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/rxyz","title":"static let rxyz: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/rxzx","title":"static let rxzx: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/rxzy","title":"static let rxzy: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/ryxy","title":"static let ryxy: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/ryxz","title":"static let ryxz: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/ryzx","title":"static let ryzx: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/ryzy","title":"static let ryzy: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/rzxy","title":"static let rzxy: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/rzxz","title":"static let rzxz: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/rzyx","title":"static let rzyx: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/rzyz","title":"static let rzyz: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/sxyx","title":"static let sxyx: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/sxyz","title":"static let sxyz: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/sxzx","title":"static let sxzx: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/sxzy","title":"static let sxzy: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/syxy","title":"static let syxy: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/syxz","title":"static let syxz: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/syzx","title":"static let syzx: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/syzy","title":"static let syzy: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/szxy","title":"static let szxy: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/szxz","title":"static let szxz: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/szyx","title":"static let szyx: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/szyz","title":"static let szyz: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/xyz","title":"static let xyz: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/xzy","title":"static let xzy: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/yxz","title":"static let yxz: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/yzx","title":"static let yzx: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/zxy","title":"static let zxy: graphene_euler_order_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t\/zyx","title":"static let zyx: graphene_euler_order_t","type":"property"}],"path":"\/documentation\/graphene\/cgraphene\/graphene_euler_order_t","title":"graphene_euler_order_t","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_ray_intersection_kind_t\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_ray_intersection_kind_t\/enter","title":"static let enter: graphene_ray_intersection_kind_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_ray_intersection_kind_t\/leave","title":"static let leave: graphene_ray_intersection_kind_t","type":"property"},{"path":"\/documentation\/graphene\/cgraphene\/graphene_ray_intersection_kind_t\/none","title":"static let none: graphene_ray_intersection_kind_t","type":"property"}],"path":"\/documentation\/graphene\/cgraphene\/graphene_ray_intersection_kind_t","title":"graphene_ray_intersection_kind_t","type":"extension"}],"path":"\/documentation\/graphene\/cgraphene","title":"CGraphene","type":"extension"}],"path":"\/documentation\/graphene","title":"Graphene","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}