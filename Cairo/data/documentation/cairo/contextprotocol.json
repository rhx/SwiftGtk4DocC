{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContextProtocol"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"PointerWrapper","preciseIdentifier":"s:4GLib14PointerWrapperP"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/cairo\/contextprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Cairo\/4GLib14PointerWrapperP"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/Cairo\/documentation\/Cairo\/Context","doc:\/\/Cairo\/documentation\/Cairo\/ContextRef"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"identifier":{"url":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ContextProtocol"},{"type":"text","text":" protocol exposes the methods and properties of an underlying "},{"type":"codeVoice","code":"cairo_t"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"The default implementation of these can be found in the protocol extension below."},{"type":"text","text":" "},{"type":"text","text":"For a concrete class that implements these methods and properties, see "},{"type":"codeVoice","code":"Context"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Alternatively, use "},{"type":"codeVoice","code":"ContextRef"},{"type":"text","text":" as a lighweight, "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference if you already have an instance you just want to use."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContextProtocol"}],"title":"ContextProtocol","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:5Cairo15ContextProtocolP","modules":[{"name":"Cairo"}],"navigatorTitle":[{"kind":"identifier","text":"ContextProtocol"}]},"hierarchy":{"paths":[["doc:\/\/Cairo\/documentation\/Cairo"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/antiAlias","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/clipExtents","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/clipRectangleList","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/compositingOperator","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/context_ptr","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/currentPoint","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/dash","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/dashCount","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/fillExtents","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/fillRule","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/flatPath","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/fontExtents","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/fontFace","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/fontMatrix","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/fontSize","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/groupTarget","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/hasCurrentPoint","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/lineCap","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/lineJoin","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/lineWidth","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/miterLimit","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/mitreLimit","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/operator","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/path","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/pathExtents","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/referenceCount","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/scaledFont","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/source","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/status","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/strokeExtents","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/target","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/tolerance"]},{"title":"Instance Methods","identifiers":["doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/append(path:)","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/arc(xc:yc:radius:angle1:angle2:)","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/arcNegative(xc:yc:radius:angle1:angle2:)","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/clip()","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/clipPreserve()","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/closePath()","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/copyPage()","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/curveTo(x1:y1:x2:y2:x3:y3:)","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/fill()","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/fillPreserve()","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/getFont(options:)","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/glyphExtents(_:)","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/glyphPath(glyphs:)","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/isInClip(_:_:)","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/isInFill(_:_:)","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/isInStroke(_:_:)","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/lineTo(_:_:)","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/mask(pattern:)","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/mask(surface:x:y:)","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/moveTo(_:_:)","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/newPath()","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/newSubPath()","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/paint()","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/paint(alpha:)","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/popGroup()","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/popGroupToSource()","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/pushGroup()","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/pushGroup(content:)","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/rectangle(x:y:width:height:)","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/ref()","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/relCurveTo(dx1:dy1:dx2:dy2:dx3:dy3:)","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/relLineTo(_:_:)","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/relMoveTo(_:_:)","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/resetClip()","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/restore()","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/save()","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/selectFontFace(_:slant:weight:)","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/setDash(_:offset:)","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/setFont(options:)","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/setSource(red:green:blue:)","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/setSource(red:green:blue:alpha:)","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/setUserData(key:value:destroy:)","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/showPage()","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/showText(_:)","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/showText(_:length:glyphs:clusters:flags:)","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/stroke()","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/strokePreserve()","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/textExtents(_:)","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/textPath(_:)","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/unref()","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/userData(key:)"]}],"references":{"doc://Cairo/documentation/Cairo/ContextProtocol/rectangle(x:y:width:height:)":{"role":"symbol","title":"rectangle(x:y:width:height:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"rectangle"},{"kind":"text","text":"("},{"kind":"externalParam","text":"x"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"y"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"width"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"height"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Adds a closed sub-path rectangle of the given size to the current path at position (x , y ) in user-space coordinates."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/rectangle(x:y:width:height:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/rectangle(x:y:width:height:)"},"doc://Cairo/documentation/Cairo/ContextProtocol/strokeExtents":{"role":"symbol","title":"strokeExtents","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"strokeExtents"},{"kind":"text","text":": (x1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", y1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", x2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", y2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Computes a bounding box in user coordinates covering the area that would be affected, (the “inked” area), by a cairo_stroke() operation given the current path and stroke parameters. If the current path is empty, returns an empty rectangle ((0,0), (0,0)). Surface dimensions and clipping are not taken into account."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/strokeExtents","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/strokeextents"},"doc://Cairo/documentation/Cairo/ContextProtocol/relLineTo(_:_:)":{"role":"symbol","title":"relLineTo(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"relLineTo"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Relative-coordinate version of lineTo(). Adds a line to the path from the current point to a point that is offset from the current point by (dx , dy ) in user space. After this call the current point will be offset by (dx , dy )."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/relLineTo(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/rellineto(_:_:)"},"doc://Cairo/documentation/Cairo/ContextRef":{"role":"symbol","title":"ContextRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContextRef"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ContextRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"cairo_t"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"codeVoice","code":"ContextProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"codeVoice","code":"ContextRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"cairo_t"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ContextRef"}],"url":"\/documentation\/cairo\/contextref"},"doc://Cairo/documentation/Cairo/ContextProtocol/scaledFont":{"role":"symbol","title":"scaledFont","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"scaledFont"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ScaledFont","preciseIdentifier":"s:5Cairo10ScaledFontC"}],"abstract":[{"type":"text","text":"the current scaled font for a #cairo_t."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/scaledFont","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/scaledfont"},"doc://Cairo/documentation/Cairo/ContextProtocol/fillRule":{"role":"symbol","title":"fillRule","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"fillRule"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"cairo_fill_rule_t"}],"abstract":[{"type":"text","text":"Current fill rule within the cairo context. The fill rule is used to determine which regions are inside or outside a complex (potentially self-intersecting) path. The current fill rule affects both cairo_fill() and cairo_clip(). See cairo_fill_rule_t for details on the semantics of each available fill rule."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/fillRule","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/fillrule"},"doc://Cairo/documentation/Cairo/ContextProtocol/fontSize":{"role":"symbol","title":"fontSize","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"fontSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"}],"abstract":[{"type":"text","text":"Sets the current font matrix to a scale by a factor of @size, replacing"},{"type":"text","text":" "},{"type":"text","text":"any font matrix previously set with cairo_set_font_size() or"},{"type":"text","text":" "},{"type":"text","text":"cairo_set_font_matrix(). This results in a font size of @size user space"},{"type":"text","text":" "},{"type":"text","text":"units. (More precisely, this matrix will result in the font’s"},{"type":"text","text":" "},{"type":"text","text":"em-square being a @size by @size square in user space.)"}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/fontSize","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/fontsize"},"doc://Cairo/documentation/Cairo/ContextProtocol/showText(_:)":{"role":"symbol","title":"showText(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"showText"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"A drawing operator that generates the shape from a string of UTF-8"},{"type":"text","text":" "},{"type":"text","text":"characters, rendered according to the current font_face, font_size"},{"type":"text","text":" "},{"type":"text","text":"(font_matrix), and font_options."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/showText(_:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/showtext(_:)"},"doc://Cairo/documentation/Cairo/ContextProtocol/referenceCount":{"role":"symbol","title":"referenceCount","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"referenceCount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Cairo context reference count"}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/referenceCount","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/referencecount"},"doc://Cairo/documentation/Cairo/ContextProtocol/compositingOperator":{"role":"symbol","title":"compositingOperator","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"compositingOperator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"cairo_operator_t"}],"abstract":[{"type":"text","text":"Compositing operator to be used for all drawing operations. See cairo_operator_t for details on the semantics of each available compositing operator."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/compositingOperator","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/compositingoperator"},"doc://Cairo/documentation/Cairo/ContextProtocol/setDash(_:offset:)":{"role":"symbol","title":"setDash(_:offset:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setDash"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"offset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Sets the dash pattern to be used by cairo_stroke(). A dash pattern is specified by dashes , an array of positive values. Each value provides the length of alternate “on” and “off” portions of the stroke. The offset specifies an offset into the pattern at which the stroke begins."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/setDash(_:offset:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/setdash(_:offset:)"},"doc://Cairo/documentation/Cairo/ContextProtocol/clipRectangleList":{"role":"symbol","title":"clipRectangleList","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"clipRectangleList"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"cairo_rectangle_t"},{"kind":"text","text":"]?"}],"abstract":[{"type":"text","text":"Current clip region as a list of rectangles in user coordinates."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/clipRectangleList","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/cliprectanglelist"},"doc://Cairo/documentation/Cairo/ContextProtocol/stroke()":{"role":"symbol","title":"stroke()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stroke"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Drawing operator that strokes the current path according to the current line width, line join, line cap, and dash settings. After stroke(), the current path will be cleared from the cairo context. See lineWidth, lineJoin, lineCap, dash, setDash(), and strokePreserve()."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/stroke()","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/stroke()"},"doc://Cairo/documentation/Cairo/ContextProtocol/save()":{"role":"symbol","title":"save()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"save"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Makes a copy of the current state of cr"},{"type":"text","text":" "},{"type":"text","text":"and saves it on an internal stack of saved states"},{"type":"text","text":" "},{"type":"text","text":"for cr."},{"type":"text","text":" "},{"type":"text","text":"When restore() is called, cr will be restored"},{"type":"text","text":" "},{"type":"text","text":"to the saved state."},{"type":"text","text":" "},{"type":"text","text":"Multiple calls to save() and restore() can be nested;"},{"type":"text","text":" "},{"type":"text","text":"each call to restore() restores the state from the"},{"type":"text","text":" "},{"type":"text","text":"matching paired save()."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/save()","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/save()"},"doc://Cairo/documentation/Cairo/ContextProtocol/hasCurrentPoint":{"role":"symbol","title":"hasCurrentPoint","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasCurrentPoint"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Returns whether a current point is defined on the current path. See "},{"type":"codeVoice","code":"currentPoint"},{"type":"text","text":" for details on the current point."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/hasCurrentPoint","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/hascurrentpoint"},"doc://Cairo/documentation/Cairo/ContextProtocol/setFont(options:)":{"role":"symbol","title":"setFont(options:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setFont"},{"kind":"text","text":"("},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"cairo_font_options_t"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Sets a set of custom font rendering options for the #cairo_t."},{"type":"text","text":" "},{"type":"text","text":"Rendering options are derived by merging these options with the"},{"type":"text","text":" "},{"type":"text","text":"options derived from underlying surface; if the value in @options"},{"type":"text","text":" "},{"type":"text","text":"has a default value (like %CAIRO_ANTIALIAS_DEFAULT), then the value"},{"type":"text","text":" "},{"type":"text","text":"from the surface is used."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/setFont(options:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/setfont(options:)"},"doc://Cairo/documentation/Cairo/ContextProtocol/mask(pattern:)":{"role":"symbol","title":"mask(pattern:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mask"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"externalParam","text":"pattern"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Drawing operator that paints the current source using the alpha channel of pattern as a mask. (Opaque areas of pattern are painted with the source, transparent areas are not painted.)"}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/mask(pattern:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/mask(pattern:)"},"doc://Cairo/documentation/Cairo/ContextProtocol/popGroupToSource()":{"role":"symbol","title":"popGroupToSource()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"popGroupToSource"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Terminates the redirection begun by a call to cairo_push_group() or cairo_push_group_with_content() and installs the resulting pattern as the source pattern in the given cairo context."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/popGroupToSource()","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/popgrouptosource()"},"doc://Cairo/documentation/Cairo/ContextProtocol/moveTo(_:_:)":{"role":"symbol","title":"moveTo(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"moveTo"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Begin a new sub-path. After this call the current point will be (x , y )."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/moveTo(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/moveto(_:_:)"},"doc://Cairo/documentation/Cairo/ContextProtocol/restore()":{"role":"symbol","title":"restore()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"restore"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Restores cr to the state saved by a preceding call to save() and removes that state from the stack of saved states."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/restore()","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/restore()"},"doc://Cairo/documentation/Cairo/ContextProtocol/isInStroke(_:_:)":{"role":"symbol","title":"isInStroke(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isInStroke"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Tests whether the given point is inside the area that would be affected by a cairo_stroke() operation given the current path and stroking parameters. Surface dimensions and clipping are not taken into account."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/isInStroke(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/isinstroke(_:_:)"},"doc://Cairo/documentation/Cairo/ContextProtocol/currentPoint":{"role":"symbol","title":"currentPoint","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"currentPoint"},{"kind":"text","text":": (x"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", y"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Gets the current point of the current path, which is conceptually the final point reached by the path so far."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/currentPoint","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/currentpoint"},"doc://Cairo/documentation/Cairo/ContextProtocol/userData(key:)":{"role":"symbol","title":"userData(key:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"userData"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"cairo_user_data_key_t"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"}],"abstract":[{"type":"text","text":"Return user data previously attached to cr using the specified key. If no user data has been attached with the given key this function returns NULL."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/userData(key:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/userdata(key:)"},"doc://Cairo/documentation/Cairo/ContextProtocol/pathExtents":{"role":"symbol","title":"pathExtents","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"pathExtents"},{"kind":"text","text":": (x1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", y1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", x2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", y2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Computes a bounding box in user-space coordinates covering the points on the current path. If the current path is empty, returns an empty rectangle ((0,0), (0,0)). Stroke parameters, fill rule, surface dimensions and clipping are not taken into account."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/pathExtents","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/pathextents"},"doc://Cairo/documentation/Cairo/ContextProtocol/flatPath":{"role":"symbol","title":"flatPath","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatPath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PathRef","preciseIdentifier":"s:5Cairo7PathRefV"}],"abstract":[{"type":"text","text":"flattened copy of the current path and returns it to the user as a cairo_path_t. See cairo_path_data_t for hints on how to iterate over the returned data structure."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/flatPath","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/flatpath"},"doc://Cairo/documentation/Cairo/ContextProtocol/isInFill(_:_:)":{"role":"symbol","title":"isInFill(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isInFill"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Tests whether the given point is inside the area that would be affected by a fill() operation given the current path and filling parameters. Surface dimensions and clipping are not taken into account."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/isInFill(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/isinfill(_:_:)"},"doc://Cairo/documentation/Cairo/ContextProtocol/tolerance":{"role":"symbol","title":"tolerance","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"tolerance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"}],"abstract":[{"type":"text","text":"Tolerance used when converting paths into trapezoids. Curved segments of the path will be subdivided until the maximum deviation between the original path and the polygonal approximation is less than tolerance. The default value is 0.1. A larger value will give better performance, a smaller value, better appearance. (Reducing the value from the default value of 0.1 is unlikely to improve appearance significantly.) The accuracy of paths within Cairo is limited by the precision of its internal arithmetic, and the prescribed tolerance is restricted to the smallest representable internal value."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/tolerance","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/tolerance"},"doc://Cairo/documentation/Cairo/ContextProtocol/unref()":{"role":"symbol","title":"unref()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unref"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Decreases the reference count on cr by one."},{"type":"text","text":" "},{"type":"text","text":"If the result is zero, then cr and"},{"type":"text","text":" "},{"type":"text","text":"all associated resources are freed."},{"type":"text","text":" "},{"type":"text","text":"See ref()."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/unref()","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/unref()"},"doc://Cairo/documentation/Cairo/ContextProtocol/popGroup()":{"role":"symbol","title":"popGroup()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"popGroup"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"PatternRef","preciseIdentifier":"s:5Cairo10PatternRefV"}],"abstract":[{"type":"text","text":"Terminates the redirection begun by a call to cairo_push_group() or cairo_push_group_with_content() and returns a new pattern containing the results of all drawing operations performed to the group."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/popGroup()","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/popgroup()"},"doc://Cairo/documentation/Cairo/ContextProtocol/relCurveTo(dx1:dy1:dx2:dy2:dx3:dy3:)":{"role":"symbol","title":"relCurveTo(dx1:dy1:dx2:dy2:dx3:dy3:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"relCurveTo"},{"kind":"text","text":"("},{"kind":"externalParam","text":"dx1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"dy1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"dx2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"dy2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"dx3"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"dy3"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Relative-coordinate version of cairo_curve_to(). All offsets are relative to the current point. Adds a cubic Bézier spline to the path from the current point to a point offset from the current point by (dx3 , dy3 ), using points offset by (dx1 , dy1 ) and (dx2 , dy2 ) as the control points. After this call the current point will be offset by (dx3 , dy3 )."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/relCurveTo(dx1:dy1:dx2:dy2:dx3:dy3:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/relcurveto(dx1:dy1:dx2:dy2:dx3:dy3:)"},"doc://Cairo/documentation/Cairo/ContextProtocol/fontMatrix":{"role":"symbol","title":"fontMatrix","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"fontMatrix"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"cairo_matrix_t"}],"abstract":[{"type":"text","text":"The font matrix gives a"},{"type":"text","text":" "},{"type":"text","text":"transformation from the design space of the font (in this space,"},{"type":"text","text":" "},{"type":"text","text":"the em-square is 1 unit by 1 unit) to user space. Normally, a"},{"type":"text","text":" "},{"type":"text","text":"simple scale is used (see cairo_set_font_size()), but a more"},{"type":"text","text":" "},{"type":"text","text":"complex font matrix can be used to shear the font"},{"type":"text","text":" "},{"type":"text","text":"or stretch it unequally along the two axes."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/fontMatrix","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/fontmatrix"},"doc://Cairo/documentation/Cairo/ContextProtocol":{"role":"symbol","title":"ContextProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContextProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ContextProtocol"},{"type":"text","text":" protocol exposes the methods and properties of an underlying "},{"type":"codeVoice","code":"cairo_t"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"The default implementation of these can be found in the protocol extension below."},{"type":"text","text":" "},{"type":"text","text":"For a concrete class that implements these methods and properties, see "},{"type":"codeVoice","code":"Context"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Alternatively, use "},{"type":"codeVoice","code":"ContextRef"},{"type":"text","text":" as a lighweight, "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference if you already have an instance you just want to use."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ContextProtocol"}],"url":"\/documentation\/cairo\/contextprotocol"},"doc://Cairo/documentation/Cairo/ContextProtocol/curveTo(x1:y1:x2:y2:x3:y3:)":{"role":"symbol","title":"curveTo(x1:y1:x2:y2:x3:y3:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"curveTo"},{"kind":"text","text":"("},{"kind":"externalParam","text":"x1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"y1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"x2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"y2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"x3"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"y3"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Adds a cubic Bézier spline to the path from the current point to position (x3 , y3 ) in user-space coordinates, using (x1 , y1 ) and (x2 , y2 ) as the control points. After this call the current point will be (x3 , y3 )."},{"type":"text","text":" "},{"type":"text","text":"If there is no current point before the call to curveTo() this function will behave as if preceded by a call to moveTo(cr , x1 , y1 )."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/curveTo(x1:y1:x2:y2:x3:y3:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/curveto(x1:y1:x2:y2:x3:y3:)"},"doc://Cairo/documentation/Cairo/ContextProtocol/ref()":{"role":"symbol","title":"ref()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"ref"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"ContextRef","preciseIdentifier":"s:5Cairo10ContextRefV"}],"abstract":[{"type":"text","text":"Increases the reference count on cr by one."},{"type":"text","text":" "},{"type":"text","text":"This prevents cr from being destroyed until"},{"type":"text","text":" "},{"type":"text","text":"a matching call to unref() is made."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/ref()","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/ref()"},"doc://Cairo/documentation/Cairo/ContextProtocol/dash":{"role":"symbol","title":"dash","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"dash"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Sets the dash pattern to be used by cairo_stroke(). A dash pattern is specified by dashes , an array of positive values. Each value provides the length of alternate “on” and “off” portions of the stroke. The offset specifies an offset into the pattern at which the stroke begins."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/dash","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/dash"},"doc://Cairo/documentation/Cairo/ContextProtocol/clipPreserve()":{"role":"symbol","title":"clipPreserve()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"clipPreserve"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Establishes a new clip region by intersecting the current clip region with the current path as it would be filled by fill() and according to the current fill rule (see fillRule)."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/clipPreserve()","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/clippreserve()"},"doc://Cairo/documentation/Cairo/ContextProtocol/dashCount":{"role":"symbol","title":"dashCount","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"dashCount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"length of the dash array in cr (0 if dashing is not currently in effect)."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/dashCount","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/dashcount"},"doc://Cairo/documentation/Cairo/ContextProtocol/showPage()":{"role":"symbol","title":"showPage()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"showPage"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Emits and clears the current page for backends that support multiple pages. Use cairo_copy_page() if you don’t want to clear the page."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/showPage()","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/showpage()"},"doc://Cairo/documentation/Cairo/ContextProtocol/context_ptr":{"role":"symbol","title":"context_ptr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"context_ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"cairo_t"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Typed pointer to the underlying context"}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/context_ptr","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/context_ptr"},"doc://Cairo/documentation/Cairo/ContextProtocol/fillPreserve()":{"role":"symbol","title":"fillPreserve()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fillPreserve"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"A drawing operator that fills the current path according to the current fill rule, (each sub-path is implicitly closed before being filled). Unlike fill(), fillPreserve() preserves the path within the cairo context."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/fillPreserve()","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/fillpreserve()"},"doc://Cairo/documentation/Cairo/ContextProtocol/status":{"role":"symbol","title":"status","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"status"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"cairo_status_t"}],"abstract":[{"type":"text","text":"Error status of the context"}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/status","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/status"},"doc://Cairo/documentation/Cairo/ContextProtocol/paint()":{"role":"symbol","title":"paint()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"paint"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Drawing operator that paints the current source everywhere within the current clip region."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/paint()","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/paint()"},"doc://Cairo/documentation/Cairo/ContextProtocol/strokePreserve()":{"role":"symbol","title":"strokePreserve()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"strokePreserve"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Drawing operator that strokes the current path according to the current line width, line join, line cap, and dash settings. Unlike cairo_stroke(), cairo_stroke_preserve() preserves the path within the cairo context."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/strokePreserve()","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/strokepreserve()"},"doc://Cairo/documentation/Cairo/ContextProtocol/clipExtents":{"role":"symbol","title":"clipExtents","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"clipExtents"},{"kind":"text","text":": (x1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", y1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", x2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", y2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Bounding box in user coordinates covering the area inside the current clip."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/clipExtents","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/clipextents"},"doc://Cairo/documentation/Cairo/ContextProtocol/mask(surface:x:y:)":{"role":"symbol","title":"mask(surface:x:y:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mask"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"surface"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":", "},{"kind":"externalParam","text":"x"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"y"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"drawing operator that paints the current source using the alpha channel of surface as a mask. (Opaque areas of surface are painted with the source, transparent areas are not painted.)"}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/mask(surface:x:y:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/mask(surface:x:y:)"},"doc://Cairo/documentation/Cairo/ContextProtocol/fontFace":{"role":"symbol","title":"fontFace","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"fontFace"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"cairo_font_face_t"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Current font face for a #cairo_t."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/fontFace","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/fontface"},"doc://Cairo/documentation/Cairo/ContextProtocol/newPath()":{"role":"symbol","title":"newPath()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"newPath"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Clears the current path. After this call there will be no path and no current point."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/newPath()","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/newpath()"},"doc://Cairo/documentation/Cairo":{"role":"collection","title":"Cairo","abstract":[],"identifier":"doc:\/\/Cairo\/documentation\/Cairo","kind":"symbol","type":"topic","url":"\/documentation\/cairo"},"doc://Cairo/documentation/Cairo/ContextProtocol/textPath(_:)":{"role":"symbol","title":"textPath(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"textPath"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Adds closed paths for text to the current path.  The generated"},{"type":"text","text":" "},{"type":"text","text":"path if filled, achieves an effect similar to that of"},{"type":"text","text":" "},{"type":"text","text":"showText()."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/textPath(_:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/textpath(_:)"},"doc://Cairo/documentation/Cairo/ContextProtocol/pushGroup(content:)":{"role":"symbol","title":"pushGroup(content:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pushGroup"},{"kind":"text","text":"("},{"kind":"externalParam","text":"content"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Content"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Temporarily redirects drawing to an intermediate surface known as a group. The redirection lasts until the group is completed by a call to cairo_pop_group() or cairo_pop_group_to_source(). These calls provide the result of any drawing to the group as a pattern, (either as an explicit object, or set as the source pattern)."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/pushGroup(content:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/pushgroup(content:)"},"doc://Cairo/documentation/Cairo/ContextProtocol/lineWidth":{"role":"symbol","title":"lineWidth","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"lineWidth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"}],"abstract":[{"type":"text","text":"Current line width within the cairo context. The line width value specifies the diameter of a pen that is circular in user space, (though device-space pen may be an ellipse in general due to scaling\/shear\/rotation of the CTM)."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/lineWidth","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/linewidth"},"doc://Cairo/documentation/Cairo/ContextProtocol/selectFontFace(_:slant:weight:)":{"role":"symbol","title":"selectFontFace(_:slant:weight:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"selectFontFace"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"slant"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"cairo_font_slant_t"},{"kind":"text","text":", "},{"kind":"externalParam","text":"weight"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"cairo_font_weight_t"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Note: The selectFontFace() function call is part of what"},{"type":"text","text":" "},{"type":"text","text":"the cairo designers call the “toy” text API. It is convenient for"},{"type":"text","text":" "},{"type":"text","text":"short demos and simple programs, but it is not expected to be"},{"type":"text","text":" "},{"type":"text","text":"adequate for serious text-using applications."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/selectFontFace(_:slant:weight:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/selectfontface(_:slant:weight:)"},"doc://Cairo/documentation/Cairo/ContextProtocol/textExtents(_:)":{"role":"symbol","title":"textExtents(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"textExtents"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"cairo_text_extents_t","preciseIdentifier":"c:@SA@cairo_text_extents_t"}],"abstract":[{"type":"text","text":"Gets the extents for a string of text. The extents describe a"},{"type":"text","text":" "},{"type":"text","text":"user-space rectangle that encloses the “inked” portion of the text,"},{"type":"text","text":" "},{"type":"text","text":"(as it would be drawn by showText()). Additionally, the"},{"type":"text","text":" "},{"type":"text","text":"x_advance and y_advance values indicate the amount by which the"},{"type":"text","text":" "},{"type":"text","text":"current point would be advanced by showText()."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/textExtents(_:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/textextents(_:)"},"doc://Cairo/documentation/Cairo/ContextProtocol/operator":{"role":"symbol","title":"operator","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"`operator`"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"cairo_operator_t"}],"abstract":[{"type":"text","text":"Compositing operator to be used for all drawing operations. See cairo_operator_t for details on the semantics of each available compositing operator."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/operator","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/operator"},"doc://Cairo/documentation/Cairo/ContextProtocol/copyPage()":{"role":"symbol","title":"copyPage()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"copyPage"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Emits the current page for backends that support multiple pages, but doesn’t clear it, so, the contents of the current page will be retained for the next page too. Use showPage() if you want to get an empty page after the emission."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/copyPage()","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/copypage()"},"doc://Cairo/documentation/Cairo/ContextProtocol/setSource(red:green:blue:)":{"role":"symbol","title":"setSource(red:green:blue:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setSource"},{"kind":"text","text":"("},{"kind":"externalParam","text":"red"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"green"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"blue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Sets the source pattern within cr to an opaque color. This opaque color will then be used for any subsequent drawing operation until a new source pattern is set."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/setSource(red:green:blue:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/setsource(red:green:blue:)"},"doc://Cairo/documentation/Cairo/ContextProtocol/arcNegative(xc:yc:radius:angle1:angle2:)":{"role":"symbol","title":"arcNegative(xc:yc:radius:angle1:angle2:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"arcNegative"},{"kind":"text","text":"("},{"kind":"externalParam","text":"xc"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"yc"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"radius"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"angle1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"angle2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Adds a circular arc of the given radius to the current path. The arc is centered at (xc , yc ), begins at angle1 and proceeds in the direction of decreasing angles to end at angle2 . If angle2 is greater than angle1 it will be progressively decreased by .pi*2 until it is less than angle1 ."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/arcNegative(xc:yc:radius:angle1:angle2:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/arcnegative(xc:yc:radius:angle1:angle2:)"},"doc://Cairo/documentation/Cairo/ContextProtocol/source":{"role":"symbol","title":"source","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"source"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PatternRef","preciseIdentifier":"s:5Cairo10PatternRefV"}],"abstract":[{"type":"text","text":"Source pattern within cr. This pattern will then be used for any subsequent drawing operation until a new source pattern is set."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/source","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/source"},"doc://Cairo/documentation/Cairo/ContextProtocol/miterLimit":{"role":"symbol","title":"miterLimit","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"miterLimit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"}],"abstract":[{"type":"text","text":"Current miter limit within the cairo context."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/miterLimit","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/miterlimit"},"doc://Cairo/documentation/Cairo/ContextProtocol/path":{"role":"symbol","title":"path","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PathRef","preciseIdentifier":"s:5Cairo7PathRefV"}],"abstract":[{"type":"text","text":"Creates a copy of the current path and returns it to the user as a cairo_path_t. See cairo_path_data_t for hints on how to iterate over the returned data structure."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/path","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/path"},"doc://Cairo/documentation/Cairo/ContextProtocol/isInClip(_:_:)":{"role":"symbol","title":"isInClip(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isInClip"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Tests whether the given point is inside the area that would be visible through the current clip, i.e. the area that would be filled by a paint() operation."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/isInClip(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/isinclip(_:_:)"},"doc://Cairo/documentation/Cairo/ContextProtocol/append(path:)":{"role":"symbol","title":"append(path:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"append"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Append the path onto the current path. The path may be either the return value from one of cairo_copy_path() or cairo_copy_path_flat() or it may be constructed manually. See cairo_path_t for details on how the path data structure should be initialized, and note that path->status must be initialized to CAIRO_STATUS_SUCCESS."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/append(path:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/append(path:)"},"doc://Cairo/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/Cairo\/4GLib14PointerWrapperP"},"doc://Cairo/documentation/Cairo/ContextProtocol/showText(_:length:glyphs:clusters:flags:)":{"role":"symbol","title":"showText(_:length:glyphs:clusters:flags:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"showText"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"length"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"glyphs"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"cairo_glyph_t","preciseIdentifier":"c:@SA@cairo_glyph_t"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"clusters"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"cairo_text_cluster_t","preciseIdentifier":"c:@SA@cairo_text_cluster_t"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"flags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"cairo_text_cluster_flags_t"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"This operation has rendering effects similar to showGlyphs()"},{"type":"text","text":" "},{"type":"text","text":"but, if the target surface supports it, uses the provided text and"},{"type":"text","text":" "},{"type":"text","text":"cluster mapping to embed the text for the glyphs shown in the output."},{"type":"text","text":" "},{"type":"text","text":"If the target does not support the extended attributes, this function"},{"type":"text","text":" "},{"type":"text","text":"acts like the basic cairo_show_glyphs() as if it had been passed"}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/showText(_:length:glyphs:clusters:flags:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/showtext(_:length:glyphs:clusters:flags:)"},"doc://Cairo/documentation/Cairo/ContextProtocol/glyphPath(glyphs:)":{"role":"symbol","title":"glyphPath(glyphs:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"glyphPath"},{"kind":"text","text":"("},{"kind":"externalParam","text":"glyphs"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"cairo_glyph_t","preciseIdentifier":"c:@SA@cairo_glyph_t"},{"kind":"text","text":"])"}],"abstract":[{"type":"text","text":"Adds closed paths for the glyphs to the current path. The generated path if filled, achieves an effect similar to that of showGlyphs()."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/glyphPath(glyphs:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/glyphpath(glyphs:)"},"doc://Cairo/documentation/Cairo/ContextProtocol/glyphExtents(_:)":{"role":"symbol","title":"glyphExtents(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"glyphExtents"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"cairo_glyph_t","preciseIdentifier":"c:@SA@cairo_glyph_t"},{"kind":"text","text":"]) -> "},{"kind":"typeIdentifier","text":"cairo_text_extents_t","preciseIdentifier":"c:@SA@cairo_text_extents_t"}],"abstract":[{"type":"text","text":"Gets the extents for an array of glyphs. The extents describe a"},{"type":"text","text":" "},{"type":"text","text":"user-space rectangle that encloses the “inked” portion of the"},{"type":"text","text":" "},{"type":"text","text":"glyphs, (as they would be drawn by showGlyphs())."},{"type":"text","text":" "},{"type":"text","text":"Additionally, the x_advance and y_advance values indicate the"},{"type":"text","text":" "},{"type":"text","text":"amount by which the current point would be advanced by"},{"type":"text","text":" "},{"type":"text","text":"showGlyphs()."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/glyphExtents(_:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/glyphextents(_:)"},"doc://Cairo/documentation/Cairo/ContextProtocol/closePath()":{"role":"symbol","title":"closePath()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"closePath"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Adds a line segment to the path from the current point to the beginning of the current sub-path, (the most recent point passed to moveTo()), and closes this sub-path. After this call the current point will be at the joined endpoint of the sub-path."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/closePath()","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/closepath()"},"doc://Cairo/documentation/Cairo/ContextProtocol/setSource(red:green:blue:alpha:)":{"role":"symbol","title":"setSource(red:green:blue:alpha:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setSource"},{"kind":"text","text":"("},{"kind":"externalParam","text":"red"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"green"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"blue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"alpha"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Sets the source pattern within cr to a translucent color. This color will then be used for any subsequent drawing operation until a new source pattern is set."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/setSource(red:green:blue:alpha:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/setsource(red:green:blue:alpha:)"},"doc://Cairo/documentation/Cairo/ContextProtocol/getFont(options:)":{"role":"symbol","title":"getFont(options:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getFont"},{"kind":"text","text":"("},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"cairo_font_options_t"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Retrieves font rendering options set via #cairo_set_font_options."},{"type":"text","text":" "},{"type":"text","text":"Note that the returned options do not include any options derived"},{"type":"text","text":" "},{"type":"text","text":"from the underlying surface; they are literally the options"},{"type":"text","text":" "},{"type":"text","text":"passed to cairo_set_font_options()."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/getFont(options:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/getfont(options:)"},"doc://Cairo/documentation/Cairo/ContextProtocol/fontExtents":{"role":"symbol","title":"fontExtents","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"fontExtents"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"cairo_font_extents_t","preciseIdentifier":"c:@SA@cairo_font_extents_t"}],"abstract":[{"type":"text","text":"Font extents for the currently selected font"}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/fontExtents","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/fontextents"},"doc://Cairo/documentation/Cairo/ContextProtocol/paint(alpha:)":{"role":"symbol","title":"paint(alpha:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"paint"},{"kind":"text","text":"("},{"kind":"externalParam","text":"alpha"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Drawing operator that paints the current source everywhere within the current clip region using a mask of constant alpha value alpha . The effect is similar to paint(), but the drawing is faded out using the alpha value."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/paint(alpha:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/paint(alpha:)"},"doc://Cairo/documentation/Cairo/ContextProtocol/setUserData(key:value:destroy:)":{"role":"symbol","title":"setUserData(key:value:destroy:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setUserData"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"cairo_user_data_key_t"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":", "},{"kind":"externalParam","text":"destroy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"cairo_destroy_func_t","preciseIdentifier":"c:@T@cairo_destroy_func_t"},{"kind":"text","text":"!) -> "},{"kind":"typeIdentifier","text":"cairo_status_t"}],"abstract":[{"type":"text","text":"Attach user data to cr . To remove user data from a surface, call this function with the key that was used to set it and NULL for data ."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/setUserData(key:value:destroy:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/setuserdata(key:value:destroy:)"},"doc://Cairo/documentation/Cairo/ContextProtocol/pushGroup()":{"role":"symbol","title":"pushGroup()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pushGroup"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Temporarily redirects drawing to an intermediate surface known as a group. The redirection lasts until the group is completed by a call to cairo_pop_group() or cairo_pop_group_to_source(). These calls provide the result of any drawing to the group as a pattern, (either as an explicit object, or set as the source pattern)."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/pushGroup()","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/pushgroup()"},"doc://Cairo/documentation/Cairo/ContextProtocol/relMoveTo(_:_:)":{"role":"symbol","title":"relMoveTo(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"relMoveTo"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Begin a new sub-path. After this call the current point will offset by (x , y )."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/relMoveTo(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/relmoveto(_:_:)"},"doc://Cairo/documentation/Cairo/ContextProtocol/lineCap":{"role":"symbol","title":"lineCap","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"lineCap"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"cairo_line_cap_t"}],"abstract":[{"type":"text","text":"Current line cap style within the cairo context. See cairo_line_cap_t for details about how the available line cap styles are drawn."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/lineCap","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/linecap"},"doc://Cairo/documentation/Cairo/ContextProtocol/groupTarget":{"role":"symbol","title":"groupTarget","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"groupTarget"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SurfaceRef","preciseIdentifier":"s:5Cairo10SurfaceRefV"}],"abstract":[{"type":"text","text":"Returns the current destination surface for the context. This is either the original target surface as passed to cairo_create() or the target surface for the current group as started by the most recent call to cairo_push_group() or cairo_push_group_with_content()."},{"type":"text","text":" "},{"type":"text","text":"This property will always return a valid pointer, but the result can be a “nil” surface if cr is already in an error state, (ie. cairo_status() != CAIRO_STATUS_SUCCESS). A nil surface is indicated by cairo_surface_status() != CAIRO_STATUS_SUCCESS."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/groupTarget","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/grouptarget"},"doc://Cairo/documentation/Cairo/ContextProtocol/newSubPath()":{"role":"symbol","title":"newSubPath()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"newSubPath"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Begin a new sub-path. Note that the existing path is not affected. After this call there will be no current point."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/newSubPath()","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/newsubpath()"},"doc://Cairo/documentation/Cairo/ContextProtocol/antiAlias":{"role":"symbol","title":"antiAlias","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"antiAlias"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"cairo_antialias_t"}],"abstract":[{"type":"text","text":"Antialiasing mode of the rasterizer used for drawing shapes. This value is a hint, and a particular backend may or may not support a particular value. At the current time, no backend supports CAIRO_ANTIALIAS_SUBPIXEL when drawing shapes."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/antiAlias","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/antialias"},"doc://Cairo/documentation/Cairo/ContextProtocol/target":{"role":"symbol","title":"target","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"target"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SurfaceRef","preciseIdentifier":"s:5Cairo10SurfaceRefV"}],"abstract":[{"type":"text","text":"Gets the target surface for the cairo context as passed to cairo_create()."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/target","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/target"},"doc://Cairo/documentation/Cairo/Context":{"role":"symbol","title":"Context","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Context"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Context"},{"type":"text","text":" type acts as an owner of an underlying "},{"type":"codeVoice","code":"cairo_t"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It provides the methods that can operate on this data type through "},{"type":"codeVoice","code":"ContextProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"codeVoice","code":"Context"},{"type":"text","text":" as a strong reference or owner of a "},{"type":"codeVoice","code":"cairo_t"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/Context","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Context"}],"url":"\/documentation\/cairo\/context"},"doc://Cairo/documentation/Cairo/ContextProtocol/resetClip()":{"role":"symbol","title":"resetClip()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resetClip"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Reset the current clip region to its original, unrestricted state. That is, set the clip region to an infinitely large shape containing the target surface. Equivalently, if infinity is too hard to grasp, one can imagine the clip region being reset to the exact bounds of the target surface."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/resetClip()","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/resetclip()"},"doc://Cairo/documentation/Cairo/ContextProtocol/lineJoin":{"role":"symbol","title":"lineJoin","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"lineJoin"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"cairo_line_join_t"}],"abstract":[{"type":"text","text":"Current line join style within the cairo context. See cairo_line_join_t for details about how the available line join styles are drawn."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/lineJoin","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/linejoin"},"doc://Cairo/documentation/Cairo/ContextProtocol/clip()":{"role":"symbol","title":"clip()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"clip"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Establishes a new clip region by intersecting the current clip region with the current path as it would be filled by cairo_fill() and according to the current fill rule (see cairo_set_fill_rule())."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/clip()","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/clip()"},"doc://Cairo/documentation/Cairo/ContextProtocol/arc(xc:yc:radius:angle1:angle2:)":{"role":"symbol","title":"arc(xc:yc:radius:angle1:angle2:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"arc"},{"kind":"text","text":"("},{"kind":"externalParam","text":"xc"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"yc"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"radius"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"angle1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"angle2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Adds a circular arc of the given radius to the current path. The arc is centered at (xc , yc ), begins at angle1 and proceeds in the direction of increasing angles to end at angle2 . If angle2 is less than angle1 it will be progressively increased by .pi*2 until it is greater than angle1 ."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/arc(xc:yc:radius:angle1:angle2:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/arc(xc:yc:radius:angle1:angle2:)"},"doc://Cairo/documentation/Cairo/ContextProtocol/lineTo(_:_:)":{"role":"symbol","title":"lineTo(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lineTo"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Adds a line to the path from the current point to position (x , y ) in user-space coordinates. After this call the current point will be (x , y )."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/lineTo(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/lineto(_:_:)"},"doc://Cairo/documentation/Cairo/ContextProtocol/mitreLimit":{"role":"symbol","title":"mitreLimit","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"mitreLimit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"}],"abstract":[{"type":"text","text":"Current mitre limit within the cairo context."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/mitreLimit","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/mitrelimit"},"doc://Cairo/documentation/Cairo/ContextProtocol/fill()":{"role":"symbol","title":"fill()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fill"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"A drawing operator that fills the current path according to the current fill rule, (each sub-path is implicitly closed before being filled). After fill(), the current path will be cleared from the cairo context. See fillRule() and fillPreserve()."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/fill()","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/fill()"},"doc://Cairo/documentation/Cairo/ContextProtocol/fillExtents":{"role":"symbol","title":"fillExtents","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"fillExtents"},{"kind":"text","text":": (x1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", y1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", x2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", y2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Bounding box in user coordinates covering the area that would be affected, (the “inked” area), by a cairo_fill() operation given the current path and fill parameters. If the current path is empty, returns an empty rectangle ((0,0), (0,0)). Surface dimensions and clipping are not taken into account."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/fillExtents","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/fillextents"}}}