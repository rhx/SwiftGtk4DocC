{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"textToGlyphs"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"x"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":" = 0, "},{"kind":"externalParam","text":"y"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":" = 0) -> (glyphs"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"cairo_glyph_t","preciseIdentifier":"c:@SA@cairo_glyph_t"},{"kind":"text","text":"], clusters"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"cairo_text_cluster_t","preciseIdentifier":"c:@SA@cairo_text_cluster_t"},{"kind":"text","text":"], flags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"cairo_text_cluster_flags_t"},{"kind":"text","text":")?"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If @glyphs initially points to a non-%NULL value, that array is used"},{"type":"text","text":" "},{"type":"text","text":"as a glyph buffer, and @num_glyphs should point to the number of glyph"},{"type":"text","text":" "},{"type":"text","text":"entries available there.  If the provided glyph array is too short for"},{"type":"text","text":" "},{"type":"text","text":"the conversion, a new glyph array is allocated using cairo_glyph_allocate()"},{"type":"text","text":" "},{"type":"text","text":"and placed in @glyphs.  Upon return, @num_glyphs always contains the"},{"type":"text","text":" "},{"type":"text","text":"number of generated glyphs.  If the value @glyphs points to has changed"},{"type":"text","text":" "},{"type":"text","text":"after the call, the user is responsible for freeing the allocated glyph"},{"type":"text","text":" "},{"type":"text","text":"array using cairo_glyph_free().  This may happen even if the provided"},{"type":"text","text":" "},{"type":"text","text":"array was large enough."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If @clusters is not %NULL, @num_clusters and @cluster_flags should not be %NULL,"},{"type":"text","text":" "},{"type":"text","text":"and cluster mapping will be computed."},{"type":"text","text":" "},{"type":"text","text":"The semantics of how cluster array allocation works is similar to the glyph"},{"type":"text","text":" "},{"type":"text","text":"array.  That is,"},{"type":"text","text":" "},{"type":"text","text":"if @clusters initially points to a non-%NULL value, that array is used"},{"type":"text","text":" "},{"type":"text","text":"as a cluster buffer, and @num_clusters should point to the number of cluster"},{"type":"text","text":" "},{"type":"text","text":"entries available there.  If the provided cluster array is too short for"},{"type":"text","text":" "},{"type":"text","text":"the conversion, a new cluster array is allocated using cairo_text_cluster_allocate()"},{"type":"text","text":" "},{"type":"text","text":"and placed in @clusters.  Upon return, @num_clusters always contains the"},{"type":"text","text":" "},{"type":"text","text":"number of generated clusters.  If the value @clusters points at has changed"},{"type":"text","text":" "},{"type":"text","text":"after the call, the user is responsible for freeing the allocated cluster"},{"type":"text","text":" "},{"type":"text","text":"array using cairo_text_cluster_free().  This may happen even if the provided"},{"type":"text","text":" "},{"type":"text","text":"array was large enough."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"text: a string of text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"x: X position to place first glyph"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"y: Y position to place first glyph"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the simplest case, @glyphs and @clusters can point to %NULL initially"},{"type":"text","text":" "},{"type":"text","text":"and a suitable array will be allocated.  In code:"},{"type":"text","text":" "},{"type":"text","text":" "},{"type":"text","text":"cairo_status_t status;"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"cairo_glyph_t \/\/\/glyphs = NULL;"},{"type":"text","text":" "},{"type":"text","text":"int num_glyphs;"},{"type":"text","text":" "},{"type":"text","text":"cairo_text_cluster_t \/\/\/clusters = NULL;"},{"type":"text","text":" "},{"type":"text","text":"int num_clusters;"},{"type":"text","text":" "},{"type":"text","text":"cairo_text_cluster_flags_t cluster_flags;"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"status = cairo_scaled_font_text_to_glyphs (scaled_font,"},{"type":"text","text":" "},{"type":"text","text":"x, y,"},{"type":"text","text":" "},{"type":"text","text":"utf8, utf8_len,"},{"type":"text","text":" "},{"type":"text","text":"&glyphs, &num_glyphs,"},{"type":"text","text":" "},{"type":"text","text":"&clusters, &num_clusters, &cluster_flags);"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"if (status == CAIRO_STATUS_SUCCESS) {"},{"type":"text","text":" "},{"type":"text","text":"cairo_show_text_glyphs (cr,"},{"type":"text","text":" "},{"type":"text","text":"utf8, utf8_len,"},{"type":"text","text":" "},{"type":"text","text":"glyphs, num_glyphs,"},{"type":"text","text":" "},{"type":"text","text":"clusters, num_clusters, cluster_flags);"}]},{"type":"codeListing","syntax":null,"code":["cairo_glyph_free (glyphs);","cairo_text_cluster_free (clusters);"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"}"},{"type":"text","text":" "}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If no cluster mapping is needed:"},{"type":"text","text":" "},{"type":"text","text":" "},{"type":"text","text":"cairo_status_t status;"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"cairo_glyph_t \/\/\/glyphs = NULL;"},{"type":"text","text":" "},{"type":"text","text":"int num_glyphs;"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"status = cairo_scaled_font_text_to_glyphs (scaled_font,"},{"type":"text","text":" "},{"type":"text","text":"x, y,"},{"type":"text","text":" "},{"type":"text","text":"utf8, utf8_len,"},{"type":"text","text":" "},{"type":"text","text":"&glyphs, &num_glyphs,"},{"type":"text","text":" "},{"type":"text","text":"NULL, NULL,"},{"type":"text","text":" "},{"type":"text","text":"NULL);"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"if (status == CAIRO_STATUS_SUCCESS) {"},{"type":"text","text":" "},{"type":"text","text":"cairo_show_glyphs (cr, glyphs, num_glyphs);"},{"type":"text","text":" "},{"type":"text","text":"cairo_glyph_free (glyphs);"},{"type":"text","text":" "},{"type":"text","text":"}"},{"type":"text","text":" "}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If stack-based glyph and cluster arrays are to be used for small"},{"type":"text","text":" "},{"type":"text","text":"arrays:"},{"type":"text","text":" "},{"type":"text","text":" "},{"type":"text","text":"cairo_status_t status;"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"cairo_glyph_t stack_glyphs[40];"},{"type":"text","text":" "},{"type":"text","text":"cairo_glyph_t \/\/\/glyphs = stack_glyphs;"},{"type":"text","text":" "},{"type":"text","text":"int num_glyphs = sizeof (stack_glyphs) \/ sizeof (stack_glyphs[0]);"},{"type":"text","text":" "},{"type":"text","text":"cairo_text_cluster_t stack_clusters[40];"},{"type":"text","text":" "},{"type":"text","text":"cairo_text_cluster_t \/\/\/clusters = stack_clusters;"},{"type":"text","text":" "},{"type":"text","text":"int num_clusters = sizeof (stack_clusters) \/ sizeof (stack_clusters[0]);"},{"type":"text","text":" "},{"type":"text","text":"cairo_text_cluster_flags_t cluster_flags;"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"status = cairo_scaled_font_text_to_glyphs (scaled_font,"},{"type":"text","text":" "},{"type":"text","text":"x, y,"},{"type":"text","text":" "},{"type":"text","text":"utf8, utf8_len,"},{"type":"text","text":" "},{"type":"text","text":"&glyphs, &num_glyphs,"},{"type":"text","text":" "},{"type":"text","text":"&clusters, &num_clusters, &cluster_flags);"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"if (status == CAIRO_STATUS_SUCCESS) {"},{"type":"text","text":" "},{"type":"text","text":"cairo_show_text_glyphs (cr,"},{"type":"text","text":" "},{"type":"text","text":"utf8, utf8_len,"},{"type":"text","text":" "},{"type":"text","text":"glyphs, num_glyphs,"},{"type":"text","text":" "},{"type":"text","text":"clusters, num_clusters, cluster_flags);"}]},{"type":"codeListing","syntax":null,"code":["if (glyphs != stack_glyphs)","    cairo_glyph_free (glyphs);","if (clusters != stack_clusters)","    cairo_text_cluster_free (clusters);"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"}"},{"type":"text","text":" "}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For details of how @clusters, @num_clusters, and @cluster_flags map input"},{"type":"text","text":" "},{"type":"text","text":"UTF-8 text to the output glyphs see cairo_show_text_glyphs()."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The output values can be readily passed to cairo_show_text_glyphs()"},{"type":"text","text":" "},{"type":"text","text":"cairo_show_glyphs(), or related functions, assuming that the exact"},{"type":"text","text":" "},{"type":"text","text":"same @scaled_font is used for the operation."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Return value: %CAIRO_STATUS_SUCCESS upon success, or an error status"},{"type":"text","text":" "},{"type":"text","text":"if the input values are wrong or if conversion failed.  If the input"},{"type":"text","text":" "},{"type":"text","text":"values are correct but the conversion failed, the error status is also"},{"type":"text","text":" "},{"type":"text","text":"set on @scaled_font."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/cairo\/scaledfontprotocol\/texttoglyphs(_:x:y:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Cairo\/documentation\/Cairo\/ScaledFontProtocol\/textToGlyphs(_:x:y:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Converts UTF-8 text to an array of glyphs, optionally with cluster"},{"type":"text","text":" "},{"type":"text","text":"mapping, that can be used to render later using @scaled_font."}],"kind":"symbol","metadata":{"role":"symbol","title":"textToGlyphs(_:x:y:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"textToGlyphs"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"x"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"y"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":") -> (glyphs"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"cairo_glyph_t","preciseIdentifier":"c:@SA@cairo_glyph_t"},{"kind":"text","text":"], clusters"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"cairo_text_cluster_t","preciseIdentifier":"c:@SA@cairo_text_cluster_t"},{"kind":"text","text":"], flags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"cairo_text_cluster_flags_t"},{"kind":"text","text":")?"}],"symbolKind":"method","externalID":"s:5Cairo18ScaledFontProtocolPAAE12textToGlyphs_1x1ySaySo13cairo_glyph_taG6glyphs_SaySo0h1_E10_cluster_taG8clustersSo01_h1_e1_K6_flagsV0M0tSgSS_S2dtF","extendedModule":"Cairo","modules":[{"name":"Cairo"}]},"hierarchy":{"paths":[["doc:\/\/Cairo\/documentation\/Cairo","doc:\/\/Cairo\/documentation\/Cairo\/ScaledFontProtocol"]]},"references":{"doc://Cairo/documentation/Cairo/ScaledFontRef":{"role":"symbol","title":"ScaledFontRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScaledFontRef"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ScaledFontRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"cairo_scaled_font_t"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ScaledFontProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ScaledFontRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"cairo_scaled_font_t"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ScaledFontRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ScaledFontRef"}],"url":"\/documentation\/cairo\/scaledfontref"},"doc://Cairo/documentation/Cairo/ScaledFontProtocol/textToGlyphs(_:x:y:)":{"role":"symbol","title":"textToGlyphs(_:x:y:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"textToGlyphs"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"x"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"y"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":") -> (glyphs"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"cairo_glyph_t","preciseIdentifier":"c:@SA@cairo_glyph_t"},{"kind":"text","text":"], clusters"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"cairo_text_cluster_t","preciseIdentifier":"c:@SA@cairo_text_cluster_t"},{"kind":"text","text":"], flags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"cairo_text_cluster_flags_t"},{"kind":"text","text":")?"}],"abstract":[{"type":"text","text":"Converts UTF-8 text to an array of glyphs, optionally with cluster"},{"type":"text","text":" "},{"type":"text","text":"mapping, that can be used to render later using @scaled_font."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ScaledFontProtocol\/textToGlyphs(_:x:y:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/scaledfontprotocol\/texttoglyphs(_:x:y:)"},"doc://Cairo/documentation/Cairo/ScaledFontProtocol":{"role":"symbol","title":"ScaledFontProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScaledFontProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ScaledFontProtocol"},{"type":"text","text":" protocol exposes the methods and properties of an underlying "},{"type":"codeVoice","code":"cairo_scaled_font_t"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"The default implementation of these can be found in the protocol extension below."},{"type":"text","text":" "},{"type":"text","text":"For a concrete class that implements these methods and properties, see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ScaledFont"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Alternatively, use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ScaledFontRef"},{"type":"text","text":" as a lighweight, "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference if you already have an instance you just want to use."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ScaledFontProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ScaledFontProtocol"}],"url":"\/documentation\/cairo\/scaledfontprotocol"},"doc://Cairo/documentation/Cairo/ScaledFont":{"role":"symbol","title":"ScaledFont","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScaledFont"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ScaledFont"},{"type":"text","text":" type acts as an owner of an underlying "},{"type":"codeVoice","code":"cairo_scaled_font_t"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It provides the methods that can operate on this data type through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ScaledFontProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ScaledFont"},{"type":"text","text":" as a strong reference or owner of a "},{"type":"codeVoice","code":"cairo_scaled_font_t"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ScaledFont","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ScaledFont"}],"url":"\/documentation\/cairo\/scaledfont"},"doc://Cairo/documentation/Cairo":{"role":"collection","title":"Cairo","abstract":[],"identifier":"doc:\/\/Cairo\/documentation\/Cairo","kind":"symbol","type":"topic","url":"\/documentation\/cairo"}}}