{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stroke"},{"kind":"text","text":"()"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note: Degenerate segments and sub-paths are treated specially and provide a useful result. These can result in two different situations:"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Zero-length “on” segments set in dash\/setDash(). If the cap style is CAIRO_LINE_CAP_ROUND or CAIRO_LINE_CAP_SQUARE then these segments will be drawn as circular dots or squares respectively. In the case of CAIRO_LINE_CAP_SQUARE, the orientation of the squares is determined by the direction of the underlying path."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A sub-path created by moveTo() followed by either a closePath() or one or more calls to lineTo() to the same coordinate as the moveTo(). If the cap style is CAIRO_LINE_CAP_ROUND then these sub-paths will be drawn as circular dots. Note that in the case of CAIRO_LINE_CAP_SQUARE a degenerate sub-path will not be drawn at all, (since the correct orientation is indeterminate)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In no case will a cap style of CAIRO_LINE_CAP_BUTT cause anything to be drawn in the case of either degenerate segments or sub-paths."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/cairo\/contextprotocol\/stroke()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/stroke()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Drawing operator that strokes the current path according to the current line width, line join, line cap, and dash settings. After stroke(), the current path will be cleared from the cairo context. See lineWidth, lineJoin, lineCap, dash, setDash(), and strokePreserve()."}],"kind":"symbol","metadata":{"role":"symbol","title":"stroke()","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stroke"},{"kind":"text","text":"()"}],"symbolKind":"method","externalID":"s:5Cairo15ContextProtocolPAAE6strokeyyF","extendedModule":"Cairo","modules":[{"name":"Cairo"}]},"hierarchy":{"paths":[["doc:\/\/Cairo\/documentation\/Cairo","doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol"]]},"references":{"doc://Cairo/documentation/Cairo/ContextProtocol":{"role":"symbol","title":"ContextProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContextProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ContextProtocol"},{"type":"text","text":" protocol exposes the methods and properties of an underlying "},{"type":"codeVoice","code":"cairo_t"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"The default implementation of these can be found in the protocol extension below."},{"type":"text","text":" "},{"type":"text","text":"For a concrete class that implements these methods and properties, see "},{"type":"codeVoice","code":"Context"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Alternatively, use "},{"type":"codeVoice","code":"ContextRef"},{"type":"text","text":" as a lighweight, "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference if you already have an instance you just want to use."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ContextProtocol"}],"url":"\/documentation\/cairo\/contextprotocol"},"doc://Cairo/documentation/Cairo":{"role":"collection","title":"Cairo","abstract":[],"identifier":"doc:\/\/Cairo\/documentation\/Cairo","kind":"symbol","type":"topic","url":"\/documentation\/cairo"},"doc://Cairo/documentation/Cairo/ContextProtocol/stroke()":{"role":"symbol","title":"stroke()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stroke"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Drawing operator that strokes the current path according to the current line width, line join, line cap, and dash settings. After stroke(), the current path will be cleared from the cairo context. See lineWidth, lineJoin, lineCap, dash, setDash(), and strokePreserve()."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol\/stroke()","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextprotocol\/stroke()"}}}