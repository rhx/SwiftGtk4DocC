{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"selectFontFace"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"family"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"slant"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"cairo_font_slant_t"},{"kind":"text","text":" = .normal, "},{"kind":"externalParam","text":"weight"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"cairo_font_weight_t"},{"kind":"text","text":" = .normal)"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Selects a family and style of font from a simplified description as"},{"type":"text","text":" "},{"type":"text","text":"a family name, slant and weight. Cairo provides no operation to"},{"type":"text","text":" "},{"type":"text","text":"list available family names on the system (this is a “toy”,"},{"type":"text","text":" "},{"type":"text","text":"remember), but the standard CSS2 generic family names, (“serif”,"},{"type":"text","text":" "},{"type":"text","text":"“sans-serif”, “cursive”, “fantasy”, “monospace”), are likely to"},{"type":"text","text":" "},{"type":"text","text":"work as expected."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If @family starts with the string “@cairo:”, or if no native font"},{"type":"text","text":" "},{"type":"text","text":"backends are compiled in, cairo will use an internal font family."},{"type":"text","text":" "},{"type":"text","text":"The internal font family recognizes many modifiers in the @family"},{"type":"text","text":" "},{"type":"text","text":"string, most notably, it recognizes the string “monospace”.  That is,"},{"type":"text","text":" "},{"type":"text","text":"the family name “@cairo:monospace” will use the monospace version of"},{"type":"text","text":" "},{"type":"text","text":"the internal font family."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For “real” font selection, see the font-backend-specific"},{"type":"text","text":" "},{"type":"text","text":"font_face_create functions for the font backend you are using. (For"},{"type":"text","text":" "},{"type":"text","text":"example, if you are using the freetype-based cairo-ft font backend,"},{"type":"text","text":" "},{"type":"text","text":"see cairo_ft_font_face_create_for_ft_face() or"},{"type":"text","text":" "},{"type":"text","text":"cairo_ft_font_face_create_for_pattern().) The resulting font face"},{"type":"text","text":" "},{"type":"text","text":"could then be used with cairo_scaled_font_create() and"},{"type":"text","text":" "},{"type":"text","text":"cairo_set_scaled_font()."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Similarly, when using the “real” font support, you can call"},{"type":"text","text":" "},{"type":"text","text":"directly into the underlying font system, (such as fontconfig or"},{"type":"text","text":" "},{"type":"text","text":"freetype), for operations such as listing available fonts, etc."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is expected that most applications will need to use a more"},{"type":"text","text":" "},{"type":"text","text":"comprehensive font handling and text layout library, (for example,"},{"type":"text","text":" "},{"type":"text","text":"pango), in conjunction with cairo."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If text is drawn without a call to cairo_select_font_face(), (nor"},{"type":"text","text":" "},{"type":"text","text":"selectFontFace() nor setScaledFont()), the default"},{"type":"text","text":" "},{"type":"text","text":"family is platform-specific, but is essentially “sans-serif”."},{"type":"text","text":" "},{"type":"text","text":"Default slant is %CAIRO_FONT_SLANT_NORMAL, and default weight is"},{"type":"text","text":" "},{"type":"text","text":"%CAIRO_FONT_WEIGHT_NORMAL."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function is equivalent to a call to cairo_toy_font_face_create()"},{"type":"text","text":" "},{"type":"text","text":"followed by cairo_set_font_face()."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/cairo\/contextref\/selectfontface(_:slant:weight:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Cairo\/documentation\/Cairo\/ContextRef\/selectFontFace(_:slant:weight:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Note: The selectFontFace() function call is part of what"},{"type":"text","text":" "},{"type":"text","text":"the cairo designers call the “toy” text API. It is convenient for"},{"type":"text","text":" "},{"type":"text","text":"short demos and simple programs, but it is not expected to be"},{"type":"text","text":" "},{"type":"text","text":"adequate for serious text-using applications."}],"kind":"symbol","metadata":{"role":"symbol","title":"selectFontFace(_:slant:weight:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"selectFontFace"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"slant"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"cairo_font_slant_t"},{"kind":"text","text":", "},{"kind":"externalParam","text":"weight"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"cairo_font_weight_t"},{"kind":"text","text":")"}],"symbolKind":"method","externalID":"s:5Cairo15ContextProtocolPAAE14selectFontFace_5slant6weightySPys4Int8VG_So012_cairo_font_G0VSo01_j1_k1_H0VtF::SYNTHESIZED::s:5Cairo10ContextRefV","extendedModule":"Cairo","modules":[{"name":"Cairo"}]},"hierarchy":{"paths":[["doc:\/\/Cairo\/documentation\/Cairo","doc:\/\/Cairo\/documentation\/Cairo\/ContextRef","doc:\/\/Cairo\/documentation\/Cairo\/ContextRef\/ContextProtocol-Implementations"]]},"references":{"doc://Cairo/documentation/Cairo/ContextRef/selectFontFace(_:slant:weight:)":{"role":"symbol","title":"selectFontFace(_:slant:weight:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"selectFontFace"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"slant"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"cairo_font_slant_t"},{"kind":"text","text":", "},{"kind":"externalParam","text":"weight"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"cairo_font_weight_t"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Note: The selectFontFace() function call is part of what"},{"type":"text","text":" "},{"type":"text","text":"the cairo designers call the “toy” text API. It is convenient for"},{"type":"text","text":" "},{"type":"text","text":"short demos and simple programs, but it is not expected to be"},{"type":"text","text":" "},{"type":"text","text":"adequate for serious text-using applications."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextRef\/selectFontFace(_:slant:weight:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextref\/selectfontface(_:slant:weight:)"},"doc://Cairo/documentation/Cairo/ContextRef/ContextProtocol-Implementations":{"role":"collectionGroup","title":"ContextProtocol Implementations","abstract":[],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextRef\/ContextProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/cairo\/contextref\/contextprotocol-implementations"},"doc://Cairo/documentation/Cairo/ContextProtocol":{"role":"symbol","title":"ContextProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContextProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol"},{"type":"text","text":" protocol exposes the methods and properties of an underlying "},{"type":"codeVoice","code":"cairo_t"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"The default implementation of these can be found in the protocol extension below."},{"type":"text","text":" "},{"type":"text","text":"For a concrete class that implements these methods and properties, see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/Context"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Alternatively, use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextRef"},{"type":"text","text":" as a lighweight, "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference if you already have an instance you just want to use."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ContextProtocol"}],"url":"\/documentation\/cairo\/contextprotocol"},"doc://Cairo/documentation/Cairo/ContextRef":{"role":"symbol","title":"ContextRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContextRef"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"cairo_t"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"cairo_t"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ContextRef"}],"url":"\/documentation\/cairo\/contextref"},"doc://Cairo/documentation/Cairo":{"role":"collection","title":"Cairo","abstract":[],"identifier":"doc:\/\/Cairo\/documentation\/Cairo","kind":"symbol","type":"topic","url":"\/documentation\/cairo"}}}