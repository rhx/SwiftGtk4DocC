{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"dash"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":"] { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"kind":"keyword","text":"nonmutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"set"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each “on” segment will have caps applied as if the segment were a separate sub-path. In particular, it is valid to use an “on” length of 0.0 with CAIRO_LINE_CAP_ROUND or CAIRO_LINE_CAP_SQUARE in order to distributed dots or squares along a path."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note: The length values are in user-space units as evaluated at the time of stroking. This is not necessarily the same as the user space at the time of cairo_set_dash()."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If num_dashes is 0 dashing is disabled."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If num_dashes is 1 a symmetric pattern is assumed with alternating on and off portions of the size specified by the single value in dashes ."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If any value in dashes is negative, or if all values are 0, then cr will be put into an error state with a status of CAIRO_STATUS_INVALID_DASH."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/cairo\/contextref\/dash"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Cairo\/documentation\/Cairo\/ContextRef\/dash","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Sets the dash pattern to be used by cairo_stroke(). A dash pattern is specified by dashes , an array of positive values. Each value provides the length of alternate “on” and “off” portions of the stroke. The offset specifies an offset into the pattern at which the stroke begins."}],"kind":"symbol","metadata":{"role":"symbol","title":"dash","roleHeading":"Instance Property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"dash"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":"]"}],"symbolKind":"property","externalID":"s:5Cairo15ContextProtocolPAAE4dashSaySdGvp::SYNTHESIZED::s:5Cairo10ContextRefV","extendedModule":"Cairo","modules":[{"name":"Cairo"}]},"hierarchy":{"paths":[["doc:\/\/Cairo\/documentation\/Cairo","doc:\/\/Cairo\/documentation\/Cairo\/ContextRef","doc:\/\/Cairo\/documentation\/Cairo\/ContextRef\/ContextProtocol-Implementations"]]},"references":{"doc://Cairo/documentation/Cairo/ContextRef":{"role":"symbol","title":"ContextRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContextRef"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"cairo_t"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"cairo_t"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ContextRef"}],"url":"\/documentation\/cairo\/contextref"},"doc://Cairo/documentation/Cairo/ContextRef/ContextProtocol-Implementations":{"role":"collectionGroup","title":"ContextProtocol Implementations","abstract":[],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextRef\/ContextProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/cairo\/contextref\/contextprotocol-implementations"},"doc://Cairo/documentation/Cairo":{"role":"collection","title":"Cairo","abstract":[],"identifier":"doc:\/\/Cairo\/documentation\/Cairo","kind":"symbol","type":"topic","url":"\/documentation\/cairo"},"doc://Cairo/documentation/Cairo/ContextRef/dash":{"role":"symbol","title":"dash","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"dash"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Sets the dash pattern to be used by cairo_stroke(). A dash pattern is specified by dashes , an array of positive values. Each value provides the length of alternate “on” and “off” portions of the stroke. The offset specifies an offset into the pattern at which the stroke begins."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextRef\/dash","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextref\/dash"},"doc://Cairo/documentation/Cairo/ContextProtocol":{"role":"symbol","title":"ContextProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContextProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol"},{"type":"text","text":" protocol exposes the methods and properties of an underlying "},{"type":"codeVoice","code":"cairo_t"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"The default implementation of these can be found in the protocol extension below."},{"type":"text","text":" "},{"type":"text","text":"For a concrete class that implements these methods and properties, see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/Context"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Alternatively, use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextRef"},{"type":"text","text":" as a lighweight, "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference if you already have an instance you just want to use."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ContextProtocol"}],"url":"\/documentation\/cairo\/contextprotocol"}}}