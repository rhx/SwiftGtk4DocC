{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"textPath"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">)"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Text conversion and positioning is done similar to cairo_show_text()."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Like showText(), after this call the current point is"},{"type":"text","text":" "},{"type":"text","text":"moved to the origin of where the next glyph would be placed in"},{"type":"text","text":" "},{"type":"text","text":"this same progression.  That is, the current point will be at"},{"type":"text","text":" "},{"type":"text","text":"the origin of the final glyph offset by its advance values."},{"type":"text","text":" "},{"type":"text","text":"This allows for chaining multiple calls to to cairo_text_path()"},{"type":"text","text":" "},{"type":"text","text":"without having to set current point in between."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note: The textPath() function call is part of what the cairo"},{"type":"text","text":" "},{"type":"text","text":"designers call the “toy” text API. It is convenient for short demos"},{"type":"text","text":" "},{"type":"text","text":"and simple programs, but it is not expected to be adequate for"},{"type":"text","text":" "},{"type":"text","text":"serious text-using applications. See cairo_glyph_path() for the"},{"type":"text","text":" "},{"type":"text","text":"“real” text path API in cairo."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/cairo\/contextref\/textpath(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Cairo\/documentation\/Cairo\/ContextRef\/textPath(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Adds closed paths for text to the current path.  The generated"},{"type":"text","text":" "},{"type":"text","text":"path if filled, achieves an effect similar to that of"},{"type":"text","text":" "},{"type":"text","text":"showText()."}],"kind":"symbol","metadata":{"role":"symbol","title":"textPath(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"textPath"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">)"}],"symbolKind":"method","externalID":"s:5Cairo15ContextProtocolPAAE8textPathyySPys4Int8VGF::SYNTHESIZED::s:5Cairo10ContextRefV","extendedModule":"Cairo","modules":[{"name":"Cairo"}]},"hierarchy":{"paths":[["doc:\/\/Cairo\/documentation\/Cairo","doc:\/\/Cairo\/documentation\/Cairo\/ContextRef","doc:\/\/Cairo\/documentation\/Cairo\/ContextRef\/ContextProtocol-Implementations"]]},"references":{"doc://Cairo/documentation/Cairo/ContextProtocol":{"role":"symbol","title":"ContextProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContextProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol"},{"type":"text","text":" protocol exposes the methods and properties of an underlying "},{"type":"codeVoice","code":"cairo_t"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"The default implementation of these can be found in the protocol extension below."},{"type":"text","text":" "},{"type":"text","text":"For a concrete class that implements these methods and properties, see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/Context"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Alternatively, use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextRef"},{"type":"text","text":" as a lighweight, "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference if you already have an instance you just want to use."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ContextProtocol"}],"url":"\/documentation\/cairo\/contextprotocol"},"doc://Cairo/documentation/Cairo/ContextRef/textPath(_:)":{"role":"symbol","title":"textPath(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"textPath"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Adds closed paths for text to the current path.  The generated"},{"type":"text","text":" "},{"type":"text","text":"path if filled, achieves an effect similar to that of"},{"type":"text","text":" "},{"type":"text","text":"showText()."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextRef\/textPath(_:)","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextref\/textpath(_:)"},"doc://Cairo/documentation/Cairo/ContextRef/ContextProtocol-Implementations":{"role":"collectionGroup","title":"ContextProtocol Implementations","abstract":[],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextRef\/ContextProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/cairo\/contextref\/contextprotocol-implementations"},"doc://Cairo/documentation/Cairo":{"role":"collection","title":"Cairo","abstract":[],"identifier":"doc:\/\/Cairo\/documentation\/Cairo","kind":"symbol","type":"topic","url":"\/documentation\/cairo"},"doc://Cairo/documentation/Cairo/ContextRef":{"role":"symbol","title":"ContextRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContextRef"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"cairo_t"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"cairo_t"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ContextRef"}],"url":"\/documentation\/cairo\/contextref"}}}