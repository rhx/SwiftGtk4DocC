{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"copyPage"},{"kind":"text","text":"()"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is a convenience method that simply calls cairo_surface_copy_page() on cr ’s target."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/cairo\/contextref\/copypage()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Cairo\/documentation\/Cairo\/ContextRef\/copyPage()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Emits the current page for backends that support multiple pages, but doesn’t clear it, so, the contents of the current page will be retained for the next page too. Use showPage() if you want to get an empty page after the emission."}],"kind":"symbol","metadata":{"role":"symbol","title":"copyPage()","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"copyPage"},{"kind":"text","text":"()"}],"symbolKind":"method","externalID":"s:5Cairo15ContextProtocolPAAE8copyPageyyF::SYNTHESIZED::s:5Cairo10ContextRefV","extendedModule":"Cairo","modules":[{"name":"Cairo"}]},"hierarchy":{"paths":[["doc:\/\/Cairo\/documentation\/Cairo","doc:\/\/Cairo\/documentation\/Cairo\/ContextRef","doc:\/\/Cairo\/documentation\/Cairo\/ContextRef\/ContextProtocol-Implementations"]]},"references":{"doc://Cairo/documentation/Cairo":{"role":"collection","title":"Cairo","abstract":[],"identifier":"doc:\/\/Cairo\/documentation\/Cairo","kind":"symbol","type":"topic","url":"\/documentation\/cairo"},"doc://Cairo/documentation/Cairo/ContextRef/copyPage()":{"role":"symbol","title":"copyPage()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"copyPage"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Emits the current page for backends that support multiple pages, but doesn’t clear it, so, the contents of the current page will be retained for the next page too. Use showPage() if you want to get an empty page after the emission."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextRef\/copyPage()","kind":"symbol","type":"topic","url":"\/documentation\/cairo\/contextref\/copypage()"},"doc://Cairo/documentation/Cairo/ContextRef":{"role":"symbol","title":"ContextRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContextRef"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ContextRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"cairo_t"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"codeVoice","code":"ContextProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"codeVoice","code":"ContextRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"cairo_t"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ContextRef"}],"url":"\/documentation\/cairo\/contextref"},"doc://Cairo/documentation/Cairo/ContextRef/ContextProtocol-Implementations":{"role":"collectionGroup","title":"ContextProtocol Implementations","abstract":[],"identifier":"doc:\/\/Cairo\/documentation\/Cairo\/ContextRef\/ContextProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/cairo\/contextref\/contextprotocol-implementations"}}}