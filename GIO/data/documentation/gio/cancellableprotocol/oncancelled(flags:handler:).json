{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onCancelled"},{"kind":"text","text":"("},{"kind":"externalParam","text":"flags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ConnectFlags","preciseIdentifier":"s:10GLibObject12ConnectFlagsV"},{"kind":"text","text":" = ConnectFlags(0), "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","identifier":"doc:\/\/GIO\/documentation\/GIO\/CancellableRef","preciseIdentifier":"s:3GIO14CancellableRefV","text":"CancellableRef"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"flags","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Flags"}]}]},{"name":"unownedSelf","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Reference to instance of self"}]}]},{"name":"handler","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The signal handler to call"},{"type":"text","text":" "},{"type":"text","text":"Run the given callback whenever the "},{"type":"codeVoice","code":"cancelled"},{"type":"text","text":" signal is emitted"}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Can be used by implementations of cancellable operations. If the"},{"type":"text","text":" "},{"type":"text","text":"operation is cancelled from another thread, the signal will be"},{"type":"text","text":" "},{"type":"text","text":"emitted in the thread that cancelled the operation, not the"},{"type":"text","text":" "},{"type":"text","text":"thread that is running the operation."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that disconnecting from this signal (or any signal) in a"},{"type":"text","text":" "},{"type":"text","text":"multi-threaded program is prone to race conditions. For instance"},{"type":"text","text":" "},{"type":"text","text":"it is possible that a signal handler may be invoked even after"},{"type":"text","text":" "},{"type":"text","text":"a call to "},{"type":"codeVoice","code":"g_signal_handler_disconnect()"},{"type":"text","text":" for that handler has"},{"type":"text","text":" "},{"type":"text","text":"already returned."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There is also a problem when cancellation happens right before"},{"type":"text","text":" "},{"type":"text","text":"connecting to the signal. If this happens the signal will"},{"type":"text","text":" "},{"type":"text","text":"unexpectedly not be emitted, and checking before connecting to"},{"type":"text","text":" "},{"type":"text","text":"the signal leaves a race condition where this is still happening."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In order to make it safe and easy to connect handlers there"},{"type":"text","text":" "},{"type":"text","text":"are two helper functions: "},{"type":"codeVoice","code":"g_cancellable_connect()"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_cancellable_disconnect()"},{"type":"text","text":" which protect against problems"},{"type":"text","text":" "},{"type":"text","text":"like this."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"An example of how to us this:"},{"type":"text","text":" "},{"type":"text","text":"(C Language Example):"}]},{"type":"codeListing","syntax":"C","code":["    \/\/ Make sure we don't do unnecessary work if already cancelled","    if (g_cancellable_set_error_if_cancelled (cancellable, error))","      return;","","    \/\/ Set up all the data needed to be able to handle cancellation","    \/\/ of the operation","    my_data = my_data_new (...);","","    id = 0;","    if (cancellable)","      id = g_cancellable_connect (cancellable,","    \t\t\t      G_CALLBACK (cancelled_handler)","    \t\t\t      data, NULL);","","    \/\/ cancellable operation here...","","    g_cancellable_disconnect (cancellable, id);","","    \/\/ cancelled_handler is never called after this, it is now safe","    \/\/ to free the data","    my_data_free (my_data);"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that the cancelled signal is emitted in the thread that"},{"type":"text","text":" "},{"type":"text","text":"the user cancelled from, which may be the main thread. So, the"},{"type":"text","text":" "},{"type":"text","text":"cancellable signal should not do something that can block."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This represents the underlying "},{"type":"codeVoice","code":"cancelled"},{"type":"text","text":" signal"}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gio\/cancellableprotocol\/oncancelled(flags:handler:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GIO\/documentation\/GIO\/CancellableProtocol\/onCancelled(flags:handler:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Emitted when the operation has been cancelled."}],"kind":"symbol","metadata":{"role":"symbol","title":"onCancelled(flags:handler:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onCancelled"},{"kind":"text","text":"("},{"kind":"externalParam","text":"flags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ConnectFlags","preciseIdentifier":"s:10GLibObject12ConnectFlagsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"CancellableRef","preciseIdentifier":"s:3GIO14CancellableRefV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"symbolKind":"method","externalID":"s:3GIO19CancellableProtocolPAAE11onCancelled5flags7handlerSi10GLibObject12ConnectFlagsV_yAA0B3RefVctF","extendedModule":"GIO","modules":[{"name":"GIO"}]},"hierarchy":{"paths":[["doc:\/\/GIO\/documentation\/GIO","doc:\/\/GIO\/documentation\/GIO\/CancellableProtocol"]]},"references":{"doc://GIO/documentation/GIO":{"role":"collection","title":"GIO","abstract":[],"identifier":"doc:\/\/GIO\/documentation\/GIO","kind":"symbol","type":"topic","url":"\/documentation\/gio"},"doc://GIO/documentation/GIO/CancellableProtocol/onCancelled(flags:handler:)":{"role":"symbol","title":"onCancelled(flags:handler:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onCancelled"},{"kind":"text","text":"("},{"kind":"externalParam","text":"flags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ConnectFlags","preciseIdentifier":"s:10GLibObject12ConnectFlagsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"CancellableRef","preciseIdentifier":"s:3GIO14CancellableRefV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Emitted when the operation has been cancelled."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/CancellableProtocol\/onCancelled(flags:handler:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/cancellableprotocol\/oncancelled(flags:handler:)"},"doc://GIO/documentation/GIO/CancellableRef":{"role":"symbol","title":"CancellableRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CancellableRef"}],"abstract":[{"type":"text","text":"GCancellable is a thread-safe operation cancellation stack used"},{"type":"text","text":" "},{"type":"text","text":"throughout GIO to allow for cancellation of synchronous and"},{"type":"text","text":" "},{"type":"text","text":"asynchronous operations."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/CancellableRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CancellableRef"}],"url":"\/documentation\/gio\/cancellableref"},"doc://GIO/documentation/GIO/CancellableProtocol":{"role":"symbol","title":"CancellableProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CancellableProtocol"}],"abstract":[{"type":"text","text":"GCancellable is a thread-safe operation cancellation stack used"},{"type":"text","text":" "},{"type":"text","text":"throughout GIO to allow for cancellation of synchronous and"},{"type":"text","text":" "},{"type":"text","text":"asynchronous operations."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/CancellableProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CancellableProtocol"}],"url":"\/documentation\/gio\/cancellableprotocol"}}}