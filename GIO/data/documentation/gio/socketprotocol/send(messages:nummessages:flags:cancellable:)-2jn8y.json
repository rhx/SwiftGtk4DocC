{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"CancellableT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"messages"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GOutputMessage"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"numMessages"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"flags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"cancellable"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CancellableT"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"CancellableT"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/GIO\/documentation\/GIO\/CancellableProtocol","preciseIdentifier":"s:3GIO19CancellableProtocolP","text":"CancellableProtocol"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"messages"},{"type":"text","text":" must point to an array of "},{"type":"codeVoice","code":"GOutputMessage"},{"type":"text","text":" structs and"},{"type":"text","text":" "},{"type":"codeVoice","code":"num_messages"},{"type":"text","text":" must be the length of this array. Each "},{"type":"codeVoice","code":"GOutputMessage"},{"type":"text","text":" "},{"type":"text","text":"contains an address to send the data to, and a pointer to an array of"},{"type":"text","text":" "},{"type":"codeVoice","code":"GOutputVector"},{"type":"text","text":" structs to describe the buffers that the data to be sent"},{"type":"text","text":" "},{"type":"text","text":"for each message will be gathered from. Using multiple "},{"type":"codeVoice","code":"GOutputVectors"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"more memory-efficient than manually copying data from multiple sources"},{"type":"text","text":" "},{"type":"text","text":"into a single buffer, and more network-efficient than making multiple"},{"type":"text","text":" "},{"type":"text","text":"calls to "},{"type":"codeVoice","code":"g_socket_send()"},{"type":"text","text":". Sending multiple messages in one go avoids the"},{"type":"text","text":" "},{"type":"text","text":"overhead of making a lot of syscalls in scenarios where a lot of data"},{"type":"text","text":" "},{"type":"text","text":"packets need to be sent (e.g. high-bandwidth video streaming over RTP\/UDP),"},{"type":"text","text":" "},{"type":"text","text":"or where the same data needs to be sent to multiple recipients."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"flags"},{"type":"text","text":" modify how the message is sent. The commonly available arguments"},{"type":"text","text":" "},{"type":"text","text":"for this are available in the "},{"type":"codeVoice","code":"GSocketMsgFlags"},{"type":"text","text":" enum, but the"},{"type":"text","text":" "},{"type":"text","text":"values there are the same as the system values, and the flags"},{"type":"text","text":" "},{"type":"text","text":"are passed in as-is, so you can pass in system-specific flags too."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the socket is in blocking mode the call will block until there is"},{"type":"text","text":" "},{"type":"text","text":"space for all the data in the socket queue. If there is no space available"},{"type":"text","text":" "},{"type":"text","text":"and the socket is in non-blocking mode a "},{"type":"codeVoice","code":"G_IO_ERROR_WOULD_BLOCK"},{"type":"text","text":" error"},{"type":"text","text":" "},{"type":"text","text":"will be returned if no data was written at all, otherwise the number of"},{"type":"text","text":" "},{"type":"text","text":"messages sent will be returned. To be notified when space is available,"},{"type":"text","text":" "},{"type":"text","text":"wait for the "},{"type":"codeVoice","code":"G_IO_OUT"},{"type":"text","text":" condition. Note though that you may still receive"},{"type":"text","text":" "},{"type":"codeVoice","code":"G_IO_ERROR_WOULD_BLOCK"},{"type":"text","text":" from "},{"type":"codeVoice","code":"g_socket_send()"},{"type":"text","text":" even if you were previously"},{"type":"text","text":" "},{"type":"text","text":"notified of a "},{"type":"codeVoice","code":"G_IO_OUT"},{"type":"text","text":" condition. (On Windows in particular, this is"},{"type":"text","text":" "},{"type":"text","text":"very common due to the way the underlying APIs work.)"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"On error -1 is returned and "},{"type":"codeVoice","code":"error"},{"type":"text","text":" is set accordingly. An error will only"},{"type":"text","text":" "},{"type":"text","text":"be returned if zero messages could be sent; otherwise the number of messages"},{"type":"text","text":" "},{"type":"text","text":"successfully sent before the error will be returned."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gio\/socketprotocol\/send(messages:nummessages:flags:cancellable:)-2jn8y"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GIO\/documentation\/GIO\/SocketProtocol\/send(messages:numMessages:flags:cancellable:)-2jn8y","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Send multiple data messages from "},{"type":"codeVoice","code":"socket"},{"type":"text","text":" in one go.  This is the most"},{"type":"text","text":" "},{"type":"text","text":"complicated and fully-featured version of this call. For easier use, see"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_socket_send()"},{"type":"text","text":", "},{"type":"codeVoice","code":"g_socket_send_to()"},{"type":"text","text":", and "},{"type":"codeVoice","code":"g_socket_send_message()"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"role":"symbol","title":"send(messages:numMessages:flags:cancellable:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"CancellableT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"messages"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GOutputMessage"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"numMessages"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"flags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"cancellable"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CancellableT"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"symbolKind":"method","externalID":"s:3GIO14SocketProtocolPAAE4send8messages11numMessages5flags11cancellableSiSpySo15_GOutputMessageVGSg_S2iqd__SgtKAA011CancellableC0Rd__lF","extendedModule":"GIO","modules":[{"name":"GIO"}]},"hierarchy":{"paths":[["doc:\/\/GIO\/documentation\/GIO","doc:\/\/GIO\/documentation\/GIO\/SocketProtocol"]]},"references":{"doc://GIO/documentation/GIO/CancellableProtocol":{"role":"symbol","title":"CancellableProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CancellableProtocol"}],"abstract":[{"type":"text","text":"GCancellable is a thread-safe operation cancellation stack used"},{"type":"text","text":" "},{"type":"text","text":"throughout GIO to allow for cancellation of synchronous and"},{"type":"text","text":" "},{"type":"text","text":"asynchronous operations."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/CancellableProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CancellableProtocol"}],"url":"\/documentation\/gio\/cancellableprotocol"},"doc://GIO/documentation/GIO/SocketProtocol":{"role":"symbol","title":"SocketProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SocketProtocol"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GSocket"},{"type":"text","text":" is a low-level networking primitive. It is a more or less"},{"type":"text","text":" "},{"type":"text","text":"direct mapping of the BSD socket API in a portable GObject based API."},{"type":"text","text":" "},{"type":"text","text":"It supports both the UNIX socket implementations and winsock2 on Windows."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SocketProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SocketProtocol"}],"url":"\/documentation\/gio\/socketprotocol"},"doc://GIO/documentation/GIO/SocketProtocol/send(messages:numMessages:flags:cancellable:)-2jn8y":{"role":"symbol","title":"send(messages:numMessages:flags:cancellable:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"CancellableT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"messages"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GOutputMessage"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"numMessages"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"flags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"cancellable"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CancellableT"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Send multiple data messages from "},{"type":"codeVoice","code":"socket"},{"type":"text","text":" in one go.  This is the most"},{"type":"text","text":" "},{"type":"text","text":"complicated and fully-featured version of this call. For easier use, see"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_socket_send()"},{"type":"text","text":", "},{"type":"codeVoice","code":"g_socket_send_to()"},{"type":"text","text":", and "},{"type":"codeVoice","code":"g_socket_send_message()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SocketProtocol\/send(messages:numMessages:flags:cancellable:)-2jn8y","kind":"symbol","type":"topic","url":"\/documentation\/gio\/socketprotocol\/send(messages:nummessages:flags:cancellable:)-2jn8y"},"doc://GIO/documentation/GIO":{"role":"collection","title":"GIO","abstract":[],"identifier":"doc:\/\/GIO\/documentation\/GIO","kind":"symbol","type":"topic","url":"\/documentation\/gio"}}}