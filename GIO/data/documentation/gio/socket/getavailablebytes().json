{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getAvailableBytes"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"gssize","preciseIdentifier":"c:glibconfig.h@T@gssize"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"socket"},{"type":"text","text":" is a UDP or SCTP socket, this will return the size of"},{"type":"text","text":" "},{"type":"text","text":"just the next packet, even if additional packets are buffered after"},{"type":"text","text":" "},{"type":"text","text":"that one."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that on Windows, this function is rather inefficient in the"},{"type":"text","text":" "},{"type":"text","text":"UDP case, and so if you know any plausible upper bound on the size"},{"type":"text","text":" "},{"type":"text","text":"of the incoming packet, it is better to just do a"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_socket_receive()"},{"type":"text","text":" with a buffer of that size, rather than calling"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_socket_get_available_bytes()"},{"type":"text","text":" first and then doing a receive of"},{"type":"text","text":" "},{"type":"text","text":"exactly the right size."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gio\/socket\/getavailablebytes()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GIO\/documentation\/GIO\/Socket\/getAvailableBytes()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Get the amount of data pending in the OS input buffer, without blocking."}],"kind":"symbol","metadata":{"role":"symbol","title":"getAvailableBytes()","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getAvailableBytes"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"gssize","preciseIdentifier":"c:glibconfig.h@T@gssize"}],"symbolKind":"method","externalID":"s:3GIO14SocketProtocolPAAE17getAvailableBytesSiyF::SYNTHESIZED::s:3GIO6SocketC","extendedModule":"GIO","modules":[{"name":"GIO"}]},"hierarchy":{"paths":[["doc:\/\/GIO\/documentation\/GIO","doc:\/\/GIO\/documentation\/GIO\/Socket","doc:\/\/GIO\/documentation\/GIO\/Socket\/SocketProtocol-Implementations"]]},"references":{"doc://GIO/documentation/GIO":{"role":"collection","title":"GIO","abstract":[],"identifier":"doc:\/\/GIO\/documentation\/GIO","kind":"symbol","type":"topic","url":"\/documentation\/gio"},"doc://GIO/documentation/GIO/Socket/getAvailableBytes()":{"role":"symbol","title":"getAvailableBytes()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getAvailableBytes"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"gssize","preciseIdentifier":"c:glibconfig.h@T@gssize"}],"abstract":[{"type":"text","text":"Get the amount of data pending in the OS input buffer, without blocking."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/Socket\/getAvailableBytes()","kind":"symbol","type":"topic","url":"\/documentation\/gio\/socket\/getavailablebytes()"},"doc://GIO/documentation/GIO/Socket/SocketProtocol-Implementations":{"role":"collectionGroup","title":"SocketProtocol Implementations","abstract":[],"identifier":"doc:\/\/GIO\/documentation\/GIO\/Socket\/SocketProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gio\/socket\/socketprotocol-implementations"},"doc://GIO/documentation/GIO/Socket":{"role":"symbol","title":"Socket","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Socket"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GSocket"},{"type":"text","text":" is a low-level networking primitive. It is a more or less"},{"type":"text","text":" "},{"type":"text","text":"direct mapping of the BSD socket API in a portable GObject based API."},{"type":"text","text":" "},{"type":"text","text":"It supports both the UNIX socket implementations and winsock2 on Windows."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/Socket","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Socket"}],"url":"\/documentation\/gio\/socket"}}}