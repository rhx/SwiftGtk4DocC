{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TaskProtocol"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/GIO\/documentation\/GIO\/AsyncResultProtocol","preciseIdentifier":"s:3GIO19AsyncResultProtocolP","text":"AsyncResultProtocol"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ObjectProtocol","preciseIdentifier":"s:10GLibObject0B8ProtocolP"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"Asynchronous-operations","level":2,"type":"heading","text":"Asynchronous operations"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The most common usage of "},{"type":"codeVoice","code":"GTask"},{"type":"text","text":" is as a "},{"type":"codeVoice","code":"GAsyncResult"},{"type":"text","text":", to"},{"type":"text","text":" "},{"type":"text","text":"manage data during an asynchronous operation. You call"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_task_new()"},{"type":"text","text":" in the “start” method, followed by"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_task_set_task_data()"},{"type":"text","text":" and the like if you need to keep some"},{"type":"text","text":" "},{"type":"text","text":"additional data associated with the task, and then pass the"},{"type":"text","text":" "},{"type":"text","text":"task object around through your asynchronous operation."},{"type":"text","text":" "},{"type":"text","text":"Eventually, you will call a method such as"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_task_return_pointer()"},{"type":"text","text":" or "},{"type":"codeVoice","code":"g_task_return_error()"},{"type":"text","text":", which will"},{"type":"text","text":" "},{"type":"text","text":"save the value you give it and then invoke the task’s callback"},{"type":"text","text":" "},{"type":"text","text":"function in the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"#g-main-context-push-thread-default"},{"type":"text","text":" "},{"type":"text","text":"where it was created (waiting until the next iteration of the main"},{"type":"text","text":" "},{"type":"text","text":"loop first, if necessary). The caller will pass the "},{"type":"codeVoice","code":"GTask"},{"type":"text","text":" back to"},{"type":"text","text":" "},{"type":"text","text":"the operation’s finish function (as a "},{"type":"codeVoice","code":"GAsyncResult"},{"type":"text","text":"), and you can"},{"type":"text","text":" "},{"type":"text","text":"use "},{"type":"codeVoice","code":"g_task_propagate_pointer()"},{"type":"text","text":" or the like to extract the"},{"type":"text","text":" "},{"type":"text","text":"return value."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using "},{"type":"codeVoice","code":"GTask"},{"type":"text","text":" requires the thread-default "},{"type":"codeVoice","code":"GMainContext"},{"type":"text","text":" from when the"},{"type":"text","text":" "},{"type":"codeVoice","code":"GTask"},{"type":"text","text":" was constructed to be running at least until the task has completed"},{"type":"text","text":" "},{"type":"text","text":"and its data has been freed."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If a "},{"type":"codeVoice","code":"GTask"},{"type":"text","text":" has been constructed and its callback set, it is an error to"},{"type":"text","text":" "},{"type":"text","text":"not call "},{"type":"codeVoice","code":"g_task_return_*()"},{"type":"text","text":" on it. GLib will warn at runtime if this happens"},{"type":"text","text":" "},{"type":"text","text":"(since 2.76)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here is an example for using GTask as a GAsyncResult:"},{"type":"text","text":" "},{"type":"text","text":"(C Language Example):"}]},{"type":"codeListing","syntax":"C","code":["    typedef struct {","      CakeFrostingType frosting;","      char *message;","    } DecorationData;","","    static void","    decoration_data_free (DecorationData *decoration)","    {","      g_free (decoration->message);","      g_slice_free (DecorationData, decoration);","    }","","    static void","    baked_cb (Cake     *cake,","              gpointer  user_data)","    {","      GTask *task = user_data;","      DecorationData *decoration = g_task_get_task_data (task);","      GError *error = NULL;","","      if (cake == NULL)","        {","          g_task_return_new_error (task, BAKER_ERROR, BAKER_ERROR_NO_FLOUR,","                                   \"Go to the supermarket\");","          g_object_unref (task);","          return;","        }","","      if (!cake_decorate (cake, decoration->frosting, decoration->message, &error))","        {","          g_object_unref (cake);","          \/\/ g_task_return_error() takes ownership of error","          g_task_return_error (task, error);","          g_object_unref (task);","          return;","        }","","      g_task_return_pointer (task, cake, g_object_unref);","      g_object_unref (task);","    }","","    void","    baker_bake_cake_async (Baker               *self,","                           guint                radius,","                           CakeFlavor           flavor,","                           CakeFrostingType     frosting,","                           const char          *message,","                           GCancellable        *cancellable,","                           GAsyncReadyCallback  callback,","                           gpointer             user_data)","    {","      GTask *task;","      DecorationData *decoration;","      Cake  *cake;","","      task = g_task_new (self, cancellable, callback, user_data);","      if (radius < 3)","        {","          g_task_return_new_error (task, BAKER_ERROR, BAKER_ERROR_TOO_SMALL,","                                   \"%ucm radius cakes are silly\",","                                   radius);","          g_object_unref (task);","          return;","        }","","      cake = _baker_get_cached_cake (self, radius, flavor, frosting, message);","      if (cake != NULL)","        {","          \/\/ _baker_get_cached_cake() returns a reffed cake","          g_task_return_pointer (task, cake, g_object_unref);","          g_object_unref (task);","          return;","        }","","      decoration = g_slice_new (DecorationData);","      decoration->frosting = frosting;","      decoration->message = g_strdup (message);","      g_task_set_task_data (task, decoration, (GDestroyNotify) decoration_data_free);","","      _baker_begin_cake (self, radius, flavor, cancellable, baked_cb, task);","    }","","    Cake *","    baker_bake_cake_finish (Baker         *self,","                            GAsyncResult  *result,","                            GError       **error)","    {","      g_return_val_if_fail (g_task_is_valid (result, self), NULL);","","      return g_task_propagate_pointer (G_TASK (result), error);","    }"]},{"anchor":"Chained-asynchronous-operations","level":2,"type":"heading","text":"Chained asynchronous operations"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GTask"},{"type":"text","text":" also tries to simplify asynchronous operations that"},{"type":"text","text":" "},{"type":"text","text":"internally chain together several smaller asynchronous"},{"type":"text","text":" "},{"type":"text","text":"operations. "},{"type":"codeVoice","code":"g_task_get_cancellable()"},{"type":"text","text":", "},{"type":"codeVoice","code":"g_task_get_context()"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":"g_task_get_priority()"},{"type":"text","text":" allow you to get back the task’s"},{"type":"text","text":" "},{"type":"codeVoice","code":"GCancellable"},{"type":"text","text":", "},{"type":"codeVoice","code":"GMainContext"},{"type":"text","text":", and "},{"type":"reference","isActive":true,"identifier":"#io-priority"},{"type":"text","text":" "},{"type":"text","text":"when starting a new subtask, so you don’t have to keep track"},{"type":"text","text":" "},{"type":"text","text":"of them yourself. "},{"type":"codeVoice","code":"g_task_attach_source()"},{"type":"text","text":" simplifies the case"},{"type":"text","text":" "},{"type":"text","text":"of waiting for a source to fire (automatically using the correct"},{"type":"text","text":" "},{"type":"codeVoice","code":"GMainContext"},{"type":"text","text":" and priority)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here is an example for chained asynchronous operations:"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"(C Language Example):"}]},{"type":"codeListing","syntax":"C","code":["    typedef struct {","      Cake *cake;","      CakeFrostingType frosting;","      char *message;","    } BakingData;","","    static void","    decoration_data_free (BakingData *bd)","    {","      if (bd->cake)","        g_object_unref (bd->cake);","      g_free (bd->message);","      g_slice_free (BakingData, bd);","    }","","    static void","    decorated_cb (Cake         *cake,","                  GAsyncResult *result,","                  gpointer      user_data)","    {","      GTask *task = user_data;","      GError *error = NULL;","","      if (!cake_decorate_finish (cake, result, &error))","        {","          g_object_unref (cake);","          g_task_return_error (task, error);","          g_object_unref (task);","          return;","        }","","      \/\/ baking_data_free() will drop its ref on the cake, so we have to","      \/\/ take another here to give to the caller.","      g_task_return_pointer (task, g_object_ref (cake), g_object_unref);","      g_object_unref (task);","    }","","    static gboolean","    decorator_ready (gpointer user_data)","    {","      GTask *task = user_data;","      BakingData *bd = g_task_get_task_data (task);","","      cake_decorate_async (bd->cake, bd->frosting, bd->message,","                           g_task_get_cancellable (task),","                           decorated_cb, task);","","      return G_SOURCE_REMOVE;","    }","","    static void","    baked_cb (Cake     *cake,","              gpointer  user_data)","    {","      GTask *task = user_data;","      BakingData *bd = g_task_get_task_data (task);","      GError *error = NULL;","","      if (cake == NULL)","        {","          g_task_return_new_error (task, BAKER_ERROR, BAKER_ERROR_NO_FLOUR,","                                   \"Go to the supermarket\");","          g_object_unref (task);","          return;","        }","","      bd->cake = cake;","","      \/\/ Bail out now if the user has already cancelled","      if (g_task_return_error_if_cancelled (task))","        {","          g_object_unref (task);","          return;","        }","","      if (cake_decorator_available (cake))","        decorator_ready (task);","      else","        {","          GSource *source;","","          source = cake_decorator_wait_source_new (cake);","          \/\/ Attach @source to @task's GMainContext and have it call","          \/\/ decorator_ready() when it is ready.","          g_task_attach_source (task, source, decorator_ready);","          g_source_unref (source);","        }","    }","","    void","    baker_bake_cake_async (Baker               *self,","                           guint                radius,","                           CakeFlavor           flavor,","                           CakeFrostingType     frosting,","                           const char          *message,","                           gint                 priority,","                           GCancellable        *cancellable,","                           GAsyncReadyCallback  callback,","                           gpointer             user_data)","    {","      GTask *task;","      BakingData *bd;","","      task = g_task_new (self, cancellable, callback, user_data);","      g_task_set_priority (task, priority);","","      bd = g_slice_new0 (BakingData);","      bd->frosting = frosting;","      bd->message = g_strdup (message);","      g_task_set_task_data (task, bd, (GDestroyNotify) baking_data_free);","","      _baker_begin_cake (self, radius, flavor, cancellable, baked_cb, task);","    }","","    Cake *","    baker_bake_cake_finish (Baker         *self,","                            GAsyncResult  *result,","                            GError       **error)","    {","      g_return_val_if_fail (g_task_is_valid (result, self), NULL);","","      return g_task_propagate_pointer (G_TASK (result), error);","    }"]},{"anchor":"Asynchronous-operations-from-synchronous-ones","level":2,"type":"heading","text":"Asynchronous operations from synchronous ones"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use "},{"type":"codeVoice","code":"g_task_run_in_thread()"},{"type":"text","text":" to turn a synchronous"},{"type":"text","text":" "},{"type":"text","text":"operation into an asynchronous one, by running it in a thread."},{"type":"text","text":" "},{"type":"text","text":"When it completes, the result will be dispatched to the"},{"type":"text","text":" "},{"overridingTitleInlineContent":[{"type":"text","text":"thread-default main context"}],"isActive":true,"type":"reference","identifier":"#g-main-context-push-thread-default","overridingTitle":"thread-default main context"},{"type":"text","text":" "},{"type":"text","text":"where the "},{"type":"codeVoice","code":"GTask"},{"type":"text","text":" was created."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Running a task in a thread:"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"(C Language Example):"}]},{"type":"codeListing","syntax":"C","code":["    typedef struct {","      guint radius;","      CakeFlavor flavor;","      CakeFrostingType frosting;","      char *message;","    } CakeData;","","    static void","    cake_data_free (CakeData *cake_data)","    {","      g_free (cake_data->message);","      g_slice_free (CakeData, cake_data);","    }","","    static void","    bake_cake_thread (GTask         *task,","                      gpointer       source_object,","                      gpointer       task_data,","                      GCancellable  *cancellable)","    {","      Baker *self = source_object;","      CakeData *cake_data = task_data;","      Cake *cake;","      GError *error = NULL;","","      cake = bake_cake (baker, cake_data->radius, cake_data->flavor,","                        cake_data->frosting, cake_data->message,","                        cancellable, &error);","      if (cake)","        g_task_return_pointer (task, cake, g_object_unref);","      else","        g_task_return_error (task, error);","    }","","    void","    baker_bake_cake_async (Baker               *self,","                           guint                radius,","                           CakeFlavor           flavor,","                           CakeFrostingType     frosting,","                           const char          *message,","                           GCancellable        *cancellable,","                           GAsyncReadyCallback  callback,","                           gpointer             user_data)","    {","      CakeData *cake_data;","      GTask *task;","","      cake_data = g_slice_new (CakeData);","      cake_data->radius = radius;","      cake_data->flavor = flavor;","      cake_data->frosting = frosting;","      cake_data->message = g_strdup (message);","      task = g_task_new (self, cancellable, callback, user_data);","      g_task_set_task_data (task, cake_data, (GDestroyNotify) cake_data_free);","      g_task_run_in_thread (task, bake_cake_thread);","      g_object_unref (task);","    }","","    Cake *","    baker_bake_cake_finish (Baker         *self,","                            GAsyncResult  *result,","                            GError       **error)","    {","      g_return_val_if_fail (g_task_is_valid (result, self), NULL);","","      return g_task_propagate_pointer (G_TASK (result), error);","    }"]},{"anchor":"Adding-cancellability-to-uncancellable-tasks","level":2,"type":"heading","text":"Adding cancellability to uncancellable tasks"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Finally, "},{"type":"codeVoice","code":"g_task_run_in_thread()"},{"type":"text","text":" and "},{"type":"codeVoice","code":"g_task_run_in_thread_sync()"},{"type":"text","text":" "},{"type":"text","text":"can be used to turn an uncancellable operation into a"},{"type":"text","text":" "},{"type":"text","text":"cancellable one. If you call "},{"type":"codeVoice","code":"g_task_set_return_on_cancel()"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"passing "},{"type":"codeVoice","code":"true"},{"type":"text","text":", then if the task’s "},{"type":"codeVoice","code":"GCancellable"},{"type":"text","text":" is cancelled,"},{"type":"text","text":" "},{"type":"text","text":"it will return control back to the caller immediately, while"},{"type":"text","text":" "},{"type":"text","text":"allowing the task thread to continue running in the background"},{"type":"text","text":" "},{"type":"text","text":"(and simply discarding its result when it finally does finish)."},{"type":"text","text":" "},{"type":"text","text":"Provided that the task thread is careful about how it uses"},{"type":"text","text":" "},{"type":"text","text":"locks and other externally-visible resources, this allows you"},{"type":"text","text":" "},{"type":"text","text":"to make “GLib-friendly” asynchronous and cancellable"},{"type":"text","text":" "},{"type":"text","text":"synchronous variants of blocking APIs."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Cancelling a task:"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"(C Language Example):"}]},{"type":"codeListing","syntax":"C","code":["    static void","    bake_cake_thread (GTask         *task,","                      gpointer       source_object,","                      gpointer       task_data,","                      GCancellable  *cancellable)","    {","      Baker *self = source_object;","      CakeData *cake_data = task_data;","      Cake *cake;","      GError *error = NULL;","","      cake = bake_cake (baker, cake_data->radius, cake_data->flavor,","                        cake_data->frosting, cake_data->message,","                        &error);","      if (error)","        {","          g_task_return_error (task, error);","          return;","        }","","      \/\/ If the task has already been cancelled, then we don't want to add","      \/\/ the cake to the cake cache. Likewise, we don't  want to have the","      \/\/ task get cancelled in the middle of updating the cache.","      \/\/ g_task_set_return_on_cancel() will return %TRUE here if it managed","      \/\/ to disable return-on-cancel, or %FALSE if the task was cancelled","      \/\/ before it could.","      if (g_task_set_return_on_cancel (task, FALSE))","        {","          \/\/ If the caller cancels at this point, their","          \/\/ GAsyncReadyCallback won't be invoked until we return,","          \/\/ so we don't have to worry that this code will run at","          \/\/ the same time as that code does. But if there were","          \/\/ other functions that might look at the cake cache,","          \/\/ then we'd probably need a GMutex here as well.","          baker_add_cake_to_cache (baker, cake);","          g_task_return_pointer (task, cake, g_object_unref);","        }","    }","","    void","    baker_bake_cake_async (Baker               *self,","                           guint                radius,","                           CakeFlavor           flavor,","                           CakeFrostingType     frosting,","                           const char          *message,","                           GCancellable        *cancellable,","                           GAsyncReadyCallback  callback,","                           gpointer             user_data)","    {","      CakeData *cake_data;","      GTask *task;","","      cake_data = g_slice_new (CakeData);","","      ...","","      task = g_task_new (self, cancellable, callback, user_data);","      g_task_set_task_data (task, cake_data, (GDestroyNotify) cake_data_free);","      g_task_set_return_on_cancel (task, TRUE);","      g_task_run_in_thread (task, bake_cake_thread);","    }","","    Cake *","    baker_bake_cake_sync (Baker               *self,","                          guint                radius,","                          CakeFlavor           flavor,","                          CakeFrostingType     frosting,","                          const char          *message,","                          GCancellable        *cancellable,","                          GError             **error)","    {","      CakeData *cake_data;","      GTask *task;","      Cake *cake;","","      cake_data = g_slice_new (CakeData);","","      ...","","      task = g_task_new (self, cancellable, NULL, NULL);","      g_task_set_task_data (task, cake_data, (GDestroyNotify) cake_data_free);","      g_task_set_return_on_cancel (task, TRUE);","      g_task_run_in_thread_sync (task, bake_cake_thread);","","      cake = g_task_propagate_pointer (task, error);","      g_object_unref (task);","      return cake;","    }"]},{"anchor":"Porting-from-GSimpleAsyncResult","level":2,"type":"heading","text":"Porting from GSimpleAsyncResult"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GTask"},{"type":"text","text":"’s API attempts to be simpler than "},{"type":"codeVoice","code":"GSimpleAsyncResult"},{"type":"text","text":"’s"},{"type":"text","text":" "},{"type":"text","text":"in several ways:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You can save task-specific data with "},{"type":"codeVoice","code":"g_task_set_task_data()"},{"type":"text","text":", and"},{"type":"text","text":" "},{"type":"text","text":"retrieve it later with "},{"type":"codeVoice","code":"g_task_get_task_data()"},{"type":"text","text":". This replaces the"},{"type":"text","text":" "},{"type":"text","text":"abuse of "},{"type":"codeVoice","code":"g_simple_async_result_set_op_res_gpointer()"},{"type":"text","text":" for the same"},{"type":"text","text":" "},{"type":"text","text":"purpose with "},{"type":"codeVoice","code":"GSimpleAsyncResult"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In addition to the task data, "},{"type":"codeVoice","code":"GTask"},{"type":"text","text":" also keeps track of the"},{"type":"text","text":" "},{"overridingTitleInlineContent":[{"type":"text","text":"priority"}],"isActive":true,"type":"reference","identifier":"#io-priority","overridingTitle":"priority"},{"type":"text","text":", "},{"type":"codeVoice","code":"GCancellable"},{"type":"text","text":", and"},{"type":"text","text":" "},{"type":"codeVoice","code":"GMainContext"},{"type":"text","text":" associated with the task, so tasks that consist of"},{"type":"text","text":" "},{"type":"text","text":"a chain of simpler asynchronous operations will have easy access"},{"type":"text","text":" "},{"type":"text","text":"to those values when starting each sub-task."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"g_task_return_error_if_cancelled()"},{"type":"text","text":" provides simplified"},{"type":"text","text":" "},{"type":"text","text":"handling for cancellation. In addition, cancellation"},{"type":"text","text":" "},{"type":"text","text":"overrides any other "},{"type":"codeVoice","code":"GTask"},{"type":"text","text":" return value by default, like"},{"type":"text","text":" "},{"type":"codeVoice","code":"GSimpleAsyncResult"},{"type":"text","text":" does when"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_simple_async_result_set_check_cancellable()"},{"type":"text","text":" is called."},{"type":"text","text":" "},{"type":"text","text":"(You can use "},{"type":"codeVoice","code":"g_task_set_check_cancellable()"},{"type":"text","text":" to turn off that"},{"type":"text","text":" "},{"type":"text","text":"behavior.) On the other hand, "},{"type":"codeVoice","code":"g_task_run_in_thread()"},{"type":"text","text":" "},{"type":"text","text":"guarantees that it will always run your"},{"type":"text","text":" "},{"type":"codeVoice","code":"task_func"},{"type":"text","text":", even if the task’s "},{"type":"codeVoice","code":"GCancellable"},{"type":"text","text":" "},{"type":"text","text":"is already cancelled before the task gets a chance to run;"},{"type":"text","text":" "},{"type":"text","text":"you can start your "},{"type":"codeVoice","code":"task_func"},{"type":"text","text":" with a"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_task_return_error_if_cancelled()"},{"type":"text","text":" check if you need the"},{"type":"text","text":" "},{"type":"text","text":"old behavior."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The “return” methods (eg, "},{"type":"codeVoice","code":"g_task_return_pointer()"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"automatically cause the task to be “completed” as well, and"},{"type":"text","text":" "},{"type":"text","text":"there is no need to worry about the “complete” vs “complete"},{"type":"text","text":" "},{"type":"text","text":"in idle” distinction. ("},{"type":"codeVoice","code":"GTask"},{"type":"text","text":" automatically figures out"},{"type":"text","text":" "},{"type":"text","text":"whether the task’s callback can be invoked directly, or"},{"type":"text","text":" "},{"type":"text","text":"if it needs to be sent to another "},{"type":"codeVoice","code":"GMainContext"},{"type":"text","text":", or delayed"},{"type":"text","text":" "},{"type":"text","text":"until the next iteration of the current "},{"type":"codeVoice","code":"GMainContext"},{"type":"text","text":".)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The “finish” functions for "},{"type":"codeVoice","code":"GTask"},{"type":"text","text":" based operations are generally"},{"type":"text","text":" "},{"type":"text","text":"much simpler than "},{"type":"codeVoice","code":"GSimpleAsyncResult"},{"type":"text","text":" ones, normally consisting"},{"type":"text","text":" "},{"type":"text","text":"of only a single call to "},{"type":"codeVoice","code":"g_task_propagate_pointer()"},{"type":"text","text":" or the like."},{"type":"text","text":" "},{"type":"text","text":"Since "},{"type":"codeVoice","code":"g_task_propagate_pointer()"},{"type":"text","text":" “steals” the return value from"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"GTask"},{"type":"text","text":", it is not necessary to juggle pointers around to"},{"type":"text","text":" "},{"type":"text","text":"prevent it from being freed twice."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"With "},{"type":"codeVoice","code":"GSimpleAsyncResult"},{"type":"text","text":", it was common to call"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_simple_async_result_propagate_error()"},{"type":"text","text":" from the"},{"type":"text","text":" "},{"type":"codeVoice","code":"_finish()"},{"type":"text","text":" wrapper function, and have"},{"type":"text","text":" "},{"type":"text","text":"virtual method implementations only deal with successful"},{"type":"text","text":" "},{"type":"text","text":"returns. This behavior is deprecated, because it makes it"},{"type":"text","text":" "},{"type":"text","text":"difficult for a subclass to chain to a parent class’s async"},{"type":"text","text":" "},{"type":"text","text":"methods. Instead, the wrapper function should just be a"},{"type":"text","text":" "},{"type":"text","text":"simple wrapper, and the virtual method should call an"},{"type":"text","text":" "},{"type":"text","text":"appropriate "},{"type":"codeVoice","code":"g_task_propagate_"},{"type":"text","text":" function."},{"type":"text","text":" "},{"type":"text","text":"Note that wrapper methods can now use"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_async_result_legacy_propagate_error()"},{"type":"text","text":" to do old-style"},{"type":"text","text":" "},{"type":"codeVoice","code":"GSimpleAsyncResult"},{"type":"text","text":" error-returning behavior, and"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_async_result_is_tagged()"},{"type":"text","text":" to check if a result is tagged as"},{"type":"text","text":" "},{"type":"text","text":"having come from the "},{"type":"codeVoice","code":"_async()"},{"type":"text","text":" wrapper"},{"type":"text","text":" "},{"type":"text","text":"function (for “short-circuit” results, such as when passing"},{"type":"text","text":" "},{"type":"text","text":"0 to "},{"type":"codeVoice","code":"g_input_stream_read_async()"},{"type":"text","text":")."}]}]}]},{"anchor":"Thread-safety-considerations","level":2,"type":"heading","text":"Thread-safety considerations"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Due to some infelicities in the API design, there is a"},{"type":"text","text":" "},{"type":"text","text":"thread-safety concern that users of GTask have to be aware of:"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the "},{"type":"codeVoice","code":"main"},{"type":"text","text":" thread drops its last reference to the source object"},{"type":"text","text":" "},{"type":"text","text":"or the task data before the task is finalized, then the finalizers"},{"type":"text","text":" "},{"type":"text","text":"of these objects may be called on the worker thread."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is a problem if the finalizers use non-threadsafe API, and"},{"type":"text","text":" "},{"type":"text","text":"can lead to hard-to-debug crashes. Possible workarounds include:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Clear task data in a signal handler for "},{"type":"codeVoice","code":"notify"},{"type":"text","text":"completed``"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Keep iterating a main context in the main thread and defer"},{"type":"text","text":" "},{"type":"text","text":"dropping the reference to the source object to that main"},{"type":"text","text":" "},{"type":"text","text":"context when the task is finalized"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"TaskProtocol"},{"type":"text","text":" protocol exposes the methods and properties of an underlying "},{"type":"codeVoice","code":"GTask"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"The default implementation of these can be found in the protocol extension below."},{"type":"text","text":" "},{"type":"text","text":"For a concrete class that implements these methods and properties, see "},{"type":"codeVoice","code":"Task"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Alternatively, use "},{"type":"codeVoice","code":"TaskRef"},{"type":"text","text":" as a lighweight, "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference if you already have an instance you just want to use."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gio\/taskprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GIO\/documentation\/GIO\/AsyncResultProtocol","doc:\/\/GIO\/4GLib14PointerWrapperP","doc:\/\/GIO\/10GLibObject0B8ProtocolP"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/GIO\/documentation\/GIO\/Task","doc:\/\/GIO\/documentation\/GIO\/TaskRef"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"identifier":{"url":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GTask"},{"type":"text","text":" represents and manages a cancellable “task”."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TaskProtocol"}],"title":"TaskProtocol","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:3GIO12TaskProtocolP","modules":[{"name":"GIO"}],"navigatorTitle":[{"kind":"identifier","text":"TaskProtocol"}]},"hierarchy":{"paths":[["doc:\/\/GIO\/documentation\/GIO"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/cancellable","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/checkCancellable","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/completed","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/context","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/name","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/priority","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/returnOnCancel","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/sourceObject","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/sourceTag","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/taskData","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/task_ptr-2ullq"]},{"title":"Instance Methods","identifiers":["doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/attach(source:callback:)","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/bind(property:to:_:flags:transformFrom:transformTo:)","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/get(property:)","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/getCancellable()","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/getCheckCancellable()","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/getCompleted()","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/getContext()","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/getName()","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/getPriority()","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/getReturnOnCancel()","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/getSourceObject()","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/getSourceTag()","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/getTaskData()","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/hadError()","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/propagate(value:)","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/propagateBoolean()","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/propagateInt()","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/propagatePointer()","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/returnBoolean(result:)","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/returnErrorIfCancelled()","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/returnInt(result:)","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/returnPointer(result:resultDestroy:)","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/returnValue(result:)-2zxxe","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/returnValue(result:)-8epah","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/return_(error:)","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/runInThread(taskFunc:)","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/runInThreadSync(taskFunc:)","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/set(checkCancellable:)","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/set(name:)","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/set(priority:)","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/set(property:value:)","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/set(returnOnCancel:)","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/set(sourceTag:)","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/set(taskData:taskDataDestroy:)","doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/setStatic(name:)"]}],"references":{"doc://GIO/documentation/GIO/TaskProtocol/context":{"role":"symbol","title":"context","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MainContextRef","preciseIdentifier":"s:4GLib14MainContextRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Gets the "},{"type":"codeVoice","code":"GMainContext"},{"type":"text","text":" that "},{"type":"codeVoice","code":"task"},{"type":"text","text":" will return its result in (that"},{"type":"text","text":" "},{"type":"text","text":"is, the context that was the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"#g-main-context-push-thread-default"},{"type":"text","text":" "},{"type":"text","text":"at the point when "},{"type":"codeVoice","code":"task"},{"type":"text","text":" was created)."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/context","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/context"},"doc://GIO/10GLibObject0B8ProtocolP":{"type":"unresolvable","title":"GLibObject.ObjectProtocol","identifier":"doc:\/\/GIO\/10GLibObject0B8ProtocolP"},"doc://GIO/documentation/GIO/TaskProtocol/getCheckCancellable()":{"role":"symbol","title":"getCheckCancellable()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCheckCancellable"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Gets "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s check-cancellable flag. See"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_task_set_check_cancellable()"},{"type":"text","text":" for more details."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/getCheckCancellable()","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/getcheckcancellable()"},"#io-priority":{"title":"priority","titleInlineContent":[{"type":"text","text":"priority"}],"type":"link","identifier":"#io-priority","url":"#io-priority"},"doc://GIO/documentation/GIO/TaskProtocol/getSourceObject()":{"role":"symbol","title":"getSourceObject()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getSourceObject"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"ObjectRef","preciseIdentifier":"s:10GLibObject0B3RefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Gets the source object from "},{"type":"codeVoice","code":"task"},{"type":"text","text":". Like"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_async_result_get_source_object()"},{"type":"text","text":", but does not ref the object."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/getSourceObject()","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/getsourceobject()"},"doc://GIO/documentation/GIO/TaskProtocol/returnBoolean(result:)":{"role":"symbol","title":"returnBoolean(result:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"returnBoolean"},{"kind":"text","text":"("},{"kind":"externalParam","text":"result"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Sets "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s result to "},{"type":"codeVoice","code":"result"},{"type":"text","text":" and completes the task (see"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_task_return_pointer()"},{"type":"text","text":" for more discussion of exactly what this"},{"type":"text","text":" "},{"type":"text","text":"means)."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/returnBoolean(result:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/returnboolean(result:)"},"doc://GIO/documentation/GIO/TaskProtocol/set(property:value:)":{"role":"symbol","title":"set(property:value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"kind":"externalParam","text":"property"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TaskPropertyName","preciseIdentifier":"s:3GIO16TaskPropertyNameO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:10GLibObject5ValueC"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Set the value of a Task property."},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Note"}]},{"type":"text","text":" that this will only have an effect on properties that are writable and not construct-only!"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/set(property:value:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/set(property:value:)"},"doc://GIO/documentation/GIO/TaskProtocol/attach(source:callback:)":{"role":"symbol","title":"attach(source:callback:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"attach"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GLibSourceT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"source"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GLibSourceT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GSourceFunc","preciseIdentifier":"c:@T@GSourceFunc"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"A utility function for dealing with async operations where you need"},{"type":"text","text":" "},{"type":"text","text":"to wait for a "},{"type":"codeVoice","code":"GSource"},{"type":"text","text":" to trigger. Attaches "},{"type":"codeVoice","code":"source"},{"type":"text","text":" to "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s"},{"type":"text","text":" "},{"type":"codeVoice","code":"GMainContext"},{"type":"text","text":" with "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s "},{"type":"reference","isActive":true,"identifier":"#io-priority"},{"type":"text","text":", and sets "},{"type":"codeVoice","code":"source"},{"type":"text","text":"‘s"},{"type":"text","text":" "},{"type":"text","text":"callback to "},{"type":"codeVoice","code":"callback"},{"type":"text","text":", with "},{"type":"codeVoice","code":"task"},{"type":"text","text":" as the callback’s "},{"type":"codeVoice","code":"user_data"},{"type":"text","text":"."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/attach(source:callback:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/attach(source:callback:)"},"doc://GIO/documentation/GIO/TaskProtocol/runInThreadSync(taskFunc:)":{"role":"symbol","title":"runInThreadSync(taskFunc:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"runInThreadSync"},{"kind":"text","text":"("},{"kind":"externalParam","text":"taskFunc"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GTaskThreadFunc","preciseIdentifier":"c:@T@GTaskThreadFunc"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Runs "},{"type":"codeVoice","code":"task_func"},{"type":"text","text":" in another thread, and waits for it to return or be"},{"type":"text","text":" "},{"type":"text","text":"cancelled. You can use "},{"type":"codeVoice","code":"g_task_propagate_pointer()"},{"type":"text","text":", etc, afterward"},{"type":"text","text":" "},{"type":"text","text":"to get the result of "},{"type":"codeVoice","code":"task_func"},{"type":"text","text":"."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/runInThreadSync(taskFunc:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/runinthreadsync(taskfunc:)"},"doc://GIO/documentation/GIO/TaskProtocol/set(name:)":{"role":"symbol","title":"set(name:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:gtypes.h@T@gchar"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Sets "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s name, used in debugging and profiling. The name defaults to"},{"type":"text","text":" "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/set(name:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/set(name:)"},"doc://GIO/documentation/GIO/TaskProtocol/getContext()":{"role":"symbol","title":"getContext()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getContext"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"MainContextRef","preciseIdentifier":"s:4GLib14MainContextRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Gets the "},{"type":"codeVoice","code":"GMainContext"},{"type":"text","text":" that "},{"type":"codeVoice","code":"task"},{"type":"text","text":" will return its result in (that"},{"type":"text","text":" "},{"type":"text","text":"is, the context that was the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"#g-main-context-push-thread-default"},{"type":"text","text":" "},{"type":"text","text":"at the point when "},{"type":"codeVoice","code":"task"},{"type":"text","text":" was created)."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/getContext()","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/getcontext()"},"doc://GIO/documentation/GIO/TaskProtocol/set(sourceTag:)":{"role":"symbol","title":"set(sourceTag:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"kind":"externalParam","text":"sourceTag"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Sets "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s source tag."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/set(sourceTag:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/set(sourcetag:)"},"#g-main-context-push-thread-default":{"title":"thread-default main context","titleInlineContent":[{"type":"text","text":"thread-default main context"}],"type":"link","identifier":"#g-main-context-push-thread-default","url":"#g-main-context-push-thread-default"},"doc://GIO/documentation/GIO/TaskProtocol/sourceTag":{"role":"symbol","title":"sourceTag","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"sourceTag"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Gets "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s source tag. See "},{"type":"codeVoice","code":"g_task_set_source_tag()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/sourceTag","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/sourcetag"},"doc://GIO/documentation/GIO/TaskProtocol/getCancellable()":{"role":"symbol","title":"getCancellable()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCancellable"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"CancellableRef","preciseIdentifier":"s:3GIO14CancellableRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Gets "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"GCancellable"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/getCancellable()","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/getcancellable()"},"doc://GIO/documentation/GIO/TaskProtocol/returnErrorIfCancelled()":{"role":"symbol","title":"returnErrorIfCancelled()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"returnErrorIfCancelled"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Checks if "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"GCancellable"},{"type":"text","text":" has been cancelled, and if so, sets"},{"type":"text","text":" "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s error accordingly and completes the task (see"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_task_return_pointer()"},{"type":"text","text":" for more discussion of exactly what this"},{"type":"text","text":" "},{"type":"text","text":"means)."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/returnErrorIfCancelled()","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/returnerrorifcancelled()"},"doc://GIO/documentation/GIO/TaskProtocol/propagateInt()":{"role":"symbol","title":"propagateInt()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"propagateInt"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"gssize","preciseIdentifier":"c:glibconfig.h@T@gssize"}],"abstract":[{"type":"text","text":"Gets the result of "},{"type":"codeVoice","code":"task"},{"type":"text","text":" as an integer ("},{"type":"codeVoice","code":"gssize"},{"type":"text","text":")."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/propagateInt()","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/propagateint()"},"doc://GIO/documentation/GIO/TaskProtocol/priority":{"role":"symbol","title":"priority","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"priority"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Gets "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s priority"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/priority","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/priority"},"doc://GIO/documentation/GIO/TaskProtocol/getPriority()":{"role":"symbol","title":"getPriority()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getPriority"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Gets "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s priority"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/getPriority()","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/getpriority()"},"doc://GIO/documentation/GIO":{"role":"collection","title":"GIO","abstract":[],"identifier":"doc:\/\/GIO\/documentation\/GIO","kind":"symbol","type":"topic","url":"\/documentation\/gio"},"doc://GIO/documentation/GIO/TaskProtocol/runInThread(taskFunc:)":{"role":"symbol","title":"runInThread(taskFunc:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"runInThread"},{"kind":"text","text":"("},{"kind":"externalParam","text":"taskFunc"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GTaskThreadFunc","preciseIdentifier":"c:@T@GTaskThreadFunc"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Runs "},{"type":"codeVoice","code":"task_func"},{"type":"text","text":" in another thread. When "},{"type":"codeVoice","code":"task_func"},{"type":"text","text":" returns, "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s"},{"type":"text","text":" "},{"type":"codeVoice","code":"GAsyncReadyCallback"},{"type":"text","text":" will be invoked in "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"GMainContext"},{"type":"text","text":"."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/runInThread(taskFunc:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/runinthread(taskfunc:)"},"doc://GIO/documentation/GIO/TaskProtocol/set(returnOnCancel:)":{"role":"symbol","title":"set(returnOnCancel:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"kind":"externalParam","text":"returnOnCancel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Sets or clears "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s return-on-cancel flag. This is only"},{"type":"text","text":" "},{"type":"text","text":"meaningful for tasks run via "},{"type":"codeVoice","code":"g_task_run_in_thread()"},{"type":"text","text":" or"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_task_run_in_thread_sync()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/set(returnOnCancel:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/set(returnoncancel:)"},"doc://GIO/documentation/GIO/TaskProtocol/getReturnOnCancel()":{"role":"symbol","title":"getReturnOnCancel()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getReturnOnCancel"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Gets "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s return-on-cancel flag. See"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_task_set_return_on_cancel()"},{"type":"text","text":" for more details."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/getReturnOnCancel()","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/getreturnoncancel()"},"doc://GIO/documentation/GIO/TaskProtocol/name":{"role":"symbol","title":"name","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Gets "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s name. See "},{"type":"codeVoice","code":"g_task_set_name()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/name","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/name"},"doc://GIO/documentation/GIO/TaskProtocol/set(checkCancellable:)":{"role":"symbol","title":"set(checkCancellable:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"kind":"externalParam","text":"checkCancellable"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Sets or clears "},{"type":"codeVoice","code":"task"},{"type":"text","text":"‘s check-cancellable flag. If this is "},{"type":"codeVoice","code":"true"},{"type":"text","text":" "},{"type":"text","text":"(the default), then "},{"type":"codeVoice","code":"g_task_propagate_pointer()"},{"type":"text","text":", etc, and"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_task_had_error()"},{"type":"text","text":" will check the task’s "},{"type":"codeVoice","code":"GCancellable"},{"type":"text","text":" first, and"},{"type":"text","text":" "},{"type":"text","text":"if it has been cancelled, then they will consider the task to have"},{"type":"text","text":" "},{"type":"text","text":"returned an “Operation was cancelled” error"},{"type":"text","text":" "},{"type":"text","text":"("},{"type":"codeVoice","code":"G_IO_ERROR_CANCELLED"},{"type":"text","text":"), regardless of any other error or return"},{"type":"text","text":" "},{"type":"text","text":"value the task may have had."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/set(checkCancellable:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/set(checkcancellable:)"},"doc://GIO/documentation/GIO/AsyncResultProtocol":{"role":"symbol","title":"AsyncResultProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncResultProtocol"}],"abstract":[{"type":"text","text":"Provides a base class for implementing asynchronous function results."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/AsyncResultProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncResultProtocol"}],"url":"\/documentation\/gio\/asyncresultprotocol"},"doc://GIO/documentation/GIO/TaskProtocol/hadError()":{"role":"symbol","title":"hadError()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hadError"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Tests if "},{"type":"codeVoice","code":"task"},{"type":"text","text":" resulted in an error."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/hadError()","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/haderror()"},"doc://GIO/documentation/GIO/TaskProtocol/set(taskData:taskDataDestroy:)":{"role":"symbol","title":"set(taskData:taskDataDestroy:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"kind":"externalParam","text":"taskData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"taskDataDestroy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GDestroyNotify","preciseIdentifier":"c:gtypes.h@T@GDestroyNotify"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Sets "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s task data (freeing the existing task data, if any)."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/set(taskData:taskDataDestroy:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/set(taskdata:taskdatadestroy:)"},"doc://GIO/documentation/GIO/TaskProtocol/task_ptr-2ullq":{"defaultImplementations":1,"role":"symbol","title":"task_ptr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"task_ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GTask"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Typed pointer to the underlying "},{"type":"codeVoice","code":"GTask"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/task_ptr-2ullq","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/gio\/taskprotocol\/task_ptr-2ullq"},"doc://GIO/documentation/GIO/TaskProtocol/checkCancellable":{"role":"symbol","title":"checkCancellable","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"checkCancellable"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Gets "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s check-cancellable flag. See"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_task_set_check_cancellable()"},{"type":"text","text":" for more details."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/checkCancellable","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/checkcancellable"},"doc://GIO/documentation/GIO/TaskProtocol/propagate(value:)":{"role":"symbol","title":"propagate(value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"propagate"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GObjectValueT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GObjectValueT"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Gets the result of "},{"type":"codeVoice","code":"task"},{"type":"text","text":" as a "},{"type":"codeVoice","code":"GValue"},{"type":"text","text":", and transfers ownership of"},{"type":"text","text":" "},{"type":"text","text":"that value to the caller. As with "},{"type":"codeVoice","code":"g_task_return_value()"},{"type":"text","text":", this is"},{"type":"text","text":" "},{"type":"text","text":"a generic low-level method; "},{"type":"codeVoice","code":"g_task_propagate_pointer()"},{"type":"text","text":" and the like"},{"type":"text","text":" "},{"type":"text","text":"will usually be more useful for C code."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/propagate(value:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/propagate(value:)"},"doc://GIO/documentation/GIO/TaskProtocol/getName()":{"role":"symbol","title":"getName()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getName"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Gets "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s name. See "},{"type":"codeVoice","code":"g_task_set_name()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/getName()","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/getname()"},"doc://GIO/documentation/GIO/TaskProtocol":{"role":"symbol","title":"TaskProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TaskProtocol"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GTask"},{"type":"text","text":" represents and manages a cancellable “task”."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TaskProtocol"}],"url":"\/documentation\/gio\/taskprotocol"},"doc://GIO/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/GIO\/4GLib14PointerWrapperP"},"doc://GIO/documentation/GIO/TaskProtocol/returnInt(result:)":{"role":"symbol","title":"returnInt(result:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"returnInt"},{"kind":"text","text":"("},{"kind":"externalParam","text":"result"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gssize","preciseIdentifier":"c:glibconfig.h@T@gssize"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Sets "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s result to "},{"type":"codeVoice","code":"result"},{"type":"text","text":" and completes the task (see"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_task_return_pointer()"},{"type":"text","text":" for more discussion of exactly what this"},{"type":"text","text":" "},{"type":"text","text":"means)."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/returnInt(result:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/returnint(result:)"},"doc://GIO/documentation/GIO/TaskProtocol/return_(error:)":{"role":"symbol","title":"return_(error:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"return_"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GLibGLibErrorT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"error"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GLibGLibErrorT"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Sets "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s result to "},{"type":"codeVoice","code":"error"},{"type":"text","text":" (which "},{"type":"codeVoice","code":"task"},{"type":"text","text":" assumes ownership of)"},{"type":"text","text":" "},{"type":"text","text":"and completes the task (see "},{"type":"codeVoice","code":"g_task_return_pointer()"},{"type":"text","text":" for more"},{"type":"text","text":" "},{"type":"text","text":"discussion of exactly what this means)."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/return_(error:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/return_(error:)"},"doc://GIO/documentation/GIO/TaskProtocol/returnValue(result:)-8epah":{"role":"symbol","title":"returnValue(result:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"returnValue"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GObjectValueT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"result"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GObjectValueT"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Sets "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s result to "},{"type":"codeVoice","code":"result"},{"type":"text","text":" (by copying it) and completes the task."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/returnValue(result:)-8epah","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/returnvalue(result:)-8epah"},"doc://GIO/documentation/GIO/TaskProtocol/propagatePointer()":{"role":"symbol","title":"propagatePointer()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"propagatePointer"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Gets the result of "},{"type":"codeVoice","code":"task"},{"type":"text","text":" as a pointer, and transfers ownership"},{"type":"text","text":" "},{"type":"text","text":"of that value to the caller."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/propagatePointer()","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/propagatepointer()"},"doc://GIO/documentation/GIO/TaskProtocol/sourceObject":{"role":"symbol","title":"sourceObject","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"sourceObject"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ObjectRef","preciseIdentifier":"s:10GLibObject0B3RefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Gets the source object from "},{"type":"codeVoice","code":"task"},{"type":"text","text":". Like"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_async_result_get_source_object()"},{"type":"text","text":", but does not ref the object."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/sourceObject","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/sourceobject"},"doc://GIO/documentation/GIO/TaskProtocol/setStatic(name:)":{"role":"symbol","title":"setStatic(name:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setStatic"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:gtypes.h@T@gchar"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Sets "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s name, used in debugging and profiling."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/setStatic(name:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/setstatic(name:)"},"doc://GIO/documentation/GIO/TaskProtocol/completed":{"role":"symbol","title":"completed","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"completed"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Whether the task has completed, meaning its callback (if set) has been"},{"type":"text","text":" "},{"type":"text","text":"invoked. This can only happen after "},{"type":"codeVoice","code":"g_task_return_pointer()"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"codeVoice","code":"g_task_return_error()"},{"type":"text","text":" or one of the other return functions have been called"},{"type":"text","text":" "},{"type":"text","text":"on the task."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/completed","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/completed"},"doc://GIO/documentation/GIO/TaskProtocol/propagateBoolean()":{"role":"symbol","title":"propagateBoolean()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"propagateBoolean"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Gets the result of "},{"type":"codeVoice","code":"task"},{"type":"text","text":" as a "},{"type":"codeVoice","code":"gboolean"},{"type":"text","text":"."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/propagateBoolean()","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/propagateboolean()"},"doc://GIO/documentation/GIO/TaskProtocol/getSourceTag()":{"role":"symbol","title":"getSourceTag()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getSourceTag"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Gets "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s source tag. See "},{"type":"codeVoice","code":"g_task_set_source_tag()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/getSourceTag()","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/getsourcetag()"},"doc://GIO/documentation/GIO/TaskProtocol/returnPointer(result:resultDestroy:)":{"role":"symbol","title":"returnPointer(result:resultDestroy:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"returnPointer"},{"kind":"text","text":"("},{"kind":"externalParam","text":"result"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"resultDestroy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GDestroyNotify","preciseIdentifier":"c:gtypes.h@T@GDestroyNotify"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Sets "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s result to "},{"type":"codeVoice","code":"result"},{"type":"text","text":" and completes the task. If "},{"type":"codeVoice","code":"result"},{"type":"text","text":" "},{"type":"text","text":"is not "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", then "},{"type":"codeVoice","code":"result_destroy"},{"type":"text","text":" will be used to free "},{"type":"codeVoice","code":"result"},{"type":"text","text":" if"},{"type":"text","text":" "},{"type":"text","text":"the caller does not take ownership of it with"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_task_propagate_pointer()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/returnPointer(result:resultDestroy:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/returnpointer(result:resultdestroy:)"},"doc://GIO/documentation/GIO/TaskProtocol/get(property:)":{"role":"symbol","title":"get(property:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"("},{"kind":"externalParam","text":"property"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TaskPropertyName","preciseIdentifier":"s:3GIO16TaskPropertyNameO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:10GLibObject5ValueC"}],"abstract":[{"type":"text","text":"Get the value of a Task property"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/get(property:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/get(property:)"},"doc://GIO/documentation/GIO/TaskProtocol/returnOnCancel":{"role":"symbol","title":"returnOnCancel","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"returnOnCancel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Gets "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s return-on-cancel flag. See"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_task_set_return_on_cancel()"},{"type":"text","text":" for more details."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/returnOnCancel","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/returnoncancel"},"doc://GIO/documentation/GIO/TaskProtocol/bind(property:to:_:flags:transformFrom:transformTo:)":{"role":"symbol","title":"bind(property:to:_:flags:transformFrom:transformTo:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"bind"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Q"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"property"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TaskPropertyName","preciseIdentifier":"s:3GIO16TaskPropertyNameO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Q"},{"kind":"text","text":", "},{"kind":"externalParam","text":"flags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"BindingFlags","preciseIdentifier":"s:10GLibObject12BindingFlagsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"transformFrom"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ValueTransformer","preciseIdentifier":"s:10GLibObject16ValueTransformera"},{"kind":"text","text":", "},{"kind":"externalParam","text":"transformTo"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ValueTransformer","preciseIdentifier":"s:10GLibObject16ValueTransformera"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"BindingRef","preciseIdentifier":"s:10GLibObject10BindingRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Bind a "},{"type":"codeVoice","code":"TaskPropertyName"},{"type":"text","text":" source property to a given target object."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/bind(property:to:_:flags:transformFrom:transformTo:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/bind(property:to:_:flags:transformfrom:transformto:)"},"doc://GIO/documentation/GIO/Task":{"role":"symbol","title":"Task","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Task"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GTask"},{"type":"text","text":" represents and manages a cancellable “task”."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/Task","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Task"}],"url":"\/documentation\/gio\/task"},"doc://GIO/documentation/GIO/TaskRef":{"role":"symbol","title":"TaskRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TaskRef"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GTask"},{"type":"text","text":" represents and manages a cancellable “task”."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TaskRef"}],"url":"\/documentation\/gio\/taskref"},"doc://GIO/documentation/GIO/TaskProtocol/returnValue(result:)-2zxxe":{"role":"symbol","title":"returnValue(result:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"returnValue"},{"kind":"text","text":"("},{"kind":"externalParam","text":"result"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ValueRef","preciseIdentifier":"s:10GLibObject8ValueRefV"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Sets "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s result to "},{"type":"codeVoice","code":"result"},{"type":"text","text":" (by copying it) and completes the task."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/returnValue(result:)-2zxxe","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/returnvalue(result:)-2zxxe"},"doc://GIO/documentation/GIO/TaskProtocol/taskData":{"role":"symbol","title":"taskData","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"taskData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Gets "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"task_data"},{"type":"text","text":"."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/taskData","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/taskdata"},"doc://GIO/documentation/GIO/TaskProtocol/getCompleted()":{"role":"symbol","title":"getCompleted()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCompleted"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Gets the value of "},{"type":"codeVoice","code":"GTask:completed"},{"type":"text","text":". This changes from "},{"type":"codeVoice","code":"false"},{"type":"text","text":" to "},{"type":"codeVoice","code":"true"},{"type":"text","text":" after"},{"type":"text","text":" "},{"type":"text","text":"the task’s callback is invoked, and will return "},{"type":"codeVoice","code":"false"},{"type":"text","text":" if called from inside"},{"type":"text","text":" "},{"type":"text","text":"the callback."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/getCompleted()","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/getcompleted()"},"doc://GIO/documentation/GIO/TaskProtocol/getTaskData()":{"role":"symbol","title":"getTaskData()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getTaskData"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Gets "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"task_data"},{"type":"text","text":"."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/getTaskData()","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/gettaskdata()"},"doc://GIO/documentation/GIO/TaskProtocol/cancellable":{"role":"symbol","title":"cancellable","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancellable"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CancellableRef","preciseIdentifier":"s:3GIO14CancellableRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Gets "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"GCancellable"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/cancellable","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/cancellable"},"doc://GIO/documentation/GIO/TaskProtocol/set(priority:)":{"role":"symbol","title":"set(priority:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"kind":"externalParam","text":"priority"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Sets "},{"type":"codeVoice","code":"task"},{"type":"text","text":"’s priority. If you do not call this, it will default to"},{"type":"text","text":" "},{"type":"codeVoice","code":"G_PRIORITY_DEFAULT"},{"type":"text","text":"."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TaskProtocol\/set(priority:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/taskprotocol\/set(priority:)"}}}