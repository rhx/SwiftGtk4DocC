{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IOStreamRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Examples of "},{"type":"codeVoice","code":"GIOStream"},{"type":"text","text":" objects are "},{"type":"codeVoice","code":"GSocketConnection"},{"type":"text","text":", which represents"},{"type":"text","text":" "},{"type":"text","text":"a two-way network connection; and "},{"type":"codeVoice","code":"GFileIOStream"},{"type":"text","text":", which represents a"},{"type":"text","text":" "},{"type":"text","text":"file handle opened in read-write mode."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To do the actual reading and writing you need to get the substreams"},{"type":"text","text":" "},{"type":"text","text":"with "},{"type":"codeVoice","code":"g_io_stream_get_input_stream()"},{"type":"text","text":" and "},{"type":"codeVoice","code":"g_io_stream_get_output_stream()"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GIOStream"},{"type":"text","text":" object owns the input and the output streams, not the other"},{"type":"text","text":" "},{"type":"text","text":"way around, so keeping the substreams alive will not keep the "},{"type":"codeVoice","code":"GIOStream"},{"type":"text","text":" "},{"type":"text","text":"object alive. If the "},{"type":"codeVoice","code":"GIOStream"},{"type":"text","text":" object is freed it will be closed, thus"},{"type":"text","text":" "},{"type":"text","text":"closing the substreams, so even if the substreams stay alive they will"},{"type":"text","text":" "},{"type":"text","text":"always return "},{"type":"codeVoice","code":"G_IO_ERROR_CLOSED"},{"type":"text","text":" for all operations."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To close a stream use "},{"type":"codeVoice","code":"g_io_stream_close()"},{"type":"text","text":" which will close the common"},{"type":"text","text":" "},{"type":"text","text":"stream object and also the individual substreams. You can also close"},{"type":"text","text":" "},{"type":"text","text":"the substreams themselves. In most cases this only marks the"},{"type":"text","text":" "},{"type":"text","text":"substream as closed, so further I\/O on it fails but common state in the"},{"type":"text","text":" "},{"type":"codeVoice","code":"GIOStream"},{"type":"text","text":" may still be open. However, some streams may support"},{"type":"text","text":" "},{"type":"text","text":"“half-closed” states where one direction of the stream is actually shut down."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Operations on "},{"type":"codeVoice","code":"GIOStreams"},{"type":"text","text":" cannot be started while another operation on the"},{"type":"text","text":" "},{"type":"codeVoice","code":"GIOStream"},{"type":"text","text":" or its substreams is in progress. Specifically, an application can"},{"type":"text","text":" "},{"type":"text","text":"read from the "},{"type":"codeVoice","code":"GInputStream"},{"type":"text","text":" and write to the "},{"type":"codeVoice","code":"GOutputStream"},{"type":"text","text":" simultaneously"},{"type":"text","text":" "},{"type":"text","text":"(either in separate threads, or as asynchronous operations in the same"},{"type":"text","text":" "},{"type":"text","text":"thread), but an application cannot start any "},{"type":"codeVoice","code":"GIOStream"},{"type":"text","text":" operation while there"},{"type":"text","text":" "},{"type":"text","text":"is a "},{"type":"codeVoice","code":"GIOStream"},{"type":"text","text":", "},{"type":"codeVoice","code":"GInputStream"},{"type":"text","text":" or "},{"type":"codeVoice","code":"GOutputStream"},{"type":"text","text":" operation in progress, and"},{"type":"text","text":" "},{"type":"text","text":"an application can’t start any "},{"type":"codeVoice","code":"GInputStream"},{"type":"text","text":" or "},{"type":"codeVoice","code":"GOutputStream"},{"type":"text","text":" operation"},{"type":"text","text":" "},{"type":"text","text":"while there is a "},{"type":"codeVoice","code":"GIOStream"},{"type":"text","text":" operation in progress."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is a product of individual stream operations being associated with a"},{"type":"text","text":" "},{"type":"text","text":"given "},{"type":"codeVoice","code":"GMainContext"},{"type":"text","text":" (the thread-default context at the time the operation was"},{"type":"text","text":" "},{"type":"text","text":"started), rather than entire streams being associated with a single"},{"type":"text","text":" "},{"type":"codeVoice","code":"GMainContext"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"GIO may run operations on "},{"type":"codeVoice","code":"GIOStreams"},{"type":"text","text":" from other (worker) threads, and this"},{"type":"text","text":" "},{"type":"text","text":"may be exposed to application code in the behaviour of wrapper streams, such"},{"type":"text","text":" "},{"type":"text","text":"as "},{"type":"codeVoice","code":"GBufferedInputStream"},{"type":"text","text":" or "},{"type":"codeVoice","code":"GTlsConnection"},{"type":"text","text":". With such wrapper APIs,"},{"type":"text","text":" "},{"type":"text","text":"application code may only run operations on the base (wrapped) stream when"},{"type":"text","text":" "},{"type":"text","text":"the wrapper stream is idle. Note that the semantics of such operations may"},{"type":"text","text":" "},{"type":"text","text":"not be well-defined due to the state the wrapper stream leaves the base"},{"type":"text","text":" "},{"type":"text","text":"stream in (though they are guaranteed not to crash)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"IOStreamRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GIOStream"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"codeVoice","code":"IOStreamProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"codeVoice","code":"IOStreamRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"GIOStream"},{"type":"text","text":" instance."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gio\/iostreamref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GIO\/4GLib14PointerWrapperP","doc:\/\/GIO\/10GLibObject14GWeakCapturingP","doc:\/\/GIO\/10GLibObject0B8ProtocolP","doc:\/\/GIO\/documentation\/GIO\/IOStreamProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/GIO\/documentation\/GIO\/IOStreamRef","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"GIOStream represents an object that has both read and write streams."},{"type":"text","text":" "},{"type":"text","text":"Generally the two streams act as separate input and output streams,"},{"type":"text","text":" "},{"type":"text","text":"but they share some common resources and state. For instance, for"},{"type":"text","text":" "},{"type":"text","text":"seekable streams, both streams may use the same position."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IOStreamRef"}],"title":"IOStreamRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:3GIO11IOStreamRefV","modules":[{"name":"GIO"}],"navigatorTitle":[{"kind":"identifier","text":"IOStreamRef"}]},"hierarchy":{"paths":[["doc:\/\/GIO\/documentation\/GIO"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/init(_:)-1rxby","doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/init(_:)-5jln1","doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/init(_:)-6jq77","doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/init(_:)-7hnq3","doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/init(_:)-84gtk","doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/init(cPointer:)","doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/init(constPointer:)","doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/init(gconstpointer:)","doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/init(gpointer:)","doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/init(mutating:)","doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/init(opaquePointer:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/ptr"]},{"title":"Type Methods","identifiers":["doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/unowned(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/GWeakCapturing-Implementations","doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/IOStreamProtocol-Implementations","doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/ObjectProtocol-Implementations"],"generated":true}],"references":{"doc://GIO/documentation/GIO/IOStreamRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GIOStream"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"codeVoice","code":"io_stream_ptr"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/gio\/iostreamref\/ptr"},"doc://GIO/documentation/GIO/IOStreamRef/ObjectProtocol-Implementations":{"role":"collectionGroup","title":"ObjectProtocol Implementations","abstract":[],"identifier":"doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/ObjectProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gio\/iostreamref\/objectprotocol-implementations"},"doc://GIO/documentation/GIO/IOStreamRef/init(_:)-1rxby":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GIOStream"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/init(_:)-1rxby","kind":"symbol","type":"topic","url":"\/documentation\/gio\/iostreamref\/init(_:)-1rxby"},"doc://GIO/documentation/GIO/IOStreamRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"IOStreamProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/iostreamref\/init(constpointer:)"},"doc://GIO/documentation/GIO/IOStreamRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"IOStreamProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/iostreamref\/init(mutating:)"},"doc://GIO/documentation/GIO/IOStreamRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:gtypes.h@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/iostreamref\/init(gconstpointer:)"},"doc://GIO/documentation/GIO/IOStreamRef/init(_:)-6jq77":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GIOStream"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/init(_:)-6jq77","kind":"symbol","type":"topic","url":"\/documentation\/gio\/iostreamref\/init(_:)-6jq77"},"doc://GIO/documentation/GIO/IOStreamRef/GWeakCapturing-Implementations":{"role":"collectionGroup","title":"GWeakCapturing Implementations","abstract":[],"identifier":"doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/GWeakCapturing-Implementations","kind":"article","type":"topic","url":"\/documentation\/gio\/iostreamref\/gweakcapturing-implementations"},"doc://GIO/documentation/GIO":{"role":"collection","title":"GIO","abstract":[],"identifier":"doc:\/\/GIO\/documentation\/GIO","kind":"symbol","type":"topic","url":"\/documentation\/gio"},"doc://GIO/documentation/GIO/IOStreamProtocol":{"role":"symbol","title":"IOStreamProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"IOStreamProtocol"}],"abstract":[{"type":"text","text":"GIOStream represents an object that has both read and write streams."},{"type":"text","text":" "},{"type":"text","text":"Generally the two streams act as separate input and output streams,"},{"type":"text","text":" "},{"type":"text","text":"but they share some common resources and state. For instance, for"},{"type":"text","text":" "},{"type":"text","text":"seekable streams, both streams may use the same position."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/IOStreamProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IOStreamProtocol"}],"url":"\/documentation\/gio\/iostreamprotocol"},"doc://GIO/documentation/GIO/IOStreamRef/init(_:)-84gtk":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GIOStream"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/init(_:)-84gtk","kind":"symbol","type":"topic","url":"\/documentation\/gio\/iostreamref\/init(_:)-84gtk"},"doc://GIO/documentation/GIO/IOStreamRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"IOStreamProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/iostreamref\/init(opaquepointer:)"},"doc://GIO/10GLibObject0B8ProtocolP":{"type":"unresolvable","title":"GLibObject.ObjectProtocol","identifier":"doc:\/\/GIO\/10GLibObject0B8ProtocolP"},"doc://GIO/documentation/GIO/IOStreamRef/unowned(_:)":{"role":"symbol","title":"unowned(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unowned"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"IOStreamRef","preciseIdentifier":"s:3GIO11IOStreamRefV"}],"abstract":[{"type":"text","text":"This factory is syntactic sugar for setting weak pointers wrapped in "},{"type":"codeVoice","code":"GWeak<T>"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/unowned(_:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/iostreamref\/unowned(_:)"},"doc://GIO/documentation/GIO/IOStreamRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/iostreamref\/init(gpointer:)"},"doc://GIO/documentation/GIO/IOStreamRef":{"role":"symbol","title":"IOStreamRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IOStreamRef"}],"abstract":[{"type":"text","text":"GIOStream represents an object that has both read and write streams."},{"type":"text","text":" "},{"type":"text","text":"Generally the two streams act as separate input and output streams,"},{"type":"text","text":" "},{"type":"text","text":"but they share some common resources and state. For instance, for"},{"type":"text","text":" "},{"type":"text","text":"seekable streams, both streams may use the same position."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/IOStreamRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IOStreamRef"}],"url":"\/documentation\/gio\/iostreamref"},"doc://GIO/10GLibObject14GWeakCapturingP":{"type":"unresolvable","title":"GLibObject.GWeakCapturing","identifier":"doc:\/\/GIO\/10GLibObject14GWeakCapturingP"},"doc://GIO/documentation/GIO/IOStreamRef/init(_:)-7hnq3":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"codeVoice","code":"IOStreamProtocol"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/init(_:)-7hnq3","kind":"symbol","type":"topic","url":"\/documentation\/gio\/iostreamref\/init(_:)-7hnq3"},"doc://GIO/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/GIO\/4GLib14PointerWrapperP"},"doc://GIO/documentation/GIO/IOStreamRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"IOStreamProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/iostreamref\/init(cpointer:)"},"doc://GIO/documentation/GIO/IOStreamRef/init(_:)-5jln1":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GIOStream"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/init(_:)-5jln1","kind":"symbol","type":"topic","url":"\/documentation\/gio\/iostreamref\/init(_:)-5jln1"},"doc://GIO/documentation/GIO/IOStreamRef/IOStreamProtocol-Implementations":{"role":"collectionGroup","title":"IOStreamProtocol Implementations","abstract":[],"identifier":"doc:\/\/GIO\/documentation\/GIO\/IOStreamRef\/IOStreamProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gio\/iostreamref\/iostreamprotocol-implementations"}}}