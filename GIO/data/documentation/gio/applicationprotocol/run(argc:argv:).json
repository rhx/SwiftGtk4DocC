{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"run"},{"kind":"text","text":"("},{"kind":"externalParam","text":"argc"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"argv"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">?>! = nil) -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function is intended to be run from "},{"type":"codeVoice","code":"main()"},{"type":"text","text":" and its return value"},{"type":"text","text":" "},{"type":"text","text":"is intended to be returned by "},{"type":"codeVoice","code":"main()"},{"type":"text","text":". Although you are expected to pass"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"argc"},{"type":"text","text":", "},{"type":"codeVoice","code":"argv"},{"type":"text","text":" parameters from "},{"type":"codeVoice","code":"main()"},{"type":"text","text":" to this function, it is possible"},{"type":"text","text":" "},{"type":"text","text":"to pass "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if "},{"type":"codeVoice","code":"argv"},{"type":"text","text":" is not available or commandline handling is not"},{"type":"text","text":" "},{"type":"text","text":"required.  Note that on Windows, "},{"type":"codeVoice","code":"argc"},{"type":"text","text":" and "},{"type":"codeVoice","code":"argv"},{"type":"text","text":" are ignored, and"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_win32_get_command_line()"},{"type":"text","text":" is called internally (for proper support"},{"type":"text","text":" "},{"type":"text","text":"of Unicode commandline arguments)."}]},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/GIO\/documentation\/GIO\/Application"},{"type":"text","text":" will attempt to parse the commandline arguments.  You"},{"type":"text","text":" "},{"type":"text","text":"can add commandline flags to the list of recognised options by way of"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_application_add_main_option_entries()"},{"type":"text","text":".  After this, the"},{"type":"text","text":" "},{"type":"text","text":"[Application](\/\/documentation\/gio\/application\/onhandlelocaloptions(flags:handler:) signal is emitted, from which the"},{"type":"text","text":" "},{"type":"text","text":"application can inspect the values of its "},{"type":"codeVoice","code":"GOptionEntrys"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"[Application](\/\/documentation\/gio\/application\/onhandlelocaloptions(flags:handler:) is a good place to handle options"},{"type":"text","text":" "},{"type":"text","text":"such as "},{"type":"codeVoice","code":"--version"},{"type":"text","text":", where an immediate reply from the local process is"},{"type":"text","text":" "},{"type":"text","text":"desired (instead of communicating with an already-running instance)."},{"type":"text","text":" "},{"type":"text","text":"A [Application](\/\/documentation\/gio\/application\/onhandlelocaloptions(flags:handler:) handler can stop further processing"},{"type":"text","text":" "},{"type":"text","text":"by returning a non-negative value, which then becomes the exit status of"},{"type":"text","text":" "},{"type":"text","text":"the process."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"What happens next depends on the flags: if"},{"type":"text","text":" "},{"type":"codeVoice","code":"handlesCommandLine"},{"type":"text","text":" was specified then the remaining"},{"type":"text","text":" "},{"type":"text","text":"commandline arguments are sent to the primary instance, where a"},{"type":"text","text":" "},{"type":"text","text":"[Application](\/\/documentation\/gio\/application\/oncommandline(flags:handler:) signal is emitted.  Otherwise, the"},{"type":"text","text":" "},{"type":"text","text":"remaining commandline arguments are assumed to be a list of files."},{"type":"text","text":" "},{"type":"text","text":"If there are no files listed, the application is activated via the"},{"type":"text","text":" "},{"type":"text","text":"[Application](\/\/documentation\/gio\/application\/onactivate(flags:handler:) signal.  If there are one or more files, and"},{"type":"text","text":" "},{"type":"codeVoice","code":"handlesOpen"},{"type":"text","text":" was specified then the files are opened"},{"type":"text","text":" "},{"type":"text","text":"via the [Application](\/\/documentation\/gio\/application\/onopen(flags:handler:) signal."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you are interested in doing more complicated local handling of the"},{"type":"text","text":" "},{"type":"text","text":"commandline then you should implement your own "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GIO\/documentation\/GIO\/Application"},{"type":"text","text":" subclass"},{"type":"text","text":" "},{"type":"text","text":"and override "},{"type":"codeVoice","code":"local_command_line()"},{"type":"text","text":". In this case, you most likely want"},{"type":"text","text":" "},{"type":"text","text":"to return "},{"type":"codeVoice","code":"true"},{"type":"text","text":" from your "},{"type":"codeVoice","code":"local_command_line()"},{"type":"text","text":" implementation to"},{"type":"text","text":" "},{"type":"text","text":"suppress the default handling. See"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"#https:\/\/gitlab.gnome.org\/GNOME\/glib\/-\/blob\/HEAD\/gio\/tests\/gapplication-example-cmdline2.c"},{"type":"text","text":" "},{"type":"text","text":"for an example."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If, after the above is done, the use count of the application is zero"},{"type":"text","text":" "},{"type":"text","text":"then the exit status is returned immediately.  If the use count is"},{"type":"text","text":" "},{"type":"text","text":"non-zero then the default main context is iterated until the use count"},{"type":"text","text":" "},{"type":"text","text":"falls to zero, at which point 0 is returned."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the "},{"type":"codeVoice","code":"isService"},{"type":"text","text":" flag is set, then the service will"},{"type":"text","text":" "},{"type":"text","text":"run for as much as 10 seconds with a use count of zero while waiting"},{"type":"text","text":" "},{"type":"text","text":"for the message that caused the activation to arrive.  After that,"},{"type":"text","text":" "},{"type":"text","text":"if the use count falls to zero the application will exit immediately,"},{"type":"text","text":" "},{"type":"text","text":"except in the case that "},{"type":"codeVoice","code":"g_application_set_inactivity_timeout()"},{"type":"text","text":" is in"},{"type":"text","text":" "},{"type":"text","text":"use."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function sets the prgname ("},{"type":"codeVoice","code":"g_set_prgname()"},{"type":"text","text":"), if not already set,"},{"type":"text","text":" "},{"type":"text","text":"to the basename of argv[0]."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Much like "},{"type":"codeVoice","code":"g_main_loop_run()"},{"type":"text","text":", this function will acquire the main context"},{"type":"text","text":" "},{"type":"text","text":"for the duration that the application is running."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Since 2.40, applications that are not explicitly flagged as services"},{"type":"text","text":" "},{"type":"text","text":"or launchers (ie: neither "},{"type":"codeVoice","code":"isService"},{"type":"text","text":" or"},{"type":"text","text":" "},{"type":"codeVoice","code":"isLauncher"},{"type":"text","text":" are given as flags) will check (from the"},{"type":"text","text":" "},{"type":"text","text":"default handler for local_command_line) if “–gapplication-service”"},{"type":"text","text":" "},{"type":"text","text":"was given in the command line.  If this flag is present then normal"},{"type":"text","text":" "},{"type":"text","text":"commandline processing is interrupted and the"},{"type":"text","text":" "},{"type":"codeVoice","code":"isService"},{"type":"text","text":" flag is set.  This provides a “compromise”"},{"type":"text","text":" "},{"type":"text","text":"solution whereby running an application directly from the commandline"},{"type":"text","text":" "},{"type":"text","text":"will invoke it in the normal way (which can be useful for debugging)"},{"type":"text","text":" "},{"type":"text","text":"while still allowing applications to be D-Bus activated in service"},{"type":"text","text":" "},{"type":"text","text":"mode.  The D-Bus service file should invoke the executable with"},{"type":"text","text":" "},{"type":"text","text":"“–gapplication-service” as the sole commandline argument.  This"},{"type":"text","text":" "},{"type":"text","text":"approach is suitable for use by most graphical applications but"},{"type":"text","text":" "},{"type":"text","text":"should not be used from applications like editors that need precise"},{"type":"text","text":" "},{"type":"text","text":"control over when processes invoked via the commandline will exit and"},{"type":"text","text":" "},{"type":"text","text":"what their exit status will be."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gio\/applicationprotocol\/run(argc:argv:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GIO\/documentation\/GIO\/ApplicationProtocol\/run(argc:argv:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Runs the application."}],"kind":"symbol","metadata":{"role":"symbol","title":"run(argc:argv:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"run"},{"kind":"text","text":"("},{"kind":"externalParam","text":"argc"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"argv"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">?>!) -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"symbolKind":"method","externalID":"s:3GIO19ApplicationProtocolPAAE3run4argc4argvS2i_SpySpys4Int8VGSgGSgtF","extendedModule":"GIO","modules":[{"name":"GIO"}]},"hierarchy":{"paths":[["doc:\/\/GIO\/documentation\/GIO","doc:\/\/GIO\/documentation\/GIO\/ApplicationProtocol"]]},"references":{"doc://GIO/documentation/GIO/Application":{"role":"symbol","title":"Application","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Application"}],"abstract":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GIO\/documentation\/GIO\/Application"},{"type":"text","text":" is the foundation of an application.  It wraps some"},{"type":"text","text":" "},{"type":"text","text":"low-level platform-specific services and is intended to act as the"},{"type":"text","text":" "},{"type":"text","text":"foundation for higher-level application classes such as"},{"type":"text","text":" "},{"type":"codeVoice","code":"GtkApplication"},{"type":"text","text":" or "},{"type":"codeVoice","code":"MxApplication"},{"type":"text","text":".  In general, you should not use"},{"type":"text","text":" "},{"type":"text","text":"this class outside of a higher level framework."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/Application","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Application"}],"url":"\/documentation\/gio\/application"},"doc://GIO/documentation/GIO":{"role":"collection","title":"GIO","abstract":[],"identifier":"doc:\/\/GIO\/documentation\/GIO","kind":"symbol","type":"topic","url":"\/documentation\/gio"},"doc://GIO/documentation/GIO/ApplicationProtocol/run(argc:argv:)":{"role":"symbol","title":"run(argc:argv:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"run"},{"kind":"text","text":"("},{"kind":"externalParam","text":"argc"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"argv"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">?>!) -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Runs the application."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/ApplicationProtocol\/run(argc:argv:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/applicationprotocol\/run(argc:argv:)"},"doc://GIO/documentation/GIO/ApplicationProtocol":{"role":"symbol","title":"ApplicationProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationProtocol"}],"abstract":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GIO\/documentation\/GIO\/Application"},{"type":"text","text":" is the foundation of an application.  It wraps some"},{"type":"text","text":" "},{"type":"text","text":"low-level platform-specific services and is intended to act as the"},{"type":"text","text":" "},{"type":"text","text":"foundation for higher-level application classes such as"},{"type":"text","text":" "},{"type":"codeVoice","code":"GtkApplication"},{"type":"text","text":" or "},{"type":"codeVoice","code":"MxApplication"},{"type":"text","text":".  In general, you should not use"},{"type":"text","text":" "},{"type":"text","text":"this class outside of a higher level framework."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/ApplicationProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ApplicationProtocol"}],"url":"\/documentation\/gio\/applicationprotocol"},"#https://gitlab.gnome.org/GNOME/glib/-/blob/HEAD/gio/tests/gapplication-example-cmdline2.c":{"title":"gapplication-example-cmdline2.c","titleInlineContent":[{"type":"text","text":"gapplication-example-cmdline2.c"}],"type":"link","identifier":"#https:\/\/gitlab.gnome.org\/GNOME\/glib\/-\/blob\/HEAD\/gio\/tests\/gapplication-example-cmdline2.c","url":"#https:\/\/gitlab.gnome.org\/GNOME\/glib\/-\/blob\/HEAD\/gio\/tests\/gapplication-example-cmdline2.c"}}}