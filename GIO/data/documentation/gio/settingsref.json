{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SettingsRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Reads and writes can be considered to be non-blocking.  Reading"},{"type":"text","text":" "},{"type":"text","text":"settings with "},{"type":"codeVoice","code":"GSettings"},{"type":"text","text":" is typically extremely fast: on"},{"type":"text","text":" "},{"type":"text","text":"approximately the same order of magnitude (but slower than) a"},{"type":"text","text":" "},{"type":"codeVoice","code":"GHashTable"},{"type":"text","text":" lookup.  Writing settings is also extremely fast in terms"},{"type":"text","text":" "},{"type":"text","text":"of time to return to your application, but can be extremely expensive"},{"type":"text","text":" "},{"type":"text","text":"for other threads and other processes.  Many settings backends"},{"type":"text","text":" "},{"type":"text","text":"(including dconf) have lazy initialisation which means in the common"},{"type":"text","text":" "},{"type":"text","text":"case of the user using their computer without modifying any settings"},{"type":"text","text":" "},{"type":"text","text":"a lot of work can be avoided.  For dconf, the D-Bus service doesn’t"},{"type":"text","text":" "},{"type":"text","text":"even need to be started in this case.  For this reason, you should"},{"type":"text","text":" "},{"type":"text","text":"only ever modify "},{"type":"codeVoice","code":"GSettings"},{"type":"text","text":" keys in response to explicit user action."},{"type":"text","text":" "},{"type":"text","text":"Particular care should be paid to ensure that modifications are not"},{"type":"text","text":" "},{"type":"text","text":"made during startup – for example, when setting the initial value"},{"type":"text","text":" "},{"type":"text","text":"of preferences widgets.  The built-in "},{"type":"codeVoice","code":"g_settings_bind()"},{"type":"text","text":" functionality"},{"type":"text","text":" "},{"type":"text","text":"is careful not to write settings in response to notify signals as a"},{"type":"text","text":" "},{"type":"text","text":"result of modifications that it makes to widgets."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When creating a GSettings instance, you have to specify a schema"},{"type":"text","text":" "},{"type":"text","text":"that describes the keys in your settings and their types and default"},{"type":"text","text":" "},{"type":"text","text":"values, as well as some other information."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Normally, a schema has a fixed path that determines where the settings"},{"type":"text","text":" "},{"type":"text","text":"are stored in the conceptual global tree of settings. However, schemas"},{"type":"text","text":" "},{"type":"text","text":"can also be ‘"},{"type":"reference","isActive":true,"identifier":"#gsettings-relocatable"},{"type":"text","text":"’, i.e. not equipped with"},{"type":"text","text":" "},{"type":"text","text":"a fixed path. This is"},{"type":"text","text":" "},{"type":"text","text":"useful e.g. when the schema describes an ‘account’, and you want to be"},{"type":"text","text":" "},{"type":"text","text":"able to store a arbitrary number of accounts."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Paths must start with and end with a forward slash character (’\/’)"},{"type":"text","text":" "},{"type":"text","text":"and must not contain two sequential slash characters.  Paths should"},{"type":"text","text":" "},{"type":"text","text":"be chosen based on a domain name associated with the program or"},{"type":"text","text":" "},{"type":"text","text":"library to which the settings belong.  Examples of paths are"},{"type":"text","text":" "},{"type":"text","text":"“\/org\/gtk\/settings\/file-chooser\/” and “\/ca\/desrt\/dconf-editor\/”."},{"type":"text","text":" "},{"type":"text","text":"Paths should not start with “\/apps\/”, “\/desktop\/” or “\/system\/” as"},{"type":"text","text":" "},{"type":"text","text":"they often did in GConf."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Unlike other configuration systems (like GConf), GSettings does not"},{"type":"text","text":" "},{"type":"text","text":"restrict keys to basic types like strings and numbers. GSettings stores"},{"type":"text","text":" "},{"type":"text","text":"values as "},{"type":"codeVoice","code":"GVariant"},{"type":"text","text":", and allows any "},{"type":"codeVoice","code":"GVariantType"},{"type":"text","text":" for keys. Key names"},{"type":"text","text":" "},{"type":"text","text":"are restricted to lowercase characters, numbers and ‘-’. Furthermore,"},{"type":"text","text":" "},{"type":"text","text":"the names must begin with a lowercase character, must not end"},{"type":"text","text":" "},{"type":"text","text":"with a ‘-’, and must not contain consecutive dashes."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Similar to GConf, the default values in GSettings schemas can be"},{"type":"text","text":" "},{"type":"text","text":"localized, but the localized values are stored in gettext catalogs"},{"type":"text","text":" "},{"type":"text","text":"and looked up with the domain that is specified in the"},{"type":"text","text":" "},{"type":"codeVoice","code":"gettext-domain"},{"type":"text","text":" attribute of the <schemalist> or <schema>"},{"type":"text","text":" "},{"type":"text","text":"elements and the category that is specified in the "},{"type":"codeVoice","code":"l10n"},{"type":"text","text":" attribute of"},{"type":"text","text":" "},{"type":"text","text":"the <default> element. The string which is translated includes all text in"},{"type":"text","text":" "},{"type":"text","text":"the <default> element, including any surrounding quotation marks."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"l10n"},{"type":"text","text":" attribute must be set to "},{"type":"codeVoice","code":"messages"},{"type":"text","text":" or "},{"type":"codeVoice","code":"time"},{"type":"text","text":", and sets the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.gnu.org\/software\/gettext\/manual\/html_node\/Aspects.html`index-locale-categories-1`"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The "},{"type":"codeVoice","code":"messages"},{"type":"text","text":" category should be used by default; use "},{"type":"codeVoice","code":"time"},{"type":"text","text":" for"},{"type":"text","text":" "},{"type":"text","text":"translatable date or time formats. A translation comment can be added as an"},{"type":"text","text":" "},{"type":"text","text":"XML comment immediately above the <default> element — it is recommended to"},{"type":"text","text":" "},{"type":"text","text":"add these comments to aid translators understand the meaning and"},{"type":"text","text":" "},{"type":"text","text":"implications of the default value. An optional translation "},{"type":"codeVoice","code":"context"},{"type":"text","text":" "},{"type":"text","text":"attribute can be set on the <default> element to disambiguate multiple"},{"type":"text","text":" "},{"type":"text","text":"defaults which use the same string."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example:"}]},{"type":"codeListing","syntax":null,"code":[" <default l10n='messages' context='Banned words'>['bad', 'words']<\/default>"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Translations of default values must remain syntactically valid serialized"},{"type":"text","text":" "},{"type":"codeVoice","code":"GVariants"},{"type":"text","text":" (e.g. retaining any surrounding quotation marks) or runtime"},{"type":"text","text":" "},{"type":"text","text":"errors will occur."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"GSettings uses schemas in a compact binary form that is created"},{"type":"text","text":" "},{"type":"text","text":"by the "},{"type":"reference","isActive":true,"identifier":"#glib-compile-schemas"},{"type":"text","text":" "},{"type":"text","text":"utility. The input is a schema description in an XML format."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A DTD for the gschema XML format can be found here:"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/gitlab.gnome.org\/GNOME\/glib\/-\/blob\/HEAD\/gio\/gschema.dtd"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"overridingTitleInlineContent":[{"type":"text","text":"glib-compile-schemas"}],"isActive":true,"type":"reference","identifier":"#glib-compile-schemas","overridingTitle":"glib-compile-schemas"},{"type":"text","text":" tool expects schema"},{"type":"text","text":" "},{"type":"text","text":"files to have the extension "},{"type":"codeVoice","code":".gschema.xml"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"At runtime, schemas are identified by their id (as specified in the"},{"type":"text","text":" "},{"type":"text","text":"id attribute of the <schema> element). The convention for schema"},{"type":"text","text":" "},{"type":"text","text":"ids is to use a dotted name, similar in style to a D-Bus bus name,"},{"type":"text","text":" "},{"type":"text","text":"e.g. “org.gnome.SessionManager”. In particular, if the settings are"},{"type":"text","text":" "},{"type":"text","text":"for a specific service that owns a D-Bus bus name, the D-Bus bus name"},{"type":"text","text":" "},{"type":"text","text":"and schema id should match. For schemas which deal with settings not"},{"type":"text","text":" "},{"type":"text","text":"associated with one named application, the id should not use"},{"type":"text","text":" "},{"type":"text","text":"StudlyCaps, e.g. “org.gnome.font-rendering”."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In addition to "},{"type":"codeVoice","code":"GVariant"},{"type":"text","text":" types, keys can have types that have"},{"type":"text","text":" "},{"type":"text","text":"enumerated types. These can be described by a <choice>,"},{"type":"text","text":" "},{"type":"text","text":"<enum> or <flags> element, as seen in the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"#schema-enumerated"},{"type":"text","text":". The underlying type of such a key"},{"type":"text","text":" "},{"type":"text","text":"is string, but you can use "},{"type":"codeVoice","code":"g_settings_get_enum()"},{"type":"text","text":", "},{"type":"codeVoice","code":"g_settings_set_enum()"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"codeVoice","code":"g_settings_get_flags()"},{"type":"text","text":", "},{"type":"codeVoice","code":"g_settings_set_flags()"},{"type":"text","text":" access the numeric values"},{"type":"text","text":" "},{"type":"text","text":"corresponding to the string value of enum and flags keys."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"An example for default value:"}]},{"type":"codeListing","syntax":null,"code":["<schemalist>","  <schema id=\"org.gtk.Test\" path=\"\/org\/gtk\/Test\/\" gettext-domain=\"test\">","","    <key name=\"greeting\" type=\"s\">","      <default l10n=\"messages\">\"Hello, earthlings\"<\/default>","      <summary>A greeting<\/summary>","      <description>","        Greeting of the invading martians","      <\/description>","    <\/key>","","    <key name=\"box\" type=\"(ii)\">","      <default>(20,30)<\/default>","    <\/key>","","    <key name=\"empty-string\" type=\"s\">","      <default>\"\"<\/default>","      <summary>Empty strings have to be provided in GVariant form<\/summary>","    <\/key>","","  <\/schema>","<\/schemalist>"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"An example for ranges, choices and enumerated types:"}]},{"type":"codeListing","syntax":null,"code":["<schemalist>","","  <enum id=\"org.gtk.Test.myenum\">","    <value nick=\"first\" value=\"1\"\/>","    <value nick=\"second\" value=\"2\"\/>","  <\/enum>","","  <flags id=\"org.gtk.Test.myflags\">","    <value nick=\"flag1\" value=\"1\"\/>","    <value nick=\"flag2\" value=\"2\"\/>","    <value nick=\"flag3\" value=\"4\"\/>","  <\/flags>","","  <schema id=\"org.gtk.Test\">","","    <key name=\"key-with-range\" type=\"i\">","      <range min=\"1\" max=\"100\"\/>","      <default>10<\/default>","    <\/key>","","    <key name=\"key-with-choices\" type=\"s\">","      <choices>","        <choice value='Elisabeth'\/>","        <choice value='Annabeth'\/>","        <choice value='Joe'\/>","      <\/choices>","      <aliases>","        <alias value='Anna' target='Annabeth'\/>","        <alias value='Beth' target='Elisabeth'\/>","      <\/aliases>","      <default>'Joe'<\/default>","    <\/key>","","    <key name='enumerated-key' enum='org.gtk.Test.myenum'>","      <default>'first'<\/default>","    <\/key>","","    <key name='flags-key' flags='org.gtk.Test.myflags'>","      <default>[\"flag1\",\"flag2\"]<\/default>","    <\/key>","  <\/schema>","<\/schemalist>"]},{"anchor":"Vendor-overrides","level":2,"type":"heading","text":"Vendor overrides"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Default values are defined in the schemas that get installed by"},{"type":"text","text":" "},{"type":"text","text":"an application. Sometimes, it is necessary for a vendor or distributor"},{"type":"text","text":" "},{"type":"text","text":"to adjust these defaults. Since patching the XML source for the schema"},{"type":"text","text":" "},{"type":"text","text":"is inconvenient and error-prone,"},{"type":"text","text":" "},{"overridingTitleInlineContent":[{"type":"text","text":"glib-compile-schemas"}],"isActive":true,"type":"reference","identifier":"#glib-compile-schemas","overridingTitle":"glib-compile-schemas"},{"type":"text","text":" reads so-called vendor"},{"type":"text","text":" "},{"type":"text","text":"override’ files. These are keyfiles in the same directory as the XML"},{"type":"text","text":" "},{"type":"text","text":"schema sources which can override default values. The schema id serves"},{"type":"text","text":" "},{"type":"text","text":"as the group name in the key file, and the values are expected in"},{"type":"text","text":" "},{"type":"text","text":"serialized GVariant form, as in the following example:"}]},{"type":"codeListing","syntax":null,"code":["    [org.gtk.Example]","    key1='string'","    key2=1.5"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"glib-compile-schemas expects schema files to have the extension"},{"type":"text","text":" "},{"type":"codeVoice","code":".gschema.override"},{"type":"text","text":"."}]},{"anchor":"Binding","level":2,"type":"heading","text":"Binding"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A very convenient feature of GSettings lets you bind "},{"type":"codeVoice","code":"GObject"},{"type":"text","text":" properties"},{"type":"text","text":" "},{"type":"text","text":"directly to settings, using "},{"type":"codeVoice","code":"g_settings_bind()"},{"type":"text","text":". Once a GObject property"},{"type":"text","text":" "},{"type":"text","text":"has been bound to a setting, changes on either side are automatically"},{"type":"text","text":" "},{"type":"text","text":"propagated to the other side. GSettings handles details like mapping"},{"type":"text","text":" "},{"type":"text","text":"between GObject and GVariant types, and preventing infinite cycles."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This makes it very easy to hook up a preferences dialog to the"},{"type":"text","text":" "},{"type":"text","text":"underlying settings. To make this even more convenient, GSettings"},{"type":"text","text":" "},{"type":"text","text":"looks for a boolean property with the name “sensitivity” and"},{"type":"text","text":" "},{"type":"text","text":"automatically binds it to the writability of the bound setting."},{"type":"text","text":" "},{"type":"text","text":"If this ‘magic’ gets in the way, it can be suppressed with the"},{"type":"text","text":" "},{"type":"codeVoice","code":"G_SETTINGS_BIND_NO_SENSITIVITY"},{"type":"text","text":" flag."}]},{"anchor":"Relocatable-schemas--<a-name=gsettings-relocatable><a>","level":2,"type":"heading","text":"Relocatable schemas # <a name=\"gsettings-relocatable\"><\/a>"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A relocatable schema is one with no "},{"type":"codeVoice","code":"path"},{"type":"text","text":" attribute specified on its"},{"type":"text","text":" "},{"type":"text","text":"<schema> element. By using "},{"type":"codeVoice","code":"g_settings_new_with_path()"},{"type":"text","text":", a "},{"type":"codeVoice","code":"GSettings"},{"type":"text","text":" object"},{"type":"text","text":" "},{"type":"text","text":"can be instantiated for a relocatable schema, assigning a path to the"},{"type":"text","text":" "},{"type":"text","text":"instance. Paths passed to "},{"type":"codeVoice","code":"g_settings_new_with_path()"},{"type":"text","text":" will typically be"},{"type":"text","text":" "},{"type":"text","text":"constructed dynamically from a constant prefix plus some form of instance"},{"type":"text","text":" "},{"type":"text","text":"identifier; but they must still be valid GSettings paths. Paths could also"},{"type":"text","text":" "},{"type":"text","text":"be constant and used with a globally installed schema originating from a"},{"type":"text","text":" "},{"type":"text","text":"dependency library."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, a relocatable schema could be used to store geometry information"},{"type":"text","text":" "},{"type":"text","text":"for different windows in an application. If the schema ID was"},{"type":"text","text":" "},{"type":"codeVoice","code":"org.foo.MyApp.Window"},{"type":"text","text":", it could be instantiated for paths"},{"type":"text","text":" "},{"type":"codeVoice","code":"\/org\/foo\/MyApp\/main\/"},{"type":"text","text":", "},{"type":"codeVoice","code":"\/org\/foo\/MyApp\/document-1\/"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"codeVoice","code":"\/org\/foo\/MyApp\/document-2\/"},{"type":"text","text":", etc. If any of the paths are well-known"},{"type":"text","text":" "},{"type":"text","text":"they can be specified as <child> elements in the parent schema, e.g.:"}]},{"type":"codeListing","syntax":null,"code":["<schema id=\"org.foo.MyApp\" path=\"\/org\/foo\/MyApp\/\">","  <child name=\"main\" schema=\"org.foo.MyApp.Window\"\/>","<\/schema>"]},{"anchor":"Build-system-integration--<a-name=gsettings-build-system><a>","level":2,"type":"heading","text":"Build system integration # <a name=\"gsettings-build-system\"><\/a>"},{"type":"paragraph","inlineContent":[{"type":"text","text":"GSettings comes with autotools integration to simplify compiling and"},{"type":"text","text":" "},{"type":"text","text":"installing schemas. To add GSettings support to an application, add the"},{"type":"text","text":" "},{"type":"text","text":"following to your "},{"type":"codeVoice","code":"configure.ac"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":null,"code":["GLIB_GSETTINGS"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the appropriate "},{"type":"codeVoice","code":"Makefile.am"},{"type":"text","text":", use the following snippet to compile and"},{"type":"text","text":" "},{"type":"text","text":"install the named schema:"}]},{"type":"codeListing","syntax":null,"code":["gsettings_SCHEMAS = org.foo.MyApp.gschema.xml","EXTRA_DIST = $(gsettings_SCHEMAS)","","@GSETTINGS_RULES@"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"No changes are needed to the build system to mark a schema XML file for"},{"type":"text","text":" "},{"type":"text","text":"translation. Assuming it sets the "},{"type":"codeVoice","code":"gettext-domain"},{"type":"text","text":" attribute, a schema may"},{"type":"text","text":" "},{"type":"text","text":"be marked for translation by adding it to "},{"type":"codeVoice","code":"POTFILES.in"},{"type":"text","text":", assuming gettext"},{"type":"text","text":" "},{"type":"text","text":"0.19 is in use (the preferred method for translation):"}]},{"type":"codeListing","syntax":null,"code":["data\/org.foo.MyApp.gschema.xml"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Alternatively, if intltool 0.50.1 is in use:"}]},{"type":"codeListing","syntax":null,"code":["[type: gettext\/gsettings]data\/org.foo.MyApp.gschema.xml"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"GSettings will use gettext to look up translations for the <summary> and"},{"type":"text","text":" "},{"type":"text","text":"<description> elements, and also any <default> elements which have a "},{"type":"codeVoice","code":"l10n"},{"type":"text","text":" "},{"type":"text","text":"attribute set. Translations must not be included in the "},{"type":"codeVoice","code":".gschema.xml"},{"type":"text","text":" file"},{"type":"text","text":" "},{"type":"text","text":"by the build system, for example by using intltool XML rules with a"},{"type":"text","text":" "},{"type":"codeVoice","code":".gschema.xml.in"},{"type":"text","text":" template."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If an enumerated type defined in a C header file is to be used in a GSettings"},{"type":"text","text":" "},{"type":"text","text":"schema, it can either be defined manually using an <enum> element in the"},{"type":"text","text":" "},{"type":"text","text":"schema XML, or it can be extracted automatically from the C header. This"},{"type":"text","text":" "},{"type":"text","text":"approach is preferred, as it ensures the two representations are always"},{"type":"text","text":" "},{"type":"text","text":"synchronised. To do so, add the following to the relevant "},{"type":"codeVoice","code":"Makefile.am"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":null,"code":["gsettings_ENUM_NAMESPACE = org.foo.MyApp","gsettings_ENUM_FILES = my-app-enums.h my-app-misc.h"]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"gsettings_ENUM_NAMESPACE"},{"type":"text","text":" specifies the schema namespace for the enum files,"},{"type":"text","text":" "},{"type":"text","text":"which are specified in "},{"type":"codeVoice","code":"gsettings_ENUM_FILES"},{"type":"text","text":". This will generate a"},{"type":"text","text":" "},{"type":"codeVoice","code":"org.foo.MyApp.enums.xml"},{"type":"text","text":" file containing the extracted enums, which will be"},{"type":"text","text":" "},{"type":"text","text":"automatically included in the schema compilation, install and uninstall"},{"type":"text","text":" "},{"type":"text","text":"rules. It should not be committed to version control or included in"},{"type":"text","text":" "},{"type":"codeVoice","code":"EXTRA_DIST"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"SettingsRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GSettings"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"codeVoice","code":"SettingsProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"codeVoice","code":"SettingsRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"GSettings"},{"type":"text","text":" instance."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gio\/settingsref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GIO\/4GLib14PointerWrapperP","doc:\/\/GIO\/10GLibObject14GWeakCapturingP","doc:\/\/GIO\/10GLibObject0B8ProtocolP","doc:\/\/GIO\/documentation\/GIO\/SettingsProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/GIO\/documentation\/GIO\/SettingsRef","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GSettings"},{"type":"text","text":" class provides a convenient API for storing and retrieving"},{"type":"text","text":" "},{"type":"text","text":"application settings."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SettingsRef"}],"title":"SettingsRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:3GIO11SettingsRefV","modules":[{"name":"GIO"}],"navigatorTitle":[{"kind":"identifier","text":"SettingsRef"}]},"hierarchy":{"paths":[["doc:\/\/GIO\/documentation\/GIO"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(_:)-2hdig","doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(_:)-2mde4","doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(_:)-4l1sv","doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(_:)-4texe","doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(_:)-99aom","doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(backend:backend:)","doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(backendAndPath:backend:path:)","doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(cPointer:)","doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(constPointer:)","doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(full:backend:path:)","doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(gconstpointer:)","doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(gpointer:)","doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(mutating:)","doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(opaquePointer:)","doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(path:path:)","doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(schemaID:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/ptr"]},{"title":"Type Methods","identifiers":["doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/new(full:backend:path:)","doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/newWith(backend:backend:)","doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/newWith(backendAndPath:backend:path:)","doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/newWith(path:path:)","doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/unowned(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/GWeakCapturing-Implementations","doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/ObjectProtocol-Implementations","doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/SettingsProtocol-Implementations"],"generated":true}],"references":{"doc://GIO/documentation/GIO/SettingsRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"SettingsProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/settingsref\/init(constpointer:)"},"doc://GIO/documentation/GIO/SettingsRef/init(_:)-2mde4":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"codeVoice","code":"SettingsProtocol"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(_:)-2mde4","kind":"symbol","type":"topic","url":"\/documentation\/gio\/settingsref\/init(_:)-2mde4"},"doc://GIO/10GLibObject14GWeakCapturingP":{"type":"unresolvable","title":"GLibObject.GWeakCapturing","identifier":"doc:\/\/GIO\/10GLibObject14GWeakCapturingP"},"doc://GIO/documentation/GIO/SettingsRef/GWeakCapturing-Implementations":{"role":"collectionGroup","title":"GWeakCapturing Implementations","abstract":[],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/GWeakCapturing-Implementations","kind":"article","type":"topic","url":"\/documentation\/gio\/settingsref\/gweakcapturing-implementations"},"doc://GIO/documentation/GIO/SettingsRef/init(_:)-4texe":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GSettings"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(_:)-4texe","kind":"symbol","type":"topic","url":"\/documentation\/gio\/settingsref\/init(_:)-4texe"},"#schema-enumerated":{"title":"example","titleInlineContent":[{"type":"text","text":"example"}],"type":"link","identifier":"#schema-enumerated","url":"#schema-enumerated"},"doc://GIO/documentation/GIO/SettingsRef/init(_:)-99aom":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GSettings"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(_:)-99aom","kind":"symbol","type":"topic","url":"\/documentation\/gio\/settingsref\/init(_:)-99aom"},"doc://GIO/documentation/GIO/SettingsRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"SettingsProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/settingsref\/init(opaquepointer:)"},"doc://GIO/documentation/GIO/SettingsRef/newWith(backendAndPath:backend:path:)":{"role":"symbol","title":"newWith(backendAndPath:backend:path:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"newWith"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"SettingsBackendT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"backendAndPath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:gtypes.h@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"backend"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SettingsBackendT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:gtypes.h@T@gchar"},{"kind":"text","text":">!) -> "},{"kind":"typeIdentifier","text":"SettingsRef","preciseIdentifier":"s:3GIO11SettingsRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"GSettings"},{"type":"text","text":" object with the schema specified by"},{"type":"text","text":" "},{"type":"codeVoice","code":"schema_id"},{"type":"text","text":" and a given "},{"type":"codeVoice","code":"GSettingsBackend"},{"type":"text","text":" and path."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/newWith(backendAndPath:backend:path:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/settingsref\/newwith(backendandpath:backend:path:)"},"doc://GIO/documentation/GIO/SettingsRef/newWith(backend:backend:)":{"role":"symbol","title":"newWith(backend:backend:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"newWith"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"SettingsBackendT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"backend"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:gtypes.h@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"backend"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SettingsBackendT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SettingsRef","preciseIdentifier":"s:3GIO11SettingsRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"GSettings"},{"type":"text","text":" object with the schema specified by"},{"type":"text","text":" "},{"type":"codeVoice","code":"schema_id"},{"type":"text","text":" and a given "},{"type":"codeVoice","code":"GSettingsBackend"},{"type":"text","text":"."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/newWith(backend:backend:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/settingsref\/newwith(backend:backend:)"},"doc://GIO/documentation/GIO/SettingsRef/init(path:path:)":{"role":"symbol","title":"init(path:path:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:gtypes.h@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:gtypes.h@T@gchar"},{"kind":"text","text":">!)"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"GSettings"},{"type":"text","text":" object with the relocatable schema specified"},{"type":"text","text":" "},{"type":"text","text":"by "},{"type":"codeVoice","code":"schema_id"},{"type":"text","text":" and a given path."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(path:path:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/settingsref\/init(path:path:)"},"doc://GIO/documentation/GIO/SettingsRef/unowned(_:)":{"role":"symbol","title":"unowned(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unowned"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SettingsRef","preciseIdentifier":"s:3GIO11SettingsRefV"}],"abstract":[{"type":"text","text":"This factory is syntactic sugar for setting weak pointers wrapped in "},{"type":"codeVoice","code":"GWeak<T>"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/unowned(_:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/settingsref\/unowned(_:)"},"doc://GIO/documentation/GIO/SettingsRef/newWith(path:path:)":{"role":"symbol","title":"newWith(path:path:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"newWith"},{"kind":"text","text":"("},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:gtypes.h@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:gtypes.h@T@gchar"},{"kind":"text","text":">!) -> "},{"kind":"typeIdentifier","text":"SettingsRef","preciseIdentifier":"s:3GIO11SettingsRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"GSettings"},{"type":"text","text":" object with the relocatable schema specified"},{"type":"text","text":" "},{"type":"text","text":"by "},{"type":"codeVoice","code":"schema_id"},{"type":"text","text":" and a given path."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/newWith(path:path:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/settingsref\/newwith(path:path:)"},"doc://GIO/documentation/GIO/SettingsRef/SettingsProtocol-Implementations":{"role":"collectionGroup","title":"SettingsProtocol Implementations","abstract":[],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/SettingsProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gio\/settingsref\/settingsprotocol-implementations"},"doc://GIO/documentation/GIO/SettingsRef/init(schemaID:)":{"role":"symbol","title":"init(schemaID:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"schemaID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:gtypes.h@T@gchar"},{"kind":"text","text":">!)"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"GSettings"},{"type":"text","text":" object with the schema specified by"},{"type":"text","text":" "},{"type":"codeVoice","code":"schema_id"},{"type":"text","text":"."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(schemaID:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/settingsref\/init(schemaid:)"},"doc://GIO/documentation/GIO/SettingsRef/init(backend:backend:)":{"role":"symbol","title":"init(backend:backend:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"SettingsBackendT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"backend"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:gtypes.h@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"backend"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SettingsBackendT"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"GSettings"},{"type":"text","text":" object with the schema specified by"},{"type":"text","text":" "},{"type":"codeVoice","code":"schema_id"},{"type":"text","text":" and a given "},{"type":"codeVoice","code":"GSettingsBackend"},{"type":"text","text":"."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(backend:backend:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/settingsref\/init(backend:backend:)"},"#glib-compile-schemas":{"title":"glib-compile-schemas","titleInlineContent":[{"type":"text","text":"glib-compile-schemas"}],"type":"link","identifier":"#glib-compile-schemas","url":"#glib-compile-schemas"},"doc://GIO/documentation/GIO/SettingsRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:gtypes.h@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/settingsref\/init(gconstpointer:)"},"doc://GIO/documentation/GIO/SettingsRef":{"role":"symbol","title":"SettingsRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SettingsRef"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GSettings"},{"type":"text","text":" class provides a convenient API for storing and retrieving"},{"type":"text","text":" "},{"type":"text","text":"application settings."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SettingsRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SettingsRef"}],"url":"\/documentation\/gio\/settingsref"},"doc://GIO/documentation/GIO/SettingsRef/init(full:backend:path:)":{"role":"symbol","title":"init(full:backend:path:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"SettingsBackendT"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"SettingsSchemaT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"full"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SettingsSchemaT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"backend"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SettingsBackendT"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:gtypes.h@T@gchar"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"GSettings"},{"type":"text","text":" object with a given schema, backend and"},{"type":"text","text":" "},{"type":"text","text":"path."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(full:backend:path:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/settingsref\/init(full:backend:path:)"},"doc://GIO/documentation/GIO/SettingsRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"SettingsProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/settingsref\/init(mutating:)"},"doc://GIO/documentation/GIO/SettingsRef/init(_:)-2hdig":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GSettings"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(_:)-2hdig","kind":"symbol","type":"topic","url":"\/documentation\/gio\/settingsref\/init(_:)-2hdig"},"doc://GIO/documentation/GIO/SettingsRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"SettingsProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/settingsref\/init(cpointer:)"},"doc://GIO/documentation/GIO":{"role":"collection","title":"GIO","abstract":[],"identifier":"doc:\/\/GIO\/documentation\/GIO","kind":"symbol","type":"topic","url":"\/documentation\/gio"},"doc://GIO/documentation/GIO/SettingsProtocol":{"role":"symbol","title":"SettingsProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SettingsProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GSettings"},{"type":"text","text":" class provides a convenient API for storing and retrieving"},{"type":"text","text":" "},{"type":"text","text":"application settings."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SettingsProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SettingsProtocol"}],"url":"\/documentation\/gio\/settingsprotocol"},"doc://GIO/documentation/GIO/SettingsRef/init(backendAndPath:backend:path:)":{"role":"symbol","title":"init(backendAndPath:backend:path:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"SettingsBackendT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"backendAndPath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:gtypes.h@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"backend"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SettingsBackendT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:gtypes.h@T@gchar"},{"kind":"text","text":">!)"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"GSettings"},{"type":"text","text":" object with the schema specified by"},{"type":"text","text":" "},{"type":"codeVoice","code":"schema_id"},{"type":"text","text":" and a given "},{"type":"codeVoice","code":"GSettingsBackend"},{"type":"text","text":" and path."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(backendAndPath:backend:path:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/settingsref\/init(backendandpath:backend:path:)"},"https://www.gnu.org/software/gettext/manual/html_node/Aspects.html`index-locale-categories-1`":{"title":"locale category for translation","titleInlineContent":[{"type":"text","text":"locale category for"},{"type":"text","text":" "},{"type":"text","text":"translation"}],"type":"link","identifier":"https:\/\/www.gnu.org\/software\/gettext\/manual\/html_node\/Aspects.html`index-locale-categories-1`","url":"https:\/\/www.gnu.org\/software\/gettext\/manual\/html_node\/Aspects.html`index-locale-categories-1`"},"doc://GIO/documentation/GIO/SettingsRef/init(_:)-4l1sv":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GSettings"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(_:)-4l1sv","kind":"symbol","type":"topic","url":"\/documentation\/gio\/settingsref\/init(_:)-4l1sv"},"doc://GIO/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/GIO\/4GLib14PointerWrapperP"},"doc://GIO/documentation/GIO/SettingsRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GSettings"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"codeVoice","code":"settings_ptr"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/gio\/settingsref\/ptr"},"https://gitlab.gnome.org/GNOME/glib/-/blob/HEAD/gio/gschema.dtd":{"title":"gschema.dtd","titleInlineContent":[{"type":"text","text":"gschema.dtd"}],"type":"link","identifier":"https:\/\/gitlab.gnome.org\/GNOME\/glib\/-\/blob\/HEAD\/gio\/gschema.dtd","url":"https:\/\/gitlab.gnome.org\/GNOME\/glib\/-\/blob\/HEAD\/gio\/gschema.dtd"},"doc://GIO/documentation/GIO/SettingsRef/new(full:backend:path:)":{"role":"symbol","title":"new(full:backend:path:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"new"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"SettingsBackendT"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"SettingsSchemaT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"full"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SettingsSchemaT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"backend"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SettingsBackendT"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:gtypes.h@T@gchar"},{"kind":"text","text":">?) -> "},{"kind":"typeIdentifier","text":"SettingsRef","preciseIdentifier":"s:3GIO11SettingsRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"GSettings"},{"type":"text","text":" object with a given schema, backend and"},{"type":"text","text":" "},{"type":"text","text":"path."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/new(full:backend:path:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/settingsref\/new(full:backend:path:)"},"doc://GIO/10GLibObject0B8ProtocolP":{"type":"unresolvable","title":"GLibObject.ObjectProtocol","identifier":"doc:\/\/GIO\/10GLibObject0B8ProtocolP"},"#gsettings-relocatable":{"title":"relocatable","titleInlineContent":[{"type":"text","text":"relocatable"}],"type":"link","identifier":"#gsettings-relocatable","url":"#gsettings-relocatable"},"doc://GIO/documentation/GIO/SettingsRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/settingsref\/init(gpointer:)"},"doc://GIO/documentation/GIO/SettingsRef/ObjectProtocol-Implementations":{"role":"collectionGroup","title":"ObjectProtocol Implementations","abstract":[],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SettingsRef\/ObjectProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gio\/settingsref\/objectprotocol-implementations"}}}