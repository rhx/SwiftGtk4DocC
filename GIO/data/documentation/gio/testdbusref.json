{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestDBusRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that "},{"type":"codeVoice","code":"GTestDBus"},{"type":"text","text":" modifies the user’s environment, calling "},{"type":"codeVoice","code":"setenv()"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"This is not thread-safe, so all "},{"type":"codeVoice","code":"GTestDBus"},{"type":"text","text":" calls should be completed before"},{"type":"text","text":" "},{"type":"text","text":"threads are spawned, or should have appropriate locking to ensure no access"},{"type":"text","text":" "},{"type":"text","text":"conflicts to environment variables shared between "},{"type":"codeVoice","code":"GTestDBus"},{"type":"text","text":" and other"},{"type":"text","text":" "},{"type":"text","text":"threads."}]},{"anchor":"Creating-unit-tests-using-GTestDBus","level":2,"type":"heading","text":"Creating unit tests using GTestDBus"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Testing of D-Bus services can be tricky because normally we only ever run"},{"type":"text","text":" "},{"type":"text","text":"D-Bus services over an existing instance of the D-Bus daemon thus we"},{"type":"text","text":" "},{"type":"text","text":"usually don’t activate D-Bus services that are not yet installed into the"},{"type":"text","text":" "},{"type":"text","text":"target system. The "},{"type":"codeVoice","code":"GTestDBus"},{"type":"text","text":" object makes this easier for us by taking care"},{"type":"text","text":" "},{"type":"text","text":"of the lower level tasks such as running a private D-Bus daemon and looking"},{"type":"text","text":" "},{"type":"text","text":"up uninstalled services in customizable locations, typically in your source"},{"type":"text","text":" "},{"type":"text","text":"code tree."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The first thing you will need is a separate service description file for the"},{"type":"text","text":" "},{"type":"text","text":"D-Bus daemon. Typically a "},{"type":"codeVoice","code":"services"},{"type":"text","text":" subdirectory of your "},{"type":"codeVoice","code":"tests"},{"type":"text","text":" directory"},{"type":"text","text":" "},{"type":"text","text":"is a good place to put this file."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The service file should list your service along with an absolute path to the"},{"type":"text","text":" "},{"type":"text","text":"uninstalled service executable in your source tree. Using autotools we would"},{"type":"text","text":" "},{"type":"text","text":"achieve this by adding a file such as "},{"type":"codeVoice","code":"my-server.service.in"},{"type":"text","text":" in the services"},{"type":"text","text":" "},{"type":"text","text":"directory and have it processed by configure."}]},{"type":"codeListing","syntax":null,"code":["    [D-BUS Service]","    Name=org.gtk.GDBus.Examples.ObjectManager","    Exec=@abs_top_builddir@\/gio\/tests\/gdbus-example-objectmanager-server"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You will also need to indicate this service directory in your test"},{"type":"text","text":" "},{"type":"text","text":"fixtures, so you will need to pass the path while compiling your"},{"type":"text","text":" "},{"type":"text","text":"test cases. Typically this is done with autotools with an added"},{"type":"text","text":" "},{"type":"text","text":"preprocessor flag specified to compile your tests such as:"}]},{"type":"codeListing","syntax":null,"code":["    -DTEST_SERVICES=\\\"\"$(abs_top_builddir)\/tests\/services\"\\\""]},{"type":"codeListing","syntax":null,"code":["Once you have a service definition file which is local to your source tree,"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"you can proceed to set up a GTest fixture using the "},{"type":"codeVoice","code":"GTestDBus"},{"type":"text","text":" scaffolding."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"An example of a test fixture for D-Bus services can be found"},{"type":"text","text":" "},{"type":"text","text":"here:"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/gitlab.gnome.org\/GNOME\/glib\/-\/blob\/HEAD\/gio\/tests\/gdbus-test-fixture.c"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that these examples only deal with isolating the D-Bus aspect of your"},{"type":"text","text":" "},{"type":"text","text":"service. To successfully run isolated unit tests on your service you may need"},{"type":"text","text":" "},{"type":"text","text":"some additional modifications to your test case fixture. For example; if your"},{"type":"text","text":" "},{"type":"text","text":"service uses GSettings and installs a schema then it is important that your test service"},{"type":"text","text":" "},{"type":"text","text":"not load the schema in the ordinary installed location (chances are that your service"},{"type":"text","text":" "},{"type":"text","text":"and schema files are not yet installed, or worse; there is an older version of the"},{"type":"text","text":" "},{"type":"text","text":"schema file sitting in the install location)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Most of the time we can work around these obstacles using the"},{"type":"text","text":" "},{"type":"text","text":"environment. Since the environment is inherited by the D-Bus daemon"},{"type":"text","text":" "},{"type":"text","text":"created by "},{"type":"codeVoice","code":"GTestDBus"},{"type":"text","text":" and then in turn inherited by any services the"},{"type":"text","text":" "},{"type":"text","text":"D-Bus daemon activates, using the setup routine for your fixture is"},{"type":"text","text":" "},{"type":"text","text":"a practical place to help sandbox your runtime environment. For the"},{"type":"text","text":" "},{"type":"text","text":"rather typical GSettings case we can work around this by setting"},{"type":"text","text":" "},{"type":"codeVoice","code":"GSETTINGS_SCHEMA_DIR"},{"type":"text","text":" to the in tree directory holding your schemas"},{"type":"text","text":" "},{"type":"text","text":"in the above "},{"type":"codeVoice","code":"fixture_setup()"},{"type":"text","text":" routine."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The GSettings schemas need to be locally pre-compiled for this to work. This can be achieved"},{"type":"text","text":" "},{"type":"text","text":"by compiling the schemas locally as a step before running test cases, an autotools setup might"},{"type":"text","text":" "},{"type":"text","text":"do the following in the directory holding schemas:"}]},{"type":"codeListing","syntax":null,"code":["    all-am:","            $(GLIB_COMPILE_SCHEMAS) .","","    CLEANFILES += gschemas.compiled"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"TestDBusRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GTestDBus"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"codeVoice","code":"TestDBusProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"codeVoice","code":"TestDBusRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"GTestDBus"},{"type":"text","text":" instance."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gio\/testdbusref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GIO\/4GLib14PointerWrapperP","doc:\/\/GIO\/10GLibObject14GWeakCapturingP","doc:\/\/GIO\/10GLibObject0B8ProtocolP","doc:\/\/GIO\/documentation\/GIO\/TestDBusProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/GIO\/documentation\/GIO\/TestDBusRef","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A helper class for testing code which uses D-Bus without touching the user’s"},{"type":"text","text":" "},{"type":"text","text":"session bus."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestDBusRef"}],"title":"TestDBusRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:3GIO11TestDBusRefV","modules":[{"name":"GIO"}],"navigatorTitle":[{"kind":"identifier","text":"TestDBusRef"}]},"hierarchy":{"paths":[["doc:\/\/GIO\/documentation\/GIO"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/init(_:)-24tb1","doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/init(_:)-4bbjt","doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/init(_:)-6yybc","doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/init(_:)-8pg18","doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/init(_:)-gref","doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/init(cPointer:)","doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/init(constPointer:)","doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/init(flags:)","doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/init(gconstpointer:)","doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/init(gpointer:)","doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/init(mutating:)","doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/init(opaquePointer:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/ptr"]},{"title":"Type Methods","identifiers":["doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/unowned(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/GWeakCapturing-Implementations","doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/ObjectProtocol-Implementations","doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/TestDBusProtocol-Implementations"],"generated":true}],"references":{"doc://GIO/documentation/GIO/TestDBusRef/init(_:)-gref":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"codeVoice","code":"TestDBusProtocol"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/init(_:)-gref","kind":"symbol","type":"topic","url":"\/documentation\/gio\/testdbusref\/init(_:)-gref"},"doc://GIO/documentation/GIO/TestDBusRef/init(flags:)":{"role":"symbol","title":"init(flags:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"flags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TestDBusFlags","preciseIdentifier":"s:3GIO13TestDBusFlagsV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Create a new "},{"type":"codeVoice","code":"GTestDBus"},{"type":"text","text":" object."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/init(flags:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/testdbusref\/init(flags:)"},"doc://GIO/documentation/GIO/TestDBusRef":{"role":"symbol","title":"TestDBusRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestDBusRef"}],"abstract":[{"type":"text","text":"A helper class for testing code which uses D-Bus without touching the user’s"},{"type":"text","text":" "},{"type":"text","text":"session bus."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TestDBusRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TestDBusRef"}],"url":"\/documentation\/gio\/testdbusref"},"doc://GIO/documentation/GIO/TestDBusRef/ObjectProtocol-Implementations":{"role":"collectionGroup","title":"ObjectProtocol Implementations","abstract":[],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/ObjectProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gio\/testdbusref\/objectprotocol-implementations"},"https://gitlab.gnome.org/GNOME/glib/-/blob/HEAD/gio/tests/gdbus-test-fixture.c":{"title":"gdbus-test-fixture.c","titleInlineContent":[{"type":"text","text":"gdbus-test-fixture.c"}],"type":"link","identifier":"https:\/\/gitlab.gnome.org\/GNOME\/glib\/-\/blob\/HEAD\/gio\/tests\/gdbus-test-fixture.c","url":"https:\/\/gitlab.gnome.org\/GNOME\/glib\/-\/blob\/HEAD\/gio\/tests\/gdbus-test-fixture.c"},"doc://GIO/documentation/GIO/TestDBusRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"TestDBusProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/testdbusref\/init(constpointer:)"},"doc://GIO/documentation/GIO/TestDBusRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:gtypes.h@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/testdbusref\/init(gconstpointer:)"},"doc://GIO/documentation/GIO/TestDBusRef/init(_:)-4bbjt":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GTestDBus"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/init(_:)-4bbjt","kind":"symbol","type":"topic","url":"\/documentation\/gio\/testdbusref\/init(_:)-4bbjt"},"doc://GIO/documentation/GIO/TestDBusRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"TestDBusProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/testdbusref\/init(mutating:)"},"doc://GIO/documentation/GIO/TestDBusRef/unowned(_:)":{"role":"symbol","title":"unowned(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unowned"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"TestDBusRef","preciseIdentifier":"s:3GIO11TestDBusRefV"}],"abstract":[{"type":"text","text":"This factory is syntactic sugar for setting weak pointers wrapped in "},{"type":"codeVoice","code":"GWeak<T>"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/unowned(_:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/testdbusref\/unowned(_:)"},"doc://GIO/documentation/GIO/TestDBusRef/init(_:)-8pg18":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GTestDBus"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/init(_:)-8pg18","kind":"symbol","type":"topic","url":"\/documentation\/gio\/testdbusref\/init(_:)-8pg18"},"doc://GIO/documentation/GIO/TestDBusRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"TestDBusProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/testdbusref\/init(cpointer:)"},"doc://GIO/documentation/GIO/TestDBusRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/testdbusref\/init(gpointer:)"},"doc://GIO/documentation/GIO/TestDBusRef/init(_:)-24tb1":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GTestDBus"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/init(_:)-24tb1","kind":"symbol","type":"topic","url":"\/documentation\/gio\/testdbusref\/init(_:)-24tb1"},"doc://GIO/documentation/GIO/TestDBusRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"TestDBusProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/testdbusref\/init(opaquepointer:)"},"doc://GIO/10GLibObject0B8ProtocolP":{"type":"unresolvable","title":"GLibObject.ObjectProtocol","identifier":"doc:\/\/GIO\/10GLibObject0B8ProtocolP"},"doc://GIO/documentation/GIO":{"role":"collection","title":"GIO","abstract":[],"identifier":"doc:\/\/GIO\/documentation\/GIO","kind":"symbol","type":"topic","url":"\/documentation\/gio"},"doc://GIO/documentation/GIO/TestDBusRef/GWeakCapturing-Implementations":{"role":"collectionGroup","title":"GWeakCapturing Implementations","abstract":[],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/GWeakCapturing-Implementations","kind":"article","type":"topic","url":"\/documentation\/gio\/testdbusref\/gweakcapturing-implementations"},"doc://GIO/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/GIO\/4GLib14PointerWrapperP"},"doc://GIO/10GLibObject14GWeakCapturingP":{"type":"unresolvable","title":"GLibObject.GWeakCapturing","identifier":"doc:\/\/GIO\/10GLibObject14GWeakCapturingP"},"doc://GIO/documentation/GIO/TestDBusProtocol":{"role":"symbol","title":"TestDBusProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestDBusProtocol"}],"abstract":[{"type":"text","text":"A helper class for testing code which uses D-Bus without touching the user’s"},{"type":"text","text":" "},{"type":"text","text":"session bus."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TestDBusProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TestDBusProtocol"}],"url":"\/documentation\/gio\/testdbusprotocol"},"doc://GIO/documentation/GIO/TestDBusRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GTestDBus"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"codeVoice","code":"test_dbus_ptr"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/gio\/testdbusref\/ptr"},"doc://GIO/documentation/GIO/TestDBusRef/init(_:)-6yybc":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GTestDBus"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/init(_:)-6yybc","kind":"symbol","type":"topic","url":"\/documentation\/gio\/testdbusref\/init(_:)-6yybc"},"doc://GIO/documentation/GIO/TestDBusRef/TestDBusProtocol-Implementations":{"role":"collectionGroup","title":"TestDBusProtocol Implementations","abstract":[],"identifier":"doc:\/\/GIO\/documentation\/GIO\/TestDBusRef\/TestDBusProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gio\/testdbusref\/testdbusprotocol-implementations"}}}