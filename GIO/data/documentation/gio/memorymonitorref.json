{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MemoryMonitorRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"There is also an implementation for use inside Flatpak sandboxes."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Possible actions to take when the signal is received are:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Free caches"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Save files that haven’t been looked at in a while to disk, ready to be reopened when needed"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Run a garbage collection cycle"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Try and compress fragmented allocations"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Exit on idle if the process has no reason to stay around"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Call "},{"type":"reference","isActive":true,"identifier":"man:malloc_trim"},{"type":"text","text":" to return cached heap pages to"},{"type":"text","text":" "},{"type":"text","text":"the kernel (if supported by your libc)"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that some actions may not always improve system performance, and so"},{"type":"text","text":" "},{"type":"text","text":"should be profiled for your application. "},{"type":"codeVoice","code":"malloc_trim()"},{"type":"text","text":", for example, may"},{"type":"text","text":" "},{"type":"text","text":"make future heap allocations slower (due to releasing cached heap pages back"},{"type":"text","text":" "},{"type":"text","text":"to the kernel)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"See "},{"type":"codeVoice","code":"GMemoryMonitorWarningLevel"},{"type":"text","text":" for details on the various warning levels."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"(C Language Example):"}]},{"type":"codeListing","syntax":"C","code":["static void","warning_cb (GMemoryMonitor *m, GMemoryMonitorWarningLevel level)","{","  g_debug (\"Warning level: %d\", level);","  if (warning_level > G_MEMORY_MONITOR_WARNING_LEVEL_LOW)","    drop_caches ();","}","","static GMemoryMonitor *","monitor_low_memory (void)","{","  GMemoryMonitor *m;","  m = g_memory_monitor_dup_default ();","  g_signal_connect (G_OBJECT (m), \"low-memory-warning\",","                    G_CALLBACK (warning_cb), NULL);","  return m;","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Don’t forget to disconnect the "},{"type":"codeVoice","code":"GMemoryMonitor::low-memory-warning"},{"type":"text","text":" "},{"type":"text","text":"signal, and unref the "},{"type":"codeVoice","code":"GMemoryMonitor"},{"type":"text","text":" itself when exiting."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"MemoryMonitorRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GMemoryMonitor"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"codeVoice","code":"MemoryMonitorProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"codeVoice","code":"MemoryMonitorRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"GMemoryMonitor"},{"type":"text","text":" instance."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gio\/memorymonitorref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GIO\/4GLib14PointerWrapperP","doc:\/\/GIO\/documentation\/GIO\/InitableProtocol","doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef","interfaceLanguage":"swift"},"abstract":[{"type":"codeVoice","code":"GMemoryMonitor"},{"type":"text","text":" will monitor system memory and suggest to the application"},{"type":"text","text":" "},{"type":"text","text":"when to free memory so as to leave more room for other applications."},{"type":"text","text":" "},{"type":"text","text":"It is implemented on Linux using the "},{"type":"reference","isActive":true,"identifier":"https:\/\/gitlab.freedesktop.org\/hadess\/low-memory-monitor\/"},{"type":"text","text":" "},{"type":"text","text":"("},{"type":"reference","isActive":true,"identifier":"https:\/\/hadess.pages.freedesktop.org\/low-memory-monitor\/"},{"type":"text","text":")."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MemoryMonitorRef"}],"title":"MemoryMonitorRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:3GIO16MemoryMonitorRefV","modules":[{"name":"GIO"}],"navigatorTitle":[{"kind":"identifier","text":"MemoryMonitorRef"}]},"hierarchy":{"paths":[["doc:\/\/GIO\/documentation\/GIO"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/init(_:)-4wns3","doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/init(_:)-57nrp","doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/init(_:)-67th8","doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/init(_:)-6yoor","doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/init(_:)-76bd5","doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/init(cPointer:)","doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/init(constPointer:)","doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/init(gconstpointer:)","doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/init(gpointer:)","doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/init(mutating:)","doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/init(opaquePointer:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/ptr"]},{"title":"Type Methods","identifiers":["doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/dupDefault()"]},{"title":"Default Implementations","identifiers":["doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/InitableProtocol-Implementations","doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/MemoryMonitorProtocol-Implementations","doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/PointerWrapper-Implementations"],"generated":true}],"references":{"doc://GIO/documentation/GIO/MemoryMonitorRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"MemoryMonitorProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/memorymonitorref\/init(opaquepointer:)"},"doc://GIO/documentation/GIO/MemoryMonitorRef/init(_:)-4wns3":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"codeVoice","code":"MemoryMonitorProtocol"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/init(_:)-4wns3","kind":"symbol","type":"topic","url":"\/documentation\/gio\/memorymonitorref\/init(_:)-4wns3"},"doc://GIO/documentation/GIO/MemoryMonitorRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"MemoryMonitorProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/memorymonitorref\/init(constpointer:)"},"doc://GIO/documentation/GIO/MemoryMonitorRef/PointerWrapper-Implementations":{"role":"collectionGroup","title":"PointerWrapper Implementations","abstract":[],"identifier":"doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/PointerWrapper-Implementations","kind":"article","type":"topic","url":"\/documentation\/gio\/memorymonitorref\/pointerwrapper-implementations"},"doc://GIO/documentation/GIO/MemoryMonitorRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/memorymonitorref\/init(gpointer:)"},"doc://GIO/documentation/GIO/MemoryMonitorRef/init(_:)-57nrp":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GMemoryMonitor"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/init(_:)-57nrp","kind":"symbol","type":"topic","url":"\/documentation\/gio\/memorymonitorref\/init(_:)-57nrp"},"doc://GIO/documentation/GIO":{"role":"collection","title":"GIO","abstract":[],"identifier":"doc:\/\/GIO\/documentation\/GIO","kind":"symbol","type":"topic","url":"\/documentation\/gio"},"doc://GIO/documentation/GIO/MemoryMonitorRef/init(_:)-6yoor":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GMemoryMonitor"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/init(_:)-6yoor","kind":"symbol","type":"topic","url":"\/documentation\/gio\/memorymonitorref\/init(_:)-6yoor"},"doc://GIO/documentation/GIO/MemoryMonitorRef/init(_:)-76bd5":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GMemoryMonitor"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/init(_:)-76bd5","kind":"symbol","type":"topic","url":"\/documentation\/gio\/memorymonitorref\/init(_:)-76bd5"},"doc://GIO/documentation/GIO/MemoryMonitorRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:gtypes.h@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/memorymonitorref\/init(gconstpointer:)"},"doc://GIO/documentation/GIO/MemoryMonitorRef/init(_:)-67th8":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GMemoryMonitor"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/init(_:)-67th8","kind":"symbol","type":"topic","url":"\/documentation\/gio\/memorymonitorref\/init(_:)-67th8"},"doc://GIO/documentation/GIO/MemoryMonitorRef/InitableProtocol-Implementations":{"role":"collectionGroup","title":"InitableProtocol Implementations","abstract":[],"identifier":"doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/InitableProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gio\/memorymonitorref\/initableprotocol-implementations"},"doc://GIO/documentation/GIO/MemoryMonitorRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"MemoryMonitorProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/memorymonitorref\/init(cpointer:)"},"doc://GIO/documentation/GIO/MemoryMonitorRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GMemoryMonitor"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"codeVoice","code":"memory_monitor_ptr"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/gio\/memorymonitorref\/ptr"},"doc://GIO/documentation/GIO/MemoryMonitorRef/MemoryMonitorProtocol-Implementations":{"role":"collectionGroup","title":"MemoryMonitorProtocol Implementations","abstract":[],"identifier":"doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/MemoryMonitorProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gio\/memorymonitorref\/memorymonitorprotocol-implementations"},"doc://GIO/documentation/GIO/MemoryMonitorRef":{"role":"symbol","title":"MemoryMonitorRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MemoryMonitorRef"}],"abstract":[{"type":"codeVoice","code":"GMemoryMonitor"},{"type":"text","text":" will monitor system memory and suggest to the application"},{"type":"text","text":" "},{"type":"text","text":"when to free memory so as to leave more room for other applications."},{"type":"text","text":" "},{"type":"text","text":"It is implemented on Linux using the "},{"type":"reference","isActive":true,"identifier":"https:\/\/gitlab.freedesktop.org\/hadess\/low-memory-monitor\/"},{"type":"text","text":" "},{"type":"text","text":"("},{"type":"reference","isActive":true,"identifier":"https:\/\/hadess.pages.freedesktop.org\/low-memory-monitor\/"},{"type":"text","text":")."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MemoryMonitorRef"}],"url":"\/documentation\/gio\/memorymonitorref"},"https://gitlab.freedesktop.org/hadess/low-memory-monitor/":{"title":"Low Memory Monitor","titleInlineContent":[{"type":"text","text":"Low Memory Monitor"}],"type":"link","identifier":"https:\/\/gitlab.freedesktop.org\/hadess\/low-memory-monitor\/","url":"https:\/\/gitlab.freedesktop.org\/hadess\/low-memory-monitor\/"},"doc://GIO/documentation/GIO/MemoryMonitorRef/dupDefault()":{"role":"symbol","title":"dupDefault()","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dupDefault"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"MemoryMonitorRef","preciseIdentifier":"s:3GIO16MemoryMonitorRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Gets a reference to the default "},{"type":"codeVoice","code":"GMemoryMonitor"},{"type":"text","text":" for the system."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/dupDefault()","kind":"symbol","type":"topic","url":"\/documentation\/gio\/memorymonitorref\/dupdefault()"},"man:malloc_trim":{"title":"malloc_trim(3)","titleInlineContent":[{"type":"codeVoice","code":"malloc_trim(3)"}],"type":"link","identifier":"man:malloc_trim","url":"man:malloc_trim"},"doc://GIO/documentation/GIO/InitableProtocol":{"role":"symbol","title":"InitableProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InitableProtocol"}],"abstract":[{"type":"codeVoice","code":"GInitable"},{"type":"text","text":" is implemented by objects that can fail during"},{"type":"text","text":" "},{"type":"text","text":"initialization. If an object implements this interface then"},{"type":"text","text":" "},{"type":"text","text":"it must be initialized as the first thing after construction,"},{"type":"text","text":" "},{"type":"text","text":"either via "},{"type":"codeVoice","code":"g_initable_init()"},{"type":"text","text":" or "},{"type":"codeVoice","code":"g_async_initable_init_async()"},{"type":"text","text":" "},{"type":"text","text":"(the latter is only available if it also implements "},{"type":"codeVoice","code":"GAsyncInitable"},{"type":"text","text":")."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/InitableProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InitableProtocol"}],"url":"\/documentation\/gio\/initableprotocol"},"doc://GIO/documentation/GIO/MemoryMonitorRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"MemoryMonitorProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/memorymonitorref\/init(mutating:)"},"doc://GIO/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/GIO\/4GLib14PointerWrapperP"},"https://hadess.pages.freedesktop.org/low-memory-monitor/":{"title":"API documentation","titleInlineContent":[{"type":"text","text":"API documentation"}],"type":"link","identifier":"https:\/\/hadess.pages.freedesktop.org\/low-memory-monitor\/","url":"https:\/\/hadess.pages.freedesktop.org\/low-memory-monitor\/"},"doc://GIO/documentation/GIO/MemoryMonitorProtocol":{"role":"symbol","title":"MemoryMonitorProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MemoryMonitorProtocol"}],"abstract":[{"type":"codeVoice","code":"GMemoryMonitor"},{"type":"text","text":" will monitor system memory and suggest to the application"},{"type":"text","text":" "},{"type":"text","text":"when to free memory so as to leave more room for other applications."},{"type":"text","text":" "},{"type":"text","text":"It is implemented on Linux using the "},{"type":"reference","isActive":true,"identifier":"https:\/\/gitlab.freedesktop.org\/hadess\/low-memory-monitor\/"},{"type":"text","text":" "},{"type":"text","text":"("},{"type":"reference","isActive":true,"identifier":"https:\/\/hadess.pages.freedesktop.org\/low-memory-monitor\/"},{"type":"text","text":")."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/MemoryMonitorProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MemoryMonitorProtocol"}],"url":"\/documentation\/gio\/memorymonitorprotocol"}}}