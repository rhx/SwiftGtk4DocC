{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addApplicationProxy"},{"kind":"text","text":"("},{"kind":"externalParam","text":"protocol"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:gtypes.h@T@gchar"},{"kind":"text","text":">!)"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This should be used for proxy protocols that are dialects of"},{"type":"text","text":" "},{"type":"text","text":"another protocol such as HTTP proxy. It also allows cohabitation of"},{"type":"text","text":" "},{"type":"text","text":"proxy protocols that are reused between protocols. A good example"},{"type":"text","text":" "},{"type":"text","text":"is HTTP. It can be used to proxy HTTP, FTP and Gopher and can also"},{"type":"text","text":" "},{"type":"text","text":"be use as generic socket proxy through the HTTP CONNECT method."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When the proxy is detected as being an application proxy, TLS handshake"},{"type":"text","text":" "},{"type":"text","text":"will be skipped. This is required to let the application do the proxy"},{"type":"text","text":" "},{"type":"text","text":"specific handshake."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gio\/socketclient\/addapplicationproxy(protocol:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GIO\/documentation\/GIO\/SocketClient\/addApplicationProxy(protocol:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Enable proxy protocols to be handled by the application. When the"},{"type":"text","text":" "},{"type":"text","text":"indicated proxy protocol is returned by the "},{"type":"codeVoice","code":"GProxyResolver"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"codeVoice","code":"GSocketClient"},{"type":"text","text":" will consider this protocol as supported but will"},{"type":"text","text":" "},{"type":"text","text":"not try to find a "},{"type":"codeVoice","code":"GProxy"},{"type":"text","text":" instance to handle handshaking. The"},{"type":"text","text":" "},{"type":"text","text":"application must check for this case by calling"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_socket_connection_get_remote_address()"},{"type":"text","text":" on the returned"},{"type":"text","text":" "},{"type":"codeVoice","code":"GSocketConnection"},{"type":"text","text":", and seeing if it’s a "},{"type":"codeVoice","code":"GProxyAddress"},{"type":"text","text":" of the"},{"type":"text","text":" "},{"type":"text","text":"appropriate type, to determine whether or not it needs to handle"},{"type":"text","text":" "},{"type":"text","text":"the proxy handshaking itself."}],"kind":"symbol","metadata":{"role":"symbol","title":"addApplicationProxy(protocol:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addApplicationProxy"},{"kind":"text","text":"("},{"kind":"externalParam","text":"protocol"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:gtypes.h@T@gchar"},{"kind":"text","text":">!)"}],"symbolKind":"method","externalID":"s:3GIO20SocketClientProtocolPAAE19addApplicationProxy8protocolySPys4Int8VGSg_tF::SYNTHESIZED::s:3GIO12SocketClientC","extendedModule":"GIO","modules":[{"name":"GIO"}]},"hierarchy":{"paths":[["doc:\/\/GIO\/documentation\/GIO","doc:\/\/GIO\/documentation\/GIO\/SocketClient","doc:\/\/GIO\/documentation\/GIO\/SocketClient\/SocketClientProtocol-Implementations"]]},"references":{"doc://GIO/documentation/GIO/SocketClient/addApplicationProxy(protocol:)":{"role":"symbol","title":"addApplicationProxy(protocol:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addApplicationProxy"},{"kind":"text","text":"("},{"kind":"externalParam","text":"protocol"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:gtypes.h@T@gchar"},{"kind":"text","text":">!)"}],"abstract":[{"type":"text","text":"Enable proxy protocols to be handled by the application. When the"},{"type":"text","text":" "},{"type":"text","text":"indicated proxy protocol is returned by the "},{"type":"codeVoice","code":"GProxyResolver"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"codeVoice","code":"GSocketClient"},{"type":"text","text":" will consider this protocol as supported but will"},{"type":"text","text":" "},{"type":"text","text":"not try to find a "},{"type":"codeVoice","code":"GProxy"},{"type":"text","text":" instance to handle handshaking. The"},{"type":"text","text":" "},{"type":"text","text":"application must check for this case by calling"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_socket_connection_get_remote_address()"},{"type":"text","text":" on the returned"},{"type":"text","text":" "},{"type":"codeVoice","code":"GSocketConnection"},{"type":"text","text":", and seeing if it’s a "},{"type":"codeVoice","code":"GProxyAddress"},{"type":"text","text":" of the"},{"type":"text","text":" "},{"type":"text","text":"appropriate type, to determine whether or not it needs to handle"},{"type":"text","text":" "},{"type":"text","text":"the proxy handshaking itself."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SocketClient\/addApplicationProxy(protocol:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/socketclient\/addapplicationproxy(protocol:)"},"doc://GIO/documentation/GIO/SocketClient/SocketClientProtocol-Implementations":{"role":"collectionGroup","title":"SocketClientProtocol Implementations","abstract":[],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SocketClient\/SocketClientProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gio\/socketclient\/socketclientprotocol-implementations"},"doc://GIO/documentation/GIO":{"role":"collection","title":"GIO","abstract":[],"identifier":"doc:\/\/GIO\/documentation\/GIO","kind":"symbol","type":"topic","url":"\/documentation\/gio"},"doc://GIO/documentation/GIO/SocketClient":{"role":"symbol","title":"SocketClient","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SocketClient"}],"abstract":[{"type":"codeVoice","code":"GSocketClient"},{"type":"text","text":" is a lightweight high-level utility class for connecting to"},{"type":"text","text":" "},{"type":"text","text":"a network host using a connection oriented socket type."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/SocketClient","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SocketClient"}],"url":"\/documentation\/gio\/socketclient"}}}