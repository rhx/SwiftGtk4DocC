{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To construct a "},{"type":"codeVoice","code":"GFile"},{"type":"text","text":", you can use:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"g_file_new_for_path()"},{"type":"text","text":" if you have a path."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"g_file_new_for_uri()"},{"type":"text","text":" if you have a URI."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"g_file_new_for_commandline_arg()"},{"type":"text","text":" for a command line argument."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"g_file_new_tmp()"},{"type":"text","text":" to create a temporary file from a template."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"g_file_new_tmp_async()"},{"type":"text","text":" to asynchronously create a temporary file."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"g_file_new_tmp_dir_async()"},{"type":"text","text":" to asynchronously create a temporary directory."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"g_file_parse_name()"},{"type":"text","text":" from a UTF-8 string gotten from "},{"type":"codeVoice","code":"g_file_get_parse_name()"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"g_file_new_build_filename()"},{"type":"text","text":" or "},{"type":"codeVoice","code":"g_file_new_build_filenamev()"},{"type":"text","text":" to create a file from path elements."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"One way to think of a "},{"type":"codeVoice","code":"GFile"},{"type":"text","text":" is as an abstraction of a pathname. For"},{"type":"text","text":" "},{"type":"text","text":"normal files the system pathname is what is stored internally, but as"},{"type":"text","text":" "},{"type":"codeVoice","code":"GFiles"},{"type":"text","text":" are extensible it could also be something else that corresponds"},{"type":"text","text":" "},{"type":"text","text":"to a pathname in a userspace implementation of a filesystem."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GFiles"},{"type":"text","text":" make up hierarchies of directories and files that correspond to"},{"type":"text","text":" "},{"type":"text","text":"the files on a filesystem. You can move through the file system with"},{"type":"text","text":" "},{"type":"codeVoice","code":"GFile"},{"type":"text","text":" using "},{"type":"codeVoice","code":"g_file_get_parent()"},{"type":"text","text":" to get an identifier for the parent"},{"type":"text","text":" "},{"type":"text","text":"directory, "},{"type":"codeVoice","code":"g_file_get_child()"},{"type":"text","text":" to get a child within a directory,"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_file_resolve_relative_path()"},{"type":"text","text":" to resolve a relative path between two"},{"type":"text","text":" "},{"type":"codeVoice","code":"GFiles"},{"type":"text","text":". There can be multiple hierarchies, so you may not end up at"},{"type":"text","text":" "},{"type":"text","text":"the same root if you repeatedly call "},{"type":"codeVoice","code":"g_file_get_parent()"},{"type":"text","text":" on two different"},{"type":"text","text":" "},{"type":"text","text":"files."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"All "},{"type":"codeVoice","code":"GFiles"},{"type":"text","text":" have a basename (get with "},{"type":"codeVoice","code":"g_file_get_basename()"},{"type":"text","text":"). These names"},{"type":"text","text":" "},{"type":"text","text":"are byte strings that are used to identify the file on the filesystem"},{"type":"text","text":" "},{"type":"text","text":"(relative to its parent directory) and there is no guarantees that they"},{"type":"text","text":" "},{"type":"text","text":"have any particular charset encoding or even make any sense at all. If"},{"type":"text","text":" "},{"type":"text","text":"you want to use filenames in a user interface you should use the display"},{"type":"text","text":" "},{"type":"text","text":"name that you can get by requesting the"},{"type":"text","text":" "},{"type":"codeVoice","code":"G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME"},{"type":"text","text":" attribute with "},{"type":"codeVoice","code":"g_file_query_info()"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"This is guaranteed to be in UTF-8 and can be used in a user interface."},{"type":"text","text":" "},{"type":"text","text":"But always store the real basename or the "},{"type":"codeVoice","code":"GFile"},{"type":"text","text":" to use to actually"},{"type":"text","text":" "},{"type":"text","text":"access the file, because there is no way to go from a display name to"},{"type":"text","text":" "},{"type":"text","text":"the actual name."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using "},{"type":"codeVoice","code":"GFile"},{"type":"text","text":" as an identifier has the same weaknesses as using a path"},{"type":"text","text":" "},{"type":"text","text":"in that there may be multiple aliases for the same file. For instance,"},{"type":"text","text":" "},{"type":"text","text":"hard or soft links may cause two different "},{"type":"codeVoice","code":"GFiles"},{"type":"text","text":" to refer to the same"},{"type":"text","text":" "},{"type":"text","text":"file. Other possible causes for aliases are: case insensitive filesystems,"},{"type":"text","text":" "},{"type":"text","text":"short and long names on FAT\/NTFS, or bind mounts in Linux. If you want to"},{"type":"text","text":" "},{"type":"text","text":"check if two "},{"type":"codeVoice","code":"GFiles"},{"type":"text","text":" point to the same file you can query for the"},{"type":"text","text":" "},{"type":"codeVoice","code":"G_FILE_ATTRIBUTE_ID_FILE"},{"type":"text","text":" attribute. Note that "},{"type":"codeVoice","code":"GFile"},{"type":"text","text":" does some trivial"},{"type":"text","text":" "},{"type":"text","text":"canonicalization of pathnames passed in, so that trivial differences in"},{"type":"text","text":" "},{"type":"text","text":"the path string used at creation (duplicated slashes, slash at end of"},{"type":"text","text":" "},{"type":"text","text":"path, “.” or “..” path segments, etc) does not create different "},{"type":"codeVoice","code":"GFiles"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Many "},{"type":"codeVoice","code":"GFile"},{"type":"text","text":" operations have both synchronous and asynchronous versions"},{"type":"text","text":" "},{"type":"text","text":"to suit your application. Asynchronous versions of synchronous functions"},{"type":"text","text":" "},{"type":"text","text":"simply have "},{"type":"codeVoice","code":"_async()"},{"type":"text","text":" appended to their function names. The asynchronous"},{"type":"text","text":" "},{"type":"text","text":"I\/O functions call a "},{"type":"codeVoice","code":"GAsyncReadyCallback"},{"type":"text","text":" which is then used to finalize"},{"type":"text","text":" "},{"type":"text","text":"the operation, producing a GAsyncResult which is then passed to the"},{"type":"text","text":" "},{"type":"text","text":"function’s matching "},{"type":"codeVoice","code":"_finish()"},{"type":"text","text":" operation."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is highly recommended to use asynchronous calls when running within a"},{"type":"text","text":" "},{"type":"text","text":"shared main loop, such as in the main thread of an application. This avoids"},{"type":"text","text":" "},{"type":"text","text":"I\/O operations blocking other sources on the main loop from being dispatched."},{"type":"text","text":" "},{"type":"text","text":"Synchronous I\/O operations should be performed from worker threads. See the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"#async-programming"},{"type":"text","text":" for"},{"type":"text","text":" "},{"type":"text","text":"more."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Some "},{"type":"codeVoice","code":"GFile"},{"type":"text","text":" operations almost always take a noticeable amount of time, and"},{"type":"text","text":" "},{"type":"text","text":"so do not have synchronous analogs. Notable cases include:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"g_file_mount_mountable()"},{"type":"text","text":" to mount a mountable file."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"g_file_unmount_mountable_with_operation()"},{"type":"text","text":" to unmount a mountable file."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"g_file_eject_mountable_with_operation()"},{"type":"text","text":" to eject a mountable file."}]}]}]},{"anchor":"Entity-Tags--<a-name=gfile-etag><a>","level":2,"type":"heading","text":"Entity Tags # <a name=\"gfile-etag\"><\/a>"},{"type":"paragraph","inlineContent":[{"type":"text","text":"One notable feature of "},{"type":"codeVoice","code":"GFiles"},{"type":"text","text":" are entity tags, or “etags” for"},{"type":"text","text":" "},{"type":"text","text":"short. Entity tags are somewhat like a more abstract version of the"},{"type":"text","text":" "},{"type":"text","text":"traditional mtime, and can be used to quickly determine if the file"},{"type":"text","text":" "},{"type":"text","text":"has been modified from the version on the file system. See the"},{"type":"text","text":" "},{"type":"text","text":"HTTP 1.1"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"http:\/\/www.w3.org\/Protocols\/rfc2616\/rfc2616-sec14.html"},{"type":"text","text":" "},{"type":"text","text":"for HTTP Etag headers, which are a very similar concept."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"FileRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GFile"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"codeVoice","code":"FileProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"codeVoice","code":"FileRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"GFile"},{"type":"text","text":" instance."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gio\/fileref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GIO\/documentation\/GIO\/FileProtocol","doc:\/\/GIO\/4GLib14PointerWrapperP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/GIO\/documentation\/GIO\/FileRef","interfaceLanguage":"swift"},"abstract":[{"type":"codeVoice","code":"GFile"},{"type":"text","text":" is a high level abstraction for manipulating files on a"},{"type":"text","text":" "},{"type":"text","text":"virtual file system. "},{"type":"codeVoice","code":"GFiles"},{"type":"text","text":" are lightweight, immutable objects"},{"type":"text","text":" "},{"type":"text","text":"that do no I\/O upon creation. It is necessary to understand that"},{"type":"text","text":" "},{"type":"codeVoice","code":"GFile"},{"type":"text","text":" objects do not represent files, merely an identifier for a"},{"type":"text","text":" "},{"type":"text","text":"file. All file content I\/O is implemented as streaming operations"},{"type":"text","text":" "},{"type":"text","text":"(see "},{"type":"codeVoice","code":"GInputStream"},{"type":"text","text":" and "},{"type":"codeVoice","code":"GOutputStream"},{"type":"text","text":")."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileRef"}],"title":"FileRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:3GIO7FileRefV","modules":[{"name":"GIO"}],"navigatorTitle":[{"kind":"identifier","text":"FileRef"}]},"hierarchy":{"paths":[["doc:\/\/GIO\/documentation\/GIO"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/GIO\/documentation\/GIO\/FileRef\/init(_:)-334iu","doc:\/\/GIO\/documentation\/GIO\/FileRef\/init(_:)-5ihzc","doc:\/\/GIO\/documentation\/GIO\/FileRef\/init(_:)-8s5m0","doc:\/\/GIO\/documentation\/GIO\/FileRef\/init(_:)-95c9p","doc:\/\/GIO\/documentation\/GIO\/FileRef\/init(_:)-rnza","doc:\/\/GIO\/documentation\/GIO\/FileRef\/init(cPointer:)","doc:\/\/GIO\/documentation\/GIO\/FileRef\/init(constPointer:)","doc:\/\/GIO\/documentation\/GIO\/FileRef\/init(gconstpointer:)","doc:\/\/GIO\/documentation\/GIO\/FileRef\/init(gpointer:)","doc:\/\/GIO\/documentation\/GIO\/FileRef\/init(mutating:)","doc:\/\/GIO\/documentation\/GIO\/FileRef\/init(opaquePointer:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/GIO\/documentation\/GIO\/FileRef\/ptr"]},{"title":"Type Methods","identifiers":["doc:\/\/GIO\/documentation\/GIO\/FileRef\/new(tmp:iostream:)","doc:\/\/GIO\/documentation\/GIO\/FileRef\/newBuildFilenamev(build_filenamev:)","doc:\/\/GIO\/documentation\/GIO\/FileRef\/newFor(commandlineArgAndCwd:cwd:)","doc:\/\/GIO\/documentation\/GIO\/FileRef\/newFor(path:)","doc:\/\/GIO\/documentation\/GIO\/FileRef\/newFor(uri:)","doc:\/\/GIO\/documentation\/GIO\/FileRef\/newForCommandline(commandlineArg:)","doc:\/\/GIO\/documentation\/GIO\/FileRef\/newTmpDirFinish(tmp_dir_finish:)","doc:\/\/GIO\/documentation\/GIO\/FileRef\/newTmpFinish(tmp_finish:iostream:)","doc:\/\/GIO\/documentation\/GIO\/FileRef\/parseName(parseName:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/GIO\/documentation\/GIO\/FileRef\/FileProtocol-Implementations","doc:\/\/GIO\/documentation\/GIO\/FileRef\/PointerWrapper-Implementations"],"generated":true}],"references":{"doc://GIO/documentation/GIO/FileRef/newFor(uri:)":{"role":"symbol","title":"newFor(uri:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"newFor"},{"kind":"text","text":"("},{"kind":"externalParam","text":"uri"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">!) -> "},{"kind":"typeIdentifier","text":"FileRef","preciseIdentifier":"s:3GIO7FileRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Constructs a "},{"type":"codeVoice","code":"GFile"},{"type":"text","text":" for a given URI. This operation never"},{"type":"text","text":" "},{"type":"text","text":"fails, but the returned object might not support any I\/O"},{"type":"text","text":" "},{"type":"text","text":"operation if "},{"type":"codeVoice","code":"uri"},{"type":"text","text":" is malformed or if the uri type is"},{"type":"text","text":" "},{"type":"text","text":"not supported."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/FileRef\/newFor(uri:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/fileref\/newfor(uri:)"},"doc://GIO/documentation/GIO/FileRef/new(tmp:iostream:)":{"role":"symbol","title":"new(tmp:iostream:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"new"},{"kind":"text","text":"("},{"kind":"externalParam","text":"tmp"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">?, "},{"kind":"externalParam","text":"iostream"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GFileIOStream"},{"kind":"text","text":">?>!) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"FileRef","preciseIdentifier":"s:3GIO7FileRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Opens a file in the preferred directory for temporary files (as"},{"type":"text","text":" "},{"type":"text","text":"returned by "},{"type":"codeVoice","code":"g_get_tmp_dir()"},{"type":"text","text":") and returns a "},{"type":"codeVoice","code":"GFile"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"codeVoice","code":"GFileIOStream"},{"type":"text","text":" pointing to it."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/FileRef\/new(tmp:iostream:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/fileref\/new(tmp:iostream:)"},"doc://GIO/documentation/GIO/FileRef/init(_:)-8s5m0":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"codeVoice","code":"FileProtocol"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/FileRef\/init(_:)-8s5m0","kind":"symbol","type":"topic","url":"\/documentation\/gio\/fileref\/init(_:)-8s5m0"},"doc://GIO/documentation/GIO/FileRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"FileProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/FileRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/fileref\/init(opaquepointer:)"},"doc://GIO/documentation/GIO/FileRef/newFor(commandlineArgAndCwd:cwd:)":{"role":"symbol","title":"newFor(commandlineArgAndCwd:cwd:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"newFor"},{"kind":"text","text":"("},{"kind":"externalParam","text":"commandlineArgAndCwd"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:gtypes.h@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"cwd"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:gtypes.h@T@gchar"},{"kind":"text","text":">!) -> "},{"kind":"typeIdentifier","text":"FileRef","preciseIdentifier":"s:3GIO7FileRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Creates a "},{"type":"codeVoice","code":"GFile"},{"type":"text","text":" with the given argument from the command line."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/FileRef\/newFor(commandlineArgAndCwd:cwd:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/fileref\/newfor(commandlineargandcwd:cwd:)"},"doc://GIO/documentation/GIO/FileRef":{"role":"symbol","title":"FileRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileRef"}],"abstract":[{"type":"codeVoice","code":"GFile"},{"type":"text","text":" is a high level abstraction for manipulating files on a"},{"type":"text","text":" "},{"type":"text","text":"virtual file system. "},{"type":"codeVoice","code":"GFiles"},{"type":"text","text":" are lightweight, immutable objects"},{"type":"text","text":" "},{"type":"text","text":"that do no I\/O upon creation. It is necessary to understand that"},{"type":"text","text":" "},{"type":"codeVoice","code":"GFile"},{"type":"text","text":" objects do not represent files, merely an identifier for a"},{"type":"text","text":" "},{"type":"text","text":"file. All file content I\/O is implemented as streaming operations"},{"type":"text","text":" "},{"type":"text","text":"(see "},{"type":"codeVoice","code":"GInputStream"},{"type":"text","text":" and "},{"type":"codeVoice","code":"GOutputStream"},{"type":"text","text":")."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/FileRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FileRef"}],"url":"\/documentation\/gio\/fileref"},"doc://GIO/documentation/GIO/FileRef/init(_:)-5ihzc":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GFile"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/FileRef\/init(_:)-5ihzc","kind":"symbol","type":"topic","url":"\/documentation\/gio\/fileref\/init(_:)-5ihzc"},"doc://GIO/documentation/GIO/FileRef/newFor(path:)":{"role":"symbol","title":"newFor(path:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"newFor"},{"kind":"text","text":"("},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">!) -> "},{"kind":"typeIdentifier","text":"FileRef","preciseIdentifier":"s:3GIO7FileRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Constructs a "},{"type":"codeVoice","code":"GFile"},{"type":"text","text":" for a given path. This operation never"},{"type":"text","text":" "},{"type":"text","text":"fails, but the returned object might not support any I\/O"},{"type":"text","text":" "},{"type":"text","text":"operation if "},{"type":"codeVoice","code":"path"},{"type":"text","text":" is malformed."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/FileRef\/newFor(path:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/fileref\/newfor(path:)"},"doc://GIO/documentation/GIO/FileRef/newTmpFinish(tmp_finish:iostream:)":{"role":"symbol","title":"newTmpFinish(tmp_finish:iostream:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"newTmpFinish"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"AsyncResultT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"tmp_finish"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AsyncResultT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"iostream"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GFileIOStream"},{"kind":"text","text":">?>!) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"FileRef","preciseIdentifier":"s:3GIO7FileRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Finishes a temporary file creation started by "},{"type":"codeVoice","code":"g_file_new_tmp_async()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/FileRef\/newTmpFinish(tmp_finish:iostream:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/fileref\/newtmpfinish(tmp_finish:iostream:)"},"doc://GIO/documentation/GIO/FileRef/newBuildFilenamev(build_filenamev:)":{"role":"symbol","title":"newBuildFilenamev(build_filenamev:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"newBuildFilenamev"},{"kind":"text","text":"("},{"kind":"externalParam","text":"build_filenamev"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:gtypes.h@T@gchar"},{"kind":"text","text":">?>!) -> "},{"kind":"typeIdentifier","text":"FileRef","preciseIdentifier":"s:3GIO7FileRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Constructs a "},{"type":"codeVoice","code":"GFile"},{"type":"text","text":" from a vector of elements using the correct"},{"type":"text","text":" "},{"type":"text","text":"separator for filenames."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/FileRef\/newBuildFilenamev(build_filenamev:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/fileref\/newbuildfilenamev(build_filenamev:)"},"doc://GIO/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/GIO\/4GLib14PointerWrapperP"},"doc://GIO/documentation/GIO/FileRef/newForCommandline(commandlineArg:)":{"role":"symbol","title":"newForCommandline(commandlineArg:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"newForCommandline"},{"kind":"text","text":"("},{"kind":"externalParam","text":"commandlineArg"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">!) -> "},{"kind":"typeIdentifier","text":"FileRef","preciseIdentifier":"s:3GIO7FileRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Creates a "},{"type":"codeVoice","code":"GFile"},{"type":"text","text":" with the given argument from the command line."},{"type":"text","text":" "},{"type":"text","text":"The value of "},{"type":"codeVoice","code":"arg"},{"type":"text","text":" can be either a URI, an absolute path or a"},{"type":"text","text":" "},{"type":"text","text":"relative path resolved relative to the current working directory."},{"type":"text","text":" "},{"type":"text","text":"This operation never fails, but the returned object might not"},{"type":"text","text":" "},{"type":"text","text":"support any I\/O operation if "},{"type":"codeVoice","code":"arg"},{"type":"text","text":" points to a malformed path."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/FileRef\/newForCommandline(commandlineArg:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/fileref\/newforcommandline(commandlinearg:)"},"#async-programming":{"title":"introduction to asynchronous programming section","titleInlineContent":[{"type":"text","text":"introduction to asynchronous programming section"}],"type":"link","identifier":"#async-programming","url":"#async-programming"},"doc://GIO/documentation/GIO/FileRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:gtypes.h@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/FileRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/fileref\/init(gconstpointer:)"},"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html":{"title":"specification","titleInlineContent":[{"type":"text","text":"specification"}],"type":"link","identifier":"http:\/\/www.w3.org\/Protocols\/rfc2616\/rfc2616-sec14.html","url":"http:\/\/www.w3.org\/Protocols\/rfc2616\/rfc2616-sec14.html"},"doc://GIO/documentation/GIO/FileProtocol":{"role":"symbol","title":"FileProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileProtocol"}],"abstract":[{"type":"codeVoice","code":"GFile"},{"type":"text","text":" is a high level abstraction for manipulating files on a"},{"type":"text","text":" "},{"type":"text","text":"virtual file system. "},{"type":"codeVoice","code":"GFiles"},{"type":"text","text":" are lightweight, immutable objects"},{"type":"text","text":" "},{"type":"text","text":"that do no I\/O upon creation. It is necessary to understand that"},{"type":"text","text":" "},{"type":"codeVoice","code":"GFile"},{"type":"text","text":" objects do not represent files, merely an identifier for a"},{"type":"text","text":" "},{"type":"text","text":"file. All file content I\/O is implemented as streaming operations"},{"type":"text","text":" "},{"type":"text","text":"(see "},{"type":"codeVoice","code":"GInputStream"},{"type":"text","text":" and "},{"type":"codeVoice","code":"GOutputStream"},{"type":"text","text":")."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/FileProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FileProtocol"}],"url":"\/documentation\/gio\/fileprotocol"},"doc://GIO/documentation/GIO/FileRef/newTmpDirFinish(tmp_dir_finish:)":{"role":"symbol","title":"newTmpDirFinish(tmp_dir_finish:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"newTmpDirFinish"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"AsyncResultT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"tmp_dir_finish"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AsyncResultT"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"FileRef","preciseIdentifier":"s:3GIO7FileRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Finishes a temporary directory creation started by"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_file_new_tmp_dir_async()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/FileRef\/newTmpDirFinish(tmp_dir_finish:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/fileref\/newtmpdirfinish(tmp_dir_finish:)"},"doc://GIO/documentation/GIO/FileRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/FileRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/fileref\/init(gpointer:)"},"doc://GIO/documentation/GIO/FileRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"FileProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/FileRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/fileref\/init(mutating:)"},"doc://GIO/documentation/GIO":{"role":"collection","title":"GIO","abstract":[],"identifier":"doc:\/\/GIO\/documentation\/GIO","kind":"symbol","type":"topic","url":"\/documentation\/gio"},"doc://GIO/documentation/GIO/FileRef/FileProtocol-Implementations":{"role":"collectionGroup","title":"FileProtocol Implementations","abstract":[],"identifier":"doc:\/\/GIO\/documentation\/GIO\/FileRef\/FileProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gio\/fileref\/fileprotocol-implementations"},"doc://GIO/documentation/GIO/FileRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"FileProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/FileRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/fileref\/init(constpointer:)"},"doc://GIO/documentation/GIO/FileRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GFile"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"codeVoice","code":"file_ptr"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/FileRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/gio\/fileref\/ptr"},"doc://GIO/documentation/GIO/FileRef/init(_:)-rnza":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GFile"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/FileRef\/init(_:)-rnza","kind":"symbol","type":"topic","url":"\/documentation\/gio\/fileref\/init(_:)-rnza"},"doc://GIO/documentation/GIO/FileRef/init(_:)-95c9p":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GFile"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/FileRef\/init(_:)-95c9p","kind":"symbol","type":"topic","url":"\/documentation\/gio\/fileref\/init(_:)-95c9p"},"doc://GIO/documentation/GIO/FileRef/PointerWrapper-Implementations":{"role":"collectionGroup","title":"PointerWrapper Implementations","abstract":[],"identifier":"doc:\/\/GIO\/documentation\/GIO\/FileRef\/PointerWrapper-Implementations","kind":"article","type":"topic","url":"\/documentation\/gio\/fileref\/pointerwrapper-implementations"},"doc://GIO/documentation/GIO/FileRef/init(_:)-334iu":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GFile"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/FileRef\/init(_:)-334iu","kind":"symbol","type":"topic","url":"\/documentation\/gio\/fileref\/init(_:)-334iu"},"doc://GIO/documentation/GIO/FileRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"FileProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/FileRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/fileref\/init(cpointer:)"},"doc://GIO/documentation/GIO/FileRef/parseName(parseName:)":{"role":"symbol","title":"parseName(parseName:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parseName"},{"kind":"text","text":"("},{"kind":"externalParam","text":"parseName"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">!) -> "},{"kind":"typeIdentifier","text":"FileRef","preciseIdentifier":"s:3GIO7FileRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Constructs a "},{"type":"codeVoice","code":"GFile"},{"type":"text","text":" with the given "},{"type":"codeVoice","code":"parse_name"},{"type":"text","text":" (i.e. something"},{"type":"text","text":" "},{"type":"text","text":"given by "},{"type":"codeVoice","code":"g_file_get_parse_name()"},{"type":"text","text":"). This operation never fails,"},{"type":"text","text":" "},{"type":"text","text":"but the returned object might not support any I\/O operation if"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"parse_name"},{"type":"text","text":" cannot be parsed."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/FileRef\/parseName(parseName:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/fileref\/parsename(parsename:)"}}}