{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"size"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"reallocFunction"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GReallocFunc","preciseIdentifier":"c:@T@GReallocFunc"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"destroyFunction"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GDestroyNotify","preciseIdentifier":"c:gtypes.h@T@GDestroyNotify"},{"kind":"text","text":"? = nil)"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In most cases this is not the function you want.  See"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_memory_output_stream_new_resizable()"},{"type":"text","text":" instead."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"data"},{"type":"text","text":" is non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":", the stream will use that for its internal storage."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"realloc_fn"},{"type":"text","text":" is non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":", it will be used for resizing the internal"},{"type":"text","text":" "},{"type":"text","text":"storage when necessary and the stream will be considered resizable."},{"type":"text","text":" "},{"type":"text","text":"In that case, the stream will start out being (conceptually) empty."},{"type":"text","text":" "},{"type":"codeVoice","code":"size"},{"type":"text","text":" is used only as a hint for how big "},{"type":"codeVoice","code":"data"},{"type":"text","text":" is.  Specifically,"},{"type":"text","text":" "},{"type":"text","text":"seeking to the end of a newly-created stream will seek to zero, not"},{"type":"text","text":" "},{"type":"codeVoice","code":"size"},{"type":"text","text":".  Seeking past the end of the stream and then writing will"},{"type":"text","text":" "},{"type":"text","text":"introduce a zero-filled gap."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"realloc_fn"},{"type":"text","text":" is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" then the stream is fixed-sized.  Seeking to"},{"type":"text","text":" "},{"type":"text","text":"the end will seek to "},{"type":"codeVoice","code":"size"},{"type":"text","text":" exactly.  Writing past the end will give"},{"type":"text","text":" "},{"type":"text","text":"an ‘out of space’ error.  Attempting to seek past the end will fail."},{"type":"text","text":" "},{"type":"text","text":"Unlike the resizable case, seeking to an offset within the stream and"},{"type":"text","text":" "},{"type":"text","text":"writing will preserve the bytes passed in as "},{"type":"codeVoice","code":"data"},{"type":"text","text":" before that point"},{"type":"text","text":" "},{"type":"text","text":"and will return them as part of "},{"type":"codeVoice","code":"g_memory_output_stream_steal_data()"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"If you intend to seek you should probably therefore ensure that "},{"type":"codeVoice","code":"data"},{"type":"text","text":" "},{"type":"text","text":"is properly initialised."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is probably only meaningful to provide "},{"type":"codeVoice","code":"data"},{"type":"text","text":" and "},{"type":"codeVoice","code":"size"},{"type":"text","text":" in the case"},{"type":"text","text":" "},{"type":"text","text":"that you want a fixed-sized stream.  Put another way: if "},{"type":"codeVoice","code":"realloc_fn"},{"type":"text","text":" "},{"type":"text","text":"is non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" then it makes most sense to give "},{"type":"codeVoice","code":"data"},{"type":"text","text":" as "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"codeVoice","code":"size"},{"type":"text","text":" as 0 (allowing "},{"type":"codeVoice","code":"GMemoryOutputStream"},{"type":"text","text":" to do the initial"},{"type":"text","text":" "},{"type":"text","text":"allocation for itself)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"(C Language Example):"}]},{"type":"codeListing","syntax":"C","code":["\/\/ a stream that can grow","stream = g_memory_output_stream_new (NULL, 0, realloc, free);","","\/\/ another stream that can grow","stream2 = g_memory_output_stream_new (NULL, 0, g_realloc, g_free);","","\/\/ a fixed-size stream","data = malloc (200);","stream3 = g_memory_output_stream_new (data, 200, NULL, free);"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gio\/memoryoutputstreamref\/init(data:size:reallocfunction:destroyfunction:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GIO\/documentation\/GIO\/MemoryOutputStreamRef\/init(data:size:reallocFunction:destroyFunction:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"GMemoryOutputStream"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"role":"symbol","title":"init(data:size:reallocFunction:destroyFunction:)","roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"size"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"reallocFunction"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GReallocFunc","preciseIdentifier":"c:@T@GReallocFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"destroyFunction"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GDestroyNotify","preciseIdentifier":"c:gtypes.h@T@GDestroyNotify"},{"kind":"text","text":"?)"}],"symbolKind":"init","externalID":"s:3GIO21MemoryOutputStreamRefV4data4size15reallocFunction07destroyI0ACSvSg_SiA2H_SutXCSgyAHXCSgtcfc","extendedModule":"GIO","modules":[{"name":"GIO"}]},"hierarchy":{"paths":[["doc:\/\/GIO\/documentation\/GIO","doc:\/\/GIO\/documentation\/GIO\/MemoryOutputStreamRef"]]},"references":{"doc://GIO/documentation/GIO/MemoryOutputStreamRef":{"role":"symbol","title":"MemoryOutputStreamRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MemoryOutputStreamRef"}],"abstract":[{"type":"codeVoice","code":"GMemoryOutputStream"},{"type":"text","text":" is a class for using arbitrary"},{"type":"text","text":" "},{"type":"text","text":"memory chunks as output for GIO streaming output operations."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/MemoryOutputStreamRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MemoryOutputStreamRef"}],"url":"\/documentation\/gio\/memoryoutputstreamref"},"doc://GIO/documentation/GIO/MemoryOutputStreamRef/init(data:size:reallocFunction:destroyFunction:)":{"role":"symbol","title":"init(data:size:reallocFunction:destroyFunction:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"size"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"reallocFunction"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GReallocFunc","preciseIdentifier":"c:@T@GReallocFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"destroyFunction"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GDestroyNotify","preciseIdentifier":"c:gtypes.h@T@GDestroyNotify"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"GMemoryOutputStream"},{"type":"text","text":"."}],"identifier":"doc:\/\/GIO\/documentation\/GIO\/MemoryOutputStreamRef\/init(data:size:reallocFunction:destroyFunction:)","kind":"symbol","type":"topic","url":"\/documentation\/gio\/memoryoutputstreamref\/init(data:size:reallocfunction:destroyfunction:)"},"doc://GIO/documentation/GIO":{"role":"collection","title":"GIO","abstract":[],"identifier":"doc:\/\/GIO\/documentation\/GIO","kind":"symbol","type":"topic","url":"\/documentation\/gio"}}}