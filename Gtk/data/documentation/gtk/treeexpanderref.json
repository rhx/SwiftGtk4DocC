{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeExpanderRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is typically placed as a bottommost child into a "},{"type":"codeVoice","code":"GtkListView"},{"type":"text","text":" "},{"type":"text","text":"to allow users to expand and collapse children in a list with a"},{"type":"text","text":" "},{"type":"text","text":"[class"},{"type":"codeVoice","code":"Gtk.TreeListModel"},{"type":"text","text":"]. "},{"type":"codeVoice","code":"GtkTreeExpander"},{"type":"text","text":" provides the common UI"},{"type":"text","text":" "},{"type":"text","text":"elements, gestures and keybindings for this purpose."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"On top of this, the “listitem.expand”, “listitem.collapse” and"},{"type":"text","text":" "},{"type":"text","text":"“listitem.toggle-expand” actions are provided to allow adding custom"},{"type":"text","text":" "},{"type":"text","text":"UI for managing expanded state."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is important to mention that you want to set the"},{"type":"text","text":" "},{"type":"text","text":"[property"},{"type":"codeVoice","code":"Gtk.ListItem:focusable"},{"type":"text","text":"] property to FALSE when using this"},{"type":"text","text":" "},{"type":"text","text":"widget, as you want the keyboard focus to be in the treexpander, and not"},{"type":"text","text":" "},{"type":"text","text":"inside the list to make use of the keybindings."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GtkTreeListModel"},{"type":"text","text":" must be set to not be passthrough. Then it"},{"type":"text","text":" "},{"type":"text","text":"will provide [class"},{"type":"codeVoice","code":"Gtk.TreeListRow"},{"type":"text","text":"] items which can be set via"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"Gtk.TreeExpander.set_list_row"},{"type":"text","text":"] on the expander."},{"type":"text","text":" "},{"type":"text","text":"The expander will then watch that row item automatically."},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"Gtk.TreeExpander.set_child"},{"type":"text","text":"] sets the widget that displays"},{"type":"text","text":" "},{"type":"text","text":"the actual row contents."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkTreeExpander"},{"type":"text","text":" can be modified with properties such as"},{"type":"text","text":" "},{"type":"text","text":"[property"},{"type":"codeVoice","code":"Gtk.TreeExpander:indent-for-icon"},{"type":"text","text":"],"},{"type":"text","text":" "},{"type":"text","text":"[property"},{"type":"codeVoice","code":"Gtk.TreeExpander:indent-for-depth"},{"type":"text","text":"], and"},{"type":"text","text":" "},{"type":"text","text":"[property"},{"type":"codeVoice","code":"Gtk.TreeExpander:hide-expander"},{"type":"text","text":"] to achieve a different appearance."},{"type":"text","text":" "},{"type":"text","text":"This can even be done to influence individual rows, for example by binding"},{"type":"text","text":" "},{"type":"text","text":"the [property"},{"type":"codeVoice","code":"Gtk.TreeExpander:hide-expander"},{"type":"text","text":"] property to the item count of"},{"type":"text","text":" "},{"type":"text","text":"the model of the treelistrow, to hide the expander for rows without children,"},{"type":"text","text":" "},{"type":"text","text":"even if the row is expandable."}]},{"anchor":"CSS-nodes","level":2,"type":"heading","text":"CSS nodes"},{"type":"codeListing","syntax":null,"code":["treeexpander","├── [indent]*","├── [expander]","╰── &lt;child&gt;"]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkTreeExpander"},{"type":"text","text":" has zero or one CSS nodes with the name “expander” that"},{"type":"text","text":" "},{"type":"text","text":"should display the expander icon. The node will be "},{"type":"codeVoice","code":":checked"},{"type":"text","text":" when it"},{"type":"text","text":" "},{"type":"text","text":"is expanded. If the node is not expandable, an “indent” node will be"},{"type":"text","text":" "},{"type":"text","text":"displayed instead."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For every level of depth, another “indent” node is prepended."}]},{"anchor":"Accessibility","level":2,"type":"heading","text":"Accessibility"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Until GTK 4.10, "},{"type":"codeVoice","code":"GtkTreeExpander"},{"type":"text","text":" used the "},{"type":"codeVoice","code":"GTK_ACCESSIBLE_ROLE_GROUP"},{"type":"text","text":" role."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Since GTK 4.12, "},{"type":"codeVoice","code":"GtkTreeExpander"},{"type":"text","text":" uses the "},{"type":"codeVoice","code":"GTK_ACCESSIBLE_ROLE_BUTTON"},{"type":"text","text":" role."},{"type":"text","text":" "},{"type":"text","text":"Toggling it will change the "},{"type":"codeVoice","code":"GTK_ACCESSIBLE_STATE_EXPANDED"},{"type":"text","text":" state."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"TreeExpanderRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GtkTreeExpander"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"codeVoice","code":"TreeExpanderProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"codeVoice","code":"TreeExpanderRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"GtkTreeExpander"},{"type":"text","text":" instance."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gtk\/treeexpanderref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/AccessibleProtocol","doc:\/\/Gtk\/documentation\/Gtk\/BuildableProtocol","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintTargetProtocol","doc:\/\/Gtk\/4GLib14PointerWrapperP","doc:\/\/Gtk\/10GLibObject14GWeakCapturingP","doc:\/\/Gtk\/10GLibObject24InitiallyUnownedProtocolP","doc:\/\/Gtk\/10GLibObject0B8ProtocolP","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderProtocol","doc:\/\/Gtk\/documentation\/Gtk\/WidgetProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef","interfaceLanguage":"swift"},"abstract":[{"type":"codeVoice","code":"GtkTreeExpander"},{"type":"text","text":" is a widget that provides an expander for a list."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeExpanderRef"}],"title":"TreeExpanderRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:3Gtk15TreeExpanderRefV","modules":[{"name":"Gtk"}],"navigatorTitle":[{"kind":"identifier","text":"TreeExpanderRef"}]},"hierarchy":{"paths":[["doc:\/\/Gtk\/documentation\/Gtk"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/init()","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/init(_:)-1kjdh","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/init(_:)-4gbgj","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/init(_:)-4qmt8","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/init(_:)-8tzh3","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/init(_:)-kbxt","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/init(cPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/init(constPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/init(gconstpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/init(gpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/init(mutating:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/init(opaquePointer:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/ptr"]},{"title":"Type Methods","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/unowned(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/AccessibleProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/BuildableProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/ConstraintTargetProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/GWeakCapturing-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/InitiallyUnownedProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/ObjectProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/TreeExpanderProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/WidgetProtocol-Implementations"],"generated":true}],"references":{"doc://Gtk/10GLibObject14GWeakCapturingP":{"type":"unresolvable","title":"GLibObject.GWeakCapturing","identifier":"doc:\/\/Gtk\/10GLibObject14GWeakCapturingP"},"doc://Gtk/documentation/Gtk/WidgetProtocol":{"role":"symbol","title":"WidgetProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"WidgetProtocol"}],"abstract":[{"type":"text","text":"The base class for all widgets."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WidgetProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WidgetProtocol"}],"url":"\/documentation\/gtk\/widgetprotocol"},"doc://Gtk/documentation/Gtk/TreeExpanderRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:gtypes.h@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpanderref\/init(gconstpointer:)"},"doc://Gtk/documentation/Gtk/TreeExpanderRef/init(_:)-kbxt":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"codeVoice","code":"TreeExpanderProtocol"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/init(_:)-kbxt","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpanderref\/init(_:)-kbxt"},"doc://Gtk/documentation/Gtk/TreeExpanderProtocol":{"role":"symbol","title":"TreeExpanderProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeExpanderProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkTreeExpander"},{"type":"text","text":" is a widget that provides an expander for a list."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeExpanderProtocol"}],"url":"\/documentation\/gtk\/treeexpanderprotocol"},"doc://Gtk/documentation/Gtk/TreeExpanderRef/InitiallyUnownedProtocol-Implementations":{"role":"collectionGroup","title":"InitiallyUnownedProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/InitiallyUnownedProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/treeexpanderref\/initiallyunownedprotocol-implementations"},"doc://Gtk/documentation/Gtk/TreeExpanderRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpanderref\/init(gpointer:)"},"doc://Gtk/documentation/Gtk/TreeExpanderRef/init(_:)-8tzh3":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkTreeExpander"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/init(_:)-8tzh3","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpanderref\/init(_:)-8tzh3"},"doc://Gtk/documentation/Gtk/AccessibleProtocol":{"role":"symbol","title":"AccessibleProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AccessibleProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkAccessible"},{"type":"text","text":" is an interface for describing UI elements for"},{"type":"text","text":" "},{"type":"text","text":"Assistive Technologies."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/AccessibleProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AccessibleProtocol"}],"url":"\/documentation\/gtk\/accessibleprotocol"},"doc://Gtk/documentation/Gtk":{"role":"collection","title":"Gtk","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk","kind":"symbol","type":"topic","url":"\/documentation\/gtk"},"doc://Gtk/documentation/Gtk/TreeExpanderRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GtkTreeExpander"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"codeVoice","code":"tree_expander_ptr"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpanderref\/ptr"},"doc://Gtk/documentation/Gtk/TreeExpanderRef/init(_:)-1kjdh":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkTreeExpander"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/init(_:)-1kjdh","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpanderref\/init(_:)-1kjdh"},"doc://Gtk/10GLibObject0B8ProtocolP":{"type":"unresolvable","title":"GLibObject.ObjectProtocol","identifier":"doc:\/\/Gtk\/10GLibObject0B8ProtocolP"},"doc://Gtk/documentation/Gtk/BuildableProtocol":{"role":"symbol","title":"BuildableProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BuildableProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkBuildable"},{"type":"text","text":" allows objects to extend and customize their deserialization"},{"type":"text","text":" "},{"type":"text","text":"from ui files."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuildableProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BuildableProtocol"}],"url":"\/documentation\/gtk\/buildableprotocol"},"doc://Gtk/documentation/Gtk/TreeExpanderRef/ConstraintTargetProtocol-Implementations":{"role":"collectionGroup","title":"ConstraintTargetProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/ConstraintTargetProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/treeexpanderref\/constrainttargetprotocol-implementations"},"doc://Gtk/documentation/Gtk/TreeExpanderRef/unowned(_:)":{"role":"symbol","title":"unowned(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unowned"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"TreeExpanderRef","preciseIdentifier":"s:3Gtk15TreeExpanderRefV"}],"abstract":[{"type":"text","text":"This factory is syntactic sugar for setting weak pointers wrapped in "},{"type":"codeVoice","code":"GWeak<T>"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/unowned(_:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpanderref\/unowned(_:)"},"doc://Gtk/documentation/Gtk/TreeExpanderRef/TreeExpanderProtocol-Implementations":{"role":"collectionGroup","title":"TreeExpanderProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/TreeExpanderProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/treeexpanderref\/treeexpanderprotocol-implementations"},"doc://Gtk/documentation/Gtk/TreeExpanderRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"TreeExpanderProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpanderref\/init(cpointer:)"},"doc://Gtk/documentation/Gtk/TreeExpanderRef/ObjectProtocol-Implementations":{"role":"collectionGroup","title":"ObjectProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/ObjectProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/treeexpanderref\/objectprotocol-implementations"},"doc://Gtk/documentation/Gtk/TreeExpanderRef/BuildableProtocol-Implementations":{"role":"collectionGroup","title":"BuildableProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/BuildableProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/treeexpanderref\/buildableprotocol-implementations"},"doc://Gtk/documentation/Gtk/TreeExpanderRef":{"role":"symbol","title":"TreeExpanderRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeExpanderRef"}],"abstract":[{"type":"codeVoice","code":"GtkTreeExpander"},{"type":"text","text":" is a widget that provides an expander for a list."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeExpanderRef"}],"url":"\/documentation\/gtk\/treeexpanderref"},"doc://Gtk/documentation/Gtk/TreeExpanderRef/init(_:)-4gbgj":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkTreeExpander"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/init(_:)-4gbgj","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpanderref\/init(_:)-4gbgj"},"doc://Gtk/documentation/Gtk/TreeExpanderRef/init(_:)-4qmt8":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkTreeExpander"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/init(_:)-4qmt8","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpanderref\/init(_:)-4qmt8"},"doc://Gtk/documentation/Gtk/TreeExpanderRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"TreeExpanderProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpanderref\/init(constpointer:)"},"doc://Gtk/10GLibObject24InitiallyUnownedProtocolP":{"type":"unresolvable","title":"GLibObject.InitiallyUnownedProtocol","identifier":"doc:\/\/Gtk\/10GLibObject24InitiallyUnownedProtocolP"},"doc://Gtk/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/Gtk\/4GLib14PointerWrapperP"},"doc://Gtk/documentation/Gtk/ConstraintTargetProtocol":{"role":"symbol","title":"ConstraintTargetProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConstraintTargetProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GtkConstraintTarget"},{"type":"text","text":" interface is implemented by objects that"},{"type":"text","text":" "},{"type":"text","text":"can be used as source or target in "},{"type":"codeVoice","code":"GtkConstraint"},{"type":"text","text":"s."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintTargetProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ConstraintTargetProtocol"}],"url":"\/documentation\/gtk\/constrainttargetprotocol"},"doc://Gtk/documentation/Gtk/TreeExpanderRef/WidgetProtocol-Implementations":{"role":"collectionGroup","title":"WidgetProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/WidgetProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/treeexpanderref\/widgetprotocol-implementations"},"doc://Gtk/documentation/Gtk/TreeExpanderRef/GWeakCapturing-Implementations":{"role":"collectionGroup","title":"GWeakCapturing Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/GWeakCapturing-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/treeexpanderref\/gweakcapturing-implementations"},"doc://Gtk/documentation/Gtk/TreeExpanderRef/init()":{"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"GtkTreeExpander"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/init()","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpanderref\/init()"},"doc://Gtk/documentation/Gtk/TreeExpanderRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"TreeExpanderProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpanderref\/init(mutating:)"},"doc://Gtk/documentation/Gtk/TreeExpanderRef/AccessibleProtocol-Implementations":{"role":"collectionGroup","title":"AccessibleProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/AccessibleProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/treeexpanderref\/accessibleprotocol-implementations"},"doc://Gtk/documentation/Gtk/TreeExpanderRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"TreeExpanderProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpanderref\/init(opaquepointer:)"}}}