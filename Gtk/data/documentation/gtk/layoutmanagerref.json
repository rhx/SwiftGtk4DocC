{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LayoutManagerRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You typically subclass "},{"type":"codeVoice","code":"GtkLayoutManager"},{"type":"text","text":" if you want to implement a"},{"type":"text","text":" "},{"type":"text","text":"layout policy for the children of a widget, or if you want to determine"},{"type":"text","text":" "},{"type":"text","text":"the size of a widget depending on its contents."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each "},{"type":"codeVoice","code":"GtkWidget"},{"type":"text","text":" can only have a "},{"type":"codeVoice","code":"GtkLayoutManager"},{"type":"text","text":" instance associated"},{"type":"text","text":" "},{"type":"text","text":"to it at any given time; it is possible, though, to replace the layout"},{"type":"text","text":" "},{"type":"text","text":"manager instance using [method"},{"type":"codeVoice","code":"Gtk.Widget.set_layout_manager"},{"type":"text","text":"]."}]},{"anchor":"Layout-properties","level":2,"type":"heading","text":"Layout properties"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A layout manager can expose properties for controlling the layout of"},{"type":"text","text":" "},{"type":"text","text":"each child, by creating an object type derived from [class"},{"type":"codeVoice","code":"Gtk.LayoutChild"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"and installing the properties on it as normal "},{"type":"codeVoice","code":"GObject"},{"type":"text","text":" properties."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each "},{"type":"codeVoice","code":"GtkLayoutChild"},{"type":"text","text":" instance storing the layout properties for a"},{"type":"text","text":" "},{"type":"text","text":"specific child is created through the [method"},{"type":"codeVoice","code":"Gtk.LayoutManager.get_layout_child"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"method; a "},{"type":"codeVoice","code":"GtkLayoutManager"},{"type":"text","text":" controls the creation of its "},{"type":"codeVoice","code":"GtkLayoutChild"},{"type":"text","text":" "},{"type":"text","text":"instances by overriding the "},{"type":"codeVoice","code":"GtkLayoutManagerClass.create_layout_child()"},{"type":"text","text":" "},{"type":"text","text":"virtual function. The typical implementation should look like:"}]},{"type":"codeListing","syntax":"c","code":["static GtkLayoutChild *","create_layout_child (GtkLayoutManager *manager,","                     GtkWidget        *container,","                     GtkWidget        *child)","{","  return g_object_new (your_layout_child_get_type (),","                       \"layout-manager\", manager,","                       \"child-widget\", child,","                       NULL);","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The [property"},{"type":"codeVoice","code":"Gtk.LayoutChild:layout-manager"},{"type":"text","text":"] and"},{"type":"text","text":" "},{"type":"text","text":"[property"},{"type":"codeVoice","code":"Gtk.LayoutChild:child-widget"},{"type":"text","text":"] properties"},{"type":"text","text":" "},{"type":"text","text":"on the newly created "},{"type":"codeVoice","code":"GtkLayoutChild"},{"type":"text","text":" instance are mandatory. The"},{"type":"text","text":" "},{"type":"codeVoice","code":"GtkLayoutManager"},{"type":"text","text":" will cache the newly created "},{"type":"codeVoice","code":"GtkLayoutChild"},{"type":"text","text":" instance"},{"type":"text","text":" "},{"type":"text","text":"until the widget is removed from its parent, or the parent removes the"},{"type":"text","text":" "},{"type":"text","text":"layout manager."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each "},{"type":"codeVoice","code":"GtkLayoutManager"},{"type":"text","text":" instance creating a "},{"type":"codeVoice","code":"GtkLayoutChild"},{"type":"text","text":" should use"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"Gtk.LayoutManager.get_layout_child"},{"type":"text","text":"] every time it needs to query"},{"type":"text","text":" "},{"type":"text","text":"the layout properties; each "},{"type":"codeVoice","code":"GtkLayoutChild"},{"type":"text","text":" instance should call"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"Gtk.LayoutManager.layout_changed"},{"type":"text","text":"] every time a property is"},{"type":"text","text":" "},{"type":"text","text":"updated, in order to queue a new size measuring and allocation."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"LayoutManagerRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GtkLayoutManager"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"codeVoice","code":"LayoutManagerProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"codeVoice","code":"LayoutManagerRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"GtkLayoutManager"},{"type":"text","text":" instance."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gtk\/layoutmanagerref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Gtk\/4GLib14PointerWrapperP","doc:\/\/Gtk\/10GLibObject14GWeakCapturingP","doc:\/\/Gtk\/10GLibObject0B8ProtocolP","doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Layout managers are delegate classes that handle the preferred size"},{"type":"text","text":" "},{"type":"text","text":"and the allocation of a widget."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LayoutManagerRef"}],"title":"LayoutManagerRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:3Gtk16LayoutManagerRefV","modules":[{"name":"Gtk"}],"navigatorTitle":[{"kind":"identifier","text":"LayoutManagerRef"}]},"hierarchy":{"paths":[["doc:\/\/Gtk\/documentation\/Gtk"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/init(_:)-2o4vp","doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/init(_:)-5fosc","doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/init(_:)-5jych","doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/init(_:)-6wl9l","doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/init(_:)-9x1j","doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/init(cPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/init(constPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/init(gconstpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/init(gpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/init(mutating:)","doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/init(opaquePointer:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/ptr"]},{"title":"Type Methods","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/unowned(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/GWeakCapturing-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/LayoutManagerProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/ObjectProtocol-Implementations"],"generated":true}],"references":{"doc://Gtk/10GLibObject0B8ProtocolP":{"type":"unresolvable","title":"GLibObject.ObjectProtocol","identifier":"doc:\/\/Gtk\/10GLibObject0B8ProtocolP"},"doc://Gtk/documentation/Gtk/LayoutManagerRef/GWeakCapturing-Implementations":{"role":"collectionGroup","title":"GWeakCapturing Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/GWeakCapturing-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/layoutmanagerref\/gweakcapturing-implementations"},"doc://Gtk/documentation/Gtk/LayoutManagerRef/init(_:)-2o4vp":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkLayoutManager"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/init(_:)-2o4vp","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/layoutmanagerref\/init(_:)-2o4vp"},"doc://Gtk/documentation/Gtk/LayoutManagerRef/ObjectProtocol-Implementations":{"role":"collectionGroup","title":"ObjectProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/ObjectProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/layoutmanagerref\/objectprotocol-implementations"},"doc://Gtk/documentation/Gtk/LayoutManagerRef":{"role":"symbol","title":"LayoutManagerRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LayoutManagerRef"}],"abstract":[{"type":"text","text":"Layout managers are delegate classes that handle the preferred size"},{"type":"text","text":" "},{"type":"text","text":"and the allocation of a widget."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LayoutManagerRef"}],"url":"\/documentation\/gtk\/layoutmanagerref"},"doc://Gtk/documentation/Gtk/LayoutManagerRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"LayoutManagerProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/layoutmanagerref\/init(constpointer:)"},"doc://Gtk/documentation/Gtk":{"role":"collection","title":"Gtk","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk","kind":"symbol","type":"topic","url":"\/documentation\/gtk"},"doc://Gtk/documentation/Gtk/LayoutManagerRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"LayoutManagerProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/layoutmanagerref\/init(mutating:)"},"doc://Gtk/documentation/Gtk/LayoutManagerRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"LayoutManagerProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/layoutmanagerref\/init(opaquepointer:)"},"doc://Gtk/documentation/Gtk/LayoutManagerProtocol":{"role":"symbol","title":"LayoutManagerProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LayoutManagerProtocol"}],"abstract":[{"type":"text","text":"Layout managers are delegate classes that handle the preferred size"},{"type":"text","text":" "},{"type":"text","text":"and the allocation of a widget."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LayoutManagerProtocol"}],"url":"\/documentation\/gtk\/layoutmanagerprotocol"},"doc://Gtk/documentation/Gtk/LayoutManagerRef/init(_:)-6wl9l":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkLayoutManager"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/init(_:)-6wl9l","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/layoutmanagerref\/init(_:)-6wl9l"},"doc://Gtk/documentation/Gtk/LayoutManagerRef/init(_:)-5fosc":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkLayoutManager"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/init(_:)-5fosc","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/layoutmanagerref\/init(_:)-5fosc"},"doc://Gtk/documentation/Gtk/LayoutManagerRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GtkLayoutManager"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"codeVoice","code":"layout_manager_ptr"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/layoutmanagerref\/ptr"},"doc://Gtk/documentation/Gtk/LayoutManagerRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"LayoutManagerProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/layoutmanagerref\/init(cpointer:)"},"doc://Gtk/documentation/Gtk/LayoutManagerRef/unowned(_:)":{"role":"symbol","title":"unowned(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unowned"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LayoutManagerRef","preciseIdentifier":"s:3Gtk16LayoutManagerRefV"}],"abstract":[{"type":"text","text":"This factory is syntactic sugar for setting weak pointers wrapped in "},{"type":"codeVoice","code":"GWeak<T>"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/unowned(_:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/layoutmanagerref\/unowned(_:)"},"doc://Gtk/documentation/Gtk/LayoutManagerRef/LayoutManagerProtocol-Implementations":{"role":"collectionGroup","title":"LayoutManagerProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/LayoutManagerProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/layoutmanagerref\/layoutmanagerprotocol-implementations"},"doc://Gtk/documentation/Gtk/LayoutManagerRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/layoutmanagerref\/init(gpointer:)"},"doc://Gtk/documentation/Gtk/LayoutManagerRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:gtypes.h@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/layoutmanagerref\/init(gconstpointer:)"},"doc://Gtk/documentation/Gtk/LayoutManagerRef/init(_:)-5jych":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkLayoutManager"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/init(_:)-5jych","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/layoutmanagerref\/init(_:)-5jych"},"doc://Gtk/10GLibObject14GWeakCapturingP":{"type":"unresolvable","title":"GLibObject.GWeakCapturing","identifier":"doc:\/\/Gtk\/10GLibObject14GWeakCapturingP"},"doc://Gtk/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/Gtk\/4GLib14PointerWrapperP"},"doc://Gtk/documentation/Gtk/LayoutManagerRef/init(_:)-9x1j":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"codeVoice","code":"LayoutManagerProtocol"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerRef\/init(_:)-9x1j","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/layoutmanagerref\/init(_:)-9x1j"}}}