{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ComboBoxRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GtkComboBox"},{"type":"text","text":" displays the selected choice; when activated, the"},{"type":"text","text":" "},{"type":"codeVoice","code":"GtkComboBox"},{"type":"text","text":" displays a popup which allows the user to make a new choice."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GtkComboBox"},{"type":"text","text":" uses the model-view pattern; the list of valid choices"},{"type":"text","text":" "},{"type":"text","text":"is specified in the form of a tree model, and the display of the choices"},{"type":"text","text":" "},{"type":"text","text":"can be adapted to the data in the model by using cell renderers, as you"},{"type":"text","text":" "},{"type":"text","text":"would in a tree view. This is possible since "},{"type":"codeVoice","code":"GtkComboBox"},{"type":"text","text":" implements the"},{"type":"text","text":" "},{"type":"text","text":"[iface"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout"},{"type":"text","text":"] interface. The tree model holding the valid"},{"type":"text","text":" "},{"type":"text","text":"choices is not restricted to a flat list, it can be a real tree, and the"},{"type":"text","text":" "},{"type":"text","text":"popup will reflect the tree structure."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To allow the user to enter values not in the model, the"},{"type":"text","text":" "},{"type":"text","text":"[property"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBox"},{"type":"text","text":"] property allows the "},{"type":"codeVoice","code":"GtkComboBox"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"contain a [class"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/Entry"},{"type":"text","text":"]. This entry can be accessed by calling"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"Gtk.ComboBox.get_child"},{"type":"text","text":"] on the combo box."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For a simple list of textual choices, the model-view API of "},{"type":"codeVoice","code":"GtkComboBox"},{"type":"text","text":" "},{"type":"text","text":"can be a bit overwhelming. In this case, [class"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxText"},{"type":"text","text":"] offers"},{"type":"text","text":" "},{"type":"text","text":"a simple alternative. Both "},{"type":"codeVoice","code":"GtkComboBox"},{"type":"text","text":" and "},{"type":"codeVoice","code":"GtkComboBoxText"},{"type":"text","text":" can contain"},{"type":"text","text":" "},{"type":"text","text":"an entry."}]},{"anchor":"CSS-nodes","level":2,"type":"heading","text":"CSS nodes"},{"type":"codeListing","syntax":null,"code":["combobox","├── box.linked","│   ╰── button.combo","│       ╰── box","│           ├── cellview","│           ╰── arrow","╰── window.popup"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A normal combobox contains a box with the .linked class, a button"},{"type":"text","text":" "},{"type":"text","text":"with the .combo class and inside those buttons, there are a cellview and"},{"type":"text","text":" "},{"type":"text","text":"an arrow."}]},{"type":"codeListing","syntax":null,"code":["combobox","├── box.linked","│   ├── entry.combo","│   ╰── button.combo","│       ╰── box","│           ╰── arrow","╰── window.popup"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GtkComboBox"},{"type":"text","text":" with an entry has a single CSS node with name combobox."},{"type":"text","text":" "},{"type":"text","text":"It contains a box with the .linked class. That box contains an entry and"},{"type":"text","text":" "},{"type":"text","text":"a button, both with the .combo class added. The button also contains another"},{"type":"text","text":" "},{"type":"text","text":"node with name arrow."}]},{"anchor":"Accessibility","level":2,"type":"heading","text":"Accessibility"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkComboBox"},{"type":"text","text":" uses the "},{"type":"codeVoice","code":"comboBox"},{"type":"text","text":" role."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GtkComboBox"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"GtkComboBox"},{"type":"text","text":" instance."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBox"},{"type":"text","text":" (instead of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef"},{"type":"text","text":") if you want to use Automatic Reference Counting for memory management of the underlying "},{"type":"codeVoice","code":"GtkComboBox"},{"type":"text","text":" instance."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gtk\/comboboxref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/AccessibleProtocol","doc:\/\/Gtk\/documentation\/Gtk\/BuildableProtocol","doc:\/\/Gtk\/documentation\/Gtk\/CellEditableProtocol","doc:\/\/Gtk\/documentation\/Gtk\/CellLayoutProtocol","doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxProtocol","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintTargetProtocol","doc:\/\/Gtk\/4GLib14PointerWrapperP","doc:\/\/Gtk\/10GLibObject14GWeakCapturingP","doc:\/\/Gtk\/10GLibObject24InitiallyUnownedProtocolP","doc:\/\/Gtk\/10GLibObject0B8ProtocolP","doc:\/\/Gtk\/documentation\/Gtk\/WidgetProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GtkComboBox"},{"type":"text","text":" is a widget that allows the user to choose from a list of"},{"type":"text","text":" "},{"type":"text","text":"valid choices."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ComboBoxRef"}],"title":"ComboBoxRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:3Gtk11ComboBoxRefV","modules":[{"name":"Gtk"}],"navigatorTitle":[{"kind":"identifier","text":"ComboBoxRef"}]},"hierarchy":{"paths":[["doc:\/\/Gtk\/documentation\/Gtk"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/init()","doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/init(_:)-1kkgo","doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/init(_:)-3kft7","doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/init(_:)-61dk3","doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/init(_:)-6puio","doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/init(_:)-ibd1","doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/init(cPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/init(constPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/init(gconstpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/init(gpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/init(model:)","doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/init(modelAndEntry:)","doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/init(mutating:)","doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/init(opaquePointer:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/ptr"]},{"title":"Type Methods","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/newWith(model:)","doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/newWith(modelAndEntry:)","doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/newWithEntry()","doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/unowned(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/AccessibleProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/BuildableProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/CellEditableProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/CellLayoutProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/ComboBoxProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/ConstraintTargetProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/GWeakCapturing-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/InitiallyUnownedProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/ObjectProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/WidgetProtocol-Implementations"],"generated":true}],"references":{"doc://Gtk/documentation/Gtk/CellLayout":{"role":"symbol","title":"CellLayout","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CellLayout"}],"abstract":[{"type":"text","text":"An interface for packing cells"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CellLayout"}],"url":"\/documentation\/gtk\/celllayout"},"doc://Gtk/documentation/Gtk/ComboBoxRef":{"role":"symbol","title":"ComboBoxRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ComboBoxRef"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GtkComboBox"},{"type":"text","text":" is a widget that allows the user to choose from a list of"},{"type":"text","text":" "},{"type":"text","text":"valid choices."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ComboBoxRef"}],"url":"\/documentation\/gtk\/comboboxref"},"doc://Gtk/documentation/Gtk/ComboBoxRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/comboboxref\/init(constpointer:)"},"doc://Gtk/documentation/Gtk/ComboBoxRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/comboboxref\/init(opaquepointer:)"},"doc://Gtk/documentation/Gtk/ComboBoxRef/init(_:)-61dk3":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkComboBox"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/init(_:)-61dk3","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/comboboxref\/init(_:)-61dk3"},"doc://Gtk/documentation/Gtk/ComboBoxRef/ObjectProtocol-Implementations":{"role":"collectionGroup","title":"ObjectProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/ObjectProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/comboboxref\/objectprotocol-implementations"},"doc://Gtk/documentation/Gtk/ComboBoxRef/init(modelAndEntry:)":{"role":"symbol","title":"init(modelAndEntry:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreeModelT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"modelAndEntry"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeModelT"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a new empty "},{"type":"codeVoice","code":"GtkComboBox"},{"type":"text","text":" with an entry and a model."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/init(modelAndEntry:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/comboboxref\/init(modelandentry:)"},"doc://Gtk/documentation/Gtk/ComboBoxRef/init()":{"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Creates a new empty "},{"type":"codeVoice","code":"GtkComboBox"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/init()","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/comboboxref\/init()"},"doc://Gtk/documentation/Gtk/ComboBoxRef/ComboBoxProtocol-Implementations":{"role":"collectionGroup","title":"ComboBoxProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/ComboBoxProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/comboboxref\/comboboxprotocol-implementations"},"doc://Gtk/documentation/Gtk/ComboBoxRef/GWeakCapturing-Implementations":{"role":"collectionGroup","title":"GWeakCapturing Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/GWeakCapturing-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/comboboxref\/gweakcapturing-implementations"},"doc://Gtk/documentation/Gtk/ComboBoxRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/comboboxref\/init(gpointer:)"},"doc://Gtk/documentation/Gtk/ComboBoxRef/AccessibleProtocol-Implementations":{"role":"collectionGroup","title":"AccessibleProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/AccessibleProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/comboboxref\/accessibleprotocol-implementations"},"doc://Gtk/documentation/Gtk/ComboBoxText":{"role":"symbol","title":"ComboBoxText","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ComboBoxText"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GtkComboBoxText"},{"type":"text","text":" is a simple variant of "},{"type":"codeVoice","code":"GtkComboBox"},{"type":"text","text":" for text-only"},{"type":"text","text":" "},{"type":"text","text":"use cases."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxText","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ComboBoxText"}],"url":"\/documentation\/gtk\/comboboxtext"},"doc://Gtk/documentation/Gtk/ComboBoxRef/init(model:)":{"role":"symbol","title":"init(model:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreeModelT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"model"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeModelT"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"GtkComboBox"},{"type":"text","text":" with a model."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/init(model:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/comboboxref\/init(model:)"},"doc://Gtk/documentation/Gtk/ComboBoxProtocol":{"role":"symbol","title":"ComboBoxProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ComboBoxProtocol"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GtkComboBox"},{"type":"text","text":" is a widget that allows the user to choose from a list of"},{"type":"text","text":" "},{"type":"text","text":"valid choices."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ComboBoxProtocol"}],"url":"\/documentation\/gtk\/comboboxprotocol"},"doc://Gtk/10GLibObject14GWeakCapturingP":{"type":"unresolvable","title":"GLibObject.GWeakCapturing","identifier":"doc:\/\/Gtk\/10GLibObject14GWeakCapturingP"},"doc://Gtk/documentation/Gtk/Entry":{"role":"symbol","title":"Entry","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Entry"}],"abstract":[{"type":"codeVoice","code":"GtkEntry"},{"type":"text","text":" is a single line text entry widget."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/Entry","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Entry"}],"url":"\/documentation\/gtk\/entry"},"doc://Gtk/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/Gtk\/4GLib14PointerWrapperP"},"doc://Gtk/documentation/Gtk/ComboBoxRef/init(_:)-6puio":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxProtocol"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/init(_:)-6puio","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/comboboxref\/init(_:)-6puio"},"doc://Gtk/documentation/Gtk/ComboBoxRef/BuildableProtocol-Implementations":{"role":"collectionGroup","title":"BuildableProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/BuildableProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/comboboxref\/buildableprotocol-implementations"},"doc://Gtk/documentation/Gtk/ComboBoxRef/ConstraintTargetProtocol-Implementations":{"role":"collectionGroup","title":"ConstraintTargetProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/ConstraintTargetProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/comboboxref\/constrainttargetprotocol-implementations"},"doc://Gtk/documentation/Gtk/BuildableProtocol":{"role":"symbol","title":"BuildableProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BuildableProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkBuildable"},{"type":"text","text":" allows objects to extend and customize their deserialization"},{"type":"text","text":" "},{"type":"text","text":"from ui files."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuildableProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BuildableProtocol"}],"url":"\/documentation\/gtk\/buildableprotocol"},"doc://Gtk/documentation/Gtk/ComboBoxRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GtkComboBox"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxProtocol\/combo_box_ptr-5hpm5"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/comboboxref\/ptr"},"doc://Gtk/documentation/Gtk/ComboBoxRef/init(_:)-1kkgo":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkComboBox"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/init(_:)-1kkgo","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/comboboxref\/init(_:)-1kkgo"},"doc://Gtk/documentation/Gtk/ComboBoxRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/comboboxref\/init(cpointer:)"},"doc://Gtk/documentation/Gtk/ComboBox":{"role":"symbol","title":"ComboBox","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ComboBox"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GtkComboBox"},{"type":"text","text":" is a widget that allows the user to choose from a list of"},{"type":"text","text":" "},{"type":"text","text":"valid choices."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBox","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ComboBox"}],"url":"\/documentation\/gtk\/combobox"},"doc://Gtk/documentation/Gtk/ComboBoxRef/CellLayoutProtocol-Implementations":{"role":"collectionGroup","title":"CellLayoutProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/CellLayoutProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/comboboxref\/celllayoutprotocol-implementations"},"doc://Gtk/documentation/Gtk":{"role":"collection","title":"Gtk","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk","kind":"symbol","type":"topic","url":"\/documentation\/gtk"},"doc://Gtk/documentation/Gtk/AccessibleProtocol":{"role":"symbol","title":"AccessibleProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AccessibleProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkAccessible"},{"type":"text","text":" is an interface for describing UI elements for"},{"type":"text","text":" "},{"type":"text","text":"Assistive Technologies."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/AccessibleProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AccessibleProtocol"}],"url":"\/documentation\/gtk\/accessibleprotocol"},"doc://Gtk/documentation/Gtk/ComboBoxRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:gtypes.h@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/comboboxref\/init(gconstpointer:)"},"doc://Gtk/documentation/Gtk/ComboBoxRef/init(_:)-3kft7":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkComboBox"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/init(_:)-3kft7","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/comboboxref\/init(_:)-3kft7"},"doc://Gtk/documentation/Gtk/ComboBoxRef/init(_:)-ibd1":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkComboBox"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/init(_:)-ibd1","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/comboboxref\/init(_:)-ibd1"},"doc://Gtk/documentation/Gtk/ComboBoxProtocol/combo_box_ptr-5hpm5":{"defaultImplementations":1,"role":"symbol","title":"combo_box_ptr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"combo_box_ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkComboBox"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Typed pointer to the underlying "},{"type":"codeVoice","code":"GtkComboBox"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxProtocol\/combo_box_ptr-5hpm5","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/gtk\/comboboxprotocol\/combo_box_ptr-5hpm5"},"doc://Gtk/documentation/Gtk/ComboBoxRef/unowned(_:)":{"role":"symbol","title":"unowned(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unowned"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ComboBoxRef","preciseIdentifier":"s:3Gtk11ComboBoxRefV"}],"abstract":[{"type":"text","text":"This factory is syntactic sugar for setting weak pointers wrapped in "},{"type":"codeVoice","code":"GWeak<T>"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/unowned(_:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/comboboxref\/unowned(_:)"},"doc://Gtk/documentation/Gtk/ComboBoxRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/comboboxref\/init(mutating:)"},"doc://Gtk/10GLibObject0B8ProtocolP":{"type":"unresolvable","title":"GLibObject.ObjectProtocol","identifier":"doc:\/\/Gtk\/10GLibObject0B8ProtocolP"},"doc://Gtk/documentation/Gtk/CellLayoutProtocol":{"role":"symbol","title":"CellLayoutProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CellLayoutProtocol"}],"abstract":[{"type":"text","text":"An interface for packing cells"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayoutProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CellLayoutProtocol"}],"url":"\/documentation\/gtk\/celllayoutprotocol"},"doc://Gtk/documentation/Gtk/ComboBoxRef/newWith(modelAndEntry:)":{"role":"symbol","title":"newWith(modelAndEntry:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"newWith"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreeModelT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"modelAndEntry"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeModelT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"WidgetRef","preciseIdentifier":"s:3Gtk9WidgetRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Creates a new empty "},{"type":"codeVoice","code":"GtkComboBox"},{"type":"text","text":" with an entry and a model."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/newWith(modelAndEntry:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/comboboxref\/newwith(modelandentry:)"},"doc://Gtk/documentation/Gtk/WidgetProtocol":{"role":"symbol","title":"WidgetProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"WidgetProtocol"}],"abstract":[{"type":"text","text":"The base class for all widgets."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WidgetProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WidgetProtocol"}],"url":"\/documentation\/gtk\/widgetprotocol"},"doc://Gtk/10GLibObject24InitiallyUnownedProtocolP":{"type":"unresolvable","title":"GLibObject.InitiallyUnownedProtocol","identifier":"doc:\/\/Gtk\/10GLibObject24InitiallyUnownedProtocolP"},"doc://Gtk/documentation/Gtk/ComboBoxRef/newWithEntry()":{"role":"symbol","title":"newWithEntry()","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"newWithEntry"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"WidgetRef","preciseIdentifier":"s:3Gtk9WidgetRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Creates a new empty "},{"type":"codeVoice","code":"GtkComboBox"},{"type":"text","text":" with an entry."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/newWithEntry()","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/comboboxref\/newwithentry()"},"doc://Gtk/documentation/Gtk/CellEditableProtocol":{"role":"symbol","title":"CellEditableProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CellEditableProtocol"}],"abstract":[{"type":"text","text":"Interface for widgets that can be used for editing cells"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellEditableProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CellEditableProtocol"}],"url":"\/documentation\/gtk\/celleditableprotocol"},"doc://Gtk/documentation/Gtk/ComboBoxRef/InitiallyUnownedProtocol-Implementations":{"role":"collectionGroup","title":"InitiallyUnownedProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/InitiallyUnownedProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/comboboxref\/initiallyunownedprotocol-implementations"},"doc://Gtk/documentation/Gtk/ComboBoxRef/newWith(model:)":{"role":"symbol","title":"newWith(model:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"newWith"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreeModelT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"model"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeModelT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"WidgetRef","preciseIdentifier":"s:3Gtk9WidgetRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"GtkComboBox"},{"type":"text","text":" with a model."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/newWith(model:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/comboboxref\/newwith(model:)"},"doc://Gtk/documentation/Gtk/ComboBoxRef/CellEditableProtocol-Implementations":{"role":"collectionGroup","title":"CellEditableProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/CellEditableProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/comboboxref\/celleditableprotocol-implementations"},"doc://Gtk/documentation/Gtk/ComboBoxRef/WidgetProtocol-Implementations":{"role":"collectionGroup","title":"WidgetProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ComboBoxRef\/WidgetProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/comboboxref\/widgetprotocol-implementations"},"doc://Gtk/documentation/Gtk/ConstraintTargetProtocol":{"role":"symbol","title":"ConstraintTargetProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConstraintTargetProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GtkConstraintTarget"},{"type":"text","text":" interface is implemented by objects that"},{"type":"text","text":" "},{"type":"text","text":"can be used as source or target in "},{"type":"codeVoice","code":"GtkConstraint"},{"type":"text","text":"s."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintTargetProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ConstraintTargetProtocol"}],"url":"\/documentation\/gtk\/constrainttargetprotocol"}}}