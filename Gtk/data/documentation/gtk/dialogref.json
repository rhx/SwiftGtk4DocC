{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DialogRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Typical uses are to display a message, ask a question, or anything else"},{"type":"text","text":" "},{"type":"text","text":"that does not require extensive effort on the user’s part."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The main area of a "},{"type":"codeVoice","code":"GtkDialog"},{"type":"text","text":" is called the “content area”, and is yours"},{"type":"text","text":" "},{"type":"text","text":"to populate with widgets such a "},{"type":"codeVoice","code":"GtkLabel"},{"type":"text","text":" or "},{"type":"codeVoice","code":"GtkEntry"},{"type":"text","text":", to present"},{"type":"text","text":" "},{"type":"text","text":"your information, questions, or tasks to the user."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In addition, dialogs allow you to add “action widgets”. Most commonly,"},{"type":"text","text":" "},{"type":"text","text":"action widgets are buttons. Depending on the platform, action widgets may"},{"type":"text","text":" "},{"type":"text","text":"be presented in the header bar at the top of the window, or at the bottom"},{"type":"text","text":" "},{"type":"text","text":"of the window. To add action widgets, create your "},{"type":"codeVoice","code":"GtkDialog"},{"type":"text","text":" using"},{"type":"text","text":" "},{"type":"text","text":"[ctor"},{"type":"codeVoice","code":"Gtk.Dialog.new_with_buttons"},{"type":"text","text":"], or use"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"Gtk.Dialog.add_button"},{"type":"text","text":"], [method"},{"type":"codeVoice","code":"Gtk.Dialog.add_buttons"},{"type":"text","text":"],"},{"type":"text","text":" "},{"type":"text","text":"or [method"},{"type":"codeVoice","code":"Gtk.Dialog.add_action_widget"},{"type":"text","text":"]."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkDialogs"},{"type":"text","text":" uses some heuristics to decide whether to add a close"},{"type":"text","text":" "},{"type":"text","text":"button to the window decorations. If any of the action buttons use"},{"type":"text","text":" "},{"type":"text","text":"the response ID "},{"type":"codeVoice","code":"GTK_RESPONSE_CLOSE"},{"type":"text","text":" or "},{"type":"codeVoice","code":"GTK_RESPONSE_CANCEL"},{"type":"text","text":", the"},{"type":"text","text":" "},{"type":"text","text":"close button is omitted."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Clicking a button that was added as an action widget will emit the"},{"type":"text","text":" "},{"type":"text","text":"[signal"},{"type":"codeVoice","code":"Gtk.Dialog::response"},{"type":"text","text":"] signal with a response ID that you specified."},{"type":"text","text":" "},{"type":"text","text":"GTK will never assign a meaning to positive response IDs; these are"},{"type":"text","text":" "},{"type":"text","text":"entirely user-defined. But for convenience, you can use the response"},{"type":"text","text":" "},{"type":"text","text":"IDs in the [enum"},{"type":"codeVoice","code":"Gtk.ResponseType"},{"type":"text","text":"] enumeration (these all have values"},{"type":"text","text":" "},{"type":"text","text":"less than zero). If a dialog receives a delete event, the"},{"type":"text","text":" "},{"type":"text","text":"[signal"},{"type":"codeVoice","code":"Gtk.Dialog::response"},{"type":"text","text":"] signal will be emitted with the"},{"type":"text","text":" "},{"type":"codeVoice","code":"GTK_RESPONSE_DELETE_EVENT"},{"type":"text","text":" response ID."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Dialogs are created with a call to [ctor"},{"type":"codeVoice","code":"Gtk.Dialog.new"},{"type":"text","text":"] or"},{"type":"text","text":" "},{"type":"text","text":"[ctor"},{"type":"codeVoice","code":"Gtk.Dialog.new_with_buttons"},{"type":"text","text":"]. The latter is recommended; it allows"},{"type":"text","text":" "},{"type":"text","text":"you to set the dialog title, some convenient flags, and add buttons."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A “modal” dialog (that is, one which freezes the rest of the application"},{"type":"text","text":" "},{"type":"text","text":"from user input), can be created by calling [method"},{"type":"codeVoice","code":"Gtk.Window.set_modal"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"on the dialog. When using [ctor"},{"type":"codeVoice","code":"Gtk.Dialog.new_with_buttons"},{"type":"text","text":"], you can also"},{"type":"text","text":" "},{"type":"text","text":"pass the "},{"type":"codeVoice","code":"GTK_DIALOG_MODAL"},{"type":"text","text":" flag to make a dialog modal."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For the simple dialog in the following example, a [class"},{"type":"codeVoice","code":"Gtk.MessageDialog"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"would save some effort. But you’d need to create the dialog contents manually"},{"type":"text","text":" "},{"type":"text","text":"if you had more than a simple message in the dialog."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"An example for simple "},{"type":"codeVoice","code":"GtkDialog"},{"type":"text","text":" usage:"}]},{"type":"codeListing","syntax":"c","code":["\/\/ Function to open a dialog box with a message","void","quick_message (GtkWindow *parent, char *message)","{"," GtkWidget *dialog, *label, *content_area;"," GtkDialogFlags flags;",""," \/\/ Create the widgets"," flags = GTK_DIALOG_DESTROY_WITH_PARENT;"," dialog = gtk_dialog_new_with_buttons (\"Message\",","                                       parent,","                                       flags,","                                       `_(\"_OK\")`,","                                       GTK_RESPONSE_NONE,","                                       NULL);"," content_area = gtk_dialog_get_content_area (GTK_DIALOG (dialog));"," label = gtk_label_new (message);",""," \/\/ Ensure that the dialog box is destroyed when the user responds",""," g_signal_connect_swapped (dialog,","                           \"response\",","                           G_CALLBACK (gtk_window_destroy),","                           dialog);",""," \/\/ Add the label, and show everything we’ve added",""," gtk_box_append (GTK_BOX (content_area), label);"," gtk_widget_show (dialog);","}"]},{"anchor":"GtkDialog-as-GtkBuildable","level":1,"type":"heading","text":"GtkDialog as GtkBuildable"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GtkDialog"},{"type":"text","text":" implementation of the "},{"type":"codeVoice","code":"GtkBuildable"},{"type":"text","text":" interface exposes the"},{"type":"text","text":" "},{"type":"codeVoice","code":"content_area"},{"type":"text","text":" as an internal child with the name “content_area”."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkDialog"},{"type":"text","text":" supports a custom "},{"type":"codeVoice","code":"&lt;action-widgets&gt;"},{"type":"text","text":" element, which can contain"},{"type":"text","text":" "},{"type":"text","text":"multiple "},{"type":"codeVoice","code":"&lt;action-widget&gt;"},{"type":"text","text":" elements. The “response” attribute specifies a"},{"type":"text","text":" "},{"type":"text","text":"numeric response, and the content of the element is the id of widget"},{"type":"text","text":" "},{"type":"text","text":"(which should be a child of the dialogs "},{"type":"codeVoice","code":"action_area"},{"type":"text","text":"). To mark a response"},{"type":"text","text":" "},{"type":"text","text":"as default, set the “default” attribute of the "},{"type":"codeVoice","code":"&lt;action-widget&gt;"},{"type":"text","text":" element"},{"type":"text","text":" "},{"type":"text","text":"to true."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkDialog"},{"type":"text","text":" supports adding action widgets by specifying “action” as"},{"type":"text","text":" "},{"type":"text","text":"the “type” attribute of a "},{"type":"codeVoice","code":"&lt;child&gt;"},{"type":"text","text":" element. The widget will be added"},{"type":"text","text":" "},{"type":"text","text":"either to the action area or the headerbar of the dialog, depending"},{"type":"text","text":" "},{"type":"text","text":"on the “use-header-bar” property. The response id has to be associated"},{"type":"text","text":" "},{"type":"text","text":"with the action widget using the "},{"type":"codeVoice","code":"&lt;action-widgets&gt;"},{"type":"text","text":" element."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"An example of a "},{"type":"codeVoice","code":"GtkDialog"},{"type":"text","text":" UI definition fragment:"}]},{"type":"codeListing","syntax":"xml","code":["&lt;object class=\"GtkDialog\" id=\"dialog1\"&gt;","  &lt;child type=\"action\"&gt;","    &lt;object class=\"GtkButton\" id=\"button_cancel\"\/&gt;","  &lt;\/child&gt;","  &lt;child type=\"action\"&gt;","    &lt;object class=\"GtkButton\" id=\"button_ok\"&gt;","    &lt;\/object&gt;","  &lt;\/child&gt;","  &lt;action-widgets&gt;","    &lt;action-widget response=\"cancel\"&gt;button_cancel&lt;\/action-widget&gt;","    &lt;action-widget response=\"ok\" default=\"true\"&gt;button_ok&lt;\/action-widget&gt;","  &lt;\/action-widgets&gt;","&lt;\/object&gt;"]},{"anchor":"Accessibility","level":1,"type":"heading","text":"Accessibility"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkDialog"},{"type":"text","text":" uses the "},{"type":"codeVoice","code":"GTK_ACCESSIBLE_ROLE_DIALOG"},{"type":"text","text":" role."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"DialogRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GtkDialog"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"codeVoice","code":"DialogProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"codeVoice","code":"DialogRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"GtkDialog"},{"type":"text","text":" instance."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gtk\/dialogref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/AccessibleProtocol","doc:\/\/Gtk\/documentation\/Gtk\/BuildableProtocol","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintTargetProtocol","doc:\/\/Gtk\/documentation\/Gtk\/DialogProtocol","doc:\/\/Gtk\/4GLib14PointerWrapperP","doc:\/\/Gtk\/10GLibObject14GWeakCapturingP","doc:\/\/Gtk\/10GLibObject24InitiallyUnownedProtocolP","doc:\/\/Gtk\/10GLibObject0B8ProtocolP","doc:\/\/Gtk\/documentation\/Gtk\/NativeProtocol","doc:\/\/Gtk\/documentation\/Gtk\/RootProtocol","doc:\/\/Gtk\/documentation\/Gtk\/ShortcutManagerProtocol","doc:\/\/Gtk\/documentation\/Gtk\/WidgetProtocol","doc:\/\/Gtk\/documentation\/Gtk\/WindowProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Gtk\/documentation\/Gtk\/DialogRef","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Dialogs are a convenient way to prompt the user for a small amount"},{"type":"text","text":" "},{"type":"text","text":"of input."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DialogRef"}],"title":"DialogRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:3Gtk9DialogRefV","modules":[{"name":"Gtk"}],"navigatorTitle":[{"kind":"identifier","text":"DialogRef"}]},"hierarchy":{"paths":[["doc:\/\/Gtk\/documentation\/Gtk"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/init()","doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/init(_:)-18h90","doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/init(_:)-4ipjp","doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/init(_:)-6kqu4","doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/init(_:)-7ex2z","doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/init(_:)-8n949","doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/init(cPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/init(constPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/init(gconstpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/init(gpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/init(mutating:)","doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/init(opaquePointer:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/ptr"]},{"title":"Type Methods","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/unowned(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/AccessibleProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/BuildableProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/ConstraintTargetProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/DialogProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/GWeakCapturing-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/InitiallyUnownedProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/NativeProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/ObjectProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/RootProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/ShortcutManagerProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/WidgetProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/WindowProtocol-Implementations"],"generated":true}],"references":{"doc://Gtk/documentation/Gtk/DialogRef/init(_:)-6kqu4":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkDialog"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/init(_:)-6kqu4","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/dialogref\/init(_:)-6kqu4"},"doc://Gtk/documentation/Gtk/DialogRef/AccessibleProtocol-Implementations":{"role":"collectionGroup","title":"AccessibleProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/AccessibleProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/dialogref\/accessibleprotocol-implementations"},"doc://Gtk/documentation/Gtk/DialogRef/RootProtocol-Implementations":{"role":"collectionGroup","title":"RootProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/RootProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/dialogref\/rootprotocol-implementations"},"doc://Gtk/documentation/Gtk/DialogRef/ObjectProtocol-Implementations":{"role":"collectionGroup","title":"ObjectProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/ObjectProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/dialogref\/objectprotocol-implementations"},"doc://Gtk/documentation/Gtk/DialogRef/InitiallyUnownedProtocol-Implementations":{"role":"collectionGroup","title":"InitiallyUnownedProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/InitiallyUnownedProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/dialogref\/initiallyunownedprotocol-implementations"},"doc://Gtk/documentation/Gtk/DialogRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"DialogProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/dialogref\/init(cpointer:)"},"doc://Gtk/documentation/Gtk/DialogRef/DialogProtocol-Implementations":{"role":"collectionGroup","title":"DialogProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/DialogProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/dialogref\/dialogprotocol-implementations"},"doc://Gtk/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/Gtk\/4GLib14PointerWrapperP"},"doc://Gtk/documentation/Gtk/ShortcutManagerProtocol":{"role":"symbol","title":"ShortcutManagerProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ShortcutManagerProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GtkShortcutManager"},{"type":"text","text":" interface is used to implement"},{"type":"text","text":" "},{"type":"text","text":"shortcut scopes."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ShortcutManagerProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ShortcutManagerProtocol"}],"url":"\/documentation\/gtk\/shortcutmanagerprotocol"},"doc://Gtk/documentation/Gtk/DialogRef/BuildableProtocol-Implementations":{"role":"collectionGroup","title":"BuildableProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/BuildableProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/dialogref\/buildableprotocol-implementations"},"doc://Gtk/documentation/Gtk/DialogRef/init(_:)-4ipjp":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkDialog"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/init(_:)-4ipjp","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/dialogref\/init(_:)-4ipjp"},"doc://Gtk/documentation/Gtk/ConstraintTargetProtocol":{"role":"symbol","title":"ConstraintTargetProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConstraintTargetProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GtkConstraintTarget"},{"type":"text","text":" interface is implemented by objects that"},{"type":"text","text":" "},{"type":"text","text":"can be used as source or target in "},{"type":"codeVoice","code":"GtkConstraint"},{"type":"text","text":"s."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintTargetProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ConstraintTargetProtocol"}],"url":"\/documentation\/gtk\/constrainttargetprotocol"},"doc://Gtk/documentation/Gtk/DialogRef":{"role":"symbol","title":"DialogRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DialogRef"}],"abstract":[{"type":"text","text":"Dialogs are a convenient way to prompt the user for a small amount"},{"type":"text","text":" "},{"type":"text","text":"of input."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DialogRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DialogRef"}],"url":"\/documentation\/gtk\/dialogref"},"doc://Gtk/documentation/Gtk/NativeProtocol":{"role":"symbol","title":"NativeProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NativeProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkNative"},{"type":"text","text":" is the interface implemented by all widgets that have"},{"type":"text","text":" "},{"type":"text","text":"their own "},{"type":"codeVoice","code":"GdkSurface"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/NativeProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NativeProtocol"}],"url":"\/documentation\/gtk\/nativeprotocol"},"doc://Gtk/documentation/Gtk/BuildableProtocol":{"role":"symbol","title":"BuildableProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BuildableProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkBuildable"},{"type":"text","text":" allows objects to extend and customize their deserialization"},{"type":"text","text":" "},{"type":"text","text":"from ui files."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuildableProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BuildableProtocol"}],"url":"\/documentation\/gtk\/buildableprotocol"},"doc://Gtk/documentation/Gtk/RootProtocol":{"role":"symbol","title":"RootProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RootProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkRoot"},{"type":"text","text":" is the interface implemented by all widgets that can act as a toplevel"},{"type":"text","text":" "},{"type":"text","text":"widget."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/RootProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RootProtocol"}],"url":"\/documentation\/gtk\/rootprotocol"},"doc://Gtk/10GLibObject14GWeakCapturingP":{"type":"unresolvable","title":"GLibObject.GWeakCapturing","identifier":"doc:\/\/Gtk\/10GLibObject14GWeakCapturingP"},"doc://Gtk/documentation/Gtk/DialogRef/ShortcutManagerProtocol-Implementations":{"role":"collectionGroup","title":"ShortcutManagerProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/ShortcutManagerProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/dialogref\/shortcutmanagerprotocol-implementations"},"doc://Gtk/documentation/Gtk/AccessibleProtocol":{"role":"symbol","title":"AccessibleProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AccessibleProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkAccessible"},{"type":"text","text":" is an interface for describing UI elements for"},{"type":"text","text":" "},{"type":"text","text":"Assistive Technologies."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/AccessibleProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AccessibleProtocol"}],"url":"\/documentation\/gtk\/accessibleprotocol"},"doc://Gtk/documentation/Gtk/DialogRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:gtypes.h@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/dialogref\/init(gconstpointer:)"},"doc://Gtk/documentation/Gtk/DialogRef/unowned(_:)":{"role":"symbol","title":"unowned(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unowned"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"DialogRef","preciseIdentifier":"s:3Gtk9DialogRefV"}],"abstract":[{"type":"text","text":"This factory is syntactic sugar for setting weak pointers wrapped in "},{"type":"codeVoice","code":"GWeak<T>"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/unowned(_:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/dialogref\/unowned(_:)"},"doc://Gtk/documentation/Gtk/DialogRef/GWeakCapturing-Implementations":{"role":"collectionGroup","title":"GWeakCapturing Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/GWeakCapturing-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/dialogref\/gweakcapturing-implementations"},"doc://Gtk/documentation/Gtk/DialogRef/init(_:)-8n949":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"codeVoice","code":"DialogProtocol"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/init(_:)-8n949","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/dialogref\/init(_:)-8n949"},"doc://Gtk/documentation/Gtk/DialogRef/NativeProtocol-Implementations":{"role":"collectionGroup","title":"NativeProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/NativeProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/dialogref\/nativeprotocol-implementations"},"doc://Gtk/documentation/Gtk":{"role":"collection","title":"Gtk","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk","kind":"symbol","type":"topic","url":"\/documentation\/gtk"},"doc://Gtk/10GLibObject24InitiallyUnownedProtocolP":{"type":"unresolvable","title":"GLibObject.InitiallyUnownedProtocol","identifier":"doc:\/\/Gtk\/10GLibObject24InitiallyUnownedProtocolP"},"doc://Gtk/documentation/Gtk/DialogRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"DialogProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/dialogref\/init(mutating:)"},"doc://Gtk/documentation/Gtk/DialogRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"DialogProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/dialogref\/init(opaquepointer:)"},"doc://Gtk/documentation/Gtk/DialogRef/ConstraintTargetProtocol-Implementations":{"role":"collectionGroup","title":"ConstraintTargetProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/ConstraintTargetProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/dialogref\/constrainttargetprotocol-implementations"},"doc://Gtk/documentation/Gtk/DialogRef/init(_:)-7ex2z":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkDialog"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/init(_:)-7ex2z","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/dialogref\/init(_:)-7ex2z"},"doc://Gtk/documentation/Gtk/DialogRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/dialogref\/init(gpointer:)"},"doc://Gtk/documentation/Gtk/DialogRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GtkDialog"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"codeVoice","code":"dialog_ptr"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/dialogref\/ptr"},"doc://Gtk/documentation/Gtk/WindowProtocol":{"role":"symbol","title":"WindowProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"WindowProtocol"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GtkWindow"},{"type":"text","text":" is a toplevel window which can contain other widgets."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WindowProtocol"}],"url":"\/documentation\/gtk\/windowprotocol"},"doc://Gtk/documentation/Gtk/DialogRef/WindowProtocol-Implementations":{"role":"collectionGroup","title":"WindowProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/WindowProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/dialogref\/windowprotocol-implementations"},"doc://Gtk/documentation/Gtk/DialogRef/init()":{"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Creates a new dialog box."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/init()","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/dialogref\/init()"},"doc://Gtk/documentation/Gtk/WidgetProtocol":{"role":"symbol","title":"WidgetProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"WidgetProtocol"}],"abstract":[{"type":"text","text":"The base class for all widgets."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WidgetProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WidgetProtocol"}],"url":"\/documentation\/gtk\/widgetprotocol"},"doc://Gtk/documentation/Gtk/DialogRef/WidgetProtocol-Implementations":{"role":"collectionGroup","title":"WidgetProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/WidgetProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/dialogref\/widgetprotocol-implementations"},"doc://Gtk/10GLibObject0B8ProtocolP":{"type":"unresolvable","title":"GLibObject.ObjectProtocol","identifier":"doc:\/\/Gtk\/10GLibObject0B8ProtocolP"},"doc://Gtk/documentation/Gtk/DialogRef/init(_:)-18h90":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkDialog"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/init(_:)-18h90","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/dialogref\/init(_:)-18h90"},"doc://Gtk/documentation/Gtk/DialogRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"DialogProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DialogRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/dialogref\/init(constpointer:)"},"doc://Gtk/documentation/Gtk/DialogProtocol":{"role":"symbol","title":"DialogProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DialogProtocol"}],"abstract":[{"type":"text","text":"Dialogs are a convenient way to prompt the user for a small amount"},{"type":"text","text":" "},{"type":"text","text":"of input."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DialogProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DialogProtocol"}],"url":"\/documentation\/gtk\/dialogprotocol"}}}