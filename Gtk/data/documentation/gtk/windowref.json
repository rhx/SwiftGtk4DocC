{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WindowRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Windows normally have decorations that are under the control"},{"type":"text","text":" "},{"type":"text","text":"of the windowing system and allow the user to manipulate the window"},{"type":"text","text":" "},{"type":"text","text":"(resize it, move it, close it,…)."}]},{"anchor":"GtkWindow-as-GtkBuildable","level":1,"type":"heading","text":"GtkWindow as GtkBuildable"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GtkWindow"},{"type":"text","text":" implementation of the [iface"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/Buildable"},{"type":"text","text":"] interface supports"},{"type":"text","text":" "},{"type":"text","text":"setting a child as the titlebar by specifying “titlebar” as the “type”"},{"type":"text","text":" "},{"type":"text","text":"attribute of a "},{"type":"codeVoice","code":"<child>"},{"type":"text","text":" element."}]},{"anchor":"CSS-nodes","level":1,"type":"heading","text":"CSS nodes"},{"type":"codeListing","syntax":null,"code":["window.background [.csd \/ .solid-csd \/ .ssd] [.maximized \/ .fullscreen \/ .tiled]","├── <child>","╰── <titlebar child>.titlebar [.default-decoration]"]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkWindow"},{"type":"text","text":" has a main CSS node with name window and style class .background."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Style classes that are typically used with the main CSS node are .csd (when"},{"type":"text","text":" "},{"type":"text","text":"client-side decorations are in use), .solid-csd (for client-side decorations"},{"type":"text","text":" "},{"type":"text","text":"without invisible borders), .ssd (used by mutter when rendering server-side"},{"type":"text","text":" "},{"type":"text","text":"decorations). GtkWindow also represents window states with the following"},{"type":"text","text":" "},{"type":"text","text":"style classes on the main node: .maximized, .fullscreen, .tiled (when supported,"},{"type":"text","text":" "},{"type":"text","text":"also .tiled-top, .tiled-left, .tiled-right, .tiled-bottom)."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkWindow"},{"type":"text","text":" subclasses often add their own discriminating style classes,"},{"type":"text","text":" "},{"type":"text","text":"such as .dialog, .popup or .tooltip."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Generally, some CSS properties don’t make sense on the toplevel window node,"},{"type":"text","text":" "},{"type":"text","text":"such as margins or padding. When client-side decorations without invisible"},{"type":"text","text":" "},{"type":"text","text":"borders are in use (i.e. the .solid-csd style class is added to the"},{"type":"text","text":" "},{"type":"text","text":"main window node), the CSS border of the toplevel window is used for"},{"type":"text","text":" "},{"type":"text","text":"resize drags. In the .csd case, the shadow area outside of the window"},{"type":"text","text":" "},{"type":"text","text":"can be used to resize it."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkWindow"},{"type":"text","text":" adds the .titlebar and .default-decoration style classes to the"},{"type":"text","text":" "},{"type":"text","text":"widget that is added as a titlebar child."}]},{"anchor":"Accessibility","level":1,"type":"heading","text":"Accessibility"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Until GTK 4.10, "},{"type":"codeVoice","code":"GtkWindow"},{"type":"text","text":" used the "},{"type":"codeVoice","code":"GTK_ACCESSIBLE_ROLE_WINDOW"},{"type":"text","text":" role."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Since GTK 4.12, "},{"type":"codeVoice","code":"GtkWindow"},{"type":"text","text":" uses the "},{"type":"codeVoice","code":"GTK_ACCESSIBLE_ROLE_APPLICATION"},{"type":"text","text":" role."}]},{"anchor":"Actions","level":1,"type":"heading","text":"Actions"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkWindow"},{"type":"text","text":" defines a set of built-in actions:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"default.activate"},{"type":"text","text":": Activate the default widget."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"window.minimize"},{"type":"text","text":": Minimize the window."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"window.toggle-maximized"},{"type":"text","text":": Maximize or restore the window."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"window.close"},{"type":"text","text":": Close the window."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GtkWindow"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"GtkWindow"},{"type":"text","text":" instance."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/Window"},{"type":"text","text":" (instead of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowRef"},{"type":"text","text":") if you want to use Automatic Reference Counting for memory management of the underlying "},{"type":"codeVoice","code":"GtkWindow"},{"type":"text","text":" instance."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gtk\/windowref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/AccessibleProtocol","doc:\/\/Gtk\/documentation\/Gtk\/BuildableProtocol","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintTargetProtocol","doc:\/\/Gtk\/4GLib14PointerWrapperP","doc:\/\/Gtk\/10GLibObject14GWeakCapturingP","doc:\/\/Gtk\/10GLibObject24InitiallyUnownedProtocolP","doc:\/\/Gtk\/10GLibObject0B8ProtocolP","doc:\/\/Gtk\/documentation\/Gtk\/NativeProtocol","doc:\/\/Gtk\/documentation\/Gtk\/RootProtocol","doc:\/\/Gtk\/documentation\/Gtk\/ShortcutManagerProtocol","doc:\/\/Gtk\/documentation\/Gtk\/WidgetProtocol","doc:\/\/Gtk\/documentation\/Gtk\/WindowProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Gtk\/documentation\/Gtk\/WindowRef","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GtkWindow"},{"type":"text","text":" is a toplevel window which can contain other widgets."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WindowRef"}],"title":"WindowRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:3Gtk9WindowRefV","modules":[{"name":"Gtk"}],"navigatorTitle":[{"kind":"identifier","text":"WindowRef"}]},"hierarchy":{"paths":[["doc:\/\/Gtk\/documentation\/Gtk"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/init()","doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/init(_:)-3o30","doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/init(_:)-522tl","doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/init(_:)-5z1gg","doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/init(_:)-5zh88","doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/init(_:)-7zv20","doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/init(cPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/init(constPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/init(gconstpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/init(gpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/init(mutating:)","doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/init(opaquePointer:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/ptr"]},{"title":"Type Methods","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/unowned(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/AccessibleProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/BuildableProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/ConstraintTargetProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/GWeakCapturing-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/InitiallyUnownedProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/NativeProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/ObjectProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/RootProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/ShortcutManagerProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/WidgetProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/WindowProtocol-Implementations"],"generated":true}],"references":{"doc://Gtk/documentation/Gtk/WindowRef":{"role":"symbol","title":"WindowRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WindowRef"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GtkWindow"},{"type":"text","text":" is a toplevel window which can contain other widgets."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WindowRef"}],"url":"\/documentation\/gtk\/windowref"},"doc://Gtk/documentation/Gtk/WindowRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/windowref\/init(opaquepointer:)"},"doc://Gtk/documentation/Gtk/WindowRef/ObjectProtocol-Implementations":{"role":"collectionGroup","title":"ObjectProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/ObjectProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/windowref\/objectprotocol-implementations"},"doc://Gtk/10GLibObject14GWeakCapturingP":{"type":"unresolvable","title":"GLibObject.GWeakCapturing","identifier":"doc:\/\/Gtk\/10GLibObject14GWeakCapturingP"},"doc://Gtk/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/Gtk\/4GLib14PointerWrapperP"},"doc://Gtk/documentation/Gtk/WindowRef/unowned(_:)":{"role":"symbol","title":"unowned(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unowned"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"WindowRef","preciseIdentifier":"s:3Gtk9WindowRefV"}],"abstract":[{"type":"text","text":"This factory is syntactic sugar for setting weak pointers wrapped in "},{"type":"codeVoice","code":"GWeak<T>"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/unowned(_:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/windowref\/unowned(_:)"},"doc://Gtk/documentation/Gtk/WindowRef/AccessibleProtocol-Implementations":{"role":"collectionGroup","title":"AccessibleProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/AccessibleProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/windowref\/accessibleprotocol-implementations"},"doc://Gtk/documentation/Gtk/WindowProtocol/window_ptr-5cl3p":{"defaultImplementations":1,"role":"symbol","title":"window_ptr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"window_ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkWindow"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Typed pointer to the underlying "},{"type":"codeVoice","code":"GtkWindow"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowProtocol\/window_ptr-5cl3p","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/gtk\/windowprotocol\/window_ptr-5cl3p"},"doc://Gtk/documentation/Gtk/WindowRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/windowref\/init(mutating:)"},"doc://Gtk/documentation/Gtk/ShortcutManagerProtocol":{"role":"symbol","title":"ShortcutManagerProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ShortcutManagerProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GtkShortcutManager"},{"type":"text","text":" interface is used to implement"},{"type":"text","text":" "},{"type":"text","text":"shortcut scopes."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ShortcutManagerProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ShortcutManagerProtocol"}],"url":"\/documentation\/gtk\/shortcutmanagerprotocol"},"doc://Gtk/documentation/Gtk/WindowRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GtkWindow"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowProtocol\/window_ptr-5cl3p"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/windowref\/ptr"},"doc://Gtk/documentation/Gtk/WindowRef/WindowProtocol-Implementations":{"role":"collectionGroup","title":"WindowProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/WindowProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/windowref\/windowprotocol-implementations"},"doc://Gtk/10GLibObject0B8ProtocolP":{"type":"unresolvable","title":"GLibObject.ObjectProtocol","identifier":"doc:\/\/Gtk\/10GLibObject0B8ProtocolP"},"doc://Gtk/documentation/Gtk/BuildableProtocol":{"role":"symbol","title":"BuildableProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BuildableProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkBuildable"},{"type":"text","text":" allows objects to extend and customize their deserialization"},{"type":"text","text":" "},{"type":"text","text":"from ui files."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuildableProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BuildableProtocol"}],"url":"\/documentation\/gtk\/buildableprotocol"},"doc://Gtk/documentation/Gtk/WindowRef/init(_:)-522tl":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkWindow"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/init(_:)-522tl","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/windowref\/init(_:)-522tl"},"doc://Gtk/documentation/Gtk/WindowRef/init(_:)-5zh88":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowProtocol"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/init(_:)-5zh88","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/windowref\/init(_:)-5zh88"},"doc://Gtk/documentation/Gtk/WindowRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/windowref\/init(constpointer:)"},"doc://Gtk/documentation/Gtk/WindowRef/init()":{"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"GtkWindow"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/init()","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/windowref\/init()"},"doc://Gtk/documentation/Gtk/WindowRef/BuildableProtocol-Implementations":{"role":"collectionGroup","title":"BuildableProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/BuildableProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/windowref\/buildableprotocol-implementations"},"doc://Gtk/documentation/Gtk/WindowRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/windowref\/init(gpointer:)"},"doc://Gtk/documentation/Gtk/WindowRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/windowref\/init(cpointer:)"},"doc://Gtk/documentation/Gtk/WindowRef/init(_:)-3o30":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkWindow"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/init(_:)-3o30","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/windowref\/init(_:)-3o30"},"doc://Gtk/documentation/Gtk/WindowRef/WidgetProtocol-Implementations":{"role":"collectionGroup","title":"WidgetProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/WidgetProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/windowref\/widgetprotocol-implementations"},"doc://Gtk/documentation/Gtk/WindowRef/RootProtocol-Implementations":{"role":"collectionGroup","title":"RootProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/RootProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/windowref\/rootprotocol-implementations"},"doc://Gtk/documentation/Gtk/WindowRef/ConstraintTargetProtocol-Implementations":{"role":"collectionGroup","title":"ConstraintTargetProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/ConstraintTargetProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/windowref\/constrainttargetprotocol-implementations"},"doc://Gtk/documentation/Gtk/Buildable":{"role":"symbol","title":"Buildable","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Buildable"}],"abstract":[{"type":"codeVoice","code":"GtkBuildable"},{"type":"text","text":" allows objects to extend and customize their deserialization"},{"type":"text","text":" "},{"type":"text","text":"from ui files."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/Buildable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Buildable"}],"url":"\/documentation\/gtk\/buildable"},"doc://Gtk/documentation/Gtk/WindowRef/init(_:)-5z1gg":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkWindow"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/init(_:)-5z1gg","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/windowref\/init(_:)-5z1gg"},"doc://Gtk/documentation/Gtk/ConstraintTargetProtocol":{"role":"symbol","title":"ConstraintTargetProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConstraintTargetProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GtkConstraintTarget"},{"type":"text","text":" interface is implemented by objects that"},{"type":"text","text":" "},{"type":"text","text":"can be used as source or target in "},{"type":"codeVoice","code":"GtkConstraint"},{"type":"text","text":"s."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintTargetProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ConstraintTargetProtocol"}],"url":"\/documentation\/gtk\/constrainttargetprotocol"},"doc://Gtk/documentation/Gtk":{"role":"collection","title":"Gtk","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk","kind":"symbol","type":"topic","url":"\/documentation\/gtk"},"doc://Gtk/documentation/Gtk/WidgetProtocol":{"role":"symbol","title":"WidgetProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"WidgetProtocol"}],"abstract":[{"type":"text","text":"The base class for all widgets."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WidgetProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WidgetProtocol"}],"url":"\/documentation\/gtk\/widgetprotocol"},"doc://Gtk/documentation/Gtk/RootProtocol":{"role":"symbol","title":"RootProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RootProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkRoot"},{"type":"text","text":" is the interface implemented by all widgets that can act as a toplevel"},{"type":"text","text":" "},{"type":"text","text":"widget."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/RootProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RootProtocol"}],"url":"\/documentation\/gtk\/rootprotocol"},"doc://Gtk/documentation/Gtk/WindowProtocol":{"role":"symbol","title":"WindowProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"WindowProtocol"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GtkWindow"},{"type":"text","text":" is a toplevel window which can contain other widgets."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WindowProtocol"}],"url":"\/documentation\/gtk\/windowprotocol"},"doc://Gtk/documentation/Gtk/Window":{"role":"symbol","title":"Window","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Window"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GtkWindow"},{"type":"text","text":" is a toplevel window which can contain other widgets."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/Window","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Window"}],"url":"\/documentation\/gtk\/window"},"doc://Gtk/documentation/Gtk/WindowRef/NativeProtocol-Implementations":{"role":"collectionGroup","title":"NativeProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/NativeProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/windowref\/nativeprotocol-implementations"},"doc://Gtk/documentation/Gtk/WindowRef/InitiallyUnownedProtocol-Implementations":{"role":"collectionGroup","title":"InitiallyUnownedProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/InitiallyUnownedProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/windowref\/initiallyunownedprotocol-implementations"},"doc://Gtk/documentation/Gtk/WindowRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:gtypes.h@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/windowref\/init(gconstpointer:)"},"doc://Gtk/documentation/Gtk/WindowRef/ShortcutManagerProtocol-Implementations":{"role":"collectionGroup","title":"ShortcutManagerProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/ShortcutManagerProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/windowref\/shortcutmanagerprotocol-implementations"},"doc://Gtk/documentation/Gtk/WindowRef/GWeakCapturing-Implementations":{"role":"collectionGroup","title":"GWeakCapturing Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/GWeakCapturing-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/windowref\/gweakcapturing-implementations"},"doc://Gtk/documentation/Gtk/WindowRef/init(_:)-7zv20":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkWindow"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowRef\/init(_:)-7zv20","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/windowref\/init(_:)-7zv20"},"doc://Gtk/documentation/Gtk/AccessibleProtocol":{"role":"symbol","title":"AccessibleProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AccessibleProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkAccessible"},{"type":"text","text":" is an interface for describing UI elements for"},{"type":"text","text":" "},{"type":"text","text":"Assistive Technologies."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/AccessibleProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AccessibleProtocol"}],"url":"\/documentation\/gtk\/accessibleprotocol"},"doc://Gtk/10GLibObject24InitiallyUnownedProtocolP":{"type":"unresolvable","title":"GLibObject.InitiallyUnownedProtocol","identifier":"doc:\/\/Gtk\/10GLibObject24InitiallyUnownedProtocolP"},"doc://Gtk/documentation/Gtk/NativeProtocol":{"role":"symbol","title":"NativeProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NativeProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkNative"},{"type":"text","text":" is the interface implemented by all widgets that have"},{"type":"text","text":" "},{"type":"text","text":"their own "},{"type":"codeVoice","code":"GdkSurface"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/NativeProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NativeProtocol"}],"url":"\/documentation\/gtk\/nativeprotocol"}}}