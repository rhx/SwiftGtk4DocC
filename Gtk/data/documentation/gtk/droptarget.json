{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DropTarget"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The most basic way to use a "},{"type":"codeVoice","code":"GtkDropTarget"},{"type":"text","text":" to receive drops on a"},{"type":"text","text":" "},{"type":"text","text":"widget is to create it via [ctor"},{"type":"codeVoice","code":"Gtk.DropTarget.new"},{"type":"text","text":"], passing in the"},{"type":"text","text":" "},{"type":"codeVoice","code":"GType"},{"type":"text","text":" of the data you want to receive and connect to the"},{"type":"text","text":" "},{"type":"text","text":"[signal"},{"type":"codeVoice","code":"Gtk.DropTarget::drop"},{"type":"text","text":"] signal to receive the data:"}]},{"type":"codeListing","syntax":"c","code":["static gboolean","on_drop (GtkDropTarget *target,","         const GValue  *value,","         double         x,","         double         y,","         gpointer       data)","{","  MyWidget *self = data;","","  \/\/ Call the appropriate setter depending on the type of data","  \/\/ that we received","  if (G_VALUE_HOLDS (value, G_TYPE_FILE))","    my_widget_set_file (self, g_value_get_object (value));","  else if (G_VALUE_HOLDS (value, GDK_TYPE_PIXBUF))","    my_widget_set_pixbuf (self, g_value_get_object (value));","  else","    return FALSE;","","  return TRUE;","}","","static void","my_widget_init (MyWidget *self)","{","  GtkDropTarget *target =","    gtk_drop_target_new (G_TYPE_INVALID, GDK_ACTION_COPY);","","  \/\/ This widget accepts two types of drop types: GFile objects","  \/\/ and GdkPixbuf objects","  gtk_drop_target_set_gtypes (target, (GTypes [2]) {","    G_TYPE_FILE,","    GDK_TYPE_PIXBUF,","  }, 2);","","  g_signal_connect (target, \"drop\", G_CALLBACK (on_drop), self);","  gtk_widget_add_controller (GTK_WIDGET (self), GTK_EVENT_CONTROLLER (target));","}"]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkDropTarget"},{"type":"text","text":" supports more options, such as:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"rejecting potential drops via the [signal"},{"type":"codeVoice","code":"Gtk.DropTarget::accept"},{"type":"text","text":"] signal"},{"type":"text","text":" "},{"type":"text","text":"and the [method"},{"type":"codeVoice","code":"Gtk.DropTarget.reject"},{"type":"text","text":"] function to let other drop"},{"type":"text","text":" "},{"type":"text","text":"targets handle the drop"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"tracking an ongoing drag operation before the drop via the"},{"type":"text","text":" "},{"type":"text","text":"[signal"},{"type":"codeVoice","code":"Gtk.DropTarget::enter"},{"type":"text","text":"], [signal"},{"type":"codeVoice","code":"Gtk.DropTarget::motion"},{"type":"text","text":"] and"},{"type":"text","text":" "},{"type":"text","text":"[signal"},{"type":"codeVoice","code":"Gtk.DropTarget::leave"},{"type":"text","text":"] signals"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"configuring how to receive data by setting the"},{"type":"text","text":" "},{"type":"text","text":"[property"},{"type":"codeVoice","code":"Gtk.DropTarget:preload"},{"type":"text","text":"] property and listening for its"},{"type":"text","text":" "},{"type":"text","text":"availability via the [property"},{"type":"codeVoice","code":"Gtk.DropTarget:value"},{"type":"text","text":"] property"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"However, "},{"type":"codeVoice","code":"GtkDropTarget"},{"type":"text","text":" is ultimately modeled in a synchronous way"},{"type":"text","text":" "},{"type":"text","text":"and only supports data transferred via "},{"type":"codeVoice","code":"GType"},{"type":"text","text":". If you want full control"},{"type":"text","text":" "},{"type":"text","text":"over an ongoing drop, the [class"},{"type":"codeVoice","code":"Gtk.DropTargetAsync"},{"type":"text","text":"] object gives you"},{"type":"text","text":" "},{"type":"text","text":"this ability."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"While a pointer is dragged over the drop targetâ€™s widget and the drop"},{"type":"text","text":" "},{"type":"text","text":"has not been rejected, that widget will receive the"},{"type":"text","text":" "},{"type":"codeVoice","code":"GTK_STATE_FLAG_DROP_ACTIVE"},{"type":"text","text":" state, which can be used to style the widget."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you are not interested in receiving the drop, but just want to update"},{"type":"text","text":" "},{"type":"text","text":"UI state during a Drag-and-Drop operation (e.g. switching tabs), you can"},{"type":"text","text":" "},{"type":"text","text":"use [class"},{"type":"codeVoice","code":"Gtk.DropControllerMotion"},{"type":"text","text":"]."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"DropTarget"},{"type":"text","text":" type acts as a reference-counted owner of an underlying "},{"type":"codeVoice","code":"GtkDropTarget"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It provides the methods that can operate on this data type through "},{"type":"codeVoice","code":"DropTargetProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"codeVoice","code":"DropTarget"},{"type":"text","text":" as a strong reference or owner of a "},{"type":"codeVoice","code":"GtkDropTarget"},{"type":"text","text":" instance."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gtk\/droptarget"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/EventController"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/DropTargetProtocol","doc:\/\/Gtk\/documentation\/Gtk\/EventControllerProtocol","doc:\/\/Gtk\/4GLib14PointerWrapperP","doc:\/\/Gtk\/10GLibObject0B8ProtocolP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Gtk\/documentation\/Gtk\/DropTarget","interfaceLanguage":"swift"},"abstract":[{"type":"codeVoice","code":"GtkDropTarget"},{"type":"text","text":" is an event controller to receive Drag-and-Drop operations."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DropTarget"}],"title":"DropTarget","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:3Gtk10DropTargetC","modules":[{"name":"Gtk"}],"navigatorTitle":[{"kind":"identifier","text":"DropTarget"}]},"hierarchy":{"paths":[["doc:\/\/Gtk\/documentation\/Gtk"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(_:)-2plck","doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(_:)-4nkst","doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(_:)-67hoz","doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(_:)-8w5vm","doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(cPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(dropTarget:)","doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(gconstpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(gpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(opaquePointer:)","doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(raw:)-45fbi","doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(raw:)-4xkk4","doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(retaining:)","doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(retainingCPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(retainingOpaquePointer:)","doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(retainingRaw:)-1chgx","doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(retainingRaw:)-3z1lq","doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(type:actions:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/metatypeReferenceForDropTarget","doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/wrapperForDropTarget"]},{"title":"Type Properties","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/metatypeForDropTarget"]},{"title":"Default Implementations","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/DropTargetProtocol-Implementations"],"generated":true}],"references":{"doc://Gtk/documentation/Gtk":{"role":"collection","title":"Gtk","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk","kind":"symbol","type":"topic","url":"\/documentation\/gtk"},"doc://Gtk/documentation/Gtk/DropTarget/init(_:)-8w5vm":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkDropTarget"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"DropTarget"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(_:)-8w5vm","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptarget\/init(_:)-8w5vm"},"doc://Gtk/documentation/Gtk/DropTarget/init(type:actions:)":{"role":"symbol","title":"init(type:actions:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GType","preciseIdentifier":"c:@T@GType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"actions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DragAction","preciseIdentifier":"s:3Gdk10DragActionV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"GtkDropTarget"},{"type":"text","text":" object."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(type:actions:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptarget\/init(type:actions:)"},"doc://Gtk/documentation/Gtk/DropTarget":{"role":"symbol","title":"DropTarget","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DropTarget"}],"abstract":[{"type":"codeVoice","code":"GtkDropTarget"},{"type":"text","text":" is an event controller to receive Drag-and-Drop operations."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTarget","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DropTarget"}],"url":"\/documentation\/gtk\/droptarget"},"doc://Gtk/documentation/Gtk/DropTarget/wrapperForDropTarget":{"role":"symbol","title":"wrapperForDropTarget","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrapperForDropTarget"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DropTargetClassRef","preciseIdentifier":"s:3Gtk18DropTargetClassRefV"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Return the "},{"type":"codeVoice","code":"DropTargetClass"},{"type":"text","text":" wrapper referencing the metatype of the receiver."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/wrapperForDropTarget","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptarget\/wrapperfordroptarget"},"doc://Gtk/documentation/Gtk/DropTarget/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:gtypes.h@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a non-mutating "},{"type":"codeVoice","code":"gconstpointer"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"DropTarget"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptarget\/init(gconstpointer:)"},"doc://Gtk/documentation/Gtk/DropTarget/init(_:)-4nkst":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkDropTarget"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"DropTarget"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(_:)-4nkst","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptarget\/init(_:)-4nkst"},"doc://Gtk/documentation/Gtk/DropTarget/init(retaining:)":{"role":"symbol","title":"init(retaining:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retaining"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkDropTarget"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"Will retain "},{"type":"codeVoice","code":"GtkDropTarget"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"DropTarget"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(retaining:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptarget\/init(retaining:)"},"doc://Gtk/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/Gtk\/4GLib14PointerWrapperP"},"doc://Gtk/documentation/Gtk/DropTarget/DropTargetProtocol-Implementations":{"role":"collectionGroup","title":"DropTargetProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/DropTargetProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/droptarget\/droptargetprotocol-implementations"},"doc://Gtk/documentation/Gtk/DropTarget/init(retainingRaw:)-3z1lq":{"role":"symbol","title":"init(retainingRaw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingRaw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"DropTargetProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(retainingRaw:)-3z1lq","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptarget\/init(retainingraw:)-3z1lq"},"doc://Gtk/documentation/Gtk/DropTarget/init(_:)-2plck":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkDropTarget"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"DropTarget"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(_:)-2plck","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptarget\/init(_:)-2plck"},"doc://Gtk/documentation/Gtk/EventController":{"role":"symbol","title":"EventController","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventController"}],"abstract":[{"type":"codeVoice","code":"GtkEventController"},{"type":"text","text":" is the base class for event controllers."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/EventController","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EventController"}],"url":"\/documentation\/gtk\/eventcontroller"},"doc://Gtk/documentation/Gtk/DropTarget/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"DropTargetProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptarget\/init(opaquepointer:)"},"doc://Gtk/documentation/Gtk/DropTarget/init(raw:)-45fbi":{"role":"symbol","title":"init(raw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"raw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"DropTargetProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(raw:)-45fbi","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptarget\/init(raw:)-45fbi"},"doc://Gtk/documentation/Gtk/DropTarget/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"DropTargetProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptarget\/init(cpointer:)"},"doc://Gtk/documentation/Gtk/DropTarget/init(retainingOpaquePointer:)":{"role":"symbol","title":"init(retainingOpaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingOpaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"DropTargetProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(retainingOpaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptarget\/init(retainingopaquepointer:)"},"doc://Gtk/documentation/Gtk/DropTarget/init(dropTarget:)":{"role":"symbol","title":"init(dropTarget:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"dropTarget"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"codeVoice","code":"DropTargetProtocol"},{"type":"text","text":" "},{"type":"text","text":"Will retain "},{"type":"codeVoice","code":"GtkDropTarget"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(dropTarget:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptarget\/init(droptarget:)"},"doc://Gtk/documentation/Gtk/DropTarget/metatypeReferenceForDropTarget":{"role":"symbol","title":"metatypeReferenceForDropTarget","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"metatypeReferenceForDropTarget"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GType","preciseIdentifier":"c:@T@GType"}],"abstract":[{"type":"text","text":"This getter returns the GLib type identifier registered for "},{"type":"codeVoice","code":"DropTarget"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/metatypeReferenceForDropTarget","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptarget\/metatypereferencefordroptarget"},"doc://Gtk/documentation/Gtk/DropTarget/init(_:)-67hoz":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkDropTarget"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Optional initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"DropTarget"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(_:)-67hoz","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptarget\/init(_:)-67hoz"},"doc://Gtk/documentation/Gtk/DropTarget/init(retainingRaw:)-1chgx":{"role":"symbol","title":"init(retainingRaw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingRaw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"DropTargetProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(retainingRaw:)-1chgx","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptarget\/init(retainingraw:)-1chgx"},"doc://Gtk/documentation/Gtk/DropTarget/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a non-mutating "},{"type":"codeVoice","code":"gpointer"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"DropTarget"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptarget\/init(gpointer:)"},"doc://Gtk/documentation/Gtk/EventControllerProtocol":{"role":"symbol","title":"EventControllerProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventControllerProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkEventController"},{"type":"text","text":" is the base class for event controllers."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/EventControllerProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EventControllerProtocol"}],"url":"\/documentation\/gtk\/eventcontrollerprotocol"},"doc://Gtk/documentation/Gtk/DropTargetProtocol":{"role":"symbol","title":"DropTargetProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DropTargetProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkDropTarget"},{"type":"text","text":" is an event controller to receive Drag-and-Drop operations."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DropTargetProtocol"}],"url":"\/documentation\/gtk\/droptargetprotocol"},"doc://Gtk/documentation/Gtk/DropTarget/metatypeForDropTarget":{"role":"symbol","title":"metatypeForDropTarget","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"metatypeForDropTarget"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GtkDropTargetClass"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Return a "},{"type":"codeVoice","code":"GtkDropTargetClass"},{"type":"text","text":" reference to the underlying class instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/metatypeForDropTarget","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptarget\/metatypefordroptarget"},"doc://Gtk/documentation/Gtk/DropTarget/init(retainingCPointer:)":{"role":"symbol","title":"init(retainingCPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"retainingCPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"DropTargetProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(retainingCPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptarget\/init(retainingcpointer:)"},"doc://Gtk/10GLibObject0B8ProtocolP":{"type":"unresolvable","title":"GLibObject.ObjectProtocol","identifier":"doc:\/\/Gtk\/10GLibObject0B8ProtocolP"},"doc://Gtk/documentation/Gtk/DropTarget/init(raw:)-4xkk4":{"role":"symbol","title":"init(raw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"raw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"DropTargetProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTarget\/init(raw:)-4xkk4","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptarget\/init(raw:)-4xkk4"}}}