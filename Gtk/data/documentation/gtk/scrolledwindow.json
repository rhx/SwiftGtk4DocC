{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScrolledWindow"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It does so using either internally added scrollbars or externally"},{"type":"text","text":" "},{"type":"text","text":"associated adjustments, and optionally draws a frame around the child."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Widgets with native scrolling support, i.e. those whose classes implement"},{"type":"text","text":" "},{"type":"text","text":"the [iface"},{"type":"codeVoice","code":"Gtk.Scrollable"},{"type":"text","text":"] interface, are added directly. For other types"},{"type":"text","text":" "},{"type":"text","text":"of widget, the class [class"},{"type":"codeVoice","code":"Gtk.Viewport"},{"type":"text","text":"] acts as an adaptor, giving"},{"type":"text","text":" "},{"type":"text","text":"scrollability to other widgets. [method"},{"type":"codeVoice","code":"Gtk.ScrolledWindow.set_child"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"intelligently accounts for whether or not the added child is a "},{"type":"codeVoice","code":"GtkScrollable"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"If it isn’t, then it wraps the child in a "},{"type":"codeVoice","code":"GtkViewport"},{"type":"text","text":". Therefore, you can"},{"type":"text","text":" "},{"type":"text","text":"just add any child widget and not worry about the details."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If [method"},{"type":"codeVoice","code":"Gtk.ScrolledWindow.set_child"},{"type":"text","text":"] has added a "},{"type":"codeVoice","code":"GtkViewport"},{"type":"text","text":" for you,"},{"type":"text","text":" "},{"type":"text","text":"it will be automatically removed when you unset the child."},{"type":"text","text":" "},{"type":"text","text":"Unless [property"},{"type":"codeVoice","code":"Gtk.ScrolledWindow:hscrollbar-policy"},{"type":"text","text":"] and"},{"type":"text","text":" "},{"type":"text","text":"[property"},{"type":"codeVoice","code":"Gtk.ScrolledWindow:vscrollbar-policy"},{"type":"text","text":"] are "},{"type":"codeVoice","code":"GTK_POLICY_NEVER"},{"type":"text","text":" or"},{"type":"text","text":" "},{"type":"codeVoice","code":"GTK_POLICY_EXTERNAL"},{"type":"text","text":", "},{"type":"codeVoice","code":"GtkScrolledWindow"},{"type":"text","text":" adds internal "},{"type":"codeVoice","code":"GtkScrollbar"},{"type":"text","text":" widgets"},{"type":"text","text":" "},{"type":"text","text":"around its child. The scroll position of the child, and if applicable the"},{"type":"text","text":" "},{"type":"text","text":"scrollbars, is controlled by the [property"},{"type":"codeVoice","code":"Gtk.ScrolledWindow:hadjustment"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"and [property"},{"type":"codeVoice","code":"Gtk.ScrolledWindow:vadjustment"},{"type":"text","text":"] that are associated with the"},{"type":"text","text":" "},{"type":"codeVoice","code":"GtkScrolledWindow"},{"type":"text","text":". See the docs on [class"},{"type":"codeVoice","code":"Gtk.Scrollbar"},{"type":"text","text":"] for the details,"},{"type":"text","text":" "},{"type":"text","text":"but note that the “step_increment” and “page_increment” fields are only"},{"type":"text","text":" "},{"type":"text","text":"effective if the policy causes scrollbars to be present."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If a "},{"type":"codeVoice","code":"GtkScrolledWindow"},{"type":"text","text":" doesn’t behave quite as you would like, or"},{"type":"text","text":" "},{"type":"text","text":"doesn’t have exactly the right layout, it’s very possible to set up"},{"type":"text","text":" "},{"type":"text","text":"your own scrolling with "},{"type":"codeVoice","code":"GtkScrollbar"},{"type":"text","text":" and for example a "},{"type":"codeVoice","code":"GtkGrid"},{"type":"text","text":"."}]},{"anchor":"Touch-support","level":1,"type":"heading","text":"Touch support"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkScrolledWindow"},{"type":"text","text":" has built-in support for touch devices. When a"},{"type":"text","text":" "},{"type":"text","text":"touchscreen is used, swiping will move the scrolled window, and will"},{"type":"text","text":" "},{"type":"text","text":"expose ‘kinetic’ behavior. This can be turned off with the"},{"type":"text","text":" "},{"type":"text","text":"[property"},{"type":"codeVoice","code":"Gtk.ScrolledWindow:kinetic-scrolling"},{"type":"text","text":"] property if it is undesired."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkScrolledWindow"},{"type":"text","text":" also displays visual ‘overshoot’ indication when"},{"type":"text","text":" "},{"type":"text","text":"the content is pulled beyond the end, and this situation can be"},{"type":"text","text":" "},{"type":"text","text":"captured with the [signal"},{"type":"codeVoice","code":"Gtk.ScrolledWindow::edge-overshot"},{"type":"text","text":"] signal."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If no mouse device is present, the scrollbars will overlaid as"},{"type":"text","text":" "},{"type":"text","text":"narrow, auto-hiding indicators over the content. If traditional"},{"type":"text","text":" "},{"type":"text","text":"scrollbars are desired although no mouse is present, this behaviour"},{"type":"text","text":" "},{"type":"text","text":"can be turned off with the [property"},{"type":"codeVoice","code":"Gtk.ScrolledWindow:overlay-scrolling"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"property."}]},{"anchor":"CSS-nodes","level":1,"type":"heading","text":"CSS nodes"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkScrolledWindow"},{"type":"text","text":" has a main CSS node with name scrolledwindow."},{"type":"text","text":" "},{"type":"text","text":"It gets a .frame style class added when [property"},{"type":"codeVoice","code":"Gtk.ScrolledWindow:has-frame"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"is "},{"type":"codeVoice","code":"true"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It uses subnodes with names overshoot and undershoot to draw the overflow"},{"type":"text","text":" "},{"type":"text","text":"and underflow indications. These nodes get the .left, .right, .top or .bottom"},{"type":"text","text":" "},{"type":"text","text":"style class added depending on where the indication is drawn."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkScrolledWindow"},{"type":"text","text":" also sets the positional style classes (.left, .right,"},{"type":"text","text":" "},{"type":"text","text":".top, .bottom) and style classes related to overlay scrolling"},{"type":"text","text":" "},{"type":"text","text":"(.overlay-indicator, .dragging, .hovering) on its scrollbars."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If both scrollbars are visible, the area where they meet is drawn"},{"type":"text","text":" "},{"type":"text","text":"with a subnode named junction."}]},{"anchor":"Accessibility","level":1,"type":"heading","text":"Accessibility"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Until GTK 4.10, "},{"type":"codeVoice","code":"GtkScrolledWindow"},{"type":"text","text":" used the "},{"type":"codeVoice","code":"GTK_ACCESSIBLE_ROLE_GROUP"},{"type":"text","text":" role."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Starting from GTK 4.12, "},{"type":"codeVoice","code":"GtkScrolledWindow"},{"type":"text","text":" uses the "},{"type":"codeVoice","code":"GTK_ACCESSIBLE_ROLE_GENERIC"},{"type":"text","text":" role."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ScrolledWindow"},{"type":"text","text":" type acts as a reference-counted owner of an underlying "},{"type":"codeVoice","code":"GtkScrolledWindow"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It provides the methods that can operate on this data type through "},{"type":"codeVoice","code":"ScrolledWindowProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"codeVoice","code":"ScrolledWindow"},{"type":"text","text":" as a strong reference or owner of a "},{"type":"codeVoice","code":"GtkScrolledWindow"},{"type":"text","text":" instance."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gtk\/scrolledwindow"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/Widget"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/AccessibleProtocol","doc:\/\/Gtk\/documentation\/Gtk\/BuildableProtocol","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintTargetProtocol","doc:\/\/Gtk\/4GLib14PointerWrapperP","doc:\/\/Gtk\/10GLibObject24InitiallyUnownedProtocolP","doc:\/\/Gtk\/10GLibObject0B8ProtocolP","doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindowProtocol","doc:\/\/Gtk\/documentation\/Gtk\/WidgetProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow","interfaceLanguage":"swift"},"abstract":[{"type":"codeVoice","code":"GtkScrolledWindow"},{"type":"text","text":" is a container that makes its child scrollable."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScrolledWindow"}],"title":"ScrolledWindow","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:3Gtk14ScrolledWindowC","modules":[{"name":"Gtk"}],"navigatorTitle":[{"kind":"identifier","text":"ScrolledWindow"}]},"hierarchy":{"paths":[["doc:\/\/Gtk\/documentation\/Gtk"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init()","doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(_:)-22hr2","doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(_:)-81lvb","doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(_:)-9o1sb","doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(_:)-r3mq","doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(cPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(gconstpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(gpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(opaquePointer:)","doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(raw:)-221k3","doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(raw:)-756ta","doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(retaining:)","doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(retainingCPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(retainingOpaquePointer:)","doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(retainingRaw:)-415xl","doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(retainingRaw:)-5xv6a","doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(scrolledWindow:)","doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(vAdjustment:)-1p6d9","doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(vAdjustment:)-6c9qv"]},{"title":"Default Implementations","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/ScrolledWindowProtocol-Implementations"],"generated":true}],"references":{"doc://Gtk/documentation/Gtk/ScrolledWindowProtocol":{"role":"symbol","title":"ScrolledWindowProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScrolledWindowProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkScrolledWindow"},{"type":"text","text":" is a container that makes its child scrollable."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindowProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ScrolledWindowProtocol"}],"url":"\/documentation\/gtk\/scrolledwindowprotocol"},"doc://Gtk/documentation/Gtk/Widget":{"role":"symbol","title":"Widget","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Widget"}],"abstract":[{"type":"text","text":"The base class for all widgets."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/Widget","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Widget"}],"url":"\/documentation\/gtk\/widget"},"doc://Gtk/documentation/Gtk/ScrolledWindow/init(raw:)-756ta":{"role":"symbol","title":"init(raw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"raw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"ScrolledWindowProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(raw:)-756ta","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/scrolledwindow\/init(raw:)-756ta"},"doc://Gtk/documentation/Gtk/ScrolledWindow/init(_:)-22hr2":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkScrolledWindow"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"ScrolledWindow"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(_:)-22hr2","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/scrolledwindow\/init(_:)-22hr2"},"doc://Gtk/documentation/Gtk/ScrolledWindow/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"ScrolledWindowProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/scrolledwindow\/init(opaquepointer:)"},"doc://Gtk/documentation/Gtk/ScrolledWindow/init(vAdjustment:)-1p6d9":{"role":"symbol","title":"init(vAdjustment:)","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"vAdjustment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"!)"}],"abstract":[{"type":"text","text":"Convenience constructor"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(vAdjustment:)-1p6d9","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/scrolledwindow\/init(vadjustment:)-1p6d9"},"doc://Gtk/documentation/Gtk/ScrolledWindow/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"ScrolledWindowProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/scrolledwindow\/init(cpointer:)"},"doc://Gtk/documentation/Gtk/ScrolledWindow/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a non-mutating "},{"type":"codeVoice","code":"gpointer"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"ScrolledWindow"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/scrolledwindow\/init(gpointer:)"},"doc://Gtk/documentation/Gtk/ScrolledWindow/init(_:)-9o1sb":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkScrolledWindow"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Optional initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"ScrolledWindow"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(_:)-9o1sb","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/scrolledwindow\/init(_:)-9o1sb"},"doc://Gtk/documentation/Gtk/ScrolledWindow/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:gtypes.h@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a non-mutating "},{"type":"codeVoice","code":"gconstpointer"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"ScrolledWindow"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/scrolledwindow\/init(gconstpointer:)"},"doc://Gtk/documentation/Gtk/AccessibleProtocol":{"role":"symbol","title":"AccessibleProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AccessibleProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkAccessible"},{"type":"text","text":" is an interface for describing UI elements for"},{"type":"text","text":" "},{"type":"text","text":"Assistive Technologies."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/AccessibleProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AccessibleProtocol"}],"url":"\/documentation\/gtk\/accessibleprotocol"},"doc://Gtk/documentation/Gtk/BuildableProtocol":{"role":"symbol","title":"BuildableProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BuildableProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkBuildable"},{"type":"text","text":" allows objects to extend and customize their deserialization"},{"type":"text","text":" "},{"type":"text","text":"from ui files."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuildableProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BuildableProtocol"}],"url":"\/documentation\/gtk\/buildableprotocol"},"doc://Gtk/documentation/Gtk/ScrolledWindow/init(scrolledWindow:)":{"role":"symbol","title":"init(scrolledWindow:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"scrolledWindow"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"codeVoice","code":"ScrolledWindowProtocol"},{"type":"text","text":" "},{"type":"text","text":"Will retain "},{"type":"codeVoice","code":"GtkScrolledWindow"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(scrolledWindow:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/scrolledwindow\/init(scrolledwindow:)"},"doc://Gtk/documentation/Gtk/ScrolledWindow/init(retainingRaw:)-415xl":{"role":"symbol","title":"init(retainingRaw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingRaw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"ScrolledWindowProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(retainingRaw:)-415xl","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/scrolledwindow\/init(retainingraw:)-415xl"},"doc://Gtk/documentation/Gtk/ScrolledWindow/init(retainingOpaquePointer:)":{"role":"symbol","title":"init(retainingOpaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingOpaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"ScrolledWindowProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(retainingOpaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/scrolledwindow\/init(retainingopaquepointer:)"},"doc://Gtk/documentation/Gtk/WidgetProtocol":{"role":"symbol","title":"WidgetProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"WidgetProtocol"}],"abstract":[{"type":"text","text":"The base class for all widgets."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WidgetProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WidgetProtocol"}],"url":"\/documentation\/gtk\/widgetprotocol"},"doc://Gtk/10GLibObject24InitiallyUnownedProtocolP":{"type":"unresolvable","title":"GLibObject.InitiallyUnownedProtocol","identifier":"doc:\/\/Gtk\/10GLibObject24InitiallyUnownedProtocolP"},"doc://Gtk/documentation/Gtk":{"role":"collection","title":"Gtk","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk","kind":"symbol","type":"topic","url":"\/documentation\/gtk"},"doc://Gtk/documentation/Gtk/ScrolledWindow":{"role":"symbol","title":"ScrolledWindow","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScrolledWindow"}],"abstract":[{"type":"codeVoice","code":"GtkScrolledWindow"},{"type":"text","text":" is a container that makes its child scrollable."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ScrolledWindow"}],"url":"\/documentation\/gtk\/scrolledwindow"},"doc://Gtk/documentation/Gtk/ScrolledWindow/init(_:)-81lvb":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkScrolledWindow"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"ScrolledWindow"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(_:)-81lvb","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/scrolledwindow\/init(_:)-81lvb"},"doc://Gtk/documentation/Gtk/ScrolledWindow/init(retaining:)":{"role":"symbol","title":"init(retaining:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retaining"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkScrolledWindow"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"Will retain "},{"type":"codeVoice","code":"GtkScrolledWindow"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"ScrolledWindow"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(retaining:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/scrolledwindow\/init(retaining:)"},"doc://Gtk/10GLibObject0B8ProtocolP":{"type":"unresolvable","title":"GLibObject.ObjectProtocol","identifier":"doc:\/\/Gtk\/10GLibObject0B8ProtocolP"},"doc://Gtk/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/Gtk\/4GLib14PointerWrapperP"},"doc://Gtk/documentation/Gtk/ScrolledWindow/init(raw:)-221k3":{"role":"symbol","title":"init(raw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"raw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"ScrolledWindowProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(raw:)-221k3","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/scrolledwindow\/init(raw:)-221k3"},"doc://Gtk/documentation/Gtk/ScrolledWindow/init(retainingRaw:)-5xv6a":{"role":"symbol","title":"init(retainingRaw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingRaw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"ScrolledWindowProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(retainingRaw:)-5xv6a","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/scrolledwindow\/init(retainingraw:)-5xv6a"},"doc://Gtk/documentation/Gtk/ConstraintTargetProtocol":{"role":"symbol","title":"ConstraintTargetProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConstraintTargetProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GtkConstraintTarget"},{"type":"text","text":" interface is implemented by objects that"},{"type":"text","text":" "},{"type":"text","text":"can be used as source or target in "},{"type":"codeVoice","code":"GtkConstraint"},{"type":"text","text":"s."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintTargetProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ConstraintTargetProtocol"}],"url":"\/documentation\/gtk\/constrainttargetprotocol"},"doc://Gtk/documentation/Gtk/ScrolledWindow/init(retainingCPointer:)":{"role":"symbol","title":"init(retainingCPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"retainingCPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"ScrolledWindowProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(retainingCPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/scrolledwindow\/init(retainingcpointer:)"},"doc://Gtk/documentation/Gtk/ScrolledWindow/init(vAdjustment:)-6c9qv":{"role":"symbol","title":"init(vAdjustment:)","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"vAdjustment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AdjustmentRef","preciseIdentifier":"s:3Gtk13AdjustmentRefV"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Convenience constructor with a nil adjustment"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(vAdjustment:)-6c9qv","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/scrolledwindow\/init(vadjustment:)-6c9qv"},"doc://Gtk/documentation/Gtk/ScrolledWindow/init()":{"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Creates a new scrolled window."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init()","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/scrolledwindow\/init()"},"doc://Gtk/documentation/Gtk/ScrolledWindow/init(_:)-r3mq":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkScrolledWindow"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"ScrolledWindow"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/init(_:)-r3mq","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/scrolledwindow\/init(_:)-r3mq"},"doc://Gtk/documentation/Gtk/ScrolledWindow/ScrolledWindowProtocol-Implementations":{"role":"collectionGroup","title":"ScrolledWindowProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ScrolledWindow\/ScrolledWindowProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/scrolledwindow\/scrolledwindowprotocol-implementations"}}}