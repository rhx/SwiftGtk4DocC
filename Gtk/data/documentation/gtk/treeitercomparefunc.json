{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeIterCompareFunc"},{"kind":"text","text":" = "},{"kind":"typeIdentifier","text":"GtkTreeIterCompareFunc","preciseIdentifier":"c:gtktreesortable.h@T@GtkTreeIterCompareFunc"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If two iters compare as equal, their order in the sorted model"},{"type":"text","text":" "},{"type":"text","text":"is undefined. In order to ensure that the "},{"type":"codeVoice","code":"GtkTreeSortable"},{"type":"text","text":" behaves as"},{"type":"text","text":" "},{"type":"text","text":"expected, the GtkTreeIterCompareFunc must define a partial order on"},{"type":"text","text":" "},{"type":"text","text":"the model, i.e. it must be reflexive, antisymmetric and transitive."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, if "},{"type":"codeVoice","code":"model"},{"type":"text","text":" is a product catalogue, then a compare function"},{"type":"text","text":" "},{"type":"text","text":"for the “price” column could be one which returns"},{"type":"text","text":" "},{"type":"codeVoice","code":"price_of(@a)` - `price_of(@b)"},{"type":"text","text":"."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gtk\/treeitercomparefunc"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Gtk\/documentation\/Gtk\/TreeIterCompareFunc","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A GtkTreeIterCompareFunc should return a negative integer, zero, or a positive"},{"type":"text","text":" "},{"type":"text","text":"integer if "},{"type":"codeVoice","code":"a"},{"type":"text","text":" sorts before "},{"type":"codeVoice","code":"b"},{"type":"text","text":", "},{"type":"codeVoice","code":"a"},{"type":"text","text":" sorts with "},{"type":"codeVoice","code":"b"},{"type":"text","text":", or "},{"type":"codeVoice","code":"a"},{"type":"text","text":" sorts after "},{"type":"codeVoice","code":"b"},{"type":"text","text":" "},{"type":"text","text":"respectively."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeIterCompareFunc"}],"title":"TreeIterCompareFunc","roleHeading":"Type Alias","role":"symbol","symbolKind":"typealias","externalID":"s:3Gtk19TreeIterCompareFunca","modules":[{"name":"Gtk"}],"navigatorTitle":[{"kind":"identifier","text":"TreeIterCompareFunc"}]},"hierarchy":{"paths":[["doc:\/\/Gtk\/documentation\/Gtk"]]},"references":{"doc://Gtk/documentation/Gtk":{"role":"collection","title":"Gtk","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk","kind":"symbol","type":"topic","url":"\/documentation\/gtk"},"doc://Gtk/documentation/Gtk/TreeIterCompareFunc":{"role":"symbol","title":"TreeIterCompareFunc","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeIterCompareFunc"}],"abstract":[{"type":"text","text":"A GtkTreeIterCompareFunc should return a negative integer, zero, or a positive"},{"type":"text","text":" "},{"type":"text","text":"integer if "},{"type":"codeVoice","code":"a"},{"type":"text","text":" sorts before "},{"type":"codeVoice","code":"b"},{"type":"text","text":", "},{"type":"codeVoice","code":"a"},{"type":"text","text":" sorts with "},{"type":"codeVoice","code":"b"},{"type":"text","text":", or "},{"type":"codeVoice","code":"a"},{"type":"text","text":" sorts after "},{"type":"codeVoice","code":"b"},{"type":"text","text":" "},{"type":"text","text":"respectively."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeIterCompareFunc","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeIterCompareFunc"}],"url":"\/documentation\/gtk\/treeitercomparefunc"}}}