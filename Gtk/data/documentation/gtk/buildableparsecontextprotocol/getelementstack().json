{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getElementStack"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"PtrArrayRef","preciseIdentifier":"s:4GLib11PtrArrayRefV"},{"kind":"text","text":"!"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The returned "},{"type":"codeVoice","code":"GPtrArray"},{"type":"text","text":" is an array of strings where the last item is"},{"type":"text","text":" "},{"type":"text","text":"the currently open tag (as would be returned by"},{"type":"text","text":" "},{"type":"codeVoice","code":"gtk_buildable_parse_context_get_element()"},{"type":"text","text":") and the previous item is its"},{"type":"text","text":" "},{"type":"text","text":"immediate parent."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function is intended to be used in the start_element and"},{"type":"text","text":" "},{"type":"text","text":"end_element handlers where "},{"type":"codeVoice","code":"gtk_buildable_parse_context_get_element()"},{"type":"text","text":" "},{"type":"text","text":"would merely return the name of the element that is being"},{"type":"text","text":" "},{"type":"text","text":"processed."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gtk\/buildableparsecontextprotocol\/getelementstack()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Gtk\/documentation\/Gtk\/BuildableParseContextProtocol\/getElementStack()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Retrieves the element stack from the internal state of the parser."}],"kind":"symbol","metadata":{"role":"symbol","title":"getElementStack()","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getElementStack"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"PtrArrayRef","preciseIdentifier":"s:4GLib11PtrArrayRefV"},{"kind":"text","text":"!"}],"symbolKind":"method","externalID":"s:3Gtk29BuildableParseContextProtocolPAAE15getElementStack4GLib11PtrArrayRefVSgyF","extendedModule":"Gtk","modules":[{"name":"Gtk"}]},"hierarchy":{"paths":[["doc:\/\/Gtk\/documentation\/Gtk","doc:\/\/Gtk\/documentation\/Gtk\/BuildableParseContextProtocol"]]},"references":{"doc://Gtk/documentation/Gtk/BuildableParseContextProtocol/getElementStack()":{"role":"symbol","title":"getElementStack()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getElementStack"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"PtrArrayRef","preciseIdentifier":"s:4GLib11PtrArrayRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Retrieves the element stack from the internal state of the parser."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuildableParseContextProtocol\/getElementStack()","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/buildableparsecontextprotocol\/getelementstack()"},"doc://Gtk/documentation/Gtk":{"role":"collection","title":"Gtk","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk","kind":"symbol","type":"topic","url":"\/documentation\/gtk"},"doc://Gtk/documentation/Gtk/BuildableParseContextProtocol":{"role":"symbol","title":"BuildableParseContextProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BuildableParseContextProtocol"}],"abstract":[{"type":"text","text":"An opaque context struct for "},{"type":"codeVoice","code":"GtkBuildableParser"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuildableParseContextProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BuildableParseContextProtocol"}],"url":"\/documentation\/gtk\/buildableparsecontextprotocol"}}}