{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConstraintLayoutRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkConstraintLayout"},{"type":"text","text":" is a layout manager that uses relations between"},{"type":"text","text":" "},{"type":"text","text":"widget attributes, expressed via [class"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/Constraint"},{"type":"text","text":"] instances, to"},{"type":"text","text":" "},{"type":"text","text":"measure and allocate widgets."}]},{"anchor":"How-do-constraints-work","level":3,"type":"heading","text":"How do constraints work"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Constraints are objects defining the relationship between attributes"},{"type":"text","text":" "},{"type":"text","text":"of a widget; you can read the description of the [class"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/Constraint"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"class to have a more in depth definition."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"By taking multiple constraints and applying them to the children of"},{"type":"text","text":" "},{"type":"text","text":"a widget using "},{"type":"codeVoice","code":"GtkConstraintLayout"},{"type":"text","text":", it’s possible to describe"},{"type":"text","text":" "},{"type":"text","text":"complex layout policies; each constraint applied to a child or to the parent"},{"type":"text","text":" "},{"type":"text","text":"widgets contributes to the full description of the layout, in terms of"},{"type":"text","text":" "},{"type":"text","text":"parameters for resolving the value of each attribute."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is important to note that a layout is defined by the totality of"},{"type":"text","text":" "},{"type":"text","text":"constraints; removing a child, or a constraint, from an existing layout"},{"type":"text","text":" "},{"type":"text","text":"without changing the remaining constraints may result in an unstable"},{"type":"text","text":" "},{"type":"text","text":"or unsolvable layout."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Constraints have an implicit “reading order”; you should start describing"},{"type":"text","text":" "},{"type":"text","text":"each edge of each child, as well as their relationship with the parent"},{"type":"text","text":" "},{"type":"text","text":"container, from the top left (or top right, in RTL languages), horizontally"},{"type":"text","text":" "},{"type":"text","text":"first, and then vertically."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A constraint-based layout with too few constraints can become “unstable”,"},{"type":"text","text":" "},{"type":"text","text":"that is: have more than one solution. The behavior of an unstable layout"},{"type":"text","text":" "},{"type":"text","text":"is undefined."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A constraint-based layout with conflicting constraints may be unsolvable,"},{"type":"text","text":" "},{"type":"text","text":"and lead to an unstable layout. You can use the [property"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/Constraint"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"property of [class"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/Constraint"},{"type":"text","text":"] to “nudge” the layout towards a solution."}]},{"anchor":"GtkConstraintLayout-as-GtkBuildable","level":3,"type":"heading","text":"GtkConstraintLayout as GtkBuildable"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkConstraintLayout"},{"type":"text","text":" implements the [iface"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/Buildable"},{"type":"text","text":"] interface and"},{"type":"text","text":" "},{"type":"text","text":"has a custom “constraints” element which allows describing constraints in"},{"type":"text","text":" "},{"type":"text","text":"a [class"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/Builder"},{"type":"text","text":"] UI file."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"An example of a UI definition fragment specifying a constraint:"}]},{"type":"codeListing","syntax":"xml","code":["  <object class=\"GtkConstraintLayout\">","    <constraints>","      <constraint target=\"button\" target-attribute=\"start\"","                  relation=\"eq\"","                  source=\"super\" source-attribute=\"start\"","                  constant=\"12\"","                  strength=\"required\" \/>","      <constraint target=\"button\" target-attribute=\"width\"","                  relation=\"ge\"","                  constant=\"250\"","                  strength=\"strong\" \/>","    <\/constraints>","  <\/object>"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The definition above will add two constraints to the GtkConstraintLayout:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"a required constraint between the leading edge of “button” and"},{"type":"text","text":" "},{"type":"text","text":"the leading edge of the widget using the constraint layout, plus"},{"type":"text","text":" "},{"type":"text","text":"12 pixels"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"a strong, constant constraint making the width of “button” greater"},{"type":"text","text":" "},{"type":"text","text":"than, or equal to 250 pixels"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The “target” and “target-attribute” attributes are required."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The “source” and “source-attribute” attributes of the “constraint”"},{"type":"text","text":" "},{"type":"text","text":"element are optional; if they are not specified, the constraint is"},{"type":"text","text":" "},{"type":"text","text":"assumed to be a constant."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The “relation” attribute is optional; if not specified, the constraint"},{"type":"text","text":" "},{"type":"text","text":"is assumed to be an equality."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The “strength” attribute is optional; if not specified, the constraint"},{"type":"text","text":" "},{"type":"text","text":"is assumed to be required."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The “source” and “target” attributes can be set to “super” to indicate"},{"type":"text","text":" "},{"type":"text","text":"that the constraint target is the widget using the GtkConstraintLayout."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There can be “constant” and “multiplier” attributes."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Additionally, the “constraints” element can also contain a description"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"type":"codeVoice","code":"GtkConstraintGuides"},{"type":"text","text":" used by the layout:"}]},{"type":"codeListing","syntax":"xml","code":["  <constraints>","    <guide min-width=\"100\" max-width=\"500\" name=\"hspace\"\/>","    <guide min-height=\"64\" nat-height=\"128\" name=\"vspace\" strength=\"strong\"\/>","  <\/constraints>"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The “guide” element has the following optional attributes:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“min-width”, “nat-width”, and “max-width”, describe the minimum,"},{"type":"text","text":" "},{"type":"text","text":"natural, and maximum width of the guide, respectively"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“min-height”, “nat-height”, and “max-height”, describe the minimum,"},{"type":"text","text":" "},{"type":"text","text":"natural, and maximum height of the guide, respectively"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“strength” describes the strength of the constraint on the natural"},{"type":"text","text":" "},{"type":"text","text":"size of the guide; if not specified, the constraint is assumed to"},{"type":"text","text":" "},{"type":"text","text":"have a medium strength"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“name” describes a name for the guide, useful when debugging"}]}]}]},{"anchor":"Using-the-Visual-Format-Language","level":3,"type":"heading","text":"Using the Visual Format Language"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Complex constraints can be described using a compact syntax called VFL,"},{"type":"text","text":" "},{"type":"text","text":"or "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Visual Format Language"}]},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Visual Format Language describes all the constraints on a row or"},{"type":"text","text":" "},{"type":"text","text":"column, typically starting from the leading edge towards the trailing"},{"type":"text","text":" "},{"type":"text","text":"one. Each element of the layout is composed by “views”, which identify"},{"type":"text","text":" "},{"type":"text","text":"a [iface"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintTarget"},{"type":"text","text":"]."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For instance:"}]},{"type":"codeListing","syntax":null,"code":["  [button]-[textField]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Describes a constraint that binds the trailing edge of “button” to the"},{"type":"text","text":" "},{"type":"text","text":"leading edge of “textField”, leaving a default space between the two."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using VFL is also possible to specify predicates that describe constraints"},{"type":"text","text":" "},{"type":"text","text":"on attributes like width and height:"}]},{"type":"codeListing","syntax":null,"code":["  \/\/ Width must be greater than, or equal to 50","  [`button(>=50)`]","","  \/\/ Width of button1 must be equal to width of button2","  [`button1(==button2)`]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The default orientation for a VFL description is horizontal, unless"},{"type":"text","text":" "},{"type":"text","text":"otherwise specified:"}]},{"type":"codeListing","syntax":null,"code":["  \/\/ horizontal orientation, default attribute: width","  H:[`button(>=150)`]","","  \/\/ vertical orientation, default attribute: height","  V:[`button1(==button2)`]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It’s also possible to specify multiple predicates, as well as their"},{"type":"text","text":" "},{"type":"text","text":"strength:"}]},{"type":"codeListing","syntax":null,"code":["  \/\/ minimum width of button must be 150","  \/\/ natural width of button can be 250","  [`button(>=150@required, ==250@medium)`]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Finally, it’s also possible to use simple arithmetic operators:"}]},{"type":"codeListing","syntax":null,"code":["  \/\/ width of button1 must be equal to width of button2","  \/\/ divided by 2 plus 12","  [`button1(button2 \/ 2 + 12)`]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GtkConstraintLayout"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"GtkConstraintLayout"},{"type":"text","text":" instance."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayout"},{"type":"text","text":" (instead of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef"},{"type":"text","text":") if you want to use Automatic Reference Counting for memory management of the underlying "},{"type":"codeVoice","code":"GtkConstraintLayout"},{"type":"text","text":" instance."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gtk\/constraintlayoutref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/BuildableProtocol","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutProtocol","doc:\/\/Gtk\/4GLib14PointerWrapperP","doc:\/\/Gtk\/10GLibObject14GWeakCapturingP","doc:\/\/Gtk\/10GLibObject0B8ProtocolP","doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A layout manager using constraints to describe relations between widgets."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConstraintLayoutRef"}],"title":"ConstraintLayoutRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:3Gtk19ConstraintLayoutRefV","modules":[{"name":"Gtk"}],"navigatorTitle":[{"kind":"identifier","text":"ConstraintLayoutRef"}]},"hierarchy":{"paths":[["doc:\/\/Gtk\/documentation\/Gtk"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/init()","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/init(_:)-1hpwo","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/init(_:)-4jcce","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/init(_:)-4ny69","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/init(_:)-8ljr8","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/init(_:)-9quzc","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/init(cPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/init(constPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/init(gconstpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/init(gpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/init(mutating:)","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/init(opaquePointer:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/ptr"]},{"title":"Type Methods","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/unowned(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/BuildableProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/ConstraintLayoutProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/GWeakCapturing-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/LayoutManagerProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/ObjectProtocol-Implementations"],"generated":true}],"references":{"doc://Gtk/documentation/Gtk/ConstraintLayoutRef/ConstraintLayoutProtocol-Implementations":{"role":"collectionGroup","title":"ConstraintLayoutProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/ConstraintLayoutProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/constraintlayoutref\/constraintlayoutprotocol-implementations"},"doc://Gtk/documentation/Gtk/ConstraintLayoutRef/ObjectProtocol-Implementations":{"role":"collectionGroup","title":"ObjectProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/ObjectProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/constraintlayoutref\/objectprotocol-implementations"},"doc://Gtk/documentation/Gtk/ConstraintLayoutRef/LayoutManagerProtocol-Implementations":{"role":"collectionGroup","title":"LayoutManagerProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/LayoutManagerProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/constraintlayoutref\/layoutmanagerprotocol-implementations"},"doc://Gtk/documentation/Gtk/ConstraintLayoutRef/init()":{"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"GtkConstraintLayout"},{"type":"text","text":" layout manager."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/init()","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/constraintlayoutref\/init()"},"doc://Gtk/documentation/Gtk/ConstraintLayoutRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/constraintlayoutref\/init(gpointer:)"},"doc://Gtk/documentation/Gtk/LayoutManagerProtocol":{"role":"symbol","title":"LayoutManagerProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LayoutManagerProtocol"}],"abstract":[{"type":"text","text":"Layout managers are delegate classes that handle the preferred size"},{"type":"text","text":" "},{"type":"text","text":"and the allocation of a widget."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LayoutManagerProtocol"}],"url":"\/documentation\/gtk\/layoutmanagerprotocol"},"doc://Gtk/documentation/Gtk/Builder":{"role":"symbol","title":"Builder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Builder"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GtkBuilder"},{"type":"text","text":" reads XML descriptions of a user interface and"},{"type":"text","text":" "},{"type":"text","text":"instantiates the described objects."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/Builder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Builder"}],"url":"\/documentation\/gtk\/builder"},"doc://Gtk/documentation/Gtk/ConstraintLayoutRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/constraintlayoutref\/init(cpointer:)"},"doc://Gtk/documentation/Gtk/ConstraintLayoutRef/unowned(_:)":{"role":"symbol","title":"unowned(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unowned"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ConstraintLayoutRef","preciseIdentifier":"s:3Gtk19ConstraintLayoutRefV"}],"abstract":[{"type":"text","text":"This factory is syntactic sugar for setting weak pointers wrapped in "},{"type":"codeVoice","code":"GWeak<T>"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/unowned(_:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/constraintlayoutref\/unowned(_:)"},"doc://Gtk/documentation/Gtk/ConstraintLayoutRef/init(_:)-4ny69":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkConstraintLayout"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/init(_:)-4ny69","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/constraintlayoutref\/init(_:)-4ny69"},"doc://Gtk/documentation/Gtk/ConstraintLayoutRef/init(_:)-9quzc":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkConstraintLayout"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/init(_:)-9quzc","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/constraintlayoutref\/init(_:)-9quzc"},"doc://Gtk/documentation/Gtk/ConstraintTarget":{"role":"symbol","title":"ConstraintTarget","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConstraintTarget"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GtkConstraintTarget"},{"type":"text","text":" interface is implemented by objects that"},{"type":"text","text":" "},{"type":"text","text":"can be used as source or target in "},{"type":"codeVoice","code":"GtkConstraint"},{"type":"text","text":"s."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintTarget","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ConstraintTarget"}],"url":"\/documentation\/gtk\/constrainttarget"},"doc://Gtk/documentation/Gtk/ConstraintLayoutRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/constraintlayoutref\/init(opaquepointer:)"},"doc://Gtk/documentation/Gtk/ConstraintLayoutRef/init(_:)-1hpwo":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkConstraintLayout"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/init(_:)-1hpwo","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/constraintlayoutref\/init(_:)-1hpwo"},"doc://Gtk/documentation/Gtk/ConstraintLayoutRef":{"role":"symbol","title":"ConstraintLayoutRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConstraintLayoutRef"}],"abstract":[{"type":"text","text":"A layout manager using constraints to describe relations between widgets."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ConstraintLayoutRef"}],"url":"\/documentation\/gtk\/constraintlayoutref"},"doc://Gtk/documentation/Gtk/ConstraintLayoutRef/init(_:)-8ljr8":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkConstraintLayout"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/init(_:)-8ljr8","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/constraintlayoutref\/init(_:)-8ljr8"},"doc://Gtk/documentation/Gtk/Buildable":{"role":"symbol","title":"Buildable","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Buildable"}],"abstract":[{"type":"codeVoice","code":"GtkBuildable"},{"type":"text","text":" allows objects to extend and customize their deserialization"},{"type":"text","text":" "},{"type":"text","text":"from ui files."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/Buildable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Buildable"}],"url":"\/documentation\/gtk\/buildable"},"doc://Gtk/documentation/Gtk/ConstraintLayout":{"role":"symbol","title":"ConstraintLayout","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConstraintLayout"}],"abstract":[{"type":"text","text":"A layout manager using constraints to describe relations between widgets."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayout","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ConstraintLayout"}],"url":"\/documentation\/gtk\/constraintlayout"},"doc://Gtk/documentation/Gtk/ConstraintLayoutRef/init(_:)-4jcce":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutProtocol"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/init(_:)-4jcce","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/constraintlayoutref\/init(_:)-4jcce"},"doc://Gtk/10GLibObject0B8ProtocolP":{"type":"unresolvable","title":"GLibObject.ObjectProtocol","identifier":"doc:\/\/Gtk\/10GLibObject0B8ProtocolP"},"doc://Gtk/documentation/Gtk/ConstraintLayoutProtocol/constraint_layout_ptr-7gk4d":{"defaultImplementations":1,"role":"symbol","title":"constraint_layout_ptr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"constraint_layout_ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkConstraintLayout"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Typed pointer to the underlying "},{"type":"codeVoice","code":"GtkConstraintLayout"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutProtocol\/constraint_layout_ptr-7gk4d","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/gtk\/constraintlayoutprotocol\/constraint_layout_ptr-7gk4d"},"doc://Gtk/documentation/Gtk/BuildableProtocol":{"role":"symbol","title":"BuildableProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BuildableProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkBuildable"},{"type":"text","text":" allows objects to extend and customize their deserialization"},{"type":"text","text":" "},{"type":"text","text":"from ui files."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuildableProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BuildableProtocol"}],"url":"\/documentation\/gtk\/buildableprotocol"},"doc://Gtk/documentation/Gtk/ConstraintLayoutRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:gtypes.h@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/constraintlayoutref\/init(gconstpointer:)"},"doc://Gtk/documentation/Gtk/ConstraintLayoutRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/constraintlayoutref\/init(constpointer:)"},"doc://Gtk/documentation/Gtk/ConstraintLayoutRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/constraintlayoutref\/init(mutating:)"},"doc://Gtk/documentation/Gtk/ConstraintLayoutRef/GWeakCapturing-Implementations":{"role":"collectionGroup","title":"GWeakCapturing Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/GWeakCapturing-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/constraintlayoutref\/gweakcapturing-implementations"},"doc://Gtk/10GLibObject14GWeakCapturingP":{"type":"unresolvable","title":"GLibObject.GWeakCapturing","identifier":"doc:\/\/Gtk\/10GLibObject14GWeakCapturingP"},"doc://Gtk/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/Gtk\/4GLib14PointerWrapperP"},"doc://Gtk/documentation/Gtk/ConstraintLayoutProtocol":{"role":"symbol","title":"ConstraintLayoutProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConstraintLayoutProtocol"}],"abstract":[{"type":"text","text":"A layout manager using constraints to describe relations between widgets."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ConstraintLayoutProtocol"}],"url":"\/documentation\/gtk\/constraintlayoutprotocol"},"doc://Gtk/documentation/Gtk/ConstraintLayoutRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GtkConstraintLayout"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutProtocol\/constraint_layout_ptr-7gk4d"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/constraintlayoutref\/ptr"},"doc://Gtk/documentation/Gtk":{"role":"collection","title":"Gtk","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk","kind":"symbol","type":"topic","url":"\/documentation\/gtk"},"doc://Gtk/documentation/Gtk/Constraint":{"role":"symbol","title":"Constraint","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Constraint"}],"abstract":[{"type":"codeVoice","code":"GtkConstraint"},{"type":"text","text":" describes a constraint between attributes of two widgets,"},{"type":"text","text":" "},{"type":"text","text":"expressed as a linear equation."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/Constraint","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Constraint"}],"url":"\/documentation\/gtk\/constraint"},"doc://Gtk/documentation/Gtk/ConstraintLayoutRef/BuildableProtocol-Implementations":{"role":"collectionGroup","title":"BuildableProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef\/BuildableProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/constraintlayoutref\/buildableprotocol-implementations"}}}