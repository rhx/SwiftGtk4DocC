{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConstraintLayoutProtocol"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuildableProtocol","preciseIdentifier":"s:3Gtk17BuildableProtocolP","text":"BuildableProtocol"},{"kind":"text","text":", "},{"kind":"typeIdentifier","identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerProtocol","preciseIdentifier":"s:3Gtk21LayoutManagerProtocolP","text":"LayoutManagerProtocol"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkConstraintLayout"},{"type":"text","text":" is a layout manager that uses relations between"},{"type":"text","text":" "},{"type":"text","text":"widget attributes, expressed via [class"},{"type":"codeVoice","code":"Gtk.Constraint"},{"type":"text","text":"] instances, to"},{"type":"text","text":" "},{"type":"text","text":"measure and allocate widgets."}]},{"anchor":"How-do-constraints-work","level":3,"type":"heading","text":"How do constraints work"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Constraints are objects defining the relationship between attributes"},{"type":"text","text":" "},{"type":"text","text":"of a widget; you can read the description of the [class"},{"type":"codeVoice","code":"Gtk.Constraint"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"class to have a more in depth definition."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"By taking multiple constraints and applying them to the children of"},{"type":"text","text":" "},{"type":"text","text":"a widget using "},{"type":"codeVoice","code":"GtkConstraintLayout"},{"type":"text","text":", it’s possible to describe"},{"type":"text","text":" "},{"type":"text","text":"complex layout policies; each constraint applied to a child or to the parent"},{"type":"text","text":" "},{"type":"text","text":"widgets contributes to the full description of the layout, in terms of"},{"type":"text","text":" "},{"type":"text","text":"parameters for resolving the value of each attribute."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is important to note that a layout is defined by the totality of"},{"type":"text","text":" "},{"type":"text","text":"constraints; removing a child, or a constraint, from an existing layout"},{"type":"text","text":" "},{"type":"text","text":"without changing the remaining constraints may result in an unstable"},{"type":"text","text":" "},{"type":"text","text":"or unsolvable layout."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Constraints have an implicit “reading order”; you should start describing"},{"type":"text","text":" "},{"type":"text","text":"each edge of each child, as well as their relationship with the parent"},{"type":"text","text":" "},{"type":"text","text":"container, from the top left (or top right, in RTL languages), horizontally"},{"type":"text","text":" "},{"type":"text","text":"first, and then vertically."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A constraint-based layout with too few constraints can become “unstable”,"},{"type":"text","text":" "},{"type":"text","text":"that is: have more than one solution. The behavior of an unstable layout"},{"type":"text","text":" "},{"type":"text","text":"is undefined."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A constraint-based layout with conflicting constraints may be unsolvable,"},{"type":"text","text":" "},{"type":"text","text":"and lead to an unstable layout. You can use the [property"},{"type":"codeVoice","code":"Gtk.Constraint:strength"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"property of [class"},{"type":"codeVoice","code":"Gtk.Constraint"},{"type":"text","text":"] to “nudge” the layout towards a solution."}]},{"anchor":"GtkConstraintLayout-as-GtkBuildable","level":3,"type":"heading","text":"GtkConstraintLayout as GtkBuildable"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkConstraintLayout"},{"type":"text","text":" implements the [iface"},{"type":"codeVoice","code":"Gtk.Buildable"},{"type":"text","text":"] interface and"},{"type":"text","text":" "},{"type":"text","text":"has a custom “constraints” element which allows describing constraints in"},{"type":"text","text":" "},{"type":"text","text":"a [class"},{"type":"codeVoice","code":"Gtk.Builder"},{"type":"text","text":"] UI file."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"An example of a UI definition fragment specifying a constraint:"}]},{"type":"codeListing","syntax":"xml","code":["  &lt;object class=\"GtkConstraintLayout\"&gt;","    &lt;constraints&gt;","      &lt;constraint target=\"button\" target-attribute=\"start\"","                  relation=\"eq\"","                  source=\"super\" source-attribute=\"start\"","                  constant=\"12\"","                  strength=\"required\" \/&gt;","      &lt;constraint target=\"button\" target-attribute=\"width\"","                  relation=\"ge\"","                  constant=\"250\"","                  strength=\"strong\" \/&gt;","    &lt;\/constraints&gt;","  &lt;\/object&gt;"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The definition above will add two constraints to the GtkConstraintLayout:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"a required constraint between the leading edge of “button” and"},{"type":"text","text":" "},{"type":"text","text":"the leading edge of the widget using the constraint layout, plus"},{"type":"text","text":" "},{"type":"text","text":"12 pixels"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"a strong, constant constraint making the width of “button” greater"},{"type":"text","text":" "},{"type":"text","text":"than, or equal to 250 pixels"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The “target” and “target-attribute” attributes are required."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The “source” and “source-attribute” attributes of the “constraint”"},{"type":"text","text":" "},{"type":"text","text":"element are optional; if they are not specified, the constraint is"},{"type":"text","text":" "},{"type":"text","text":"assumed to be a constant."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The “relation” attribute is optional; if not specified, the constraint"},{"type":"text","text":" "},{"type":"text","text":"is assumed to be an equality."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The “strength” attribute is optional; if not specified, the constraint"},{"type":"text","text":" "},{"type":"text","text":"is assumed to be required."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The “source” and “target” attributes can be set to “super” to indicate"},{"type":"text","text":" "},{"type":"text","text":"that the constraint target is the widget using the GtkConstraintLayout."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There can be “constant” and “multiplier” attributes."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Additionally, the “constraints” element can also contain a description"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"type":"codeVoice","code":"GtkConstraintGuides"},{"type":"text","text":" used by the layout:"}]},{"type":"codeListing","syntax":"xml","code":["  &lt;constraints&gt;","    &lt;guide min-width=\"100\" max-width=\"500\" name=\"hspace\"\/&gt;","    &lt;guide min-height=\"64\" nat-height=\"128\" name=\"vspace\" strength=\"strong\"\/&gt;","  &lt;\/constraints&gt;"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The “guide” element has the following optional attributes:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“min-width”, “nat-width”, and “max-width”, describe the minimum,"},{"type":"text","text":" "},{"type":"text","text":"natural, and maximum width of the guide, respectively"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“min-height”, “nat-height”, and “max-height”, describe the minimum,"},{"type":"text","text":" "},{"type":"text","text":"natural, and maximum height of the guide, respectively"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“strength” describes the strength of the constraint on the natural"},{"type":"text","text":" "},{"type":"text","text":"size of the guide; if not specified, the constraint is assumed to"},{"type":"text","text":" "},{"type":"text","text":"have a medium strength"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“name” describes a name for the guide, useful when debugging"}]}]}]},{"anchor":"Using-the-Visual-Format-Language","level":3,"type":"heading","text":"Using the Visual Format Language"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Complex constraints can be described using a compact syntax called VFL,"},{"type":"text","text":" "},{"type":"text","text":"or "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Visual Format Language"}]},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Visual Format Language describes all the constraints on a row or"},{"type":"text","text":" "},{"type":"text","text":"column, typically starting from the leading edge towards the trailing"},{"type":"text","text":" "},{"type":"text","text":"one. Each element of the layout is composed by “views”, which identify"},{"type":"text","text":" "},{"type":"text","text":"a [iface"},{"type":"codeVoice","code":"Gtk.ConstraintTarget"},{"type":"text","text":"]."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For instance:"}]},{"type":"codeListing","syntax":null,"code":["  [button]-[textField]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Describes a constraint that binds the trailing edge of “button” to the"},{"type":"text","text":" "},{"type":"text","text":"leading edge of “textField”, leaving a default space between the two."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using VFL is also possible to specify predicates that describe constraints"},{"type":"text","text":" "},{"type":"text","text":"on attributes like width and height:"}]},{"type":"codeListing","syntax":null,"code":["  \/\/ Width must be greater than, or equal to 50","  [`button(>=50)`]","","  \/\/ Width of button1 must be equal to width of button2","  [`button1(==button2)`]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The default orientation for a VFL description is horizontal, unless"},{"type":"text","text":" "},{"type":"text","text":"otherwise specified:"}]},{"type":"codeListing","syntax":null,"code":["  \/\/ horizontal orientation, default attribute: width","  H:[`button(>=150)`]","","  \/\/ vertical orientation, default attribute: height","  V:[`button1(==button2)`]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It’s also possible to specify multiple predicates, as well as their"},{"type":"text","text":" "},{"type":"text","text":"strength:"}]},{"type":"codeListing","syntax":null,"code":["  \/\/ minimum width of button must be 150","  \/\/ natural width of button can be 250","  [`button(>=150@required, ==250@medium)`]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Finally, it’s also possible to use simple arithmetic operators:"}]},{"type":"codeListing","syntax":null,"code":["  \/\/ width of button1 must be equal to width of button2","  \/\/ divided by 2 plus 12","  [`button1(button2 \/ 2 + 12)`]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ConstraintLayoutProtocol"},{"type":"text","text":" protocol exposes the methods and properties of an underlying "},{"type":"codeVoice","code":"GtkConstraintLayout"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"The default implementation of these can be found in the protocol extension below."},{"type":"text","text":" "},{"type":"text","text":"For a concrete class that implements these methods and properties, see "},{"type":"codeVoice","code":"ConstraintLayout"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Alternatively, use "},{"type":"codeVoice","code":"ConstraintLayoutRef"},{"type":"text","text":" as a lighweight, "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference if you already have an instance you just want to use."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gtk\/constraintlayoutprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/BuildableProtocol","doc:\/\/Gtk\/4GLib14PointerWrapperP","doc:\/\/Gtk\/10GLibObject0B8ProtocolP","doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerProtocol"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayout","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"identifier":{"url":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutProtocol","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A layout manager using constraints to describe relations between widgets."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConstraintLayoutProtocol"}],"title":"ConstraintLayoutProtocol","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:3Gtk24ConstraintLayoutProtocolP","modules":[{"name":"Gtk"}],"navigatorTitle":[{"kind":"identifier","text":"ConstraintLayoutProtocol"}]},"hierarchy":{"paths":[["doc:\/\/Gtk\/documentation\/Gtk"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutProtocol\/constraint_layout_ptr-7gk4d"]},{"title":"Instance Methods","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutProtocol\/add(constraint:)","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutProtocol\/add(guide:)","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutProtocol\/addConstraintsFromDescriptionv(lines:nLines:hspacing:vspacing:views:)","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutProtocol\/observeConstraints()","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutProtocol\/observeGuides()","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutProtocol\/remove(constraint:)","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutProtocol\/remove(guide:)","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutProtocol\/removeAllConstraints()"]}],"references":{"doc://Gtk/documentation/Gtk/LayoutManagerProtocol":{"role":"symbol","title":"LayoutManagerProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LayoutManagerProtocol"}],"abstract":[{"type":"text","text":"Layout managers are delegate classes that handle the preferred size"},{"type":"text","text":" "},{"type":"text","text":"and the allocation of a widget."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LayoutManagerProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LayoutManagerProtocol"}],"url":"\/documentation\/gtk\/layoutmanagerprotocol"},"doc://Gtk/documentation/Gtk/ConstraintLayout":{"role":"symbol","title":"ConstraintLayout","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConstraintLayout"}],"abstract":[{"type":"text","text":"A layout manager using constraints to describe relations between widgets."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayout","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ConstraintLayout"}],"url":"\/documentation\/gtk\/constraintlayout"},"doc://Gtk/documentation/Gtk/ConstraintLayoutProtocol/observeConstraints()":{"role":"symbol","title":"observeConstraints()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"observeConstraints"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"ListModelRef","preciseIdentifier":"s:3GIO12ListModelRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Returns a "},{"type":"codeVoice","code":"GListModel"},{"type":"text","text":" to track the constraints that are"},{"type":"text","text":" "},{"type":"text","text":"part of the layout."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutProtocol\/observeConstraints()","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/constraintlayoutprotocol\/observeconstraints()"},"doc://Gtk/documentation/Gtk/BuildableProtocol":{"role":"symbol","title":"BuildableProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BuildableProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkBuildable"},{"type":"text","text":" allows objects to extend and customize their deserialization"},{"type":"text","text":" "},{"type":"text","text":"from ui files."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuildableProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BuildableProtocol"}],"url":"\/documentation\/gtk\/buildableprotocol"},"doc://Gtk/documentation/Gtk/ConstraintLayoutProtocol/observeGuides()":{"role":"symbol","title":"observeGuides()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"observeGuides"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"ListModelRef","preciseIdentifier":"s:3GIO12ListModelRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Returns a "},{"type":"codeVoice","code":"GListModel"},{"type":"text","text":" to track the guides that are"},{"type":"text","text":" "},{"type":"text","text":"part of the layout."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutProtocol\/observeGuides()","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/constraintlayoutprotocol\/observeguides()"},"doc://Gtk/documentation/Gtk/ConstraintLayoutProtocol/addConstraintsFromDescriptionv(lines:nLines:hspacing:vspacing:views:)":{"role":"symbol","title":"addConstraintsFromDescriptionv(lines:nLines:hspacing:vspacing:views:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addConstraintsFromDescriptionv"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GLibHashTableT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"lines"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">?>!, "},{"kind":"externalParam","text":"nLines"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"hspacing"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"vspacing"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"views"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GLibHashTableT"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"RefListRef","preciseIdentifier":"s:4GLib07RefListB0V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ConstraintRef","preciseIdentifier":"s:3Gtk13ConstraintRefV"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Creates a list of constraints from a VFL description."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutProtocol\/addConstraintsFromDescriptionv(lines:nLines:hspacing:vspacing:views:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/constraintlayoutprotocol\/addconstraintsfromdescriptionv(lines:nlines:hspacing:vspacing:views:)"},"doc://Gtk/documentation/Gtk/ConstraintLayoutProtocol/add(guide:)":{"role":"symbol","title":"add(guide:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ConstraintGuideT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"guide"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ConstraintGuideT"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Adds a guide to "},{"type":"codeVoice","code":"layout"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutProtocol\/add(guide:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/constraintlayoutprotocol\/add(guide:)"},"doc://Gtk/10GLibObject0B8ProtocolP":{"type":"unresolvable","title":"GLibObject.ObjectProtocol","identifier":"doc:\/\/Gtk\/10GLibObject0B8ProtocolP"},"doc://Gtk/documentation/Gtk/ConstraintLayoutProtocol/add(constraint:)":{"role":"symbol","title":"add(constraint:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ConstraintT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constraint"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ConstraintT"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Adds a constraint to the layout manager."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutProtocol\/add(constraint:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/constraintlayoutprotocol\/add(constraint:)"},"doc://Gtk/documentation/Gtk/ConstraintLayoutProtocol/remove(constraint:)":{"role":"symbol","title":"remove(constraint:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"remove"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ConstraintT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constraint"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ConstraintT"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Removes "},{"type":"codeVoice","code":"constraint"},{"type":"text","text":" from the layout manager,"},{"type":"text","text":" "},{"type":"text","text":"so that it no longer influences the layout."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutProtocol\/remove(constraint:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/constraintlayoutprotocol\/remove(constraint:)"},"doc://Gtk/documentation/Gtk/ConstraintLayoutProtocol/removeAllConstraints()":{"role":"symbol","title":"removeAllConstraints()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeAllConstraints"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Removes all constraints from the layout manager."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutProtocol\/removeAllConstraints()","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/constraintlayoutprotocol\/removeallconstraints()"},"doc://Gtk/documentation/Gtk/ConstraintLayoutRef":{"role":"symbol","title":"ConstraintLayoutRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConstraintLayoutRef"}],"abstract":[{"type":"text","text":"A layout manager using constraints to describe relations between widgets."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ConstraintLayoutRef"}],"url":"\/documentation\/gtk\/constraintlayoutref"},"doc://Gtk/documentation/Gtk/ConstraintLayoutProtocol":{"role":"symbol","title":"ConstraintLayoutProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConstraintLayoutProtocol"}],"abstract":[{"type":"text","text":"A layout manager using constraints to describe relations between widgets."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ConstraintLayoutProtocol"}],"url":"\/documentation\/gtk\/constraintlayoutprotocol"},"doc://Gtk/documentation/Gtk/ConstraintLayoutProtocol/remove(guide:)":{"role":"symbol","title":"remove(guide:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"remove"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ConstraintGuideT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"guide"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ConstraintGuideT"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Removes "},{"type":"codeVoice","code":"guide"},{"type":"text","text":" from the layout manager,"},{"type":"text","text":" "},{"type":"text","text":"so that it no longer influences the layout."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutProtocol\/remove(guide:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/constraintlayoutprotocol\/remove(guide:)"},"doc://Gtk/documentation/Gtk":{"role":"collection","title":"Gtk","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk","kind":"symbol","type":"topic","url":"\/documentation\/gtk"},"doc://Gtk/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/Gtk\/4GLib14PointerWrapperP"},"doc://Gtk/documentation/Gtk/ConstraintLayoutProtocol/constraint_layout_ptr-7gk4d":{"defaultImplementations":1,"role":"symbol","title":"constraint_layout_ptr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"constraint_layout_ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkConstraintLayout"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Typed pointer to the underlying "},{"type":"codeVoice","code":"GtkConstraintLayout"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintLayoutProtocol\/constraint_layout_ptr-7gk4d","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/gtk\/constraintlayoutprotocol\/constraint_layout_ptr-7gk4d"}}}