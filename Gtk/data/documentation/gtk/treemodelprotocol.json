{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeModelProtocol"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"PointerWrapper","preciseIdentifier":"s:4GLib14PointerWrapperP"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GtkTreeModel"},{"type":"text","text":" interface defines a generic tree interface for"},{"type":"text","text":" "},{"type":"text","text":"use by the "},{"type":"codeVoice","code":"GtkTreeView"},{"type":"text","text":" widget. It is an abstract interface, and"},{"type":"text","text":" "},{"type":"text","text":"is designed to be usable with any appropriate data structure. The"},{"type":"text","text":" "},{"type":"text","text":"programmer just has to implement this interface on their own data"},{"type":"text","text":" "},{"type":"text","text":"type for it to be viewable by a "},{"type":"codeVoice","code":"GtkTreeView"},{"type":"text","text":" widget."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The model is represented as a hierarchical tree of strongly-typed,"},{"type":"text","text":" "},{"type":"text","text":"columned data. In other words, the model can be seen as a tree where"},{"type":"text","text":" "},{"type":"text","text":"every node has different values depending on which column is being"},{"type":"text","text":" "},{"type":"text","text":"queried. The type of data found in a column is determined by using"},{"type":"text","text":" "},{"type":"text","text":"the GType system (ie. "},{"type":"codeVoice","code":"G_TYPE_INT"},{"type":"text","text":", "},{"type":"codeVoice","code":"GTK_TYPE_BUTTON"},{"type":"text","text":", "},{"type":"codeVoice","code":"G_TYPE_POINTER"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"etc). The types are homogeneous per column across all nodes. It is"},{"type":"text","text":" "},{"type":"text","text":"important to note that this interface only provides a way of examining"},{"type":"text","text":" "},{"type":"text","text":"a model and observing changes. The implementation of each individual"},{"type":"text","text":" "},{"type":"text","text":"model decides how and if changes are made."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In order to make life simpler for programmers who do not need to"},{"type":"text","text":" "},{"type":"text","text":"write their own specialized model, two generic models are provided"},{"type":"text","text":" "},{"type":"text","text":"— the "},{"type":"codeVoice","code":"GtkTreeStore"},{"type":"text","text":" and the "},{"type":"codeVoice","code":"GtkListStore"},{"type":"text","text":". To use these, the"},{"type":"text","text":" "},{"type":"text","text":"developer simply pushes data into these models as necessary. These"},{"type":"text","text":" "},{"type":"text","text":"models provide the data structure as well as all appropriate tree"},{"type":"text","text":" "},{"type":"text","text":"interfaces. As a result, implementing drag and drop, sorting, and"},{"type":"text","text":" "},{"type":"text","text":"storing data is trivial. For the vast majority of trees and lists,"},{"type":"text","text":" "},{"type":"text","text":"these two models are sufficient."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Models are accessed on a node\/column level of granularity. One can"},{"type":"text","text":" "},{"type":"text","text":"query for the value of a model at a certain node and a certain"},{"type":"text","text":" "},{"type":"text","text":"column on that node. There are two structures used to reference a"},{"type":"text","text":" "},{"type":"text","text":"particular node in a model. They are the [struct"},{"type":"codeVoice","code":"Gtk.TreePath"},{"type":"text","text":"] and"},{"type":"text","text":" "},{"type":"text","text":"the [struct"},{"type":"codeVoice","code":"Gtk.TreeIter"},{"type":"text","text":"] (“iter” is short for iterator). Most of the"},{"type":"text","text":" "},{"type":"text","text":"interface consists of operations on a [struct"},{"type":"codeVoice","code":"Gtk.TreeIter"},{"type":"text","text":"]."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A path is essentially a potential node. It is a location on a model"},{"type":"text","text":" "},{"type":"text","text":"that may or may not actually correspond to a node on a specific"},{"type":"text","text":" "},{"type":"text","text":"model. A [struct"},{"type":"codeVoice","code":"Gtk.TreePath"},{"type":"text","text":"] can be converted into either an"},{"type":"text","text":" "},{"type":"text","text":"array of unsigned integers or a string. The string form is a list"},{"type":"text","text":" "},{"type":"text","text":"of numbers separated by a colon. Each number refers to the offset"},{"type":"text","text":" "},{"type":"text","text":"at that level. Thus, the path "},{"type":"codeVoice","code":"0"},{"type":"text","text":" refers to the root"},{"type":"text","text":" "},{"type":"text","text":"node and the path "},{"type":"codeVoice","code":"2:4"},{"type":"text","text":" refers to the fifth child of"},{"type":"text","text":" "},{"type":"text","text":"the third node."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"By contrast, a [struct"},{"type":"codeVoice","code":"Gtk.TreeIter"},{"type":"text","text":"] is a reference to a specific node on"},{"type":"text","text":" "},{"type":"text","text":"a specific model. It is a generic struct with an integer and three"},{"type":"text","text":" "},{"type":"text","text":"generic pointers. These are filled in by the model in a model-specific"},{"type":"text","text":" "},{"type":"text","text":"way. One can convert a path to an iterator by calling"},{"type":"text","text":" "},{"type":"codeVoice","code":"gtk_tree_model_get_iter()"},{"type":"text","text":". These iterators are the primary way"},{"type":"text","text":" "},{"type":"text","text":"of accessing a model and are similar to the iterators used by"},{"type":"text","text":" "},{"type":"codeVoice","code":"GtkTextBuffer"},{"type":"text","text":". They are generally statically allocated on the"},{"type":"text","text":" "},{"type":"text","text":"stack and only used for a short time. The model interface defines"},{"type":"text","text":" "},{"type":"text","text":"a set of operations using them for navigating the model."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is expected that models fill in the iterator with private data."},{"type":"text","text":" "},{"type":"text","text":"For example, the "},{"type":"codeVoice","code":"GtkListStore"},{"type":"text","text":" model, which is internally a simple"},{"type":"text","text":" "},{"type":"text","text":"linked list, stores a list node in one of the pointers. The"},{"type":"text","text":" "},{"type":"codeVoice","code":"GtkTreeModel"},{"type":"text","text":"Sort stores an array and an offset in two of the"},{"type":"text","text":" "},{"type":"text","text":"pointers. Additionally, there is an integer field. This field is"},{"type":"text","text":" "},{"type":"text","text":"generally filled with a unique stamp per model. This stamp is for"},{"type":"text","text":" "},{"type":"text","text":"catching errors resulting from using invalid iterators with a model."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The lifecycle of an iterator can be a little confusing at first."},{"type":"text","text":" "},{"type":"text","text":"Iterators are expected to always be valid for as long as the model"},{"type":"text","text":" "},{"type":"text","text":"is unchanged (and doesn’t emit a signal). The model is considered"},{"type":"text","text":" "},{"type":"text","text":"to own all outstanding iterators and nothing needs to be done to"},{"type":"text","text":" "},{"type":"text","text":"free them from the user’s point of view. Additionally, some models"},{"type":"text","text":" "},{"type":"text","text":"guarantee that an iterator is valid for as long as the node it refers"},{"type":"text","text":" "},{"type":"text","text":"to is valid (most notably the "},{"type":"codeVoice","code":"GtkTreeStore"},{"type":"text","text":" and "},{"type":"codeVoice","code":"GtkListStore"},{"type":"text","text":")."},{"type":"text","text":" "},{"type":"text","text":"Although generally uninteresting, as one always has to allow for"},{"type":"text","text":" "},{"type":"text","text":"the case where iterators do not persist beyond a signal, some very"},{"type":"text","text":" "},{"type":"text","text":"important performance enhancements were made in the sort model."},{"type":"text","text":" "},{"type":"text","text":"As a result, the "},{"type":"codeVoice","code":"GTK_TREE_MODEL_ITERS_PERSIST"},{"type":"text","text":" flag was added to"},{"type":"text","text":" "},{"type":"text","text":"indicate this behavior."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To help show some common operation of a model, some examples are"},{"type":"text","text":" "},{"type":"text","text":"provided. The first example shows three ways of getting the iter at"},{"type":"text","text":" "},{"type":"text","text":"the location "},{"type":"codeVoice","code":"3:2:5"},{"type":"text","text":". While the first method shown is"},{"type":"text","text":" "},{"type":"text","text":"easier, the second is much more common, as you often get paths from"},{"type":"text","text":" "},{"type":"text","text":"callbacks."}]},{"anchor":"Acquiring-a-GtkTreeIter","level":2,"type":"heading","text":"Acquiring a `GtkTreeIter`"},{"type":"codeListing","syntax":"c","code":["\/\/ Three ways of getting the iter pointing to the location","GtkTreePath *path;","GtkTreeIter iter;","GtkTreeIter parent_iter;","","\/\/ get the iterator from a string","gtk_tree_model_get_iter_from_string (model,","                                     &iter,","                                     \"3:2:5\");","","\/\/ get the iterator from a path","path = gtk_tree_path_new_from_string (\"3:2:5\");","gtk_tree_model_get_iter (model, &iter, path);","gtk_tree_path_free (path);","","\/\/ walk the tree to find the iterator","gtk_tree_model_iter_nth_child (model, &iter,","                               NULL, 3);","parent_iter = iter;","gtk_tree_model_iter_nth_child (model, &iter,","                               &parent_iter, 2);","parent_iter = iter;","gtk_tree_model_iter_nth_child (model, &iter,","                               &parent_iter, 5);"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This second example shows a quick way of iterating through a list"},{"type":"text","text":" "},{"type":"text","text":"and getting a string and an integer from each row. The"},{"type":"text","text":" "},{"type":"codeVoice","code":"populate_model()"},{"type":"text","text":" function used below is not"},{"type":"text","text":" "},{"type":"text","text":"shown, as it is specific to the "},{"type":"codeVoice","code":"GtkListStore"},{"type":"text","text":". For information on"},{"type":"text","text":" "},{"type":"text","text":"how to write such a function, see the "},{"type":"codeVoice","code":"GtkListStore"},{"type":"text","text":" documentation."}]},{"anchor":"Reading-data-from-a-GtkTreeModel","level":2,"type":"heading","text":"Reading data from a `GtkTreeModel`"},{"type":"codeListing","syntax":"c","code":["enum","{","  STRING_COLUMN,","  INT_COLUMN,","  N_COLUMNS","};","","...","","GtkTreeModel *list_store;","GtkTreeIter iter;","gboolean valid;","int row_count = 0;","","\/\/ make a new list_store","list_store = gtk_list_store_new (N_COLUMNS,","                                 G_TYPE_STRING,","                                 G_TYPE_INT);","","\/\/ Fill the list store with data","populate_model (list_store);","","\/\/ Get the first iter in the list, check it is valid and walk","\/\/ through the list, reading each row.","","valid = gtk_tree_model_get_iter_first (list_store,","                                       &iter);","while (valid)"," {","   char *str_data;","   int    int_data;","","   \/\/ Make sure you terminate calls to `gtk_tree_model_get()` with a “-1” value","   gtk_tree_model_get (list_store, &iter,","                       STRING_COLUMN, &str_data,","                       INT_COLUMN, &int_data,","                       -1);","","   \/\/ Do something with the data","   g_print (\"Row `d:` (`s`,`d`)\\n\",","            row_count, str_data, int_data);","   g_free (str_data);","","   valid = gtk_tree_model_iter_next (list_store,","                                     &iter);","   row_count++;"," }"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GtkTreeModel"},{"type":"text","text":" interface contains two methods for reference"},{"type":"text","text":" "},{"type":"text","text":"counting: "},{"type":"codeVoice","code":"gtk_tree_model_ref_node()"},{"type":"text","text":" and "},{"type":"codeVoice","code":"gtk_tree_model_unref_node()"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"These two methods are optional to implement. The reference counting"},{"type":"text","text":" "},{"type":"text","text":"is meant as a way for views to let models know when nodes are being"},{"type":"text","text":" "},{"type":"text","text":"displayed. "},{"type":"codeVoice","code":"GtkTreeView"},{"type":"text","text":" will take a reference on a node when it is"},{"type":"text","text":" "},{"type":"text","text":"visible, which means the node is either in the toplevel or expanded."},{"type":"text","text":" "},{"type":"text","text":"Being displayed does not mean that the node is currently directly"},{"type":"text","text":" "},{"type":"text","text":"visible to the user in the viewport. Based on this reference counting"},{"type":"text","text":" "},{"type":"text","text":"scheme a caching model, for example, can decide whether or not to cache"},{"type":"text","text":" "},{"type":"text","text":"a node based on the reference count. A file-system based model would"},{"type":"text","text":" "},{"type":"text","text":"not want to keep the entire file hierarchy in memory, but just the"},{"type":"text","text":" "},{"type":"text","text":"folders that are currently expanded in every current view."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When working with reference counting, the following rules must be taken"},{"type":"text","text":" "},{"type":"text","text":"into account:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Never take a reference on a node without owning a reference on its parent."},{"type":"text","text":" "},{"type":"text","text":"This means that all parent nodes of a referenced node must be referenced"},{"type":"text","text":" "},{"type":"text","text":"as well."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Outstanding references on a deleted node are not released. This is not"},{"type":"text","text":" "},{"type":"text","text":"possible because the node has already been deleted by the time the"},{"type":"text","text":" "},{"type":"text","text":"row-deleted signal is received."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Models are not obligated to emit a signal on rows of which none of its"},{"type":"text","text":" "},{"type":"text","text":"siblings are referenced. To phrase this differently, signals are only"},{"type":"text","text":" "},{"type":"text","text":"required for levels in which nodes are referenced. For the root level"},{"type":"text","text":" "},{"type":"text","text":"however, signals must be emitted at all times (however the root level"},{"type":"text","text":" "},{"type":"text","text":"is always referenced when any view is attached)."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"TreeModelProtocol"},{"type":"text","text":" protocol exposes the methods and properties of an underlying "},{"type":"codeVoice","code":"GtkTreeModel"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"The default implementation of these can be found in the protocol extension below."},{"type":"text","text":" "},{"type":"text","text":"For a concrete class that implements these methods and properties, see "},{"type":"codeVoice","code":"TreeModel"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Alternatively, use "},{"type":"codeVoice","code":"TreeModelRef"},{"type":"text","text":" as a lighweight, "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference if you already have an instance you just want to use."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gtk\/treemodelprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Gtk\/4GLib14PointerWrapperP"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/ListStoreProtocol","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelFilterProtocol","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol","doc:\/\/Gtk\/documentation\/Gtk\/TreeSortableProtocol","doc:\/\/Gtk\/documentation\/Gtk\/TreeStoreProtocol"],"kind":"relationships","title":"Inherited By","type":"inheritedBy"},{"identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/ListStore","doc:\/\/Gtk\/documentation\/Gtk\/ListStoreRef","doc:\/\/Gtk\/documentation\/Gtk\/TreeModel","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelFilter","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelFilterRef","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelRef","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSort","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortRef","doc:\/\/Gtk\/documentation\/Gtk\/TreeSortable","doc:\/\/Gtk\/documentation\/Gtk\/TreeSortableRef","doc:\/\/Gtk\/documentation\/Gtk\/TreeStore","doc:\/\/Gtk\/documentation\/Gtk\/TreeStoreRef"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"identifier":{"url":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The tree interface used by GtkTreeView"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeModelProtocol"}],"title":"TreeModelProtocol","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:3Gtk17TreeModelProtocolP","modules":[{"name":"Gtk"}],"navigatorTitle":[{"kind":"identifier","text":"TreeModelProtocol"}]},"hierarchy":{"paths":[["doc:\/\/Gtk\/documentation\/Gtk"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/flags","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/nColumns","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/tree_model_ptr-3z635"]},{"title":"Instance Methods","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/connect(signal:flags:data:destroyData:signalHandler:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/connect(signal:flags:handler:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/filterNew(root:)-7r9fy","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/filterNew(root:)-8dlvn","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/foreach(func:userData:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/get(iter:path:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/getColumnType(index:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/getFlags()","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/getIterFirst(iter:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/getIterFromString(iter:pathString:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/getNColumns()","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/getPath(iter:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/getStringFrom(iter:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/getValist(iter:varArgs:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/getValue(iter:column:value:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/iterChildren(iter:parent:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/iterHasChild(iter:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/iterNChildren(iter:)-1nh8b","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/iterNChildren(iter:)-6ktta","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/iterNext(iter:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/iterNthChild(iter:parent:n:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/iterParent(iter:child:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/iterPrevious(iter:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/onRowChanged(flags:handler:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/onRowDeleted(flags:handler:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/onRowHasChildToggled(flags:handler:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/onRowInserted(flags:handler:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/refNode(iter:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/rowChanged(path:iter:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/rowDeleted(path:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/rowHasChildToggled(path:iter:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/rowInserted(path:iter:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/rowsReordered(path:iter:newOrder:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/rowsReorderedWithLength(path:iter:newOrder:length:)-28n5","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/rowsReorderedWithLength(path:iter:newOrder:length:)-4eqwa","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/treeCreateRowDragContent(path:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/unrefNode(iter:)"]},{"title":"Type Properties","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/rowChangedSignal","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/rowDeletedSignal","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/rowHasChildToggledSignal","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/rowInsertedSignal","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/rowsReorderedSignal"]}],"references":{"doc://Gtk/documentation/Gtk/TreeModelProtocol/iterChildren(iter:parent:)":{"role":"symbol","title":"iterChildren(iter:parent:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"iterChildren"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreeIterT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"iter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeIterT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"parent"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeIterT"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Sets "},{"type":"codeVoice","code":"iter"},{"type":"text","text":" to point to the first child of "},{"type":"codeVoice","code":"parent"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/iterChildren(iter:parent:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelprotocol\/iterchildren(iter:parent:)"},"doc://Gtk/documentation/Gtk/TreeModel":{"role":"symbol","title":"TreeModel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeModel"}],"abstract":[{"type":"text","text":"The tree interface used by GtkTreeView"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModel","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeModel"}],"url":"\/documentation\/gtk\/treemodel"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/rowsReordered(path:iter:newOrder:)":{"role":"symbol","title":"rowsReordered(path:iter:newOrder:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"rowsReordered"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreeIterT"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"TreePathT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreePathT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"iter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeIterT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"newOrder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gint","preciseIdentifier":"c:gtypes.h@T@gint"},{"kind":"text","text":">!)"}],"abstract":[{"type":"text","text":"Emits the "},{"type":"codeVoice","code":"rows-reordered"},{"type":"text","text":" signal on "},{"type":"codeVoice","code":"tree_model"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/rowsReordered(path:iter:newOrder:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelprotocol\/rowsreordered(path:iter:neworder:)"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/treeCreateRowDragContent(path:)":{"role":"symbol","title":"treeCreateRowDragContent(path:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"treeCreateRowDragContent"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreePathT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreePathT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ContentProviderRef","preciseIdentifier":"s:3Gdk18ContentProviderRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Creates a content provider for dragging "},{"type":"codeVoice","code":"path"},{"type":"text","text":" from "},{"type":"codeVoice","code":"tree_model"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/treeCreateRowDragContent(path:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelprotocol\/treecreaterowdragcontent(path:)"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/iterHasChild(iter:)":{"role":"symbol","title":"iterHasChild(iter:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"iterHasChild"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreeIterT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"iter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeIterT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if "},{"type":"codeVoice","code":"iter"},{"type":"text","text":" has children, "},{"type":"codeVoice","code":"false"},{"type":"text","text":" otherwise."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/iterHasChild(iter:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelprotocol\/iterhaschild(iter:)"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/iterParent(iter:child:)":{"role":"symbol","title":"iterParent(iter:child:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"iterParent"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreeIterT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"iter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeIterT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"child"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeIterT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Sets "},{"type":"codeVoice","code":"iter"},{"type":"text","text":" to be the parent of "},{"type":"codeVoice","code":"child"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/iterParent(iter:child:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelprotocol\/iterparent(iter:child:)"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/connect(signal:flags:data:destroyData:signalHandler:)":{"role":"symbol","title":"connect(signal:flags:data:destroyData:signalHandler:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"signal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeModelSignalName","preciseIdentifier":"s:3Gtk19TreeModelSignalNameO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"flags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ConnectFlags","preciseIdentifier":"s:10GLibObject12ConnectFlagsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"!, "},{"kind":"externalParam","text":"destroyData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GClosureNotify","preciseIdentifier":"c:@T@GClosureNotify"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"signalHandler"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GCallback","preciseIdentifier":"c:gclosure.h@T@GCallback"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Connect a C signal handler to the given, typed "},{"type":"codeVoice","code":"TreeModelSignalName"},{"type":"text","text":" signal"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/connect(signal:flags:data:destroyData:signalHandler:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treemodelprotocol\/connect(signal:flags:data:destroydata:signalhandler:)"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/rowInserted(path:iter:)":{"role":"symbol","title":"rowInserted(path:iter:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"rowInserted"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreeIterT"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"TreePathT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreePathT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"iter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeIterT"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Emits the "},{"type":"codeVoice","code":"row-inserted"},{"type":"text","text":" signal on "},{"type":"codeVoice","code":"tree_model"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/rowInserted(path:iter:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelprotocol\/rowinserted(path:iter:)"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/filterNew(root:)-7r9fy":{"role":"symbol","title":"filterNew(root:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"filterNew"},{"kind":"text","text":"("},{"kind":"externalParam","text":"root"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreePathRef","preciseIdentifier":"s:3Gtk11TreePathRefV"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"TreeModelRef","preciseIdentifier":"s:3Gtk12TreeModelRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"GtkTreeModel"},{"type":"text","text":", with "},{"type":"codeVoice","code":"child_model"},{"type":"text","text":" as the child_model"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":"root"},{"type":"text","text":" as the virtual root."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/filterNew(root:)-7r9fy","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelprotocol\/filternew(root:)-7r9fy"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/rowDeletedSignal":{"role":"symbol","title":"rowDeletedSignal","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"rowDeletedSignal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeModelSignalName","preciseIdentifier":"s:3Gtk19TreeModelSignalNameO"}],"abstract":[{"type":"text","text":"Typed "},{"type":"codeVoice","code":"row-deleted"},{"type":"text","text":" signal for using the "},{"type":"codeVoice","code":"connect(signal:)"},{"type":"text","text":" methods"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/rowDeletedSignal","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treemodelprotocol\/rowdeletedsignal"},"doc://Gtk/documentation/Gtk/TreeSortableRef":{"role":"symbol","title":"TreeSortableRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeSortableRef"}],"abstract":[{"type":"text","text":"The interface for sortable models used by GtkTreeView"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeSortableRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeSortableRef"}],"url":"\/documentation\/gtk\/treesortableref"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/onRowInserted(flags:handler:)":{"role":"symbol","title":"onRowInserted(flags:handler:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onRowInserted"},{"kind":"text","text":"("},{"kind":"externalParam","text":"flags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ConnectFlags","preciseIdentifier":"s:10GLibObject12ConnectFlagsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"TreeModelRef","preciseIdentifier":"s:3Gtk12TreeModelRefV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"TreePathRef","preciseIdentifier":"s:3Gtk11TreePathRefV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"TreeIterRef","preciseIdentifier":"s:3Gtk11TreeIterRefV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"This signal is emitted when a new row has been inserted in"},{"type":"text","text":" "},{"type":"text","text":"the model."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/onRowInserted(flags:handler:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treemodelprotocol\/onrowinserted(flags:handler:)"},"doc://Gtk/documentation/Gtk/ListStoreRef":{"role":"symbol","title":"ListStoreRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ListStoreRef"}],"abstract":[{"type":"text","text":"A list-like data structure that can be used with the [class"},{"type":"codeVoice","code":"Gtk.TreeView"},{"type":"text","text":"]."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStoreRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ListStoreRef"}],"url":"\/documentation\/gtk\/liststoreref"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/foreach(func:userData:)":{"role":"symbol","title":"foreach(func:userData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"foreach"},{"kind":"text","text":"("},{"kind":"externalParam","text":"func"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GtkTreeModelForeachFunc","preciseIdentifier":"c:gtktreemodel.h@T@GtkTreeModelForeachFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Calls "},{"type":"codeVoice","code":"func"},{"type":"text","text":" on each node in model in a depth-first fashion."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/foreach(func:userData:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelprotocol\/foreach(func:userdata:)"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/get(iter:path:)":{"role":"symbol","title":"get(iter:path:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreeIterT"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"TreePathT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"iter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeIterT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreePathT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Sets "},{"type":"codeVoice","code":"iter"},{"type":"text","text":" to a valid iterator pointing to "},{"type":"codeVoice","code":"path"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/get(iter:path:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelprotocol\/get(iter:path:)"},"doc://Gtk/documentation/Gtk/TreeStoreRef":{"role":"symbol","title":"TreeStoreRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeStoreRef"}],"abstract":[{"type":"text","text":"A tree-like data structure that can be used with the [class"},{"type":"codeVoice","code":"Gtk.TreeView"},{"type":"text","text":"]."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeStoreRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeStoreRef"}],"url":"\/documentation\/gtk\/treestoreref"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/rowHasChildToggledSignal":{"role":"symbol","title":"rowHasChildToggledSignal","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"rowHasChildToggledSignal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeModelSignalName","preciseIdentifier":"s:3Gtk19TreeModelSignalNameO"}],"abstract":[{"type":"text","text":"Typed "},{"type":"codeVoice","code":"row-has-child-toggled"},{"type":"text","text":" signal for using the "},{"type":"codeVoice","code":"connect(signal:)"},{"type":"text","text":" methods"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/rowHasChildToggledSignal","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treemodelprotocol\/rowhaschildtoggledsignal"},"doc://Gtk/documentation/Gtk/TreeSortable":{"role":"symbol","title":"TreeSortable","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeSortable"}],"abstract":[{"type":"text","text":"The interface for sortable models used by GtkTreeView"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeSortable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeSortable"}],"url":"\/documentation\/gtk\/treesortable"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/getValist(iter:varArgs:)":{"role":"symbol","title":"getValist(iter:varArgs:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getValist"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreeIterT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"iter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeIterT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"varArgs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CVaListPointer","preciseIdentifier":"s:s14CVaListPointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Gets the value of one or more cells in the row referenced by "},{"type":"codeVoice","code":"iter"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/getValist(iter:varArgs:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelprotocol\/getvalist(iter:varargs:)"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/getPath(iter:)":{"role":"symbol","title":"getPath(iter:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getPath"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreeIterT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"iter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeIterT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"TreePathRef","preciseIdentifier":"s:3Gtk11TreePathRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Returns a newly-created "},{"type":"codeVoice","code":"GtkTreePath"},{"type":"text","text":" referenced by "},{"type":"codeVoice","code":"iter"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/getPath(iter:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelprotocol\/getpath(iter:)"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/onRowHasChildToggled(flags:handler:)":{"role":"symbol","title":"onRowHasChildToggled(flags:handler:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onRowHasChildToggled"},{"kind":"text","text":"("},{"kind":"externalParam","text":"flags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ConnectFlags","preciseIdentifier":"s:10GLibObject12ConnectFlagsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"TreeModelRef","preciseIdentifier":"s:3Gtk12TreeModelRefV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"TreePathRef","preciseIdentifier":"s:3Gtk11TreePathRefV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"TreeIterRef","preciseIdentifier":"s:3Gtk11TreeIterRefV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"This signal is emitted when a row has gotten the first child"},{"type":"text","text":" "},{"type":"text","text":"row or lost its last child row."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/onRowHasChildToggled(flags:handler:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treemodelprotocol\/onrowhaschildtoggled(flags:handler:)"},"doc://Gtk/documentation/Gtk/TreeModelFilterRef":{"role":"symbol","title":"TreeModelFilterRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeModelFilterRef"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GtkTreeModel"},{"type":"text","text":" which hides parts of an underlying tree model"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelFilterRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeModelFilterRef"}],"url":"\/documentation\/gtk\/treemodelfilterref"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/getColumnType(index:)":{"role":"symbol","title":"getColumnType(index:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getColumnType"},{"kind":"text","text":"("},{"kind":"externalParam","text":"index"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GType","preciseIdentifier":"c:@T@GType"}],"abstract":[{"type":"text","text":"Returns the type of the column."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/getColumnType(index:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelprotocol\/getcolumntype(index:)"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/rowsReorderedSignal":{"role":"symbol","title":"rowsReorderedSignal","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"rowsReorderedSignal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeModelSignalName","preciseIdentifier":"s:3Gtk19TreeModelSignalNameO"}],"abstract":[{"type":"text","text":"This signal is emitted when the children of a node in the"},{"type":"text","text":" "},{"type":"codeVoice","code":"GtkTreeModel"},{"type":"text","text":" have been reordered."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/rowsReorderedSignal","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treemodelprotocol\/rowsreorderedsignal"},"doc://Gtk/documentation/Gtk":{"role":"collection","title":"Gtk","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk","kind":"symbol","type":"topic","url":"\/documentation\/gtk"},"doc://Gtk/documentation/Gtk/TreeModelSortProtocol":{"role":"symbol","title":"TreeModelSortProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeModelSortProtocol"}],"abstract":[{"type":"text","text":"A GtkTreeModel which makes an underlying tree model sortable"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeModelSortProtocol"}],"url":"\/documentation\/gtk\/treemodelsortprotocol"},"doc://Gtk/documentation/Gtk/TreeStoreProtocol":{"role":"symbol","title":"TreeStoreProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeStoreProtocol"}],"abstract":[{"type":"text","text":"A tree-like data structure that can be used with the [class"},{"type":"codeVoice","code":"Gtk.TreeView"},{"type":"text","text":"]."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeStoreProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeStoreProtocol"}],"url":"\/documentation\/gtk\/treestoreprotocol"},"doc://Gtk/documentation/Gtk/ListStoreProtocol":{"role":"symbol","title":"ListStoreProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ListStoreProtocol"}],"abstract":[{"type":"text","text":"A list-like data structure that can be used with the [class"},{"type":"codeVoice","code":"Gtk.TreeView"},{"type":"text","text":"]."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStoreProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ListStoreProtocol"}],"url":"\/documentation\/gtk\/liststoreprotocol"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/rowInsertedSignal":{"role":"symbol","title":"rowInsertedSignal","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"rowInsertedSignal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeModelSignalName","preciseIdentifier":"s:3Gtk19TreeModelSignalNameO"}],"abstract":[{"type":"text","text":"Typed "},{"type":"codeVoice","code":"row-inserted"},{"type":"text","text":" signal for using the "},{"type":"codeVoice","code":"connect(signal:)"},{"type":"text","text":" methods"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/rowInsertedSignal","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treemodelprotocol\/rowinsertedsignal"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/getIterFromString(iter:pathString:)":{"role":"symbol","title":"getIterFromString(iter:pathString:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getIterFromString"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreeIterT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"iter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeIterT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"pathString"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">!) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Sets "},{"type":"codeVoice","code":"iter"},{"type":"text","text":" to a valid iterator pointing to "},{"type":"codeVoice","code":"path_string"},{"type":"text","text":", if it"},{"type":"text","text":" "},{"type":"text","text":"exists."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/getIterFromString(iter:pathString:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelprotocol\/getiterfromstring(iter:pathstring:)"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/filterNew(root:)-8dlvn":{"role":"symbol","title":"filterNew(root:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"filterNew"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreePathT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"root"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreePathT"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"TreeModelRef","preciseIdentifier":"s:3Gtk12TreeModelRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"GtkTreeModel"},{"type":"text","text":", with "},{"type":"codeVoice","code":"child_model"},{"type":"text","text":" as the child_model"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":"root"},{"type":"text","text":" as the virtual root."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/filterNew(root:)-8dlvn","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelprotocol\/filternew(root:)-8dlvn"},"doc://Gtk/documentation/Gtk/TreeModelProtocol":{"role":"symbol","title":"TreeModelProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeModelProtocol"}],"abstract":[{"type":"text","text":"The tree interface used by GtkTreeView"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeModelProtocol"}],"url":"\/documentation\/gtk\/treemodelprotocol"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/iterNChildren(iter:)-1nh8b":{"role":"symbol","title":"iterNChildren(iter:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"iterNChildren"},{"kind":"text","text":"("},{"kind":"externalParam","text":"iter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeIterRef","preciseIdentifier":"s:3Gtk11TreeIterRefV"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Returns the number of children that "},{"type":"codeVoice","code":"iter"},{"type":"text","text":" has."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/iterNChildren(iter:)-1nh8b","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelprotocol\/iternchildren(iter:)-1nh8b"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/rowsReorderedWithLength(path:iter:newOrder:length:)-28n5":{"role":"symbol","title":"rowsReorderedWithLength(path:iter:newOrder:length:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"rowsReorderedWithLength"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreeIterT"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"TreePathT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreePathT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"iter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeIterT"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"newOrder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CInt","preciseIdentifier":"s:s4CInta"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"length"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Emits the "},{"type":"codeVoice","code":"rows-reordered"},{"type":"text","text":" signal on "},{"type":"codeVoice","code":"tree_model"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/rowsReorderedWithLength(path:iter:newOrder:length:)-28n5","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelprotocol\/rowsreorderedwithlength(path:iter:neworder:length:)-28n5"},"doc://Gtk/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/Gtk\/4GLib14PointerWrapperP"},"doc://Gtk/documentation/Gtk/TreeModelRef":{"role":"symbol","title":"TreeModelRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeModelRef"}],"abstract":[{"type":"text","text":"The tree interface used by GtkTreeView"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeModelRef"}],"url":"\/documentation\/gtk\/treemodelref"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/getValue(iter:column:value:)":{"role":"symbol","title":"getValue(iter:column:value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getValue"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GLibObjectValueT"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"TreeIterT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"iter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeIterT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GLibObjectValueT"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Initializes and sets "},{"type":"codeVoice","code":"value"},{"type":"text","text":" to that at "},{"type":"codeVoice","code":"column"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/getValue(iter:column:value:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelprotocol\/getvalue(iter:column:value:)"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/onRowDeleted(flags:handler:)":{"role":"symbol","title":"onRowDeleted(flags:handler:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onRowDeleted"},{"kind":"text","text":"("},{"kind":"externalParam","text":"flags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ConnectFlags","preciseIdentifier":"s:10GLibObject12ConnectFlagsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"TreeModelRef","preciseIdentifier":"s:3Gtk12TreeModelRefV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"TreePathRef","preciseIdentifier":"s:3Gtk11TreePathRefV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"This signal is emitted when a row has been deleted."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/onRowDeleted(flags:handler:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treemodelprotocol\/onrowdeleted(flags:handler:)"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/rowHasChildToggled(path:iter:)":{"role":"symbol","title":"rowHasChildToggled(path:iter:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"rowHasChildToggled"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreeIterT"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"TreePathT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreePathT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"iter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeIterT"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Emits the "},{"type":"codeVoice","code":"row-has-child-toggled"},{"type":"text","text":" signal on "},{"type":"codeVoice","code":"tree_model"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/rowHasChildToggled(path:iter:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelprotocol\/rowhaschildtoggled(path:iter:)"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/unrefNode(iter:)":{"role":"symbol","title":"unrefNode(iter:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unrefNode"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreeIterT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"iter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeIterT"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Lets the tree unref the node."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/unrefNode(iter:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelprotocol\/unrefnode(iter:)"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/iterNext(iter:)":{"role":"symbol","title":"iterNext(iter:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"iterNext"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreeIterT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"iter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeIterT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Sets "},{"type":"codeVoice","code":"iter"},{"type":"text","text":" to point to the node following it at the current level."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/iterNext(iter:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelprotocol\/iternext(iter:)"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/iterPrevious(iter:)":{"role":"symbol","title":"iterPrevious(iter:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"iterPrevious"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreeIterT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"iter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeIterT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Sets "},{"type":"codeVoice","code":"iter"},{"type":"text","text":" to point to the previous node at the current level."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/iterPrevious(iter:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelprotocol\/iterprevious(iter:)"},"doc://Gtk/documentation/Gtk/TreeModelFilterProtocol":{"role":"symbol","title":"TreeModelFilterProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeModelFilterProtocol"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GtkTreeModel"},{"type":"text","text":" which hides parts of an underlying tree model"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelFilterProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeModelFilterProtocol"}],"url":"\/documentation\/gtk\/treemodelfilterprotocol"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/iterNthChild(iter:parent:n:)":{"role":"symbol","title":"iterNthChild(iter:parent:n:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"iterNthChild"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreeIterT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"iter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeIterT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"parent"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeIterT"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"n"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Sets "},{"type":"codeVoice","code":"iter"},{"type":"text","text":" to be the child of "},{"type":"codeVoice","code":"parent"},{"type":"text","text":", using the given index."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/iterNthChild(iter:parent:n:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelprotocol\/iternthchild(iter:parent:n:)"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/onRowChanged(flags:handler:)":{"role":"symbol","title":"onRowChanged(flags:handler:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onRowChanged"},{"kind":"text","text":"("},{"kind":"externalParam","text":"flags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ConnectFlags","preciseIdentifier":"s:10GLibObject12ConnectFlagsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"TreeModelRef","preciseIdentifier":"s:3Gtk12TreeModelRefV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"TreePathRef","preciseIdentifier":"s:3Gtk11TreePathRefV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"TreeIterRef","preciseIdentifier":"s:3Gtk11TreeIterRefV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"This signal is emitted when a row in the model has changed."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/onRowChanged(flags:handler:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treemodelprotocol\/onrowchanged(flags:handler:)"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/rowChanged(path:iter:)":{"role":"symbol","title":"rowChanged(path:iter:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"rowChanged"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreeIterT"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"TreePathT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreePathT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"iter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeIterT"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Emits the "},{"type":"codeVoice","code":"row-changed"},{"type":"text","text":" signal on "},{"type":"codeVoice","code":"tree_model"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/rowChanged(path:iter:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelprotocol\/rowchanged(path:iter:)"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/rowChangedSignal":{"role":"symbol","title":"rowChangedSignal","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"rowChangedSignal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeModelSignalName","preciseIdentifier":"s:3Gtk19TreeModelSignalNameO"}],"abstract":[{"type":"text","text":"Typed "},{"type":"codeVoice","code":"row-changed"},{"type":"text","text":" signal for using the "},{"type":"codeVoice","code":"connect(signal:)"},{"type":"text","text":" methods"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/rowChangedSignal","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treemodelprotocol\/rowchangedsignal"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/nColumns":{"role":"symbol","title":"nColumns","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"nColumns"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Returns the number of columns supported by "},{"type":"codeVoice","code":"tree_model"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/nColumns","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treemodelprotocol\/ncolumns"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/refNode(iter:)":{"role":"symbol","title":"refNode(iter:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"refNode"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreeIterT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"iter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeIterT"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Lets the tree ref the node."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/refNode(iter:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelprotocol\/refnode(iter:)"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/getIterFirst(iter:)":{"role":"symbol","title":"getIterFirst(iter:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getIterFirst"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreeIterT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"iter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeIterT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Initializes "},{"type":"codeVoice","code":"iter"},{"type":"text","text":" with the first iterator in the tree"},{"type":"text","text":" "},{"type":"text","text":"(the one at the path “0”)."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/getIterFirst(iter:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelprotocol\/getiterfirst(iter:)"},"doc://Gtk/documentation/Gtk/TreeStore":{"role":"symbol","title":"TreeStore","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeStore"}],"abstract":[{"type":"text","text":"A tree-like data structure that can be used with the [class"},{"type":"codeVoice","code":"Gtk.TreeView"},{"type":"text","text":"]."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeStore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeStore"}],"url":"\/documentation\/gtk\/treestore"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/rowDeleted(path:)":{"role":"symbol","title":"rowDeleted(path:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"rowDeleted"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreePathT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreePathT"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Emits the "},{"type":"codeVoice","code":"row-deleted"},{"type":"text","text":" signal on "},{"type":"codeVoice","code":"tree_model"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/rowDeleted(path:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelprotocol\/rowdeleted(path:)"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/getStringFrom(iter:)":{"role":"symbol","title":"getStringFrom(iter:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getStringFrom"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreeIterT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"iter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeIterT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Generates a string representation of the iter."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/getStringFrom(iter:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelprotocol\/getstringfrom(iter:)"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/getNColumns()":{"role":"symbol","title":"getNColumns()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getNColumns"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Returns the number of columns supported by "},{"type":"codeVoice","code":"tree_model"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/getNColumns()","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelprotocol\/getncolumns()"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/flags":{"role":"symbol","title":"flags","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"flags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeModelFlags","preciseIdentifier":"s:3Gtk14TreeModelFlagsV"}],"abstract":[{"type":"text","text":"Returns a set of flags supported by this interface."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/flags","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treemodelprotocol\/flags"},"doc://Gtk/documentation/Gtk/TreeModelFilter":{"role":"symbol","title":"TreeModelFilter","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeModelFilter"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GtkTreeModel"},{"type":"text","text":" which hides parts of an underlying tree model"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelFilter","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeModelFilter"}],"url":"\/documentation\/gtk\/treemodelfilter"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/tree_model_ptr-3z635":{"defaultImplementations":1,"role":"symbol","title":"tree_model_ptr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"tree_model_ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkTreeModel"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Typed pointer to the underlying "},{"type":"codeVoice","code":"GtkTreeModel"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/tree_model_ptr-3z635","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/gtk\/treemodelprotocol\/tree_model_ptr-3z635"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/iterNChildren(iter:)-6ktta":{"role":"symbol","title":"iterNChildren(iter:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"iterNChildren"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreeIterT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"iter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeIterT"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Returns the number of children that "},{"type":"codeVoice","code":"iter"},{"type":"text","text":" has."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/iterNChildren(iter:)-6ktta","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelprotocol\/iternchildren(iter:)-6ktta"},"doc://Gtk/documentation/Gtk/TreeModelSortRef":{"role":"symbol","title":"TreeModelSortRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeModelSortRef"}],"abstract":[{"type":"text","text":"A GtkTreeModel which makes an underlying tree model sortable"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeModelSortRef"}],"url":"\/documentation\/gtk\/treemodelsortref"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/rowsReorderedWithLength(path:iter:newOrder:length:)-4eqwa":{"role":"symbol","title":"rowsReorderedWithLength(path:iter:newOrder:length:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"rowsReorderedWithLength"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreePathT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreePathT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"iter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeIterRef","preciseIdentifier":"s:3Gtk11TreeIterRefV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"newOrder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CInt","preciseIdentifier":"s:s4CInta"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"length"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Emits the "},{"type":"codeVoice","code":"rows-reordered"},{"type":"text","text":" signal on "},{"type":"codeVoice","code":"tree_model"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/rowsReorderedWithLength(path:iter:newOrder:length:)-4eqwa","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelprotocol\/rowsreorderedwithlength(path:iter:neworder:length:)-4eqwa"},"doc://Gtk/documentation/Gtk/TreeModelSort":{"role":"symbol","title":"TreeModelSort","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeModelSort"}],"abstract":[{"type":"text","text":"A GtkTreeModel which makes an underlying tree model sortable"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSort","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeModelSort"}],"url":"\/documentation\/gtk\/treemodelsort"},"doc://Gtk/documentation/Gtk/ListStore":{"role":"symbol","title":"ListStore","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ListStore"}],"abstract":[{"type":"text","text":"A list-like data structure that can be used with the [class"},{"type":"codeVoice","code":"Gtk.TreeView"},{"type":"text","text":"]."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ListStore"}],"url":"\/documentation\/gtk\/liststore"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/getFlags()":{"role":"symbol","title":"getFlags()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getFlags"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"TreeModelFlags","preciseIdentifier":"s:3Gtk14TreeModelFlagsV"}],"abstract":[{"type":"text","text":"Returns a set of flags supported by this interface."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/getFlags()","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelprotocol\/getflags()"},"doc://Gtk/documentation/Gtk/TreeSortableProtocol":{"role":"symbol","title":"TreeSortableProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeSortableProtocol"}],"abstract":[{"type":"text","text":"The interface for sortable models used by GtkTreeView"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeSortableProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeSortableProtocol"}],"url":"\/documentation\/gtk\/treesortableprotocol"},"doc://Gtk/documentation/Gtk/TreeModelProtocol/connect(signal:flags:handler:)":{"role":"symbol","title":"connect(signal:flags:handler:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"signal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeModelSignalName","preciseIdentifier":"s:3Gtk19TreeModelSignalNameO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"flags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ConnectFlags","preciseIdentifier":"s:10GLibObject12ConnectFlagsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SignalHandler","preciseIdentifier":"s:10GLibObject13SignalHandlera"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Connect a Swift signal handler to the given, typed "},{"type":"codeVoice","code":"TreeModelSignalName"},{"type":"text","text":" signal"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol\/connect(signal:flags:handler:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treemodelprotocol\/connect(signal:flags:handler:)"}}}