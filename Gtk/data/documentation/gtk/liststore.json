{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ListStore"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GtkListStore"},{"type":"text","text":" object is a list model for use with a "},{"type":"codeVoice","code":"GtkTreeView"},{"type":"text","text":" "},{"type":"text","text":"widget.  It implements the "},{"type":"codeVoice","code":"GtkTreeModel"},{"type":"text","text":" interface, and consequentialy,"},{"type":"text","text":" "},{"type":"text","text":"can use all of the methods available there.  It also implements the"},{"type":"text","text":" "},{"type":"codeVoice","code":"GtkTreeSortable"},{"type":"text","text":" interface so it can be sorted by the view."},{"type":"text","text":" "},{"type":"text","text":"Finally, it also implements the tree"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"iface.TreeDragSource.html"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"iface.TreeDragDest.html"},{"type":"text","text":" "},{"type":"text","text":"interfaces."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GtkListStore"},{"type":"text","text":" can accept most "},{"type":"codeVoice","code":"GType"},{"type":"text","text":"s as a column type, though"},{"type":"text","text":" "},{"type":"text","text":"it can’t accept all custom types.  Internally, it will keep a copy of"},{"type":"text","text":" "},{"type":"text","text":"data passed in (such as a string or a boxed pointer).  Columns that"},{"type":"text","text":" "},{"type":"text","text":"accept "},{"type":"codeVoice","code":"GObject"},{"type":"text","text":"s are handled a little differently.  The"},{"type":"text","text":" "},{"type":"codeVoice","code":"GtkListStore"},{"type":"text","text":" will keep a reference to the object instead of copying the"},{"type":"text","text":" "},{"type":"text","text":"value.  As a result, if the object is modified, it is up to the"},{"type":"text","text":" "},{"type":"text","text":"application writer to call [method"},{"type":"codeVoice","code":"Gtk.TreeModel.row_changed"},{"type":"text","text":"] to emit the"},{"type":"text","text":" "},{"type":"text","text":"[signal"},{"type":"codeVoice","code":"Gtk.TreeModel::row_changed"},{"type":"text","text":"] signal. This most commonly affects lists"},{"type":"text","text":" "},{"type":"text","text":"with [class"},{"type":"codeVoice","code":"Gdk.Texture"},{"type":"text","text":"]s stored."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"An example for creating a simple list store:"}]},{"type":"codeListing","syntax":"c","code":["enum {","  COLUMN_STRING,","  COLUMN_INT,","  COLUMN_BOOLEAN,","  N_COLUMNS","};","","{","  GtkListStore *list_store;","  GtkTreePath *path;","  GtkTreeIter iter;","  int i;","","  list_store = gtk_list_store_new (N_COLUMNS,","                                   G_TYPE_STRING,","                                   G_TYPE_INT,","                                   G_TYPE_BOOLEAN);","","  for (i = 0; i &lt; 10; i++)","    {","      char *some_data;","","      some_data = get_some_data (i);","","      \/\/ Add a new row to the model","      gtk_list_store_append (list_store, &iter);","      gtk_list_store_set (list_store, &iter,","                          COLUMN_STRING, some_data,","                          COLUMN_INT, i,","                          COLUMN_BOOLEAN,  FALSE,","                          -1);","","      \/\/ As the store will keep a copy of the string internally,","      \/\/ we free some_data.","      g_free (some_data);","    }","","  \/\/ Modify a particular row","  path = gtk_tree_path_new_from_string (\"4\");","  gtk_tree_model_get_iter (GTK_TREE_MODEL (list_store),","                           &iter,","                           path);","  gtk_tree_path_free (path);","  gtk_list_store_set (list_store, &iter,","                      COLUMN_BOOLEAN, TRUE,","                      -1);","}"]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkListStore"},{"type":"text","text":" is deprecated since GTK 4.10, and should not be used in newly"},{"type":"text","text":" "},{"type":"text","text":"written code. You should use [class"},{"type":"codeVoice","code":"Gio.ListStore"},{"type":"text","text":"] instead, and the various"},{"type":"text","text":" "},{"type":"text","text":"list models provided by GTK."}]},{"anchor":"Performance-Considerations","level":2,"type":"heading","text":"Performance Considerations"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Internally, the "},{"type":"codeVoice","code":"GtkListStore"},{"type":"text","text":" was originally implemented with a linked list"},{"type":"text","text":" "},{"type":"text","text":"with a tail pointer.  As a result, it was fast at data insertion and deletion,"},{"type":"text","text":" "},{"type":"text","text":"and not fast at random data access.  The "},{"type":"codeVoice","code":"GtkListStore"},{"type":"text","text":" sets the"},{"type":"text","text":" "},{"type":"codeVoice","code":"GTK_TREE_MODEL_ITERS_PERSIST"},{"type":"text","text":" flag, which means that "},{"type":"codeVoice","code":"GtkTreeIter"},{"type":"text","text":"s can be"},{"type":"text","text":" "},{"type":"text","text":"cached while the row exists.  Thus, if access to a particular row is needed"},{"type":"text","text":" "},{"type":"text","text":"often and your code is expected to run on older versions of GTK, it is worth"},{"type":"text","text":" "},{"type":"text","text":"keeping the iter around."}]},{"anchor":"Atomic-Operations","level":2,"type":"heading","text":"Atomic Operations"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is important to note that only the methods"},{"type":"text","text":" "},{"type":"codeVoice","code":"gtk_list_store_insert_with_values()"},{"type":"text","text":" and "},{"type":"codeVoice","code":"gtk_list_store_insert_with_valuesv()"},{"type":"text","text":" "},{"type":"text","text":"are atomic, in the sense that the row is being appended to the store and the"},{"type":"text","text":" "},{"type":"text","text":"values filled in in a single operation with regard to "},{"type":"codeVoice","code":"GtkTreeModel"},{"type":"text","text":" signaling."},{"type":"text","text":" "},{"type":"text","text":"In contrast, using e.g. "},{"type":"codeVoice","code":"gtk_list_store_append()"},{"type":"text","text":" and then "},{"type":"codeVoice","code":"gtk_list_store_set()"},{"type":"text","text":" "},{"type":"text","text":"will first create a row, which triggers the "},{"type":"codeVoice","code":"GtkTreeModel"},{"type":"text","text":"row-inserted"},{"type":"codeVoice","code":" signal on `GtkListStore`. The row, however, is still empty, and any signal handler connecting to `GtkTreeModel`row-inserted"},{"type":"text","text":" on this particular store should be prepared"},{"type":"text","text":" "},{"type":"text","text":"for the situation that the row might be empty. This is especially important"},{"type":"text","text":" "},{"type":"text","text":"if you are wrapping the "},{"type":"codeVoice","code":"GtkListStore"},{"type":"text","text":" inside a "},{"type":"codeVoice","code":"GtkTreeModel"},{"type":"text","text":"Filter and are"},{"type":"text","text":" "},{"type":"text","text":"using a "},{"type":"codeVoice","code":"GtkTreeModel"},{"type":"text","text":"FilterVisibleFunc. Using any of the non-atomic operations"},{"type":"text","text":" "},{"type":"text","text":"to append rows to the "},{"type":"codeVoice","code":"GtkListStore"},{"type":"text","text":" will cause the"},{"type":"text","text":" "},{"type":"codeVoice","code":"GtkTreeModel"},{"type":"text","text":"FilterVisibleFunc to be visited with an empty row first; the"},{"type":"text","text":" "},{"type":"text","text":"function must be prepared for that."}]},{"anchor":"GtkListStore-as-GtkBuildable","level":2,"type":"heading","text":"GtkListStore as GtkBuildable"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The GtkListStore implementation of the [iface"},{"type":"codeVoice","code":"Gtk.Buildable"},{"type":"text","text":"] interface allows"},{"type":"text","text":" "},{"type":"text","text":"to specify the model columns with a "},{"type":"codeVoice","code":"&lt;columns&gt;"},{"type":"text","text":" element that may contain"},{"type":"text","text":" "},{"type":"text","text":"multiple "},{"type":"codeVoice","code":"&lt;column&gt;"},{"type":"text","text":" elements, each specifying one model column. The “type”"},{"type":"text","text":" "},{"type":"text","text":"attribute specifies the data type for the column."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Additionally, it is possible to specify content for the list store"},{"type":"text","text":" "},{"type":"text","text":"in the UI definition, with the "},{"type":"codeVoice","code":"&lt;data&gt;"},{"type":"text","text":" element. It can contain multiple"},{"type":"text","text":" "},{"type":"codeVoice","code":"&lt;row&gt;"},{"type":"text","text":" elements, each specifying to content for one row of the list model."},{"type":"text","text":" "},{"type":"text","text":"Inside a "},{"type":"codeVoice","code":"&lt;row&gt;"},{"type":"text","text":", the "},{"type":"codeVoice","code":"&lt;col&gt;"},{"type":"text","text":" elements specify the content for individual cells."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that it is probably more common to define your models in the code,"},{"type":"text","text":" "},{"type":"text","text":"and one might consider it a layering violation to specify the content of"},{"type":"text","text":" "},{"type":"text","text":"a list store in a UI definition, data, not presentation, and common wisdom"},{"type":"text","text":" "},{"type":"text","text":"is to separate the two, as far as possible."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"An example of a UI Definition fragment for a list store:"}]},{"type":"codeListing","syntax":"xml","code":["&lt;object class=\"GtkListStore\"&gt;","  &lt;columns&gt;","    &lt;column type=\"gchararray\"\/&gt;","    &lt;column type=\"gchararray\"\/&gt;","    &lt;column type=\"gint\"\/&gt;","  &lt;\/columns&gt;","  &lt;data&gt;","    &lt;row&gt;","      &lt;col id=\"0\"&gt;John&lt;\/col&gt;","      &lt;col id=\"1\"&gt;Doe&lt;\/col&gt;","      &lt;col id=\"2\"&gt;25&lt;\/col&gt;","    &lt;\/row&gt;","    &lt;row&gt;","      &lt;col id=\"0\"&gt;Johan&lt;\/col&gt;","      &lt;col id=\"1\"&gt;Dahlin&lt;\/col&gt;","      &lt;col id=\"2\"&gt;50&lt;\/col&gt;","    &lt;\/row&gt;","  &lt;\/data&gt;","&lt;\/object&gt;"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ListStore"},{"type":"text","text":" type acts as a reference-counted owner of an underlying "},{"type":"codeVoice","code":"GtkListStore"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It provides the methods that can operate on this data type through "},{"type":"codeVoice","code":"ListStoreProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"codeVoice","code":"ListStore"},{"type":"text","text":" as a strong reference or owner of a "},{"type":"codeVoice","code":"GtkListStore"},{"type":"text","text":" instance."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gtk\/liststore"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Gtk\/10GLibObject0B0C"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/BuildableProtocol","doc:\/\/Gtk\/4GLib14PointerWrapperP","doc:\/\/Gtk\/10GLibObject0B8ProtocolP","doc:\/\/Gtk\/documentation\/Gtk\/ListStoreProtocol","doc:\/\/Gtk\/documentation\/Gtk\/TreeDragDestProtocol","doc:\/\/Gtk\/documentation\/Gtk\/TreeDragSourceProtocol","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol","doc:\/\/Gtk\/documentation\/Gtk\/TreeSortableProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A list-like data structure that can be used with the [class"},{"type":"codeVoice","code":"Gtk.TreeView"},{"type":"text","text":"]."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ListStore"}],"title":"ListStore","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:3Gtk9ListStoreC","modules":[{"name":"Gtk"}],"navigatorTitle":[{"kind":"identifier","text":"ListStore"}]},"hierarchy":{"paths":[["doc:\/\/Gtk\/documentation\/Gtk"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(_:)-4aa77","doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(_:)-6orlm","doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(_:)-72t3u","doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(_:)-9sgql","doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(_:)-9tptj","doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(cPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(gconstpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(gpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(listStore:)","doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(nColumns:types:)","doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(opaquePointer:)","doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(raw:)-1b9ld","doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(raw:)-53wlw","doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(retaining:)","doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(retainingCPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(retainingOpaquePointer:)","doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(retainingRaw:)-1gqif","doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(retainingRaw:)-8vzif","doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(types:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/metatypeReferenceForListStore","doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/treeModel","doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/wrapperForListStore"]},{"title":"Instance Methods","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/append(asNextRow:startColumn:_:)","doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/append(asNextRow:values:startColumn:)","doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/set(iter:values:startColumn:)"]},{"title":"Type Properties","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/metatypeForListStore"]},{"title":"Type Methods","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/listStoreNewv(nColumns:types:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/BuildableProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/ListStoreProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/TreeDragDestProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/TreeDragSourceProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/TreeModelProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/TreeSortableProtocol-Implementations"],"generated":true}],"references":{"doc://Gtk/documentation/Gtk/ListStore/set(iter:values:startColumn:)":{"role":"symbol","title":"set(iter:values:startColumn:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"I"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"externalParam","text":"iter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":", "},{"kind":"externalParam","text":"values"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"startColumn"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Set the given values for the current row"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/set(iter:values:startColumn:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/liststore\/set(iter:values:startcolumn:)"},"doc://Gtk/documentation/Gtk/ListStore/init(raw:)-1b9ld":{"role":"symbol","title":"init(raw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"raw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"ListStoreProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(raw:)-1b9ld","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/liststore\/init(raw:)-1b9ld"},"doc://Gtk/documentation/Gtk/ListStore/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a non-mutating "},{"type":"codeVoice","code":"gpointer"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"ListStore"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/liststore\/init(gpointer:)"},"iface.TreeDragSource.html":{"title":"drag","titleInlineContent":[{"type":"text","text":"drag"}],"type":"link","identifier":"iface.TreeDragSource.html","url":"iface.TreeDragSource.html"},"doc://Gtk/documentation/Gtk/ListStore/TreeDragDestProtocol-Implementations":{"role":"collectionGroup","title":"TreeDragDestProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/TreeDragDestProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/liststore\/treedragdestprotocol-implementations"},"doc://Gtk/documentation/Gtk/ListStore/init(listStore:)":{"role":"symbol","title":"init(listStore:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"listStore"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"codeVoice","code":"ListStoreProtocol"},{"type":"text","text":" "},{"type":"text","text":"Will retain "},{"type":"codeVoice","code":"GtkListStore"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(listStore:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/liststore\/init(liststore:)"},"doc://Gtk/documentation/Gtk/ListStore/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"ListStoreProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/liststore\/init(cpointer:)"},"doc://Gtk/documentation/Gtk/ListStore/ListStoreProtocol-Implementations":{"role":"collectionGroup","title":"ListStoreProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/ListStoreProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/liststore\/liststoreprotocol-implementations"},"doc://Gtk/documentation/Gtk/BuildableProtocol":{"role":"symbol","title":"BuildableProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BuildableProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkBuildable"},{"type":"text","text":" allows objects to extend and customize their deserialization"},{"type":"text","text":" "},{"type":"text","text":"from ui files."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuildableProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BuildableProtocol"}],"url":"\/documentation\/gtk\/buildableprotocol"},"iface.TreeDragDest.html":{"title":"drop","titleInlineContent":[{"type":"text","text":"drop"}],"type":"link","identifier":"iface.TreeDragDest.html","url":"iface.TreeDragDest.html"},"doc://Gtk/documentation/Gtk/ListStore/metatypeReferenceForListStore":{"role":"symbol","title":"metatypeReferenceForListStore","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"metatypeReferenceForListStore"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GType","preciseIdentifier":"c:@T@GType"}],"abstract":[{"type":"text","text":"This getter returns the GLib type identifier registered for "},{"type":"codeVoice","code":"ListStore"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/metatypeReferenceForListStore","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/liststore\/metatypereferenceforliststore"},"doc://Gtk/documentation/Gtk/ListStore/init(nColumns:types:)":{"role":"symbol","title":"init(nColumns:types:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"nColumns"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"types"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GType","preciseIdentifier":"c:@T@GType"},{"kind":"text","text":">!)"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"GtkListStore"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(nColumns:types:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/liststore\/init(ncolumns:types:)"},"doc://Gtk/documentation/Gtk/TreeSortableProtocol":{"role":"symbol","title":"TreeSortableProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeSortableProtocol"}],"abstract":[{"type":"text","text":"The interface for sortable models used by GtkTreeView"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeSortableProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeSortableProtocol"}],"url":"\/documentation\/gtk\/treesortableprotocol"},"doc://Gtk/documentation/Gtk/ListStore/init(retainingOpaquePointer:)":{"role":"symbol","title":"init(retainingOpaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingOpaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"ListStoreProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(retainingOpaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/liststore\/init(retainingopaquepointer:)"},"doc://Gtk/documentation/Gtk/ListStore/BuildableProtocol-Implementations":{"role":"collectionGroup","title":"BuildableProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/BuildableProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/liststore\/buildableprotocol-implementations"},"doc://Gtk/documentation/Gtk/ListStore/metatypeForListStore":{"role":"symbol","title":"metatypeForListStore","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"metatypeForListStore"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GtkListStoreClass"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Return a "},{"type":"codeVoice","code":"GtkListStoreClass"},{"type":"text","text":" reference to the underlying class instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/metatypeForListStore","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/liststore\/metatypeforliststore"},"doc://Gtk/documentation/Gtk/ListStore/init(retainingCPointer:)":{"role":"symbol","title":"init(retainingCPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"retainingCPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"ListStoreProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(retainingCPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/liststore\/init(retainingcpointer:)"},"doc://Gtk/documentation/Gtk/TreeDragSourceProtocol":{"role":"symbol","title":"TreeDragSourceProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeDragSourceProtocol"}],"abstract":[{"type":"text","text":"Interface for Drag-and-Drop destinations in "},{"type":"codeVoice","code":"GtkTreeView"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeDragSourceProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeDragSourceProtocol"}],"url":"\/documentation\/gtk\/treedragsourceprotocol"},"doc://Gtk/documentation/Gtk/ListStore/TreeSortableProtocol-Implementations":{"role":"collectionGroup","title":"TreeSortableProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/TreeSortableProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/liststore\/treesortableprotocol-implementations"},"doc://Gtk/documentation/Gtk/ListStore/append(asNextRow:startColumn:_:)":{"role":"symbol","title":"append(asNextRow:startColumn:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"append"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"I"},{"kind":"text","text":">("},{"kind":"externalParam","text":"asNextRow"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":", "},{"kind":"externalParam","text":"startColumn"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:10GLibObject5ValueC"},{"kind":"text","text":"...)"}],"abstract":[{"type":"text","text":"Append the given values to the next row"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/append(asNextRow:startColumn:_:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/liststore\/append(asnextrow:startcolumn:_:)"},"doc://Gtk/documentation/Gtk/ListStore":{"role":"symbol","title":"ListStore","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ListStore"}],"abstract":[{"type":"text","text":"A list-like data structure that can be used with the [class"},{"type":"codeVoice","code":"Gtk.TreeView"},{"type":"text","text":"]."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ListStore"}],"url":"\/documentation\/gtk\/liststore"},"doc://Gtk/documentation/Gtk/ListStore/init(retaining:)":{"role":"symbol","title":"init(retaining:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retaining"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkListStore"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"Will retain "},{"type":"codeVoice","code":"GtkListStore"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"ListStore"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(retaining:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/liststore\/init(retaining:)"},"doc://Gtk/documentation/Gtk/ListStore/init(_:)-9tptj":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkListStore"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Optional initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"ListStore"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(_:)-9tptj","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/liststore\/init(_:)-9tptj"},"doc://Gtk/documentation/Gtk/ListStore/init(_:)-72t3u":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkListStore"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"ListStore"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(_:)-72t3u","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/liststore\/init(_:)-72t3u"},"doc://Gtk/documentation/Gtk/ListStore/init(types:)":{"role":"symbol","title":"init(types:)","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"types"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"GType","preciseIdentifier":"c:@T@GType"},{"kind":"text","text":"])"}],"abstract":[{"type":"text","text":"Convenience constructor specifying the column types"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(types:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/liststore\/init(types:)"},"doc://Gtk/documentation/Gtk/ListStore/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:gtypes.h@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a non-mutating "},{"type":"codeVoice","code":"gconstpointer"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"ListStore"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/liststore\/init(gconstpointer:)"},"doc://Gtk/documentation/Gtk/ListStore/init(retainingRaw:)-1gqif":{"role":"symbol","title":"init(retainingRaw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingRaw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"ListStoreProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(retainingRaw:)-1gqif","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/liststore\/init(retainingraw:)-1gqif"},"doc://Gtk/documentation/Gtk/ListStore/treeModel":{"role":"symbol","title":"treeModel","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"treeModel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeModelRef","preciseIdentifier":"s:3Gtk12TreeModelRefV"}],"abstract":[{"type":"text","text":"Return a tree model reference for the list store"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/treeModel","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/liststore\/treemodel"},"doc://Gtk/documentation/Gtk/TreeModelProtocol":{"role":"symbol","title":"TreeModelProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeModelProtocol"}],"abstract":[{"type":"text","text":"The tree interface used by GtkTreeView"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeModelProtocol"}],"url":"\/documentation\/gtk\/treemodelprotocol"},"doc://Gtk/documentation/Gtk/ListStore/TreeModelProtocol-Implementations":{"role":"collectionGroup","title":"TreeModelProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/TreeModelProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/liststore\/treemodelprotocol-implementations"},"doc://Gtk/documentation/Gtk":{"role":"collection","title":"Gtk","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk","kind":"symbol","type":"topic","url":"\/documentation\/gtk"},"doc://Gtk/10GLibObject0B0C":{"type":"unresolvable","title":"GLibObject.Object","identifier":"doc:\/\/Gtk\/10GLibObject0B0C"},"doc://Gtk/documentation/Gtk/ListStore/init(retainingRaw:)-8vzif":{"role":"symbol","title":"init(retainingRaw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingRaw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"ListStoreProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(retainingRaw:)-8vzif","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/liststore\/init(retainingraw:)-8vzif"},"doc://Gtk/documentation/Gtk/ListStore/append(asNextRow:values:startColumn:)":{"role":"symbol","title":"append(asNextRow:values:startColumn:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"append"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"I"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"externalParam","text":"asNextRow"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":", "},{"kind":"externalParam","text":"values"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"startColumn"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Append the given values to the next row"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/append(asNextRow:values:startColumn:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/liststore\/append(asnextrow:values:startcolumn:)"},"doc://Gtk/documentation/Gtk/ListStore/init(_:)-6orlm":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkListStore"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"ListStore"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(_:)-6orlm","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/liststore\/init(_:)-6orlm"},"doc://Gtk/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/Gtk\/4GLib14PointerWrapperP"},"doc://Gtk/documentation/Gtk/ListStore/listStoreNewv(nColumns:types:)":{"role":"symbol","title":"listStoreNewv(nColumns:types:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"listStoreNewv"},{"kind":"text","text":"("},{"kind":"externalParam","text":"nColumns"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"types"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GType","preciseIdentifier":"c:@T@GType"},{"kind":"text","text":">!) -> "},{"kind":"typeIdentifier","text":"ListStore","preciseIdentifier":"s:3Gtk9ListStoreC"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"GtkListStore"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/listStoreNewv(nColumns:types:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/liststore\/liststorenewv(ncolumns:types:)"},"doc://Gtk/documentation/Gtk/ListStore/wrapperForListStore":{"role":"symbol","title":"wrapperForListStore","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrapperForListStore"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ListStoreClassRef","preciseIdentifier":"s:3Gtk17ListStoreClassRefV"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Return the "},{"type":"codeVoice","code":"ListStoreClass"},{"type":"text","text":" wrapper referencing the metatype of the receiver."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/wrapperForListStore","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/liststore\/wrapperforliststore"},"doc://Gtk/documentation/Gtk/ListStore/init(_:)-9sgql":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkListStore"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"ListStore"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(_:)-9sgql","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/liststore\/init(_:)-9sgql"},"doc://Gtk/documentation/Gtk/ListStore/init(_:)-4aa77":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"GType","preciseIdentifier":"c:@T@GType"},{"kind":"text","text":"...)"}],"abstract":[{"type":"text","text":"Convenience constructor specifying the list column types"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(_:)-4aa77","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/liststore\/init(_:)-4aa77"},"doc://Gtk/documentation/Gtk/ListStore/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"ListStoreProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/liststore\/init(opaquepointer:)"},"doc://Gtk/10GLibObject0B8ProtocolP":{"type":"unresolvable","title":"GLibObject.ObjectProtocol","identifier":"doc:\/\/Gtk\/10GLibObject0B8ProtocolP"},"doc://Gtk/documentation/Gtk/ListStore/init(raw:)-53wlw":{"role":"symbol","title":"init(raw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"raw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"ListStoreProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/init(raw:)-53wlw","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/liststore\/init(raw:)-53wlw"},"doc://Gtk/documentation/Gtk/TreeDragDestProtocol":{"role":"symbol","title":"TreeDragDestProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeDragDestProtocol"}],"abstract":[{"type":"text","text":"Interface for Drag-and-Drop destinations in "},{"type":"codeVoice","code":"GtkTreeView"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeDragDestProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeDragDestProtocol"}],"url":"\/documentation\/gtk\/treedragdestprotocol"},"doc://Gtk/documentation/Gtk/ListStoreProtocol":{"role":"symbol","title":"ListStoreProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ListStoreProtocol"}],"abstract":[{"type":"text","text":"A list-like data structure that can be used with the [class"},{"type":"codeVoice","code":"Gtk.TreeView"},{"type":"text","text":"]."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStoreProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ListStoreProtocol"}],"url":"\/documentation\/gtk\/liststoreprotocol"},"doc://Gtk/documentation/Gtk/ListStore/TreeDragSourceProtocol-Implementations":{"role":"collectionGroup","title":"TreeDragSourceProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListStore\/TreeDragSourceProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/liststore\/treedragsourceprotocol-implementations"}}}