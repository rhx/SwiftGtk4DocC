{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeExpander"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is typically placed as a bottommost child into a "},{"type":"codeVoice","code":"GtkListView"},{"type":"text","text":" "},{"type":"text","text":"to allow users to expand and collapse children in a list with a"},{"type":"text","text":" "},{"type":"text","text":"[class"},{"type":"codeVoice","code":"Gtk.TreeListModel"},{"type":"text","text":"]. "},{"type":"codeVoice","code":"GtkTreeExpander"},{"type":"text","text":" provides the common UI"},{"type":"text","text":" "},{"type":"text","text":"elements, gestures and keybindings for this purpose."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"On top of this, the “listitem.expand”, “listitem.collapse” and"},{"type":"text","text":" "},{"type":"text","text":"“listitem.toggle-expand” actions are provided to allow adding custom"},{"type":"text","text":" "},{"type":"text","text":"UI for managing expanded state."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is important to mention that you want to set the"},{"type":"text","text":" "},{"type":"text","text":"[property"},{"type":"codeVoice","code":"Gtk.ListItem:focusable"},{"type":"text","text":"] property to FALSE when using this"},{"type":"text","text":" "},{"type":"text","text":"widget, as you want the keyboard focus to be in the treexpander, and not"},{"type":"text","text":" "},{"type":"text","text":"inside the list to make use of the keybindings."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GtkTreeListModel"},{"type":"text","text":" must be set to not be passthrough. Then it"},{"type":"text","text":" "},{"type":"text","text":"will provide [class"},{"type":"codeVoice","code":"Gtk.TreeListRow"},{"type":"text","text":"] items which can be set via"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"Gtk.TreeExpander.set_list_row"},{"type":"text","text":"] on the expander."},{"type":"text","text":" "},{"type":"text","text":"The expander will then watch that row item automatically."},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"Gtk.TreeExpander.set_child"},{"type":"text","text":"] sets the widget that displays"},{"type":"text","text":" "},{"type":"text","text":"the actual row contents."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkTreeExpander"},{"type":"text","text":" can be modified with properties such as"},{"type":"text","text":" "},{"type":"text","text":"[property"},{"type":"codeVoice","code":"Gtk.TreeExpander:indent-for-icon"},{"type":"text","text":"],"},{"type":"text","text":" "},{"type":"text","text":"[property"},{"type":"codeVoice","code":"Gtk.TreeExpander:indent-for-depth"},{"type":"text","text":"], and"},{"type":"text","text":" "},{"type":"text","text":"[property"},{"type":"codeVoice","code":"Gtk.TreeExpander:hide-expander"},{"type":"text","text":"] to achieve a different appearance."},{"type":"text","text":" "},{"type":"text","text":"This can even be done to influence individual rows, for example by binding"},{"type":"text","text":" "},{"type":"text","text":"the [property"},{"type":"codeVoice","code":"Gtk.TreeExpander:hide-expander"},{"type":"text","text":"] property to the item count of"},{"type":"text","text":" "},{"type":"text","text":"the model of the treelistrow, to hide the expander for rows without children,"},{"type":"text","text":" "},{"type":"text","text":"even if the row is expandable."}]},{"anchor":"CSS-nodes","level":2,"type":"heading","text":"CSS nodes"},{"type":"codeListing","syntax":null,"code":["treeexpander","├── [indent]*","├── [expander]","╰── &lt;child&gt;"]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkTreeExpander"},{"type":"text","text":" has zero or one CSS nodes with the name “expander” that"},{"type":"text","text":" "},{"type":"text","text":"should display the expander icon. The node will be "},{"type":"codeVoice","code":":checked"},{"type":"text","text":" when it"},{"type":"text","text":" "},{"type":"text","text":"is expanded. If the node is not expandable, an “indent” node will be"},{"type":"text","text":" "},{"type":"text","text":"displayed instead."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For every level of depth, another “indent” node is prepended."}]},{"anchor":"Accessibility","level":2,"type":"heading","text":"Accessibility"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Until GTK 4.10, "},{"type":"codeVoice","code":"GtkTreeExpander"},{"type":"text","text":" used the "},{"type":"codeVoice","code":"GTK_ACCESSIBLE_ROLE_GROUP"},{"type":"text","text":" role."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Since GTK 4.12, "},{"type":"codeVoice","code":"GtkTreeExpander"},{"type":"text","text":" uses the "},{"type":"codeVoice","code":"GTK_ACCESSIBLE_ROLE_BUTTON"},{"type":"text","text":" role."},{"type":"text","text":" "},{"type":"text","text":"Toggling it will change the "},{"type":"codeVoice","code":"GTK_ACCESSIBLE_STATE_EXPANDED"},{"type":"text","text":" state."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"TreeExpander"},{"type":"text","text":" type acts as a reference-counted owner of an underlying "},{"type":"codeVoice","code":"GtkTreeExpander"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It provides the methods that can operate on this data type through "},{"type":"codeVoice","code":"TreeExpanderProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"codeVoice","code":"TreeExpander"},{"type":"text","text":" as a strong reference or owner of a "},{"type":"codeVoice","code":"GtkTreeExpander"},{"type":"text","text":" instance."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gtk\/treeexpander"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/Widget"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/AccessibleProtocol","doc:\/\/Gtk\/documentation\/Gtk\/BuildableProtocol","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintTargetProtocol","doc:\/\/Gtk\/4GLib14PointerWrapperP","doc:\/\/Gtk\/10GLibObject24InitiallyUnownedProtocolP","doc:\/\/Gtk\/10GLibObject0B8ProtocolP","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderProtocol","doc:\/\/Gtk\/documentation\/Gtk\/WidgetProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander","interfaceLanguage":"swift"},"abstract":[{"type":"codeVoice","code":"GtkTreeExpander"},{"type":"text","text":" is a widget that provides an expander for a list."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeExpander"}],"title":"TreeExpander","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:3Gtk12TreeExpanderC","modules":[{"name":"Gtk"}],"navigatorTitle":[{"kind":"identifier","text":"TreeExpander"}]},"hierarchy":{"paths":[["doc:\/\/Gtk\/documentation\/Gtk"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init()","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(_:)-16v5s","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(_:)-2cwj6","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(_:)-2lm96","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(_:)-4adv4","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(cPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(gconstpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(gpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(opaquePointer:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(raw:)-2p0uz","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(raw:)-8tri9","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(retaining:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(retainingCPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(retainingOpaquePointer:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(retainingRaw:)-18y59","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(retainingRaw:)-7dowj","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(treeExpander:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/metatypeReferenceForTreeExpander","doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/wrapperForTreeExpander"]},{"title":"Type Properties","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/metatypeForTreeExpander"]},{"title":"Default Implementations","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/TreeExpanderProtocol-Implementations"],"generated":true}],"references":{"doc://Gtk/documentation/Gtk/TreeExpander/metatypeForTreeExpander":{"role":"symbol","title":"metatypeForTreeExpander","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"metatypeForTreeExpander"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GtkTreeExpanderClass","preciseIdentifier":"c:@SA@GtkTreeExpanderClass"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Return a "},{"type":"codeVoice","code":"GtkTreeExpanderClass"},{"type":"text","text":" reference to the underlying class instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/metatypeForTreeExpander","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpander\/metatypefortreeexpander"},"doc://Gtk/documentation/Gtk":{"role":"collection","title":"Gtk","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk","kind":"symbol","type":"topic","url":"\/documentation\/gtk"},"doc://Gtk/documentation/Gtk/TreeExpander/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:gtypes.h@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a non-mutating "},{"type":"codeVoice","code":"gconstpointer"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"TreeExpander"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpander\/init(gconstpointer:)"},"doc://Gtk/documentation/Gtk/TreeExpander/init(_:)-16v5s":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkTreeExpander"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"TreeExpander"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(_:)-16v5s","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpander\/init(_:)-16v5s"},"doc://Gtk/documentation/Gtk/TreeExpander/init(retainingCPointer:)":{"role":"symbol","title":"init(retainingCPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"retainingCPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"TreeExpanderProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(retainingCPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpander\/init(retainingcpointer:)"},"doc://Gtk/documentation/Gtk/WidgetProtocol":{"role":"symbol","title":"WidgetProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"WidgetProtocol"}],"abstract":[{"type":"text","text":"The base class for all widgets."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WidgetProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WidgetProtocol"}],"url":"\/documentation\/gtk\/widgetprotocol"},"doc://Gtk/documentation/Gtk/AccessibleProtocol":{"role":"symbol","title":"AccessibleProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AccessibleProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkAccessible"},{"type":"text","text":" is an interface for describing UI elements for"},{"type":"text","text":" "},{"type":"text","text":"Assistive Technologies."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/AccessibleProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AccessibleProtocol"}],"url":"\/documentation\/gtk\/accessibleprotocol"},"doc://Gtk/documentation/Gtk/TreeExpander/init(_:)-2cwj6":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkTreeExpander"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Optional initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"TreeExpander"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(_:)-2cwj6","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpander\/init(_:)-2cwj6"},"doc://Gtk/documentation/Gtk/TreeExpander/init(_:)-2lm96":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkTreeExpander"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"TreeExpander"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(_:)-2lm96","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpander\/init(_:)-2lm96"},"doc://Gtk/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/Gtk\/4GLib14PointerWrapperP"},"doc://Gtk/documentation/Gtk/TreeExpanderProtocol":{"role":"symbol","title":"TreeExpanderProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeExpanderProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkTreeExpander"},{"type":"text","text":" is a widget that provides an expander for a list."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpanderProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeExpanderProtocol"}],"url":"\/documentation\/gtk\/treeexpanderprotocol"},"doc://Gtk/documentation/Gtk/TreeExpander/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a non-mutating "},{"type":"codeVoice","code":"gpointer"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"TreeExpander"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpander\/init(gpointer:)"},"doc://Gtk/documentation/Gtk/TreeExpander":{"role":"symbol","title":"TreeExpander","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeExpander"}],"abstract":[{"type":"codeVoice","code":"GtkTreeExpander"},{"type":"text","text":" is a widget that provides an expander for a list."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeExpander"}],"url":"\/documentation\/gtk\/treeexpander"},"doc://Gtk/documentation/Gtk/TreeExpander/init(raw:)-8tri9":{"role":"symbol","title":"init(raw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"raw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"TreeExpanderProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(raw:)-8tri9","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpander\/init(raw:)-8tri9"},"doc://Gtk/documentation/Gtk/ConstraintTargetProtocol":{"role":"symbol","title":"ConstraintTargetProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConstraintTargetProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GtkConstraintTarget"},{"type":"text","text":" interface is implemented by objects that"},{"type":"text","text":" "},{"type":"text","text":"can be used as source or target in "},{"type":"codeVoice","code":"GtkConstraint"},{"type":"text","text":"s."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintTargetProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ConstraintTargetProtocol"}],"url":"\/documentation\/gtk\/constrainttargetprotocol"},"doc://Gtk/documentation/Gtk/TreeExpander/init(retainingOpaquePointer:)":{"role":"symbol","title":"init(retainingOpaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingOpaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"TreeExpanderProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(retainingOpaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpander\/init(retainingopaquepointer:)"},"doc://Gtk/documentation/Gtk/Widget":{"role":"symbol","title":"Widget","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Widget"}],"abstract":[{"type":"text","text":"The base class for all widgets."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/Widget","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Widget"}],"url":"\/documentation\/gtk\/widget"},"doc://Gtk/documentation/Gtk/TreeExpander/init(_:)-4adv4":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkTreeExpander"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"TreeExpander"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(_:)-4adv4","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpander\/init(_:)-4adv4"},"doc://Gtk/documentation/Gtk/TreeExpander/wrapperForTreeExpander":{"role":"symbol","title":"wrapperForTreeExpander","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrapperForTreeExpander"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeExpanderClassRef","preciseIdentifier":"s:3Gtk20TreeExpanderClassRefV"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Return the "},{"type":"codeVoice","code":"TreeExpanderClass"},{"type":"text","text":" wrapper referencing the metatype of the receiver."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/wrapperForTreeExpander","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpander\/wrapperfortreeexpander"},"doc://Gtk/documentation/Gtk/TreeExpander/TreeExpanderProtocol-Implementations":{"role":"collectionGroup","title":"TreeExpanderProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/TreeExpanderProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/treeexpander\/treeexpanderprotocol-implementations"},"doc://Gtk/10GLibObject24InitiallyUnownedProtocolP":{"type":"unresolvable","title":"GLibObject.InitiallyUnownedProtocol","identifier":"doc:\/\/Gtk\/10GLibObject24InitiallyUnownedProtocolP"},"doc://Gtk/documentation/Gtk/TreeExpander/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"TreeExpanderProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpander\/init(cpointer:)"},"doc://Gtk/documentation/Gtk/TreeExpander/init(retainingRaw:)-7dowj":{"role":"symbol","title":"init(retainingRaw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingRaw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"TreeExpanderProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(retainingRaw:)-7dowj","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpander\/init(retainingraw:)-7dowj"},"doc://Gtk/10GLibObject0B8ProtocolP":{"type":"unresolvable","title":"GLibObject.ObjectProtocol","identifier":"doc:\/\/Gtk\/10GLibObject0B8ProtocolP"},"doc://Gtk/documentation/Gtk/TreeExpander/init(retainingRaw:)-18y59":{"role":"symbol","title":"init(retainingRaw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingRaw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"TreeExpanderProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(retainingRaw:)-18y59","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpander\/init(retainingraw:)-18y59"},"doc://Gtk/documentation/Gtk/TreeExpander/init(retaining:)":{"role":"symbol","title":"init(retaining:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retaining"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkTreeExpander"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"Will retain "},{"type":"codeVoice","code":"GtkTreeExpander"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"TreeExpander"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(retaining:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpander\/init(retaining:)"},"doc://Gtk/documentation/Gtk/TreeExpander/init(raw:)-2p0uz":{"role":"symbol","title":"init(raw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"raw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"TreeExpanderProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(raw:)-2p0uz","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpander\/init(raw:)-2p0uz"},"doc://Gtk/documentation/Gtk/TreeExpander/metatypeReferenceForTreeExpander":{"role":"symbol","title":"metatypeReferenceForTreeExpander","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"metatypeReferenceForTreeExpander"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GType","preciseIdentifier":"c:@T@GType"}],"abstract":[{"type":"text","text":"This getter returns the GLib type identifier registered for "},{"type":"codeVoice","code":"TreeExpander"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/metatypeReferenceForTreeExpander","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpander\/metatypereferencefortreeexpander"},"doc://Gtk/documentation/Gtk/BuildableProtocol":{"role":"symbol","title":"BuildableProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BuildableProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkBuildable"},{"type":"text","text":" allows objects to extend and customize their deserialization"},{"type":"text","text":" "},{"type":"text","text":"from ui files."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuildableProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BuildableProtocol"}],"url":"\/documentation\/gtk\/buildableprotocol"},"doc://Gtk/documentation/Gtk/TreeExpander/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"TreeExpanderProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpander\/init(opaquepointer:)"},"doc://Gtk/documentation/Gtk/TreeExpander/init(treeExpander:)":{"role":"symbol","title":"init(treeExpander:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"treeExpander"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"codeVoice","code":"TreeExpanderProtocol"},{"type":"text","text":" "},{"type":"text","text":"Will retain "},{"type":"codeVoice","code":"GtkTreeExpander"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init(treeExpander:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpander\/init(treeexpander:)"},"doc://Gtk/documentation/Gtk/TreeExpander/init()":{"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"GtkTreeExpander"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeExpander\/init()","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treeexpander\/init()"}}}