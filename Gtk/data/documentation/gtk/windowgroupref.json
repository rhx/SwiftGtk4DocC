{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WindowGroupRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It achieves this by limiting the effect of GTK grabs and modality"},{"type":"text","text":" "},{"type":"text","text":"to windows in the same group."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A window can be a member in at most one window group at a time."},{"type":"text","text":" "},{"type":"text","text":"Windows that have not been explicitly assigned to a group are"},{"type":"text","text":" "},{"type":"text","text":"implicitly treated like windows of the default window group."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkWindowGroup"},{"type":"text","text":" objects are referenced by each window in the group,"},{"type":"text","text":" "},{"type":"text","text":"so once you have added all windows to a "},{"type":"codeVoice","code":"GtkWindowGroup"},{"type":"text","text":", you can drop"},{"type":"text","text":" "},{"type":"text","text":"the initial reference to the window group with "},{"type":"codeVoice","code":"g_object_unref()"},{"type":"text","text":". If the"},{"type":"text","text":" "},{"type":"text","text":"windows in the window group are subsequently destroyed, then they will"},{"type":"text","text":" "},{"type":"text","text":"be removed from the window group and drop their references on the window"},{"type":"text","text":" "},{"type":"text","text":"group; when all window have been removed, the window group will be"},{"type":"text","text":" "},{"type":"text","text":"freed."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"WindowGroupRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GtkWindowGroup"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"codeVoice","code":"WindowGroupProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"codeVoice","code":"WindowGroupRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"GtkWindowGroup"},{"type":"text","text":" instance."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gtk\/windowgroupref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Gtk\/4GLib14PointerWrapperP","doc:\/\/Gtk\/10GLibObject14GWeakCapturingP","doc:\/\/Gtk\/10GLibObject0B8ProtocolP","doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef","interfaceLanguage":"swift"},"abstract":[{"type":"codeVoice","code":"GtkWindowGroup"},{"type":"text","text":" makes group of windows behave like separate applications."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WindowGroupRef"}],"title":"WindowGroupRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:3Gtk14WindowGroupRefV","modules":[{"name":"Gtk"}],"navigatorTitle":[{"kind":"identifier","text":"WindowGroupRef"}]},"hierarchy":{"paths":[["doc:\/\/Gtk\/documentation\/Gtk"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/init()","doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/init(_:)-4h4z0","doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/init(_:)-5wgr7","doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/init(_:)-7yrto","doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/init(_:)-8sa6n","doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/init(_:)-9fo95","doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/init(cPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/init(constPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/init(gconstpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/init(gpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/init(mutating:)","doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/init(opaquePointer:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/ptr"]},{"title":"Type Methods","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/unowned(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/GWeakCapturing-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/ObjectProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/WindowGroupProtocol-Implementations"],"generated":true}],"references":{"doc://Gtk/documentation/Gtk/WindowGroupRef/GWeakCapturing-Implementations":{"role":"collectionGroup","title":"GWeakCapturing Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/GWeakCapturing-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/windowgroupref\/gweakcapturing-implementations"},"doc://Gtk/documentation/Gtk":{"role":"collection","title":"Gtk","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk","kind":"symbol","type":"topic","url":"\/documentation\/gtk"},"doc://Gtk/documentation/Gtk/WindowGroupProtocol":{"role":"symbol","title":"WindowGroupProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"WindowGroupProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkWindowGroup"},{"type":"text","text":" makes group of windows behave like separate applications."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WindowGroupProtocol"}],"url":"\/documentation\/gtk\/windowgroupprotocol"},"doc://Gtk/documentation/Gtk/WindowGroupRef/ObjectProtocol-Implementations":{"role":"collectionGroup","title":"ObjectProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/ObjectProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/windowgroupref\/objectprotocol-implementations"},"doc://Gtk/documentation/Gtk/WindowGroupRef/init(_:)-7yrto":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkWindowGroup"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/init(_:)-7yrto","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/windowgroupref\/init(_:)-7yrto"},"doc://Gtk/documentation/Gtk/WindowGroupRef":{"role":"symbol","title":"WindowGroupRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WindowGroupRef"}],"abstract":[{"type":"codeVoice","code":"GtkWindowGroup"},{"type":"text","text":" makes group of windows behave like separate applications."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WindowGroupRef"}],"url":"\/documentation\/gtk\/windowgroupref"},"doc://Gtk/documentation/Gtk/WindowGroupRef/init(_:)-9fo95":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkWindowGroup"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/init(_:)-9fo95","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/windowgroupref\/init(_:)-9fo95"},"doc://Gtk/documentation/Gtk/WindowGroupRef/WindowGroupProtocol-Implementations":{"role":"collectionGroup","title":"WindowGroupProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/WindowGroupProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/windowgroupref\/windowgroupprotocol-implementations"},"doc://Gtk/documentation/Gtk/WindowGroupRef/init(_:)-5wgr7":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkWindowGroup"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/init(_:)-5wgr7","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/windowgroupref\/init(_:)-5wgr7"},"doc://Gtk/documentation/Gtk/WindowGroupRef/unowned(_:)":{"role":"symbol","title":"unowned(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unowned"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"WindowGroupRef","preciseIdentifier":"s:3Gtk14WindowGroupRefV"}],"abstract":[{"type":"text","text":"This factory is syntactic sugar for setting weak pointers wrapped in "},{"type":"codeVoice","code":"GWeak<T>"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/unowned(_:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/windowgroupref\/unowned(_:)"},"doc://Gtk/documentation/Gtk/WindowGroupRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GtkWindowGroup"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"codeVoice","code":"window_group_ptr"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/windowgroupref\/ptr"},"doc://Gtk/10GLibObject0B8ProtocolP":{"type":"unresolvable","title":"GLibObject.ObjectProtocol","identifier":"doc:\/\/Gtk\/10GLibObject0B8ProtocolP"},"doc://Gtk/documentation/Gtk/WindowGroupRef/init(_:)-8sa6n":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkWindowGroup"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/init(_:)-8sa6n","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/windowgroupref\/init(_:)-8sa6n"},"doc://Gtk/documentation/Gtk/WindowGroupRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:gtypes.h@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/windowgroupref\/init(gconstpointer:)"},"doc://Gtk/documentation/Gtk/WindowGroupRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"WindowGroupProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/windowgroupref\/init(mutating:)"},"doc://Gtk/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/Gtk\/4GLib14PointerWrapperP"},"doc://Gtk/10GLibObject14GWeakCapturingP":{"type":"unresolvable","title":"GLibObject.GWeakCapturing","identifier":"doc:\/\/Gtk\/10GLibObject14GWeakCapturingP"},"doc://Gtk/documentation/Gtk/WindowGroupRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"WindowGroupProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/windowgroupref\/init(constpointer:)"},"doc://Gtk/documentation/Gtk/WindowGroupRef/init(_:)-4h4z0":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"codeVoice","code":"WindowGroupProtocol"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/init(_:)-4h4z0","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/windowgroupref\/init(_:)-4h4z0"},"doc://Gtk/documentation/Gtk/WindowGroupRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"WindowGroupProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/windowgroupref\/init(opaquepointer:)"},"doc://Gtk/documentation/Gtk/WindowGroupRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"WindowGroupProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/windowgroupref\/init(cpointer:)"},"doc://Gtk/documentation/Gtk/WindowGroupRef/init()":{"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"GtkWindowGroup"},{"type":"text","text":" object."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/init()","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/windowgroupref\/init()"},"doc://Gtk/documentation/Gtk/WindowGroupRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WindowGroupRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/windowgroupref\/init(gpointer:)"}}}