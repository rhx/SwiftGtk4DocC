{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeModelSortProtocol"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"ObjectProtocol","preciseIdentifier":"s:10GLibObject0B8ProtocolP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeDragSourceProtocol","preciseIdentifier":"s:3Gtk22TreeDragSourceProtocolP","text":"TreeDragSourceProtocol"},{"kind":"text","text":", "},{"kind":"typeIdentifier","identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeSortableProtocol","preciseIdentifier":"s:3Gtk20TreeSortableProtocolP","text":"TreeSortableProtocol"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GtkTreeModelSort"},{"type":"text","text":" is a model which implements the "},{"type":"codeVoice","code":"GtkTreeSortable"},{"type":"text","text":" "},{"type":"text","text":"interface.  It does not hold any data itself, but rather is created with"},{"type":"text","text":" "},{"type":"text","text":"a child model and proxies its data.  It has identical column types to"},{"type":"text","text":" "},{"type":"text","text":"this child model, and the changes in the child are propagated.  The"},{"type":"text","text":" "},{"type":"text","text":"primary purpose of this model is to provide a way to sort a different"},{"type":"text","text":" "},{"type":"text","text":"model without modifying it. Note that the sort function used by"},{"type":"text","text":" "},{"type":"codeVoice","code":"GtkTreeModelSort"},{"type":"text","text":" is not guaranteed to be stable."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The use of this is best demonstrated through an example.  In the"},{"type":"text","text":" "},{"type":"text","text":"following sample code we create two "},{"type":"codeVoice","code":"GtkTreeView"},{"type":"text","text":" widgets each with a"},{"type":"text","text":" "},{"type":"text","text":"view of the same data.  As the model is wrapped here by a"},{"type":"text","text":" "},{"type":"codeVoice","code":"GtkTreeModelSort"},{"type":"text","text":", the two "},{"type":"codeVoice","code":"GtkTreeView"},{"type":"text","text":"s can each sort their"},{"type":"text","text":" "},{"type":"text","text":"view of the data without affecting the other.  By contrast, if we"},{"type":"text","text":" "},{"type":"text","text":"simply put the same model in each widget, then sorting the first would"},{"type":"text","text":" "},{"type":"text","text":"sort the second."}]},{"anchor":"Using-a-GtkTreeModelSort","level":2,"type":"heading","text":"Using a `GtkTreeModelSort`"},{"type":"paragraph","inlineContent":[{"type":"text","text":"(C Language Example):"}]},{"type":"codeListing","syntax":"C","code":["{","  GtkTreeView *tree_view1;","  GtkTreeView *tree_view2;","  GtkTreeModel *sort_model1;","  GtkTreeModel *sort_model2;","  GtkTreeModel *child_model;","","  \/\/ get the child model","  child_model = get_my_model ();","","  \/\/ Create the first tree","  sort_model1 = gtk_tree_model_sort_new_with_model (child_model);","  tree_view1 = gtk_tree_view_new_with_model (sort_model1);","","  \/\/ Create the second tree","  sort_model2 = gtk_tree_model_sort_new_with_model (child_model);","  tree_view2 = gtk_tree_view_new_with_model (sort_model2);","","  \/\/ Now we can sort the two models independently","  gtk_tree_sortable_set_sort_column_id (GTK_TREE_SORTABLE (sort_model1),","                                        COLUMN_1, GTK_SORT_ASCENDING);","  gtk_tree_sortable_set_sort_column_id (GTK_TREE_SORTABLE (sort_model2),","                                        COLUMN_1, GTK_SORT_DESCENDING);","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To demonstrate how to access the underlying child model from the sort"},{"type":"text","text":" "},{"type":"text","text":"model, the next example will be a callback for the "},{"type":"codeVoice","code":"GtkTreeSelection"},{"type":"text","text":" "},{"type":"codeVoice","code":"GtkTreeSelection"},{"type":"text","text":"changed`` signal.  In this callback, we get a string"},{"type":"text","text":" "},{"type":"text","text":"from COLUMN_1 of the model.  We then modify the string, find the same"},{"type":"text","text":" "},{"type":"text","text":"selected row on the child model, and change the row there."}]},{"anchor":"Accessing-the-child-model-of-in-a-selection-changed-callback","level":2,"type":"heading","text":"Accessing the child model of in a selection changed callback"},{"type":"paragraph","inlineContent":[{"type":"text","text":"(C Language Example):"}]},{"type":"codeListing","syntax":"C","code":["void","selection_changed (GtkTreeSelection *selection, gpointer data)","{","  GtkTreeModel *sort_model = NULL;","  GtkTreeModel *child_model;","  GtkTreeIter sort_iter;","  GtkTreeIter child_iter;","  char *some_data = NULL;","  char *modified_data;","","  \/\/ Get the current selected row and the model.","  if (! gtk_tree_selection_get_selected (selection,","                                         &sort_model,","                                         &sort_iter))","    return;","","  \/\/ Look up the current value on the selected row and get","  \/\/ a new value to change it to.","  gtk_tree_model_get (GTK_TREE_MODEL (sort_model), &sort_iter,","                      COLUMN_1, &some_data,","                      -1);","","  modified_data = change_the_data (some_data);","  g_free (some_data);","","  \/\/ Get an iterator on the child model, instead of the sort model.","  gtk_tree_model_sort_convert_iter_to_child_iter (GTK_TREE_MODEL_SORT (sort_model),","                                                  &child_iter,","                                                  &sort_iter);","","  \/\/ Get the child model and change the value of the row. In this","  \/\/ example, the child model is a GtkListStore. It could be any other","  \/\/ type of model, though.","  child_model = gtk_tree_model_sort_get_model (GTK_TREE_MODEL_SORT (sort_model));","  gtk_list_store_set (GTK_LIST_STORE (child_model), &child_iter,","                      COLUMN_1, &modified_data,","                      -1);","  g_free (modified_data);","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol"},{"type":"text","text":" protocol exposes the methods and properties of an underlying "},{"type":"codeVoice","code":"GtkTreeModelSort"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"The default implementation of these can be found in the protocol extension below."},{"type":"text","text":" "},{"type":"text","text":"For a concrete class that implements these methods and properties, see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSort"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Alternatively, use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortRef"},{"type":"text","text":" as a lighweight, "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference if you already have an instance you just want to use."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gtk\/treemodelsortprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Gtk\/4GLib14PointerWrapperP","doc:\/\/Gtk\/10GLibObject0B8ProtocolP","doc:\/\/Gtk\/documentation\/Gtk\/TreeDragSourceProtocol","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol","doc:\/\/Gtk\/documentation\/Gtk\/TreeSortableProtocol"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSort","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortRef"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"identifier":{"url":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A GtkTreeModel which makes an underlying tree model sortable"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeModelSortProtocol"}],"title":"TreeModelSortProtocol","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:3Gtk21TreeModelSortProtocolP","modules":[{"name":"Gtk"}],"navigatorTitle":[{"kind":"identifier","text":"TreeModelSortProtocol"}]},"hierarchy":{"paths":[["doc:\/\/Gtk\/documentation\/Gtk"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol\/model","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol\/parent","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol\/tree_model_sort_ptr-3xq1n"]},{"title":"Instance Methods","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol\/bind(property:to:_:flags:transformFrom:transformTo:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol\/clearCache()","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol\/convertChildIterToIter(sortIter:childIter:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol\/convertChildPathToPath(childPath:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol\/convertIterTo(childIter:sortedIter:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol\/convertPathToChildPath(sortedPath:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol\/get(property:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol\/getModel()","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol\/iterIsValid(iter:)","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol\/resetDefaultSortFunc()","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol\/set(property:value:)"]}],"references":{"doc://Gtk/documentation/Gtk/TreeModelSortProtocol/resetDefaultSortFunc()":{"role":"symbol","title":"resetDefaultSortFunc()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resetDefaultSortFunc"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"This resets the default sort function to be in the “unsorted” state.  That"},{"type":"text","text":" "},{"type":"text","text":"is, it is in the same order as the child model. It will re-sort the model"},{"type":"text","text":" "},{"type":"text","text":"to be in the same order as the child model only if the "},{"type":"codeVoice","code":"GtkTreeModelSort"},{"type":"text","text":" "},{"type":"text","text":"is in “unsorted” state."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol\/resetDefaultSortFunc()","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelsortprotocol\/resetdefaultsortfunc()"},"doc://Gtk/documentation/Gtk/TreeModelSort":{"role":"symbol","title":"TreeModelSort","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeModelSort"}],"abstract":[{"type":"text","text":"A GtkTreeModel which makes an underlying tree model sortable"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSort","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeModelSort"}],"url":"\/documentation\/gtk\/treemodelsort"},"doc://Gtk/documentation/Gtk/TreeDragSourceProtocol":{"role":"symbol","title":"TreeDragSourceProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeDragSourceProtocol"}],"abstract":[{"type":"text","text":"Interface for Drag-and-Drop destinations in "},{"type":"codeVoice","code":"GtkTreeView"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeDragSourceProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeDragSourceProtocol"}],"url":"\/documentation\/gtk\/treedragsourceprotocol"},"doc://Gtk/documentation/Gtk/TreeModelSortProtocol/getModel()":{"role":"symbol","title":"getModel()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getModel"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"TreeModelRef","preciseIdentifier":"s:3Gtk12TreeModelRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Returns the model the "},{"type":"codeVoice","code":"GtkTreeModelSort"},{"type":"text","text":" is sorting."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol\/getModel()","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treemodelsortprotocol\/getmodel()"},"doc://Gtk/documentation/Gtk/TreeModelSortProtocol/model":{"role":"symbol","title":"model","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"model"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeModelRef","preciseIdentifier":"s:3Gtk12TreeModelRefV"},{"kind":"text","text":"!"}],"abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol\/model","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treemodelsortprotocol\/model"},"doc://Gtk/documentation/Gtk/TreeModelSortProtocol/set(property:value:)":{"role":"symbol","title":"set(property:value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"kind":"externalParam","text":"property"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeModelSortPropertyName","preciseIdentifier":"s:3Gtk25TreeModelSortPropertyNameO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:10GLibObject5ValueC"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Set the value of a TreeModelSort property."},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Note"}]},{"type":"text","text":" that this will only have an effect on properties that are writable and not construct-only!"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol\/set(property:value:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treemodelsortprotocol\/set(property:value:)"},"doc://Gtk/documentation/Gtk/TreeModelSortProtocol/convertChildPathToPath(childPath:)":{"role":"symbol","title":"convertChildPathToPath(childPath:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"convertChildPathToPath"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreePathT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"childPath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreePathT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"TreePathRef","preciseIdentifier":"s:3Gtk11TreePathRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Converts "},{"type":"codeVoice","code":"childPath"},{"type":"text","text":" to a path relative to "},{"type":"codeVoice","code":"treeModelSort"},{"type":"text","text":".  That is,"},{"type":"text","text":" "},{"type":"codeVoice","code":"childPath"},{"type":"text","text":" points to a path in the child model.  The returned path will"},{"type":"text","text":" "},{"type":"text","text":"point to the same row in the sorted model.  If "},{"type":"codeVoice","code":"childPath"},{"type":"text","text":" isn’t a valid"},{"type":"text","text":" "},{"type":"text","text":"path on the child model, then "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" is returned."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol\/convertChildPathToPath(childPath:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelsortprotocol\/convertchildpathtopath(childpath:)"},"doc://Gtk/documentation/Gtk/TreeModelSortProtocol":{"role":"symbol","title":"TreeModelSortProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeModelSortProtocol"}],"abstract":[{"type":"text","text":"A GtkTreeModel which makes an underlying tree model sortable"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeModelSortProtocol"}],"url":"\/documentation\/gtk\/treemodelsortprotocol"},"doc://Gtk/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/Gtk\/4GLib14PointerWrapperP"},"doc://Gtk/documentation/Gtk/TreeModelSortProtocol/tree_model_sort_ptr-3xq1n":{"defaultImplementations":1,"role":"symbol","title":"tree_model_sort_ptr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"tree_model_sort_ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkTreeModelSort"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Typed pointer to the underlying "},{"type":"codeVoice","code":"GtkTreeModelSort"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol\/tree_model_sort_ptr-3xq1n","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/gtk\/treemodelsortprotocol\/tree_model_sort_ptr-3xq1n"},"doc://Gtk/documentation/Gtk/TreeModelSortProtocol/convertIterTo(childIter:sortedIter:)":{"role":"symbol","title":"convertIterTo(childIter:sortedIter:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"convertIterTo"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreeIterT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"childIter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeIterT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"sortedIter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeIterT"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Sets "},{"type":"codeVoice","code":"childIter"},{"type":"text","text":" to point to the row pointed to by "},{"type":"codeVoice","code":"sortedIter"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol\/convertIterTo(childIter:sortedIter:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelsortprotocol\/convertiterto(childiter:sortediter:)"},"doc://Gtk/documentation/Gtk/TreeModelSortProtocol/clearCache()":{"role":"symbol","title":"clearCache()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"clearCache"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"This function should almost never be called.  It clears the "},{"type":"codeVoice","code":"treeModelSort"},{"type":"text","text":" "},{"type":"text","text":"of any cached iterators that haven’t been reffed with"},{"type":"text","text":" "},{"type":"codeVoice","code":"gtk_tree_model_ref_node()"},{"type":"text","text":".  This might be useful if the child model being"},{"type":"text","text":" "},{"type":"text","text":"sorted is static (and doesn’t change often) and there has been a lot of"},{"type":"text","text":" "},{"type":"text","text":"unreffed access to nodes.  As a side effect of this function, all unreffed"},{"type":"text","text":" "},{"type":"text","text":"iters will be invalid."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol\/clearCache()","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelsortprotocol\/clearcache()"},"doc://Gtk/documentation/Gtk":{"role":"collection","title":"Gtk","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk","kind":"symbol","type":"topic","url":"\/documentation\/gtk"},"doc://Gtk/10GLibObject0B8ProtocolP":{"type":"unresolvable","title":"GLibObject.ObjectProtocol","identifier":"doc:\/\/Gtk\/10GLibObject0B8ProtocolP"},"doc://Gtk/documentation/Gtk/TreeModelSortProtocol/get(property:)":{"role":"symbol","title":"get(property:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"("},{"kind":"externalParam","text":"property"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeModelSortPropertyName","preciseIdentifier":"s:3Gtk25TreeModelSortPropertyNameO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:10GLibObject5ValueC"}],"abstract":[{"type":"text","text":"Get the value of a TreeModelSort property"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol\/get(property:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treemodelsortprotocol\/get(property:)"},"doc://Gtk/documentation/Gtk/TreeModelSortRef":{"role":"symbol","title":"TreeModelSortRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeModelSortRef"}],"abstract":[{"type":"text","text":"A GtkTreeModel which makes an underlying tree model sortable"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeModelSortRef"}],"url":"\/documentation\/gtk\/treemodelsortref"},"doc://Gtk/documentation/Gtk/TreeModelProtocol":{"role":"symbol","title":"TreeModelProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeModelProtocol"}],"abstract":[{"type":"text","text":"The tree interface used by GtkTreeView"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeModelProtocol"}],"url":"\/documentation\/gtk\/treemodelprotocol"},"doc://Gtk/documentation/Gtk/TreeModelSortProtocol/convertChildIterToIter(sortIter:childIter:)":{"role":"symbol","title":"convertChildIterToIter(sortIter:childIter:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"convertChildIterToIter"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreeIterT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"sortIter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeIterT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"childIter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeIterT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Sets "},{"type":"codeVoice","code":"sortIter"},{"type":"text","text":" to point to the row in "},{"type":"codeVoice","code":"treeModelSort"},{"type":"text","text":" that corresponds to"},{"type":"text","text":" "},{"type":"text","text":"the row pointed at by "},{"type":"codeVoice","code":"childIter"},{"type":"text","text":".  If "},{"type":"codeVoice","code":"sortIter"},{"type":"text","text":" was not set, "},{"type":"codeVoice","code":"false"},{"type":"text","text":" "},{"type":"text","text":"is returned.  Note: a boolean is only returned since 2.14."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol\/convertChildIterToIter(sortIter:childIter:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelsortprotocol\/convertchilditertoiter(sortiter:childiter:)"},"doc://Gtk/documentation/Gtk/TreeModelSortProtocol/iterIsValid(iter:)":{"role":"symbol","title":"iterIsValid(iter:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"iterIsValid"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreeIterT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"iter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeIterT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol\/iterIsValid(iter:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelsortprotocol\/iterisvalid(iter:)"},"doc://Gtk/documentation/Gtk/TreeModelSortProtocol/parent":{"role":"symbol","title":"parent","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"parent"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GObject"}],"abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol\/parent","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treemodelsortprotocol\/parent"},"doc://Gtk/documentation/Gtk/TreeModelSortPropertyName":{"role":"symbol","title":"TreeModelSortPropertyName","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeModelSortPropertyName"}],"abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortPropertyName","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeModelSortPropertyName"}],"url":"\/documentation\/gtk\/treemodelsortpropertyname"},"doc://Gtk/documentation/Gtk/TreeModelSortProtocol/bind(property:to:_:flags:transformFrom:transformTo:)":{"role":"symbol","title":"bind(property:to:_:flags:transformFrom:transformTo:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"bind"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Q"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"property"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreeModelSortPropertyName","preciseIdentifier":"s:3Gtk25TreeModelSortPropertyNameO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Q"},{"kind":"text","text":", "},{"kind":"externalParam","text":"flags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"BindingFlags","preciseIdentifier":"s:10GLibObject12BindingFlagsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"transformFrom"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ValueTransformer","preciseIdentifier":"s:10GLibObject16ValueTransformera"},{"kind":"text","text":", "},{"kind":"externalParam","text":"transformTo"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ValueTransformer","preciseIdentifier":"s:10GLibObject16ValueTransformera"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"BindingRef","preciseIdentifier":"s:10GLibObject10BindingRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Bind a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortPropertyName"},{"type":"text","text":" source property to a given target object."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol\/bind(property:to:_:flags:transformFrom:transformTo:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/treemodelsortprotocol\/bind(property:to:_:flags:transformfrom:transformto:)"},"doc://Gtk/documentation/Gtk/TreeSortableProtocol":{"role":"symbol","title":"TreeSortableProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeSortableProtocol"}],"abstract":[{"type":"text","text":"The interface for sortable models used by GtkTreeView"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeSortableProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeSortableProtocol"}],"url":"\/documentation\/gtk\/treesortableprotocol"},"doc://Gtk/documentation/Gtk/TreeModelSortProtocol/convertPathToChildPath(sortedPath:)":{"role":"symbol","title":"convertPathToChildPath(sortedPath:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"convertPathToChildPath"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TreePathT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"sortedPath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TreePathT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"TreePathRef","preciseIdentifier":"s:3Gtk11TreePathRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Converts "},{"type":"codeVoice","code":"sortedPath"},{"type":"text","text":" to a path on the child model of "},{"type":"codeVoice","code":"treeModelSort"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"That is, "},{"type":"codeVoice","code":"sortedPath"},{"type":"text","text":" points to a location in "},{"type":"codeVoice","code":"treeModelSort"},{"type":"text","text":".  The"},{"type":"text","text":" "},{"type":"text","text":"returned path will point to the same location in the model not being"},{"type":"text","text":" "},{"type":"text","text":"sorted.  If "},{"type":"codeVoice","code":"sortedPath"},{"type":"text","text":" does not point to a location in the child model,"},{"type":"text","text":" "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" is returned."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelSortProtocol\/convertPathToChildPath(sortedPath:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelsortprotocol\/convertpathtochildpath(sortedpath:)"}}}