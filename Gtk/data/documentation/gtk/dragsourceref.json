{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DragSourceRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkDragSource"},{"type":"text","text":" can be set up with the necessary"},{"type":"text","text":" "},{"type":"text","text":"ingredients for a DND operation ahead of time. This includes"},{"type":"text","text":" "},{"type":"text","text":"the source for the data that is being transferred, in the form"},{"type":"text","text":" "},{"type":"text","text":"of a [class[ContentProvider](\/\/documentation\/gdk\/contentprovider], the desired action, and the icon to"},{"type":"text","text":" "},{"type":"text","text":"use during the drag operation. After setting it up, the drag"},{"type":"text","text":" "},{"type":"text","text":"source must be added to a widget as an event controller, using"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"Gtk.Widget.add_controller"},{"type":"text","text":"]."}]},{"type":"codeListing","syntax":"c","code":["static void","my_widget_init (MyWidget *self)","{","  GtkDragSource *drag_source = gtk_drag_source_new ();","","  g_signal_connect (drag_source, \"prepare\", G_CALLBACK (on_drag_prepare), self);","  g_signal_connect (drag_source, \"drag-begin\", G_CALLBACK (on_drag_begin), self);","","  gtk_widget_add_controller (GTK_WIDGET (self), GTK_EVENT_CONTROLLER (drag_source));","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Setting up the content provider and icon ahead of time only makes"},{"type":"text","text":" "},{"type":"text","text":"sense when the data does not change. More commonly, you will want"},{"type":"text","text":" "},{"type":"text","text":"to set them up just in time. To do so, "},{"type":"codeVoice","code":"GtkDragSource"},{"type":"text","text":" has"},{"type":"text","text":" "},{"type":"text","text":"[signal[DragSource](\/\/documentation\/gtk\/dragsource\/onprepare(flags:handler:)] and [signal[DragSource](\/\/documentation\/gtk\/dragsource\/ondragbegin(flags:handler:)]"},{"type":"text","text":" "},{"type":"text","text":"signals."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"prepare"},{"type":"text","text":" signal is emitted before a drag is started, and"},{"type":"text","text":" "},{"type":"text","text":"can be used to set the content provider and actions that the"},{"type":"text","text":" "},{"type":"text","text":"drag should be started with."}]},{"type":"codeListing","syntax":"c","code":["static GdkContentProvider *","on_drag_prepare (GtkDragSource *source,","                 double         x,","                 double         y,","                 MyWidget      *self)","{","  \/\/ This widget supports two types of content: GFile objects","  \/\/ and GdkPixbuf objects; GTK will handle the serialization","  \/\/ of these types automatically","  GFile *file = my_widget_get_file (self);","  GdkPixbuf *pixbuf = my_widget_get_pixbuf (self);","","  return gdk_content_provider_new_union ((GdkContentProvider *[2]) {","      gdk_content_provider_new_typed (G_TYPE_FILE, file),","      gdk_content_provider_new_typed (GDK_TYPE_PIXBUF, pixbuf),","    }, 2);","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"drag-begin"},{"type":"text","text":" signal is emitted after the "},{"type":"codeVoice","code":"GdkDrag"},{"type":"text","text":" object has"},{"type":"text","text":" "},{"type":"text","text":"been created, and can be used to set up the drag icon."}]},{"type":"codeListing","syntax":"c","code":["static void","on_drag_begin (GtkDragSource *source,","               GdkDrag       *drag,","               MyWidget      *self)","{","  \/\/ Set the widget as the drag icon","  GdkPaintable *paintable = gtk_widget_paintable_new (GTK_WIDGET (self));","  gtk_drag_source_set_icon (source, paintable, 0, 0);","  g_object_unref (paintable);","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"During the DND operation, "},{"type":"codeVoice","code":"GtkDragSource"},{"type":"text","text":" emits signals that"},{"type":"text","text":" "},{"type":"text","text":"can be used to obtain updates about the status of the operation,"},{"type":"text","text":" "},{"type":"text","text":"but it is not normally necessary to connect to any signals,"},{"type":"text","text":" "},{"type":"text","text":"except for one case: when the supported actions include"},{"type":"text","text":" "},{"type":"text","text":"[move](\/\/documentation\/gdk\/move, you need to listen for the"},{"type":"text","text":" "},{"type":"text","text":"[signal[DragSource](\/\/documentation\/gtk\/dragsource\/ondragend(flags:handler:)] signal and delete the"},{"type":"text","text":" "},{"type":"text","text":"data after it has been transferred."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GtkDragSource"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"GtkDragSource"},{"type":"text","text":" instance."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSource"},{"type":"text","text":" (instead of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef"},{"type":"text","text":") if you want to use Automatic Reference Counting for memory management of the underlying "},{"type":"codeVoice","code":"GtkDragSource"},{"type":"text","text":" instance."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gtk\/dragsourceref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/DragSourceProtocol","doc:\/\/Gtk\/documentation\/Gtk\/EventControllerProtocol","doc:\/\/Gtk\/4GLib14PointerWrapperP","doc:\/\/Gtk\/10GLibObject14GWeakCapturingP","doc:\/\/Gtk\/10GLibObject0B8ProtocolP","doc:\/\/Gtk\/documentation\/Gtk\/GestureProtocol","doc:\/\/Gtk\/documentation\/Gtk\/GestureSingleProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef","interfaceLanguage":"swift"},"abstract":[{"type":"codeVoice","code":"GtkDragSource"},{"type":"text","text":" is an event controller to initiate Drag-And-Drop operations."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DragSourceRef"}],"title":"DragSourceRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:3Gtk13DragSourceRefV","modules":[{"name":"Gtk"}],"navigatorTitle":[{"kind":"identifier","text":"DragSourceRef"}]},"hierarchy":{"paths":[["doc:\/\/Gtk\/documentation\/Gtk"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/init()","doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/init(_:)-8fu6w","doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/init(_:)-9oa6f","doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/init(_:)-amlz","doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/init(_:)-dct0","doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/init(_:)-tl01","doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/init(cPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/init(constPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/init(gconstpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/init(gpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/init(mutating:)","doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/init(opaquePointer:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/ptr"]},{"title":"Type Methods","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/unowned(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/DragSourceProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/EventControllerProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/GWeakCapturing-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/GestureProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/GestureSingleProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/ObjectProtocol-Implementations"],"generated":true}],"references":{"doc://Gtk/documentation/Gtk/DragSourceRef/GestureProtocol-Implementations":{"role":"collectionGroup","title":"GestureProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/GestureProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/dragsourceref\/gestureprotocol-implementations"},"doc://Gtk/documentation/Gtk/DragSourceRef/init(_:)-tl01":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceProtocol"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/init(_:)-tl01","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/dragsourceref\/init(_:)-tl01"},"doc://Gtk/documentation/Gtk/DragSource":{"role":"symbol","title":"DragSource","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DragSource"}],"abstract":[{"type":"codeVoice","code":"GtkDragSource"},{"type":"text","text":" is an event controller to initiate Drag-And-Drop operations."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSource","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DragSource"}],"url":"\/documentation\/gtk\/dragsource"},"doc://Gtk/documentation/Gtk/EventControllerProtocol":{"role":"symbol","title":"EventControllerProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventControllerProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkEventController"},{"type":"text","text":" is the base class for event controllers."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/EventControllerProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EventControllerProtocol"}],"url":"\/documentation\/gtk\/eventcontrollerprotocol"},"doc://Gtk/documentation/Gtk/DragSourceRef":{"role":"symbol","title":"DragSourceRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DragSourceRef"}],"abstract":[{"type":"codeVoice","code":"GtkDragSource"},{"type":"text","text":" is an event controller to initiate Drag-And-Drop operations."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DragSourceRef"}],"url":"\/documentation\/gtk\/dragsourceref"},"doc://Gtk/documentation/Gtk/DragSourceRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/dragsourceref\/init(gpointer:)"},"doc://Gtk/documentation/Gtk/DragSourceRef/GestureSingleProtocol-Implementations":{"role":"collectionGroup","title":"GestureSingleProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/GestureSingleProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/dragsourceref\/gesturesingleprotocol-implementations"},"doc://Gtk/documentation/Gtk/DragSourceRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/dragsourceref\/init(constpointer:)"},"doc://Gtk/documentation/Gtk":{"role":"collection","title":"Gtk","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk","kind":"symbol","type":"topic","url":"\/documentation\/gtk"},"doc://Gtk/documentation/Gtk/GestureProtocol":{"role":"symbol","title":"GestureProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"GestureProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkGesture"},{"type":"text","text":" is the base class for gesture recognition."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GestureProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GestureProtocol"}],"url":"\/documentation\/gtk\/gestureprotocol"},"doc://Gtk/10GLibObject0B8ProtocolP":{"type":"unresolvable","title":"GLibObject.ObjectProtocol","identifier":"doc:\/\/Gtk\/10GLibObject0B8ProtocolP"},"doc://Gtk/documentation/Gtk/DragSourceRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:gtypes.h@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/dragsourceref\/init(gconstpointer:)"},"doc://Gtk/documentation/Gtk/DragSourceRef/init(_:)-amlz":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkDragSource"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/init(_:)-amlz","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/dragsourceref\/init(_:)-amlz"},"doc://Gtk/documentation/Gtk/DragSourceRef/EventControllerProtocol-Implementations":{"role":"collectionGroup","title":"EventControllerProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/EventControllerProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/dragsourceref\/eventcontrollerprotocol-implementations"},"doc://Gtk/documentation/Gtk/DragSourceRef/init(_:)-dct0":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkDragSource"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/init(_:)-dct0","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/dragsourceref\/init(_:)-dct0"},"doc://Gtk/documentation/Gtk/DragSourceProtocol/drag_source_ptr-356g2":{"defaultImplementations":1,"role":"symbol","title":"drag_source_ptr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"drag_source_ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkDragSource"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Typed pointer to the underlying "},{"type":"codeVoice","code":"GtkDragSource"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceProtocol\/drag_source_ptr-356g2","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/gtk\/dragsourceprotocol\/drag_source_ptr-356g2"},"doc://Gtk/documentation/Gtk/GestureSingleProtocol":{"role":"symbol","title":"GestureSingleProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"GestureSingleProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkGestureSingle"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"GtkGestures"},{"type":"text","text":" subclass optimized for singe-touch"},{"type":"text","text":" "},{"type":"text","text":"and mouse gestures."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GestureSingleProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GestureSingleProtocol"}],"url":"\/documentation\/gtk\/gesturesingleprotocol"},"doc://Gtk/10GLibObject14GWeakCapturingP":{"type":"unresolvable","title":"GLibObject.GWeakCapturing","identifier":"doc:\/\/Gtk\/10GLibObject14GWeakCapturingP"},"doc://Gtk/documentation/Gtk/DragSourceRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GtkDragSource"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceProtocol\/drag_source_ptr-356g2"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/dragsourceref\/ptr"},"doc://Gtk/documentation/Gtk/DragSourceRef/GWeakCapturing-Implementations":{"role":"collectionGroup","title":"GWeakCapturing Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/GWeakCapturing-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/dragsourceref\/gweakcapturing-implementations"},"doc://Gtk/documentation/Gtk/DragSourceRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/dragsourceref\/init(opaquepointer:)"},"doc://Gtk/documentation/Gtk/DragSourceRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/dragsourceref\/init(mutating:)"},"doc://Gtk/documentation/Gtk/DragSourceProtocol":{"role":"symbol","title":"DragSourceProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DragSourceProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkDragSource"},{"type":"text","text":" is an event controller to initiate Drag-And-Drop operations."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DragSourceProtocol"}],"url":"\/documentation\/gtk\/dragsourceprotocol"},"doc://Gtk/documentation/Gtk/DragSourceRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/dragsourceref\/init(cpointer:)"},"doc://Gtk/documentation/Gtk/DragSourceRef/init(_:)-9oa6f":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkDragSource"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/init(_:)-9oa6f","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/dragsourceref\/init(_:)-9oa6f"},"doc://Gtk/documentation/Gtk/DragSourceRef/init(_:)-8fu6w":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkDragSource"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/init(_:)-8fu6w","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/dragsourceref\/init(_:)-8fu6w"},"doc://Gtk/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/Gtk\/4GLib14PointerWrapperP"},"doc://Gtk/documentation/Gtk/DragSourceRef/DragSourceProtocol-Implementations":{"role":"collectionGroup","title":"DragSourceProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/DragSourceProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/dragsourceref\/dragsourceprotocol-implementations"},"doc://Gtk/documentation/Gtk/DragSourceRef/init()":{"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"GtkDragSource"},{"type":"text","text":" object."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/init()","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/dragsourceref\/init()"},"doc://Gtk/documentation/Gtk/DragSourceRef/unowned(_:)":{"role":"symbol","title":"unowned(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unowned"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"DragSourceRef","preciseIdentifier":"s:3Gtk13DragSourceRefV"}],"abstract":[{"type":"text","text":"This factory is syntactic sugar for setting weak pointers wrapped in "},{"type":"codeVoice","code":"GWeak<T>"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/unowned(_:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/dragsourceref\/unowned(_:)"},"doc://Gtk/documentation/Gtk/DragSourceRef/ObjectProtocol-Implementations":{"role":"collectionGroup","title":"ObjectProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DragSourceRef\/ObjectProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/dragsourceref\/objectprotocol-implementations"}}}