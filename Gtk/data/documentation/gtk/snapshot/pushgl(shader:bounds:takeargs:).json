{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pushGl"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GLibBytesT"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GrapheneRectT"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GskGLShaderT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"shader"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GskGLShaderT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"bounds"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GrapheneRectT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"takeArgs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GLibBytesT"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"GLibBytesT"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"BytesProtocol","preciseIdentifier":"s:4GLib13BytesProtocolP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GrapheneRectT"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"RectProtocol","preciseIdentifier":"s:8Graphene12RectProtocolP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GskGLShaderT"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"GLShaderProtocol","preciseIdentifier":"s:3Gsk16GLShaderProtocolP"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The node uses the given [class[GLShader](\/\/documentation\/gsk\/glshader] and uniform values"},{"type":"text","text":" "},{"type":"text","text":"Additionally this takes a list of "},{"type":"codeVoice","code":"n_children"},{"type":"text","text":" other nodes"},{"type":"text","text":" "},{"type":"text","text":"which will be passed to the [class[GLShaderNode](\/\/documentation\/gsk\/glshadernode]."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"takeArgs"},{"type":"text","text":" argument is a block of data to use for uniform"},{"type":"text","text":" "},{"type":"text","text":"arguments, as per types and offsets defined by the "},{"type":"codeVoice","code":"shader"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Normally this is generated by [method"},{"type":"codeVoice","code":"Gsk.GLShader.format_args"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"or [struct[ShaderArgsBuilder](\/\/documentation\/gsk\/shaderargsbuilder]."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The snapshotter takes ownership of "},{"type":"codeVoice","code":"takeArgs"},{"type":"text","text":", so the caller should"},{"type":"text","text":" "},{"type":"text","text":"not free it after this."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the renderer doesnâ€™t support GL shaders, or if there is any"},{"type":"text","text":" "},{"type":"text","text":"problem when compiling the shader, then the node will draw pink."},{"type":"text","text":" "},{"type":"text","text":"You should use [method"},{"type":"codeVoice","code":"Gsk.GLShader.compile"},{"type":"text","text":"] to ensure the "},{"type":"codeVoice","code":"shader"},{"type":"text","text":" "},{"type":"text","text":"will work for the renderer before using it."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the shader requires textures (see [method"},{"type":"codeVoice","code":"Gsk.GLShader.get_n_textures"},{"type":"text","text":"]),"},{"type":"text","text":" "},{"type":"text","text":"then it is expected that you call [method"},{"type":"codeVoice","code":"Gtk.Snapshot.gl_shader_pop_texture"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"the number of times that are required. Each of these calls will generate"},{"type":"text","text":" "},{"type":"text","text":"a node that is added as a child to the "},{"type":"codeVoice","code":"GskGLShaderNode"},{"type":"text","text":", which in turn"},{"type":"text","text":" "},{"type":"text","text":"will render these offscreen and pass as a texture to the shader."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Once all textures (if any) are pop:ed, you must call the regular"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"Gtk.Snapshot.pop"},{"type":"text","text":"]."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to use pre-existing textures as input to the shader rather"},{"type":"text","text":" "},{"type":"text","text":"than rendering new ones, use [method"},{"type":"codeVoice","code":"Gtk.Snapshot.append_texture"},{"type":"text","text":"] to"},{"type":"text","text":" "},{"type":"text","text":"push a texture node. These will be used directly rather than being"},{"type":"text","text":" "},{"type":"text","text":"re-rendered."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For details on how to write shaders, see [class[GLShader](\/\/documentation\/gsk\/glshader]."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gtk\/snapshot\/pushgl(shader:bounds:takeargs:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Gtk\/documentation\/Gtk\/Snapshot\/pushGl(shader:bounds:takeArgs:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Push a [class[GLShaderNode](\/\/documentation\/gsk\/glshadernode]."}],"kind":"symbol","metadata":{"role":"symbol","title":"pushGl(shader:bounds:takeArgs:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pushGl"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GLibBytesT"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GrapheneRectT"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GskGLShaderT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"shader"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GskGLShaderT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"bounds"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GrapheneRectT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"takeArgs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GLibBytesT"},{"kind":"text","text":")"}],"symbolKind":"method","externalID":"s:3Gtk16SnapshotProtocolPAAE6pushGl6shader6bounds8takeArgsyqd_1__qd_0_qd__t4GLib05BytesC0Rd__8Graphene04RectC0Rd_0_3Gsk08GLShaderC0Rd_1_r1_lF::SYNTHESIZED::s:3Gtk8SnapshotC","extendedModule":"Gtk","modules":[{"name":"Gtk"}]},"hierarchy":{"paths":[["doc:\/\/Gtk\/documentation\/Gtk","doc:\/\/Gtk\/documentation\/Gtk\/Snapshot","doc:\/\/Gtk\/documentation\/Gtk\/Snapshot\/SnapshotProtocol-Implementations"]]},"references":{"doc://Gtk/documentation/Gtk/Snapshot/SnapshotProtocol-Implementations":{"role":"collectionGroup","title":"SnapshotProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/Snapshot\/SnapshotProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/snapshot\/snapshotprotocol-implementations"},"doc://Gtk/documentation/Gtk/Snapshot/pushGl(shader:bounds:takeArgs:)":{"role":"symbol","title":"pushGl(shader:bounds:takeArgs:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pushGl"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GLibBytesT"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GrapheneRectT"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GskGLShaderT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"shader"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GskGLShaderT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"bounds"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GrapheneRectT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"takeArgs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GLibBytesT"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Push a [class[GLShaderNode](\/\/documentation\/gsk\/glshadernode]."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/Snapshot\/pushGl(shader:bounds:takeArgs:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/snapshot\/pushgl(shader:bounds:takeargs:)"},"doc://Gtk/documentation/Gtk/Snapshot":{"role":"symbol","title":"Snapshot","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Snapshot"}],"abstract":[{"type":"codeVoice","code":"GtkSnapshot"},{"type":"text","text":" assists in creating [class[RenderNode](\/\/documentation\/gsk\/rendernode]s for widgets."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/Snapshot","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Snapshot"}],"url":"\/documentation\/gtk\/snapshot"},"doc://Gtk/documentation/Gtk":{"role":"collection","title":"Gtk","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk","kind":"symbol","type":"topic","url":"\/documentation\/gtk"}}}