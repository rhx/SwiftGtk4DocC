{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DropTargetRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The most basic way to use a "},{"type":"codeVoice","code":"GtkDropTarget"},{"type":"text","text":" to receive drops on a"},{"type":"text","text":" "},{"type":"text","text":"widget is to create it via [ctor"},{"type":"codeVoice","code":"Gtk.DropTarget.new"},{"type":"text","text":"], passing in the"},{"type":"text","text":" "},{"type":"codeVoice","code":"GType"},{"type":"text","text":" of the data you want to receive and connect to the"},{"type":"text","text":" "},{"type":"text","text":"[signal[DropTarget](\/\/documentation\/gtk\/droptarget\/ondrop(flags:handler:)] signal to receive the data:"}]},{"type":"codeListing","syntax":"c","code":["static gboolean","on_drop (GtkDropTarget *target,","         const GValue  *value,","         double         x,","         double         y,","         gpointer       data)","{","  MyWidget *self = data;","","  \/\/ Call the appropriate setter depending on the type of data","  \/\/ that we received","  if (G_VALUE_HOLDS (value, G_TYPE_FILE))","    my_widget_set_file (self, g_value_get_object (value));","  else if (G_VALUE_HOLDS (value, GDK_TYPE_PIXBUF))","    my_widget_set_pixbuf (self, g_value_get_object (value));","  else","    return FALSE;","","  return TRUE;","}","","static void","my_widget_init (MyWidget *self)","{","  GtkDropTarget *target =","    gtk_drop_target_new (G_TYPE_INVALID, GDK_ACTION_COPY);","","  \/\/ This widget accepts two types of drop types: GFile objects","  \/\/ and GdkPixbuf objects","  gtk_drop_target_set_gtypes (target, (GTypes [2]) {","    G_TYPE_FILE,","    GDK_TYPE_PIXBUF,","  }, 2);","","  g_signal_connect (target, \"drop\", G_CALLBACK (on_drop), self);","  gtk_widget_add_controller (GTK_WIDGET (self), GTK_EVENT_CONTROLLER (target));","}"]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkDropTarget"},{"type":"text","text":" supports more options, such as:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"rejecting potential drops via the [signal[DropTarget](\/\/documentation\/gtk\/droptarget\/onaccept(flags:handler:)] signal"},{"type":"text","text":" "},{"type":"text","text":"and the [method"},{"type":"codeVoice","code":"Gtk.DropTarget.reject"},{"type":"text","text":"] function to let other drop"},{"type":"text","text":" "},{"type":"text","text":"targets handle the drop"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"tracking an ongoing drag operation before the drop via the"},{"type":"text","text":" "},{"type":"text","text":"[signal[DropTarget](\/\/documentation\/gtk\/droptarget\/onenter(flags:handler:)], [signal[DropTarget](\/\/documentation\/gtk\/droptarget\/onmotion(flags:handler:)] and"},{"type":"text","text":" "},{"type":"text","text":"[signal[DropTarget](\/\/documentation\/gtk\/droptarget\/onleave(flags:handler:)] signals"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"configuring how to receive data by setting the"},{"type":"text","text":" "},{"type":"text","text":"[property"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTarget"},{"type":"text","text":"] property and listening for its"},{"type":"text","text":" "},{"type":"text","text":"availability via the [property"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTarget"},{"type":"text","text":"] property"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"However, "},{"type":"codeVoice","code":"GtkDropTarget"},{"type":"text","text":" is ultimately modeled in a synchronous way"},{"type":"text","text":" "},{"type":"text","text":"and only supports data transferred via "},{"type":"codeVoice","code":"GType"},{"type":"text","text":". If you want full control"},{"type":"text","text":" "},{"type":"text","text":"over an ongoing drop, the [class"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetAsync"},{"type":"text","text":"] object gives you"},{"type":"text","text":" "},{"type":"text","text":"this ability."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"While a pointer is dragged over the drop targetâ€™s widget and the drop"},{"type":"text","text":" "},{"type":"text","text":"has not been rejected, that widget will receive the"},{"type":"text","text":" "},{"type":"codeVoice","code":"dropActive"},{"type":"text","text":" state, which can be used to style the widget."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you are not interested in receiving the drop, but just want to update"},{"type":"text","text":" "},{"type":"text","text":"UI state during a Drag-and-Drop operation (e.g. switching tabs), you can"},{"type":"text","text":" "},{"type":"text","text":"use [class"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropControllerMotion"},{"type":"text","text":"]."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GtkDropTarget"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"GtkDropTarget"},{"type":"text","text":" instance."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTarget"},{"type":"text","text":" (instead of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef"},{"type":"text","text":") if you want to use Automatic Reference Counting for memory management of the underlying "},{"type":"codeVoice","code":"GtkDropTarget"},{"type":"text","text":" instance."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gtk\/droptargetref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/DropTargetProtocol","doc:\/\/Gtk\/documentation\/Gtk\/EventControllerProtocol","doc:\/\/Gtk\/4GLib14PointerWrapperP","doc:\/\/Gtk\/10GLibObject14GWeakCapturingP","doc:\/\/Gtk\/10GLibObject0B8ProtocolP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef","interfaceLanguage":"swift"},"abstract":[{"type":"codeVoice","code":"GtkDropTarget"},{"type":"text","text":" is an event controller to receive Drag-and-Drop operations."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DropTargetRef"}],"title":"DropTargetRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:3Gtk13DropTargetRefV","modules":[{"name":"Gtk"}],"navigatorTitle":[{"kind":"identifier","text":"DropTargetRef"}]},"hierarchy":{"paths":[["doc:\/\/Gtk\/documentation\/Gtk"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/init(_:)-131bf","doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/init(_:)-2kftn","doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/init(_:)-7n6jm","doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/init(_:)-9alnj","doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/init(_:)-9bkxn","doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/init(cPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/init(constPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/init(gconstpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/init(gpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/init(mutating:)","doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/init(opaquePointer:)","doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/init(type:actions:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/ptr"]},{"title":"Type Methods","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/unowned(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/DropTargetProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/EventControllerProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/GWeakCapturing-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/ObjectProtocol-Implementations"],"generated":true}],"references":{"doc://Gtk/10GLibObject14GWeakCapturingP":{"type":"unresolvable","title":"GLibObject.GWeakCapturing","identifier":"doc:\/\/Gtk\/10GLibObject14GWeakCapturingP"},"doc://Gtk/documentation/Gtk/DropTargetRef/init(_:)-9bkxn":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkDropTarget"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/init(_:)-9bkxn","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptargetref\/init(_:)-9bkxn"},"doc://Gtk/documentation/Gtk/DropTargetRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptargetref\/init(cpointer:)"},"doc://Gtk/documentation/Gtk/DropTargetRef":{"role":"symbol","title":"DropTargetRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DropTargetRef"}],"abstract":[{"type":"codeVoice","code":"GtkDropTarget"},{"type":"text","text":" is an event controller to receive Drag-and-Drop operations."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DropTargetRef"}],"url":"\/documentation\/gtk\/droptargetref"},"doc://Gtk/documentation/Gtk/DropTargetRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GtkDropTarget"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetProtocol\/drop_target_ptr-6rrf"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptargetref\/ptr"},"doc://Gtk/documentation/Gtk/DropTargetRef/init(_:)-131bf":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkDropTarget"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/init(_:)-131bf","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptargetref\/init(_:)-131bf"},"doc://Gtk/documentation/Gtk/DropTarget":{"role":"symbol","title":"DropTarget","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DropTarget"}],"abstract":[{"type":"codeVoice","code":"GtkDropTarget"},{"type":"text","text":" is an event controller to receive Drag-and-Drop operations."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTarget","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DropTarget"}],"url":"\/documentation\/gtk\/droptarget"},"doc://Gtk/documentation/Gtk/DropTargetRef/EventControllerProtocol-Implementations":{"role":"collectionGroup","title":"EventControllerProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/EventControllerProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/droptargetref\/eventcontrollerprotocol-implementations"},"doc://Gtk/documentation/Gtk/DropTargetRef/init(_:)-7n6jm":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkDropTarget"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/init(_:)-7n6jm","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptargetref\/init(_:)-7n6jm"},"doc://Gtk/documentation/Gtk/DropTargetRef/init(_:)-9alnj":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetProtocol"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/init(_:)-9alnj","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptargetref\/init(_:)-9alnj"},"doc://Gtk/documentation/Gtk/DropTargetRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptargetref\/init(opaquepointer:)"},"doc://Gtk/documentation/Gtk":{"role":"collection","title":"Gtk","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk","kind":"symbol","type":"topic","url":"\/documentation\/gtk"},"doc://Gtk/documentation/Gtk/DropTargetRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptargetref\/init(mutating:)"},"doc://Gtk/documentation/Gtk/EventControllerProtocol":{"role":"symbol","title":"EventControllerProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventControllerProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkEventController"},{"type":"text","text":" is the base class for event controllers."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/EventControllerProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EventControllerProtocol"}],"url":"\/documentation\/gtk\/eventcontrollerprotocol"},"doc://Gtk/documentation/Gtk/DropTargetRef/GWeakCapturing-Implementations":{"role":"collectionGroup","title":"GWeakCapturing Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/GWeakCapturing-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/droptargetref\/gweakcapturing-implementations"},"doc://Gtk/documentation/Gtk/DropTargetRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptargetref\/init(constpointer:)"},"doc://Gtk/documentation/Gtk/DropTargetRef/init(_:)-2kftn":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkDropTarget"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/init(_:)-2kftn","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptargetref\/init(_:)-2kftn"},"doc://Gtk/documentation/Gtk/DropTargetRef/unowned(_:)":{"role":"symbol","title":"unowned(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unowned"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"DropTargetRef","preciseIdentifier":"s:3Gtk13DropTargetRefV"}],"abstract":[{"type":"text","text":"This factory is syntactic sugar for setting weak pointers wrapped in "},{"type":"codeVoice","code":"GWeak<T>"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/unowned(_:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptargetref\/unowned(_:)"},"doc://Gtk/documentation/Gtk/DropTargetProtocol/drop_target_ptr-6rrf":{"defaultImplementations":1,"role":"symbol","title":"drop_target_ptr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"drop_target_ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkDropTarget"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Typed pointer to the underlying "},{"type":"codeVoice","code":"GtkDropTarget"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetProtocol\/drop_target_ptr-6rrf","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/gtk\/droptargetprotocol\/drop_target_ptr-6rrf"},"doc://Gtk/documentation/Gtk/DropTargetRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptargetref\/init(gpointer:)"},"doc://Gtk/documentation/Gtk/DropTargetAsync":{"role":"symbol","title":"DropTargetAsync","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DropTargetAsync"}],"abstract":[{"type":"codeVoice","code":"GtkDropTargetAsync"},{"type":"text","text":" is an event controller to receive Drag-and-Drop"},{"type":"text","text":" "},{"type":"text","text":"operations, asynchronously."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetAsync","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DropTargetAsync"}],"url":"\/documentation\/gtk\/droptargetasync"},"doc://Gtk/documentation/Gtk/DropTargetRef/DropTargetProtocol-Implementations":{"role":"collectionGroup","title":"DropTargetProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/DropTargetProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/droptargetref\/droptargetprotocol-implementations"},"doc://Gtk/documentation/Gtk/DropTargetRef/init(type:actions:)":{"role":"symbol","title":"init(type:actions:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GType","preciseIdentifier":"c:@T@GType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"actions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DragAction","preciseIdentifier":"s:3Gdk10DragActionV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"GtkDropTarget"},{"type":"text","text":" object."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/init(type:actions:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptargetref\/init(type:actions:)"},"doc://Gtk/documentation/Gtk/DropTargetProtocol":{"role":"symbol","title":"DropTargetProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DropTargetProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkDropTarget"},{"type":"text","text":" is an event controller to receive Drag-and-Drop operations."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DropTargetProtocol"}],"url":"\/documentation\/gtk\/droptargetprotocol"},"doc://Gtk/documentation/Gtk/DropTargetRef/ObjectProtocol-Implementations":{"role":"collectionGroup","title":"ObjectProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/ObjectProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/droptargetref\/objectprotocol-implementations"},"doc://Gtk/documentation/Gtk/DropControllerMotion":{"role":"symbol","title":"DropControllerMotion","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DropControllerMotion"}],"abstract":[{"type":"codeVoice","code":"GtkDropControllerMotion"},{"type":"text","text":" is an event controller tracking"},{"type":"text","text":" "},{"type":"text","text":"the pointer during Drag-and-Drop operations."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropControllerMotion","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DropControllerMotion"}],"url":"\/documentation\/gtk\/dropcontrollermotion"},"doc://Gtk/10GLibObject0B8ProtocolP":{"type":"unresolvable","title":"GLibObject.ObjectProtocol","identifier":"doc:\/\/Gtk\/10GLibObject0B8ProtocolP"},"doc://Gtk/documentation/Gtk/DropTargetRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:gtypes.h@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/DropTargetRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/droptargetref\/init(gconstpointer:)"},"doc://Gtk/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/Gtk\/4GLib14PointerWrapperP"}}}