{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LabelRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"As the name implies, most labels are used to label another widget"},{"type":"text","text":" "},{"type":"text","text":"such as a [class"},{"type":"codeVoice","code":"Button"},{"type":"text","text":"]."}]},{"type":"paragraph","inlineContent":[]},{"anchor":"CSS-nodes","level":1,"type":"heading","text":"CSS nodes"},{"type":"codeListing","syntax":null,"code":["label","├── [selection]","├── [link]","┊","╰── [link]"]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkLabel"},{"type":"text","text":" has a single CSS node with the name label. A wide variety"},{"type":"text","text":" "},{"type":"text","text":"of style classes may be applied to labels, such as .title, .subtitle,"},{"type":"text","text":" "},{"type":"text","text":".dim-label, etc. In the "},{"type":"codeVoice","code":"GtkShortcutsWindow"},{"type":"text","text":", labels are used with the"},{"type":"text","text":" "},{"type":"text","text":".keycap style class."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the label has a selection, it gets a subnode with name selection."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the label has links, there is one subnode per link. These subnodes"},{"type":"text","text":" "},{"type":"text","text":"carry the link or visited state depending on whether they have been"},{"type":"text","text":" "},{"type":"text","text":"visited. In this case, label node also gets a .link style class."}]},{"anchor":"GtkLabel-as-GtkBuildable","level":1,"type":"heading","text":"GtkLabel as GtkBuildable"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The GtkLabel implementation of the GtkBuildable interface supports a"},{"type":"text","text":" "},{"type":"text","text":"custom "},{"type":"codeVoice","code":"&lt;attributes&gt;"},{"type":"text","text":" element, which supports any number of "},{"type":"codeVoice","code":"&lt;attribute&gt;"},{"type":"text","text":" "},{"type":"text","text":"elements. The <attribute> element has attributes named “name“, “value“,"},{"type":"text","text":" "},{"type":"text","text":"“start“ and “end“ and allows you to specify [struct"},{"type":"codeVoice","code":"Pango.Attribute"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"values for this label."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"An example of a UI definition fragment specifying Pango attributes:"}]},{"type":"codeListing","syntax":"xml","code":["&lt;object class=\"GtkLabel\"&gt;","  &lt;attributes&gt;","    &lt;attribute name=\"weight\" value=\"PANGO_WEIGHT_BOLD\"\/&gt;","    &lt;attribute name=\"background\" value=\"red\" start=\"5\" end=\"10\"\/&gt;","  &lt;\/attributes&gt;","&lt;\/object&gt;"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The start and end attributes specify the range of characters to which the"},{"type":"text","text":" "},{"type":"text","text":"Pango attribute applies. If start and end are not specified, the attribute is"},{"type":"text","text":" "},{"type":"text","text":"applied to the whole text. Note that specifying ranges does not make much"},{"type":"text","text":" "},{"type":"text","text":"sense with translatable attributes. Use markup embedded in the translatable"},{"type":"text","text":" "},{"type":"text","text":"content instead."}]},{"anchor":"Accessibility","level":1,"type":"heading","text":"Accessibility"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkLabel"},{"type":"text","text":" uses the "},{"type":"codeVoice","code":"GTK_ACCESSIBLE_ROLE_LABEL"},{"type":"text","text":" role."}]},{"anchor":"Mnemonics","level":1,"type":"heading","text":"Mnemonics"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Labels may contain “mnemonics”. Mnemonics are underlined characters in the"},{"type":"text","text":" "},{"type":"text","text":"label, used for keyboard navigation. Mnemonics are created by providing a"},{"type":"text","text":" "},{"type":"text","text":"string with an underscore before the mnemonic character, such as "},{"type":"codeVoice","code":"\"_File\""},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"to the functions [ctor"},{"type":"codeVoice","code":"Gtk.Label.new_with_mnemonic"},{"type":"text","text":"] or"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"Gtk.Label.set_text_with_mnemonic"},{"type":"text","text":"]."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Mnemonics automatically activate any activatable widget the label is"},{"type":"text","text":" "},{"type":"text","text":"inside, such as a [class"},{"type":"codeVoice","code":"Gtk.Button"},{"type":"text","text":"]; if the label is not inside the"},{"type":"text","text":" "},{"type":"text","text":"mnemonic’s target widget, you have to tell the label about the target"},{"type":"text","text":" "},{"type":"text","text":"using [class"},{"type":"codeVoice","code":"Gtk.Label.set_mnemonic_widget"},{"type":"text","text":"]. Here’s a simple example where"},{"type":"text","text":" "},{"type":"text","text":"the label is inside a button:"}]},{"type":"codeListing","syntax":"c","code":["\/\/ Pressing Alt+H will activate this button","GtkWidget *button = gtk_button_new ();","GtkWidget *label = gtk_label_new_with_mnemonic (\"_Hello\");","gtk_button_set_child (GTK_BUTTON (button), label);"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There’s a convenience function to create buttons with a mnemonic label"},{"type":"text","text":" "},{"type":"text","text":"already inside:"}]},{"type":"codeListing","syntax":"c","code":["\/\/ Pressing Alt+H will activate this button","GtkWidget *button = gtk_button_new_with_mnemonic (\"_Hello\");"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To create a mnemonic for a widget alongside the label, such as a"},{"type":"text","text":" "},{"type":"text","text":"[class"},{"type":"codeVoice","code":"Gtk.Entry"},{"type":"text","text":"], you have to point the label at the entry with"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"Gtk.Label.set_mnemonic_widget"},{"type":"text","text":"]:"}]},{"type":"codeListing","syntax":"c","code":["\/\/ Pressing Alt+H will focus the entry","GtkWidget *entry = gtk_entry_new ();","GtkWidget *label = gtk_label_new_with_mnemonic (\"_Hello\");","gtk_label_set_mnemonic_widget (GTK_LABEL (label), entry);"]},{"anchor":"Markup-styled-text","level":1,"type":"heading","text":"Markup (styled text)"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To make it easy to format text in a label (changing colors,"},{"type":"text","text":" "},{"type":"text","text":"fonts, etc.), label text can be provided in a simple"},{"type":"text","text":" "},{"type":"text","text":"markup format:"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here’s how to create a label with a small font:"}]},{"type":"codeListing","syntax":"c","code":["GtkWidget *label = gtk_label_new (NULL);","gtk_label_set_markup (GTK_LABEL (label), \"&lt;small&gt;Small text&lt;\/small&gt;\");"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"(See the Pango manual for complete documentation] of available"},{"type":"text","text":" "},{"type":"text","text":"tags, [func"},{"type":"codeVoice","code":"Pango.parse_markup"},{"type":"text","text":"])"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The markup passed to [method"},{"type":"codeVoice","code":"Gtk.Label.set_markup"},{"type":"text","text":"] must be valid; for example,"},{"type":"text","text":" "},{"type":"text","text":"literal "},{"type":"codeVoice","code":"&lt;"},{"type":"text","text":", "},{"type":"codeVoice","code":"&gt;"},{"type":"text","text":" and "},{"type":"codeVoice","code":"&"},{"type":"text","text":" characters must be escaped as "},{"type":"codeVoice","code":"&lt;"},{"type":"text","text":", "},{"type":"codeVoice","code":"&gt;"},{"type":"text","text":", and "},{"type":"codeVoice","code":"&amp;"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"If you pass text obtained from the user, file, or a network to"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"Gtk.Label.set_markup"},{"type":"text","text":"], you’ll want to escape it with"},{"type":"text","text":" "},{"type":"text","text":"[func"},{"type":"codeVoice","code":"GLib.markup_escape_text"},{"type":"text","text":"] or [func"},{"type":"codeVoice","code":"GLib.markup_printf_escaped"},{"type":"text","text":"]."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Markup strings are just a convenient way to set the [struct"},{"type":"codeVoice","code":"Pango.AttrList"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"on a label; [method"},{"type":"codeVoice","code":"Gtk.Label.set_attributes"},{"type":"text","text":"] may be a simpler way to set"},{"type":"text","text":" "},{"type":"text","text":"attributes in some cases. Be careful though; [struct"},{"type":"codeVoice","code":"Pango.AttrList"},{"type":"text","text":"] tends"},{"type":"text","text":" "},{"type":"text","text":"to cause internationalization problems, unless you’re applying attributes"},{"type":"text","text":" "},{"type":"text","text":"to the entire string (i.e. unless you set the range of each attribute"},{"type":"text","text":" "},{"type":"text","text":"to [0, "},{"type":"codeVoice","code":"G_MAXINT"},{"type":"text","text":")). The reason is that specifying the start_index and"},{"type":"text","text":" "},{"type":"text","text":"end_index for a [struct"},{"type":"codeVoice","code":"Pango.Attribute"},{"type":"text","text":"] requires knowledge of the exact"},{"type":"text","text":" "},{"type":"text","text":"string being displayed, so translations will cause problems."}]},{"anchor":"Selectable-labels","level":1,"type":"heading","text":"Selectable labels"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Labels can be made selectable with [method"},{"type":"codeVoice","code":"Gtk.Label.set_selectable"},{"type":"text","text":"]."},{"type":"text","text":" "},{"type":"text","text":"Selectable labels allow the user to copy the label contents to"},{"type":"text","text":" "},{"type":"text","text":"the clipboard. Only labels that contain useful-to-copy information"},{"type":"text","text":" "},{"type":"text","text":"— such as error messages — should be made selectable."}]},{"anchor":"Text-layout","level":1,"type":"heading","text":"Text layout"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A label can contain any number of paragraphs, but will have"},{"type":"text","text":" "},{"type":"text","text":"performance problems if it contains more than a small number."},{"type":"text","text":" "},{"type":"text","text":"Paragraphs are separated by newlines or other paragraph separators"},{"type":"text","text":" "},{"type":"text","text":"understood by Pango."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Labels can automatically wrap text if you call [method"},{"type":"codeVoice","code":"Gtk.Label.set_wrap"},{"type":"text","text":"]."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"[method"},{"type":"codeVoice","code":"Gtk.Label.set_justify"},{"type":"text","text":"] sets how the lines in a label align"},{"type":"text","text":" "},{"type":"text","text":"with one another. If you want to set how the label as a whole aligns"},{"type":"text","text":" "},{"type":"text","text":"in its available space, see the [property"},{"type":"codeVoice","code":"Gtk.Widget:halign"},{"type":"text","text":"] and"},{"type":"text","text":" "},{"type":"text","text":"[property"},{"type":"codeVoice","code":"Gtk.Widget:valign"},{"type":"text","text":"] properties."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The [property"},{"type":"codeVoice","code":"Gtk.Label:width-chars"},{"type":"text","text":"] and [property"},{"type":"codeVoice","code":"Gtk.Label:max-width-chars"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"properties can be used to control the size allocation of ellipsized or"},{"type":"text","text":" "},{"type":"text","text":"wrapped labels. For ellipsizing labels, if either is specified (and less"},{"type":"text","text":" "},{"type":"text","text":"than the actual text size), it is used as the minimum width, and the actual"},{"type":"text","text":" "},{"type":"text","text":"text size is used as the natural width of the label. For wrapping labels,"},{"type":"text","text":" "},{"type":"text","text":"width-chars is used as the minimum width, if specified, and max-width-chars"},{"type":"text","text":" "},{"type":"text","text":"is used as the natural width. Even if max-width-chars specified, wrapping"},{"type":"text","text":" "},{"type":"text","text":"labels will be rewrapped to use all of the available width."}]},{"anchor":"Links","level":1,"type":"heading","text":"Links"},{"type":"paragraph","inlineContent":[{"type":"text","text":"GTK supports markup for clickable hyperlinks in addition to regular Pango"},{"type":"text","text":" "},{"type":"text","text":"markup. The markup for links is borrowed from HTML, using the "},{"type":"codeVoice","code":"&lt;a&gt;"},{"type":"text","text":" with"},{"type":"text","text":" "},{"type":"text","text":"“href“, “title“ and “class“ attributes. GTK renders links similar to the"},{"type":"text","text":" "},{"type":"text","text":"way they appear in web browsers, with colored, underlined text. The “title“"},{"type":"text","text":" "},{"type":"text","text":"attribute is displayed as a tooltip on the link. The “class“ attribute is"},{"type":"text","text":" "},{"type":"text","text":"used as style class on the CSS node for the link."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"An example looks like this:"}]},{"type":"codeListing","syntax":"c","code":["const char *text =","\"Go to the \"","\"&lt;a href=\\\"https:\/\/www.gtk.org\\\" title=\\\"&lt;i&gt;Our&lt;\/i&gt; website\\\"&gt;\"","\"GTK website&lt;\/a&gt; for more...\";","GtkWidget *label = gtk_label_new (NULL);","gtk_label_set_markup (GTK_LABEL (label), text);"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is possible to implement custom handling for links and their tooltips"},{"type":"text","text":" "},{"type":"text","text":"with the [signal"},{"type":"codeVoice","code":"Gtk.Label::activate-link"},{"type":"text","text":"] signal and the"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"Gtk.Label.get_current_uri"},{"type":"text","text":"] function."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"LabelRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GtkLabel"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"codeVoice","code":"LabelProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"codeVoice","code":"LabelRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"GtkLabel"},{"type":"text","text":" instance."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gtk\/labelref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/AccessibleProtocol","doc:\/\/Gtk\/documentation\/Gtk\/BuildableProtocol","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintTargetProtocol","doc:\/\/Gtk\/4GLib14PointerWrapperP","doc:\/\/Gtk\/10GLibObject14GWeakCapturingP","doc:\/\/Gtk\/10GLibObject24InitiallyUnownedProtocolP","doc:\/\/Gtk\/10GLibObject0B8ProtocolP","doc:\/\/Gtk\/documentation\/Gtk\/LabelProtocol","doc:\/\/Gtk\/documentation\/Gtk\/WidgetProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Gtk\/documentation\/Gtk\/LabelRef","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GtkLabel"},{"type":"text","text":" widget displays a small amount of text."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LabelRef"}],"title":"LabelRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:3Gtk8LabelRefV","modules":[{"name":"Gtk"}],"navigatorTitle":[{"kind":"identifier","text":"LabelRef"}]},"hierarchy":{"paths":[["doc:\/\/Gtk\/documentation\/Gtk"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/init(_:)-6mr2y","doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/init(_:)-8lzuc","doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/init(_:)-95t6","doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/init(_:)-9jqz","doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/init(_:)-ve5j","doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/init(cPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/init(constPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/init(gconstpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/init(gpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/init(mnemonic:)","doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/init(mutating:)","doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/init(opaquePointer:)","doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/init(str:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/ptr"]},{"title":"Type Methods","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/newWith(mnemonic:)","doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/unowned(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/AccessibleProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/BuildableProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/ConstraintTargetProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/GWeakCapturing-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/InitiallyUnownedProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/LabelProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/ObjectProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/WidgetProtocol-Implementations"],"generated":true}],"references":{"doc://Gtk/documentation/Gtk/LabelRef/AccessibleProtocol-Implementations":{"role":"collectionGroup","title":"AccessibleProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/AccessibleProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/labelref\/accessibleprotocol-implementations"},"doc://Gtk/documentation/Gtk/LabelRef/init(_:)-6mr2y":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkLabel"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/init(_:)-6mr2y","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/labelref\/init(_:)-6mr2y"},"doc://Gtk/documentation/Gtk/LabelRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"LabelProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/labelref\/init(mutating:)"},"doc://Gtk/documentation/Gtk/BuildableProtocol":{"role":"symbol","title":"BuildableProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BuildableProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkBuildable"},{"type":"text","text":" allows objects to extend and customize their deserialization"},{"type":"text","text":" "},{"type":"text","text":"from ui files."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuildableProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BuildableProtocol"}],"url":"\/documentation\/gtk\/buildableprotocol"},"doc://Gtk/documentation/Gtk/LabelRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:gtypes.h@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/labelref\/init(gconstpointer:)"},"doc://Gtk/documentation/Gtk/LabelRef/init(_:)-ve5j":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"codeVoice","code":"LabelProtocol"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/init(_:)-ve5j","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/labelref\/init(_:)-ve5j"},"doc://Gtk/documentation/Gtk/LabelRef/ConstraintTargetProtocol-Implementations":{"role":"collectionGroup","title":"ConstraintTargetProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/ConstraintTargetProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/labelref\/constrainttargetprotocol-implementations"},"doc://Gtk/documentation/Gtk/ConstraintTargetProtocol":{"role":"symbol","title":"ConstraintTargetProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConstraintTargetProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GtkConstraintTarget"},{"type":"text","text":" interface is implemented by objects that"},{"type":"text","text":" "},{"type":"text","text":"can be used as source or target in "},{"type":"codeVoice","code":"GtkConstraint"},{"type":"text","text":"s."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintTargetProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ConstraintTargetProtocol"}],"url":"\/documentation\/gtk\/constrainttargetprotocol"},"doc://Gtk/documentation/Gtk/LabelProtocol":{"role":"symbol","title":"LabelProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LabelProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GtkLabel"},{"type":"text","text":" widget displays a small amount of text."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LabelProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LabelProtocol"}],"url":"\/documentation\/gtk\/labelprotocol"},"doc://Gtk/documentation/Gtk/LabelRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"LabelProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/labelref\/init(opaquepointer:)"},"doc://Gtk/documentation/Gtk/LabelRef/init(_:)-95t6":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkLabel"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/init(_:)-95t6","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/labelref\/init(_:)-95t6"},"doc://Gtk/documentation/Gtk/LabelRef/init(mnemonic:)":{"role":"symbol","title":"init(mnemonic:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mnemonic"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"GtkLabel"},{"type":"text","text":", containing the text in "},{"type":"codeVoice","code":"str"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/init(mnemonic:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/labelref\/init(mnemonic:)"},"doc://Gtk/documentation/Gtk/LabelRef/BuildableProtocol-Implementations":{"role":"collectionGroup","title":"BuildableProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/BuildableProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/labelref\/buildableprotocol-implementations"},"doc://Gtk/documentation/Gtk/LabelRef/unowned(_:)":{"role":"symbol","title":"unowned(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unowned"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LabelRef","preciseIdentifier":"s:3Gtk8LabelRefV"}],"abstract":[{"type":"text","text":"This factory is syntactic sugar for setting weak pointers wrapped in "},{"type":"codeVoice","code":"GWeak<T>"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/unowned(_:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/labelref\/unowned(_:)"},"doc://Gtk/10GLibObject0B8ProtocolP":{"type":"unresolvable","title":"GLibObject.ObjectProtocol","identifier":"doc:\/\/Gtk\/10GLibObject0B8ProtocolP"},"doc://Gtk/documentation/Gtk/LabelRef/InitiallyUnownedProtocol-Implementations":{"role":"collectionGroup","title":"InitiallyUnownedProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/InitiallyUnownedProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/labelref\/initiallyunownedprotocol-implementations"},"doc://Gtk/documentation/Gtk/LabelRef/init(_:)-9jqz":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkLabel"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/init(_:)-9jqz","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/labelref\/init(_:)-9jqz"},"doc://Gtk/10GLibObject14GWeakCapturingP":{"type":"unresolvable","title":"GLibObject.GWeakCapturing","identifier":"doc:\/\/Gtk\/10GLibObject14GWeakCapturingP"},"doc://Gtk/10GLibObject24InitiallyUnownedProtocolP":{"type":"unresolvable","title":"GLibObject.InitiallyUnownedProtocol","identifier":"doc:\/\/Gtk\/10GLibObject24InitiallyUnownedProtocolP"},"doc://Gtk/documentation/Gtk/LabelRef/LabelProtocol-Implementations":{"role":"collectionGroup","title":"LabelProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/LabelProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/labelref\/labelprotocol-implementations"},"doc://Gtk/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/Gtk\/4GLib14PointerWrapperP"},"doc://Gtk/documentation/Gtk/LabelRef/init(str:)":{"role":"symbol","title":"init(str:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"str"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Creates a new label with the given text inside it."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/init(str:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/labelref\/init(str:)"},"doc://Gtk/documentation/Gtk/LabelRef":{"role":"symbol","title":"LabelRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LabelRef"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GtkLabel"},{"type":"text","text":" widget displays a small amount of text."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LabelRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LabelRef"}],"url":"\/documentation\/gtk\/labelref"},"doc://Gtk/documentation/Gtk/LabelRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"LabelProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/labelref\/init(constpointer:)"},"doc://Gtk/documentation/Gtk/LabelRef/GWeakCapturing-Implementations":{"role":"collectionGroup","title":"GWeakCapturing Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/GWeakCapturing-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/labelref\/gweakcapturing-implementations"},"doc://Gtk/documentation/Gtk/WidgetProtocol":{"role":"symbol","title":"WidgetProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"WidgetProtocol"}],"abstract":[{"type":"text","text":"The base class for all widgets."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WidgetProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WidgetProtocol"}],"url":"\/documentation\/gtk\/widgetprotocol"},"doc://Gtk/documentation/Gtk/LabelRef/ObjectProtocol-Implementations":{"role":"collectionGroup","title":"ObjectProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/ObjectProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/labelref\/objectprotocol-implementations"},"doc://Gtk/documentation/Gtk":{"role":"collection","title":"Gtk","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk","kind":"symbol","type":"topic","url":"\/documentation\/gtk"},"doc://Gtk/documentation/Gtk/LabelRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GtkLabel"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"codeVoice","code":"label_ptr"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/labelref\/ptr"},"doc://Gtk/documentation/Gtk/LabelRef/WidgetProtocol-Implementations":{"role":"collectionGroup","title":"WidgetProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/WidgetProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/labelref\/widgetprotocol-implementations"},"doc://Gtk/documentation/Gtk/AccessibleProtocol":{"role":"symbol","title":"AccessibleProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AccessibleProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkAccessible"},{"type":"text","text":" is an interface for describing UI elements for"},{"type":"text","text":" "},{"type":"text","text":"Assistive Technologies."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/AccessibleProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AccessibleProtocol"}],"url":"\/documentation\/gtk\/accessibleprotocol"},"doc://Gtk/documentation/Gtk/LabelRef/newWith(mnemonic:)":{"role":"symbol","title":"newWith(mnemonic:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"newWith"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mnemonic"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">?) -> "},{"kind":"typeIdentifier","text":"WidgetRef","preciseIdentifier":"s:3Gtk9WidgetRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"GtkLabel"},{"type":"text","text":", containing the text in "},{"type":"codeVoice","code":"str"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/newWith(mnemonic:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/labelref\/newwith(mnemonic:)"},"doc://Gtk/documentation/Gtk/LabelRef/init(_:)-8lzuc":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkLabel"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/init(_:)-8lzuc","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/labelref\/init(_:)-8lzuc"},"doc://Gtk/documentation/Gtk/LabelRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/labelref\/init(gpointer:)"},"doc://Gtk/documentation/Gtk/LabelRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"LabelProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/LabelRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/labelref\/init(cpointer:)"}}}