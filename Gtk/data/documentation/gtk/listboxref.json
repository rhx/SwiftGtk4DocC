{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ListBoxRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GtkListBox"},{"type":"text","text":" only contains "},{"type":"codeVoice","code":"GtkListBoxRow"},{"type":"text","text":" children. These rows can"},{"type":"text","text":" "},{"type":"text","text":"by dynamically sorted and filtered, and headers can be added dynamically"},{"type":"text","text":" "},{"type":"text","text":"depending on the row content. It also allows keyboard and mouse navigation"},{"type":"text","text":" "},{"type":"text","text":"and selection like a typical list."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using "},{"type":"codeVoice","code":"GtkListBox"},{"type":"text","text":" is often an alternative to "},{"type":"codeVoice","code":"GtkTreeView"},{"type":"text","text":", especially"},{"type":"text","text":" "},{"type":"text","text":"when the list contents has a more complicated layout than what is allowed"},{"type":"text","text":" "},{"type":"text","text":"by a "},{"type":"codeVoice","code":"GtkCellRenderer"},{"type":"text","text":", or when the contents is interactive (i.e. has a"},{"type":"text","text":" "},{"type":"text","text":"button in it)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Although a "},{"type":"codeVoice","code":"GtkListBox"},{"type":"text","text":" must have only "},{"type":"codeVoice","code":"GtkListBoxRow"},{"type":"text","text":" children, you can"},{"type":"text","text":" "},{"type":"text","text":"add any kind of widget to it via [method"},{"type":"codeVoice","code":"Gtk.ListBox.prepend"},{"type":"text","text":"],"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"Gtk.ListBox.append"},{"type":"text","text":"] and [method"},{"type":"codeVoice","code":"Gtk.ListBox.insert"},{"type":"text","text":"] and a"},{"type":"text","text":" "},{"type":"codeVoice","code":"GtkListBoxRow"},{"type":"text","text":" widget will automatically be inserted between the list"},{"type":"text","text":" "},{"type":"text","text":"and the widget."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkListBoxRows"},{"type":"text","text":" can be marked as activatable or selectable. If a row is"},{"type":"text","text":" "},{"type":"text","text":"activatable, [signal"},{"type":"codeVoice","code":"Gtk.ListBox::row-activated"},{"type":"text","text":"] will be emitted for it when"},{"type":"text","text":" "},{"type":"text","text":"the user tries to activate it. If it is selectable, the row will be marked"},{"type":"text","text":" "},{"type":"text","text":"as selected when the user tries to select it."}]},{"anchor":"GtkListBox-as-GtkBuildable","level":1,"type":"heading","text":"GtkListBox as GtkBuildable"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GtkListBox"},{"type":"text","text":" implementation of the "},{"type":"codeVoice","code":"GtkBuildable"},{"type":"text","text":" interface supports"},{"type":"text","text":" "},{"type":"text","text":"setting a child as the placeholder by specifying “placeholder” as the “type”"},{"type":"text","text":" "},{"type":"text","text":"attribute of a "},{"type":"codeVoice","code":"&lt;child&gt;"},{"type":"text","text":" element. See [method"},{"type":"codeVoice","code":"Gtk.ListBox.set_placeholder"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"for info."}]},{"anchor":"CSS-nodes","level":1,"type":"heading","text":"CSS nodes"},{"type":"paragraph","inlineContent":[{"type":"text","text":"(plain Language Example):"}]},{"type":"codeListing","syntax":"plain","code":["list[.separators][.rich-list][.navigation-sidebar][.boxed-list]","╰── row[.activatable]"]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkListBox"},{"type":"text","text":" uses a single CSS node named list. It may carry the .separators"},{"type":"text","text":" "},{"type":"text","text":"style class, when the [property"},{"type":"codeVoice","code":"Gtk.ListBox:show-separators"},{"type":"text","text":"] property is set."},{"type":"text","text":" "},{"type":"text","text":"Each "},{"type":"codeVoice","code":"GtkListBoxRow"},{"type":"text","text":" uses a single CSS node named row. The row nodes get the"},{"type":"text","text":" "},{"type":"text","text":".activatable style class added when appropriate."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It may also carry the .boxed-list style class. In this case, the list will be"},{"type":"text","text":" "},{"type":"text","text":"automatically surrounded by a frame and have separators."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The main list node may also carry style classes to select"},{"type":"text","text":" "},{"type":"text","text":"the style of "},{"type":"reference","isActive":true,"identifier":"section-list-widget.html`list-styles`"},{"type":"text","text":":"},{"type":"text","text":" "},{"type":"text","text":".rich-list, .navigation-sidebar or .data-table."}]},{"anchor":"Accessibility","level":1,"type":"heading","text":"Accessibility"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkListBox"},{"type":"text","text":" uses the "},{"type":"codeVoice","code":"GTK_ACCESSIBLE_ROLE_LIST"},{"type":"text","text":" role and "},{"type":"codeVoice","code":"GtkListBoxRow"},{"type":"text","text":" uses"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"GTK_ACCESSIBLE_ROLE_LIST_ITEM"},{"type":"text","text":" role."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ListBoxRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GtkListBox"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"codeVoice","code":"ListBoxProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"codeVoice","code":"ListBoxRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"GtkListBox"},{"type":"text","text":" instance."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gtk\/listboxref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/AccessibleProtocol","doc:\/\/Gtk\/documentation\/Gtk\/BuildableProtocol","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintTargetProtocol","doc:\/\/Gtk\/4GLib14PointerWrapperP","doc:\/\/Gtk\/10GLibObject14GWeakCapturingP","doc:\/\/Gtk\/10GLibObject24InitiallyUnownedProtocolP","doc:\/\/Gtk\/10GLibObject0B8ProtocolP","doc:\/\/Gtk\/documentation\/Gtk\/ListBoxProtocol","doc:\/\/Gtk\/documentation\/Gtk\/WidgetProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef","interfaceLanguage":"swift"},"abstract":[{"type":"codeVoice","code":"GtkListBox"},{"type":"text","text":" is a vertical list."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ListBoxRef"}],"title":"ListBoxRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:3Gtk10ListBoxRefV","modules":[{"name":"Gtk"}],"navigatorTitle":[{"kind":"identifier","text":"ListBoxRef"}]},"hierarchy":{"paths":[["doc:\/\/Gtk\/documentation\/Gtk"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/init()","doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/init(_:)-1128l","doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/init(_:)-2n7du","doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/init(_:)-4zd0g","doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/init(_:)-8vm7y","doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/init(_:)-97r3b","doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/init(cPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/init(constPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/init(gconstpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/init(gpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/init(mutating:)","doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/init(opaquePointer:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/ptr"]},{"title":"Type Methods","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/unowned(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/AccessibleProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/BuildableProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/ConstraintTargetProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/GWeakCapturing-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/InitiallyUnownedProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/ListBoxProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/ObjectProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/WidgetProtocol-Implementations"],"generated":true}],"references":{"doc://Gtk/documentation/Gtk/ConstraintTargetProtocol":{"role":"symbol","title":"ConstraintTargetProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConstraintTargetProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GtkConstraintTarget"},{"type":"text","text":" interface is implemented by objects that"},{"type":"text","text":" "},{"type":"text","text":"can be used as source or target in "},{"type":"codeVoice","code":"GtkConstraint"},{"type":"text","text":"s."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintTargetProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ConstraintTargetProtocol"}],"url":"\/documentation\/gtk\/constrainttargetprotocol"},"doc://Gtk/documentation/Gtk":{"role":"collection","title":"Gtk","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk","kind":"symbol","type":"topic","url":"\/documentation\/gtk"},"doc://Gtk/documentation/Gtk/ListBoxRef/ObjectProtocol-Implementations":{"role":"collectionGroup","title":"ObjectProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/ObjectProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/listboxref\/objectprotocol-implementations"},"doc://Gtk/documentation/Gtk/ListBoxRef/init(_:)-8vm7y":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkListBox"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/init(_:)-8vm7y","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/listboxref\/init(_:)-8vm7y"},"doc://Gtk/documentation/Gtk/ListBoxRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/listboxref\/init(gpointer:)"},"doc://Gtk/documentation/Gtk/ListBoxRef/InitiallyUnownedProtocol-Implementations":{"role":"collectionGroup","title":"InitiallyUnownedProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/InitiallyUnownedProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/listboxref\/initiallyunownedprotocol-implementations"},"doc://Gtk/10GLibObject24InitiallyUnownedProtocolP":{"type":"unresolvable","title":"GLibObject.InitiallyUnownedProtocol","identifier":"doc:\/\/Gtk\/10GLibObject24InitiallyUnownedProtocolP"},"section-list-widget.html`list-styles`":{"title":"list presentation","titleInlineContent":[{"type":"text","text":"list presentation"}],"type":"link","identifier":"section-list-widget.html`list-styles`","url":"section-list-widget.html`list-styles`"},"doc://Gtk/10GLibObject14GWeakCapturingP":{"type":"unresolvable","title":"GLibObject.GWeakCapturing","identifier":"doc:\/\/Gtk\/10GLibObject14GWeakCapturingP"},"doc://Gtk/documentation/Gtk/ListBoxRef/unowned(_:)":{"role":"symbol","title":"unowned(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unowned"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ListBoxRef","preciseIdentifier":"s:3Gtk10ListBoxRefV"}],"abstract":[{"type":"text","text":"This factory is syntactic sugar for setting weak pointers wrapped in "},{"type":"codeVoice","code":"GWeak<T>"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/unowned(_:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/listboxref\/unowned(_:)"},"doc://Gtk/documentation/Gtk/ListBoxRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GtkListBox"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"codeVoice","code":"list_box_ptr"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/listboxref\/ptr"},"doc://Gtk/documentation/Gtk/BuildableProtocol":{"role":"symbol","title":"BuildableProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BuildableProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkBuildable"},{"type":"text","text":" allows objects to extend and customize their deserialization"},{"type":"text","text":" "},{"type":"text","text":"from ui files."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuildableProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BuildableProtocol"}],"url":"\/documentation\/gtk\/buildableprotocol"},"doc://Gtk/documentation/Gtk/ListBoxRef/init(_:)-4zd0g":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkListBox"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/init(_:)-4zd0g","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/listboxref\/init(_:)-4zd0g"},"doc://Gtk/documentation/Gtk/AccessibleProtocol":{"role":"symbol","title":"AccessibleProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AccessibleProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkAccessible"},{"type":"text","text":" is an interface for describing UI elements for"},{"type":"text","text":" "},{"type":"text","text":"Assistive Technologies."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/AccessibleProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AccessibleProtocol"}],"url":"\/documentation\/gtk\/accessibleprotocol"},"doc://Gtk/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/Gtk\/4GLib14PointerWrapperP"},"doc://Gtk/documentation/Gtk/WidgetProtocol":{"role":"symbol","title":"WidgetProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"WidgetProtocol"}],"abstract":[{"type":"text","text":"The base class for all widgets."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WidgetProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WidgetProtocol"}],"url":"\/documentation\/gtk\/widgetprotocol"},"doc://Gtk/documentation/Gtk/ListBoxRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:gtypes.h@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/listboxref\/init(gconstpointer:)"},"doc://Gtk/documentation/Gtk/ListBoxRef/init(_:)-2n7du":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"codeVoice","code":"ListBoxProtocol"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/init(_:)-2n7du","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/listboxref\/init(_:)-2n7du"},"doc://Gtk/documentation/Gtk/ListBoxRef/init(_:)-1128l":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkListBox"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/init(_:)-1128l","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/listboxref\/init(_:)-1128l"},"doc://Gtk/documentation/Gtk/ListBoxRef":{"role":"symbol","title":"ListBoxRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ListBoxRef"}],"abstract":[{"type":"codeVoice","code":"GtkListBox"},{"type":"text","text":" is a vertical list."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ListBoxRef"}],"url":"\/documentation\/gtk\/listboxref"},"doc://Gtk/documentation/Gtk/ListBoxRef/GWeakCapturing-Implementations":{"role":"collectionGroup","title":"GWeakCapturing Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/GWeakCapturing-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/listboxref\/gweakcapturing-implementations"},"doc://Gtk/documentation/Gtk/ListBoxRef/init(_:)-97r3b":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkListBox"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/init(_:)-97r3b","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/listboxref\/init(_:)-97r3b"},"doc://Gtk/documentation/Gtk/ListBoxProtocol":{"role":"symbol","title":"ListBoxProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ListBoxProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkListBox"},{"type":"text","text":" is a vertical list."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListBoxProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ListBoxProtocol"}],"url":"\/documentation\/gtk\/listboxprotocol"},"doc://Gtk/documentation/Gtk/ListBoxRef/ListBoxProtocol-Implementations":{"role":"collectionGroup","title":"ListBoxProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/ListBoxProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/listboxref\/listboxprotocol-implementations"},"doc://Gtk/documentation/Gtk/ListBoxRef/WidgetProtocol-Implementations":{"role":"collectionGroup","title":"WidgetProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/WidgetProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/listboxref\/widgetprotocol-implementations"},"doc://Gtk/documentation/Gtk/ListBoxRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"ListBoxProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/listboxref\/init(constpointer:)"},"doc://Gtk/documentation/Gtk/ListBoxRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"ListBoxProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/listboxref\/init(cpointer:)"},"doc://Gtk/documentation/Gtk/ListBoxRef/BuildableProtocol-Implementations":{"role":"collectionGroup","title":"BuildableProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/BuildableProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/listboxref\/buildableprotocol-implementations"},"doc://Gtk/documentation/Gtk/ListBoxRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"ListBoxProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/listboxref\/init(opaquepointer:)"},"doc://Gtk/documentation/Gtk/ListBoxRef/AccessibleProtocol-Implementations":{"role":"collectionGroup","title":"AccessibleProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/AccessibleProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/listboxref\/accessibleprotocol-implementations"},"doc://Gtk/documentation/Gtk/ListBoxRef/ConstraintTargetProtocol-Implementations":{"role":"collectionGroup","title":"ConstraintTargetProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/ConstraintTargetProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/listboxref\/constrainttargetprotocol-implementations"},"doc://Gtk/10GLibObject0B8ProtocolP":{"type":"unresolvable","title":"GLibObject.ObjectProtocol","identifier":"doc:\/\/Gtk\/10GLibObject0B8ProtocolP"},"doc://Gtk/documentation/Gtk/ListBoxRef/init()":{"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"GtkListBox"},{"type":"text","text":" container."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/init()","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/listboxref\/init()"},"doc://Gtk/documentation/Gtk/ListBoxRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"ListBoxProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ListBoxRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/listboxref\/init(mutating:)"}}}