{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PanedRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The division between the two panes is adjustable by the user"},{"type":"text","text":" "},{"type":"text","text":"by dragging a handle."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Child widgets are added to the panes of the widget with"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"Gtk.Paned.set_start_child"},{"type":"text","text":"] and [method"},{"type":"codeVoice","code":"Gtk.Paned.set_end_child"},{"type":"text","text":"]."},{"type":"text","text":" "},{"type":"text","text":"The division between the two children is set by default from the size"},{"type":"text","text":" "},{"type":"text","text":"requests of the children, but it can be adjusted by the user."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A paned widget draws a separator between the two child widgets and a"},{"type":"text","text":" "},{"type":"text","text":"small handle that the user can drag to adjust the division. It does not"},{"type":"text","text":" "},{"type":"text","text":"draw any relief around the children or around the separator. (The space"},{"type":"text","text":" "},{"type":"text","text":"in which the separator is called the gutter.) Often, it is useful to put"},{"type":"text","text":" "},{"type":"text","text":"each child inside a [class"},{"type":"codeVoice","code":"Gtk.Frame"},{"type":"text","text":"] so that the gutter appears as a"},{"type":"text","text":" "},{"type":"text","text":"ridge. No separator is drawn if one of the children is missing."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each child has two options that can be set, “resize” and “shrink”. If"},{"type":"text","text":" "},{"type":"text","text":"“resize” is true then, when the "},{"type":"codeVoice","code":"GtkPaned"},{"type":"text","text":" is resized, that child will"},{"type":"text","text":" "},{"type":"text","text":"expand or shrink along with the paned widget. If “shrink” is true, then"},{"type":"text","text":" "},{"type":"text","text":"that child can be made smaller than its requisition by the user."},{"type":"text","text":" "},{"type":"text","text":"Setting “shrink” to false allows the application to set a minimum size."},{"type":"text","text":" "},{"type":"text","text":"If “resize” is false for both children, then this is treated as if"},{"type":"text","text":" "},{"type":"text","text":"“resize” is true for both children."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The application can set the position of the slider as if it were set"},{"type":"text","text":" "},{"type":"text","text":"by the user, by calling [method"},{"type":"codeVoice","code":"Gtk.Paned.set_position"},{"type":"text","text":"]."}]},{"anchor":"CSS-nodes","level":1,"type":"heading","text":"CSS nodes"},{"type":"codeListing","syntax":null,"code":["paned","├── &lt;child&gt;","├── separator[.wide]","╰── &lt;child&gt;"]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkPaned"},{"type":"text","text":" has a main CSS node with name paned, and a subnode for"},{"type":"text","text":" "},{"type":"text","text":"the separator with name separator. The subnode gets a .wide style"},{"type":"text","text":" "},{"type":"text","text":"class when the paned is supposed to be wide."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In horizontal orientation, the nodes are arranged based on the text"},{"type":"text","text":" "},{"type":"text","text":"direction, so in left-to-right mode, :first-child will select the"},{"type":"text","text":" "},{"type":"text","text":"leftmost child, while it will select the rightmost child in"},{"type":"text","text":" "},{"type":"text","text":"RTL layouts."}]},{"anchor":"Creating-a-paned-widget-with-minimum-sizes","level":2,"type":"heading","text":"Creating a paned widget with minimum sizes."},{"type":"codeListing","syntax":"c","code":["GtkWidget *hpaned = gtk_paned_new (GTK_ORIENTATION_HORIZONTAL);","GtkWidget *frame1 = gtk_frame_new (NULL);","GtkWidget *frame2 = gtk_frame_new (NULL);","","gtk_widget_set_size_request (hpaned, 200, -1);","","gtk_paned_set_start_child (GTK_PANED (hpaned), frame1);","gtk_paned_set_resize_start_child (GTK_PANED (hpaned), TRUE);","gtk_paned_set_shrink_start_child (GTK_PANED (hpaned), FALSE);","gtk_widget_set_size_request (frame1, 50, -1);","","gtk_paned_set_end_child (GTK_PANED (hpaned), frame2);","gtk_paned_set_resize_end_child (GTK_PANED (hpaned), FALSE);","gtk_paned_set_shrink_end_child (GTK_PANED (hpaned), FALSE);","gtk_widget_set_size_request (frame2, 50, -1);"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"PanedRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GtkPaned"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"codeVoice","code":"PanedProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"codeVoice","code":"PanedRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"GtkPaned"},{"type":"text","text":" instance."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gtk\/panedref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/AccessibleProtocol","doc:\/\/Gtk\/documentation\/Gtk\/AccessibleRangeProtocol","doc:\/\/Gtk\/documentation\/Gtk\/BuildableProtocol","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintTargetProtocol","doc:\/\/Gtk\/4GLib14PointerWrapperP","doc:\/\/Gtk\/10GLibObject14GWeakCapturingP","doc:\/\/Gtk\/10GLibObject24InitiallyUnownedProtocolP","doc:\/\/Gtk\/10GLibObject0B8ProtocolP","doc:\/\/Gtk\/documentation\/Gtk\/OrientableProtocol","doc:\/\/Gtk\/documentation\/Gtk\/PanedProtocol","doc:\/\/Gtk\/documentation\/Gtk\/WidgetProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Gtk\/documentation\/Gtk\/PanedRef","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A widget with two panes, arranged either horizontally or vertically."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PanedRef"}],"title":"PanedRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:3Gtk8PanedRefV","modules":[{"name":"Gtk"}],"navigatorTitle":[{"kind":"identifier","text":"PanedRef"}]},"hierarchy":{"paths":[["doc:\/\/Gtk\/documentation\/Gtk"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/init(_:)-2k80o","doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/init(_:)-51wsy","doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/init(_:)-6eaj","doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/init(_:)-6sh0c","doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/init(_:)-xebj","doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/init(cPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/init(constPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/init(gconstpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/init(gpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/init(mutating:)","doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/init(opaquePointer:)","doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/init(orientation:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/ptr"]},{"title":"Type Methods","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/unowned(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/AccessibleProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/AccessibleRangeProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/BuildableProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/ConstraintTargetProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/GWeakCapturing-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/InitiallyUnownedProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/ObjectProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/OrientableProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/PanedProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/WidgetProtocol-Implementations"],"generated":true}],"references":{"doc://Gtk/10GLibObject14GWeakCapturingP":{"type":"unresolvable","title":"GLibObject.GWeakCapturing","identifier":"doc:\/\/Gtk\/10GLibObject14GWeakCapturingP"},"doc://Gtk/documentation/Gtk":{"role":"collection","title":"Gtk","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk","kind":"symbol","type":"topic","url":"\/documentation\/gtk"},"doc://Gtk/documentation/Gtk/PanedRef/PanedProtocol-Implementations":{"role":"collectionGroup","title":"PanedProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/PanedProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/panedref\/panedprotocol-implementations"},"doc://Gtk/documentation/Gtk/PanedRef/init(_:)-6sh0c":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkPaned"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/init(_:)-6sh0c","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/panedref\/init(_:)-6sh0c"},"doc://Gtk/documentation/Gtk/PanedRef/OrientableProtocol-Implementations":{"role":"collectionGroup","title":"OrientableProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/OrientableProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/panedref\/orientableprotocol-implementations"},"doc://Gtk/documentation/Gtk/PanedRef/unowned(_:)":{"role":"symbol","title":"unowned(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unowned"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"PanedRef","preciseIdentifier":"s:3Gtk8PanedRefV"}],"abstract":[{"type":"text","text":"This factory is syntactic sugar for setting weak pointers wrapped in "},{"type":"codeVoice","code":"GWeak<T>"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/unowned(_:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/panedref\/unowned(_:)"},"doc://Gtk/documentation/Gtk/PanedRef/ObjectProtocol-Implementations":{"role":"collectionGroup","title":"ObjectProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/ObjectProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/panedref\/objectprotocol-implementations"},"doc://Gtk/documentation/Gtk/AccessibleProtocol":{"role":"symbol","title":"AccessibleProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AccessibleProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkAccessible"},{"type":"text","text":" is an interface for describing UI elements for"},{"type":"text","text":" "},{"type":"text","text":"Assistive Technologies."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/AccessibleProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AccessibleProtocol"}],"url":"\/documentation\/gtk\/accessibleprotocol"},"doc://Gtk/documentation/Gtk/PanedRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"PanedProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/panedref\/init(cpointer:)"},"doc://Gtk/documentation/Gtk/PanedRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"PanedProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/panedref\/init(constpointer:)"},"doc://Gtk/documentation/Gtk/PanedRef/init(_:)-xebj":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"codeVoice","code":"PanedProtocol"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/init(_:)-xebj","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/panedref\/init(_:)-xebj"},"doc://Gtk/documentation/Gtk/PanedRef/GWeakCapturing-Implementations":{"role":"collectionGroup","title":"GWeakCapturing Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/GWeakCapturing-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/panedref\/gweakcapturing-implementations"},"doc://Gtk/documentation/Gtk/PanedRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GtkPaned"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"codeVoice","code":"paned_ptr"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/panedref\/ptr"},"doc://Gtk/documentation/Gtk/PanedRef/AccessibleRangeProtocol-Implementations":{"role":"collectionGroup","title":"AccessibleRangeProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/AccessibleRangeProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/panedref\/accessiblerangeprotocol-implementations"},"doc://Gtk/10GLibObject24InitiallyUnownedProtocolP":{"type":"unresolvable","title":"GLibObject.InitiallyUnownedProtocol","identifier":"doc:\/\/Gtk\/10GLibObject24InitiallyUnownedProtocolP"},"doc://Gtk/documentation/Gtk/PanedRef/init(_:)-2k80o":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkPaned"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/init(_:)-2k80o","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/panedref\/init(_:)-2k80o"},"doc://Gtk/documentation/Gtk/BuildableProtocol":{"role":"symbol","title":"BuildableProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BuildableProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkBuildable"},{"type":"text","text":" allows objects to extend and customize their deserialization"},{"type":"text","text":" "},{"type":"text","text":"from ui files."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuildableProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BuildableProtocol"}],"url":"\/documentation\/gtk\/buildableprotocol"},"doc://Gtk/documentation/Gtk/PanedRef/ConstraintTargetProtocol-Implementations":{"role":"collectionGroup","title":"ConstraintTargetProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/ConstraintTargetProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/panedref\/constrainttargetprotocol-implementations"},"doc://Gtk/documentation/Gtk/PanedRef":{"role":"symbol","title":"PanedRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PanedRef"}],"abstract":[{"type":"text","text":"A widget with two panes, arranged either horizontally or vertically."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/PanedRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PanedRef"}],"url":"\/documentation\/gtk\/panedref"},"doc://Gtk/documentation/Gtk/PanedRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/panedref\/init(gpointer:)"},"doc://Gtk/documentation/Gtk/ConstraintTargetProtocol":{"role":"symbol","title":"ConstraintTargetProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConstraintTargetProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GtkConstraintTarget"},{"type":"text","text":" interface is implemented by objects that"},{"type":"text","text":" "},{"type":"text","text":"can be used as source or target in "},{"type":"codeVoice","code":"GtkConstraint"},{"type":"text","text":"s."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintTargetProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ConstraintTargetProtocol"}],"url":"\/documentation\/gtk\/constrainttargetprotocol"},"doc://Gtk/documentation/Gtk/PanedRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"PanedProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/panedref\/init(opaquepointer:)"},"doc://Gtk/documentation/Gtk/PanedRef/init(_:)-51wsy":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkPaned"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/init(_:)-51wsy","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/panedref\/init(_:)-51wsy"},"doc://Gtk/documentation/Gtk/PanedRef/init(orientation:)":{"role":"symbol","title":"init(orientation:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"orientation"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GtkOrientation","preciseIdentifier":"c:@EA@GtkOrientation"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"GtkPaned"},{"type":"text","text":" widget."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/init(orientation:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/panedref\/init(orientation:)"},"doc://Gtk/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/Gtk\/4GLib14PointerWrapperP"},"doc://Gtk/10GLibObject0B8ProtocolP":{"type":"unresolvable","title":"GLibObject.ObjectProtocol","identifier":"doc:\/\/Gtk\/10GLibObject0B8ProtocolP"},"doc://Gtk/documentation/Gtk/PanedRef/BuildableProtocol-Implementations":{"role":"collectionGroup","title":"BuildableProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/BuildableProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/panedref\/buildableprotocol-implementations"},"doc://Gtk/documentation/Gtk/PanedRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"PanedProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/panedref\/init(mutating:)"},"doc://Gtk/documentation/Gtk/WidgetProtocol":{"role":"symbol","title":"WidgetProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"WidgetProtocol"}],"abstract":[{"type":"text","text":"The base class for all widgets."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WidgetProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WidgetProtocol"}],"url":"\/documentation\/gtk\/widgetprotocol"},"doc://Gtk/documentation/Gtk/AccessibleRangeProtocol":{"role":"symbol","title":"AccessibleRangeProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AccessibleRangeProtocol"}],"abstract":[{"type":"text","text":"This interface describes ranged controls, e.g. controls which have a single"},{"type":"text","text":" "},{"type":"text","text":"value within an allowed range and that can optionally be changed by the user."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/AccessibleRangeProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AccessibleRangeProtocol"}],"url":"\/documentation\/gtk\/accessiblerangeprotocol"},"doc://Gtk/documentation/Gtk/PanedRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:gtypes.h@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/panedref\/init(gconstpointer:)"},"doc://Gtk/documentation/Gtk/PanedRef/AccessibleProtocol-Implementations":{"role":"collectionGroup","title":"AccessibleProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/AccessibleProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/panedref\/accessibleprotocol-implementations"},"doc://Gtk/documentation/Gtk/PanedRef/WidgetProtocol-Implementations":{"role":"collectionGroup","title":"WidgetProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/WidgetProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/panedref\/widgetprotocol-implementations"},"doc://Gtk/documentation/Gtk/PanedRef/init(_:)-6eaj":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkPaned"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/init(_:)-6eaj","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/panedref\/init(_:)-6eaj"},"doc://Gtk/documentation/Gtk/OrientableProtocol":{"role":"symbol","title":"OrientableProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"OrientableProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GtkOrientable"},{"type":"text","text":" interface is implemented by all widgets that can be"},{"type":"text","text":" "},{"type":"text","text":"oriented horizontally or vertically."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/OrientableProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OrientableProtocol"}],"url":"\/documentation\/gtk\/orientableprotocol"},"doc://Gtk/documentation/Gtk/PanedRef/InitiallyUnownedProtocol-Implementations":{"role":"collectionGroup","title":"InitiallyUnownedProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/PanedRef\/InitiallyUnownedProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/panedref\/initiallyunownedprotocol-implementations"},"doc://Gtk/documentation/Gtk/PanedProtocol":{"role":"symbol","title":"PanedProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PanedProtocol"}],"abstract":[{"type":"text","text":"A widget with two panes, arranged either horizontally or vertically."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/PanedProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PanedProtocol"}],"url":"\/documentation\/gtk\/panedprotocol"}}}