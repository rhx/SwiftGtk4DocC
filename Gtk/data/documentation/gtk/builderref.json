{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BuilderRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To create a "},{"type":"codeVoice","code":"GtkBuilder"},{"type":"text","text":" from a user interface description, call"},{"type":"text","text":" "},{"type":"text","text":"[ctor"},{"type":"codeVoice","code":"Gtk.Builder.new_from_file"},{"type":"text","text":"], [ctor"},{"type":"codeVoice","code":"Gtk.Builder.new_from_resource"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"or [ctor"},{"type":"codeVoice","code":"Gtk.Builder.new_from_string"},{"type":"text","text":"]."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the (unusual) case that you want to add user interface"},{"type":"text","text":" "},{"type":"text","text":"descriptions from multiple sources to the same "},{"type":"codeVoice","code":"GtkBuilder"},{"type":"text","text":" you can"},{"type":"text","text":" "},{"type":"text","text":"call [ctor"},{"type":"codeVoice","code":"Gtk.Builder.new"},{"type":"text","text":"] to get an empty builder and populate it by"},{"type":"text","text":" "},{"type":"text","text":"(multiple) calls to [method"},{"type":"codeVoice","code":"Gtk.Builder.add_from_file"},{"type":"text","text":"],"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"Gtk.Builder.add_from_resource"},{"type":"text","text":"] or"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"Gtk.Builder.add_from_string"},{"type":"text","text":"]."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GtkBuilder"},{"type":"text","text":" holds a reference to all objects that it has constructed"},{"type":"text","text":" "},{"type":"text","text":"and drops these references when it is finalized. This finalization can"},{"type":"text","text":" "},{"type":"text","text":"cause the destruction of non-widget objects or widgets which are not"},{"type":"text","text":" "},{"type":"text","text":"contained in a toplevel window. For toplevel windows constructed by a"},{"type":"text","text":" "},{"type":"text","text":"builder, it is the responsibility of the user to call"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"Gtk.Window.destroy"},{"type":"text","text":"] to get rid of them and all the widgets"},{"type":"text","text":" "},{"type":"text","text":"they contain."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The functions [method"},{"type":"codeVoice","code":"Gtk.Builder.get_object"},{"type":"text","text":"] and"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"Gtk.Builder.get_objects"},{"type":"text","text":"] can be used to access the widgets in"},{"type":"text","text":" "},{"type":"text","text":"the interface by the names assigned to them inside the UI description."},{"type":"text","text":" "},{"type":"text","text":"Toplevel windows returned by these functions will stay around until the"},{"type":"text","text":" "},{"type":"text","text":"user explicitly destroys them with [method"},{"type":"codeVoice","code":"Gtk.Window.destroy"},{"type":"text","text":"]. Other"},{"type":"text","text":" "},{"type":"text","text":"widgets will either be part of a larger hierarchy constructed by the"},{"type":"text","text":" "},{"type":"text","text":"builder (in which case you should not have to worry about their lifecycle),"},{"type":"text","text":" "},{"type":"text","text":"or without a parent, in which case they have to be added to some container"},{"type":"text","text":" "},{"type":"text","text":"to make use of them. Non-widget objects need to be reffed with"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_object_ref()"},{"type":"text","text":" to keep them beyond the lifespan of the builder."}]},{"anchor":"GtkBuilder-UI-Definitions","level":2,"type":"heading","text":"GtkBuilder UI Definitions"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkBuilder"},{"type":"text","text":" parses textual descriptions of user interfaces which are"},{"type":"text","text":" "},{"type":"text","text":"specified in XML format. We refer to these descriptions as “GtkBuilder"},{"type":"text","text":" "},{"type":"text","text":"UI definitions” or just “UI definitions” if the context is clear."}]},{"anchor":"Structure-of-UI-definitions","level":3,"type":"heading","text":"Structure of UI definitions"},{"type":"paragraph","inlineContent":[{"type":"text","text":"UI definition files are always encoded in UTF-8."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The toplevel element is "},{"type":"codeVoice","code":"<interface>"},{"type":"text","text":". It optionally takes a “domain”"},{"type":"text","text":" "},{"type":"text","text":"attribute, which will make the builder look for translated strings"},{"type":"text","text":" "},{"type":"text","text":"using "},{"type":"codeVoice","code":"dgettext()"},{"type":"text","text":" in the domain specified. This can also be done by"},{"type":"text","text":" "},{"type":"text","text":"calling [method"},{"type":"codeVoice","code":"Gtk.Builder.set_translation_domain"},{"type":"text","text":"] on the builder."},{"type":"text","text":" "},{"type":"text","text":"For example:"}]},{"type":"codeListing","syntax":"xml","code":["<?xml version=\"1.0\" encoding=\"UTF-8\">","<interface domain=\"your-app\">","  ...","<\/interface>"]},{"anchor":"Requirements","level":3,"type":"heading","text":"Requirements"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The target toolkit "},{"type":"codeVoice","code":"version(s)"},{"type":"text","text":" are described by "},{"type":"codeVoice","code":"<requires>"},{"type":"text","text":" elements,"},{"type":"text","text":" "},{"type":"text","text":"the “lib” attribute specifies the widget library in question (currently"},{"type":"text","text":" "},{"type":"text","text":"the only supported value is “gtk”) and the “version” attribute specifies"},{"type":"text","text":" "},{"type":"text","text":"the target version in the form “"},{"type":"codeVoice","code":"<major>"},{"type":"text","text":"."},{"type":"codeVoice","code":"<minor>"},{"type":"text","text":"”. "},{"type":"codeVoice","code":"GtkBuilder"},{"type":"text","text":" will"},{"type":"text","text":" "},{"type":"text","text":"error out if the version requirements are not met. For example:"}]},{"type":"codeListing","syntax":"xml","code":["<?xml version=\"1.0\" encoding=\"UTF-8\">","<interface domain=\"your-app\">","  <requires lib=\"gtk\" version=\"4.0\" \/>","<\/interface>"]},{"anchor":"Objects","level":3,"type":"heading","text":"Objects"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Objects are defined as children of the "},{"type":"codeVoice","code":"<interface>"},{"type":"text","text":" element."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Objects are described by "},{"type":"codeVoice","code":"<object>"},{"type":"text","text":" elements, which can contain"},{"type":"text","text":" "},{"type":"codeVoice","code":"<property>"},{"type":"text","text":" elements to set properties, "},{"type":"codeVoice","code":"<signal>"},{"type":"text","text":" elements which"},{"type":"text","text":" "},{"type":"text","text":"connect signals to handlers, and "},{"type":"codeVoice","code":"<child>"},{"type":"text","text":" elements, which describe"},{"type":"text","text":" "},{"type":"text","text":"child objects (most often widgets inside a container, but also e.g."},{"type":"text","text":" "},{"type":"text","text":"actions in an action group, or columns in a tree model). A "},{"type":"codeVoice","code":"<child>"},{"type":"text","text":" "},{"type":"text","text":"element contains an "},{"type":"codeVoice","code":"<object>"},{"type":"text","text":" element which describes the child object."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Typically, the specific kind of object represented by an "},{"type":"codeVoice","code":"<object>"},{"type":"text","text":" "},{"type":"text","text":"element is specified by the “class” attribute. If the type has not"},{"type":"text","text":" "},{"type":"text","text":"been loaded yet, GTK tries to find the "},{"type":"codeVoice","code":"get_type()"},{"type":"text","text":" function from the"},{"type":"text","text":" "},{"type":"text","text":"class name by applying heuristics. This works in most cases, but if"},{"type":"text","text":" "},{"type":"text","text":"necessary, it is possible to specify the name of the "},{"type":"codeVoice","code":"get_type()"},{"type":"text","text":" "},{"type":"text","text":"function explicitly with the “type-func” attribute. If your UI definition"},{"type":"text","text":" "},{"type":"text","text":"is referencing internal types, you should make sure to call"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_type_ensure()"},{"type":"text","text":" for each object type before parsing the UI definition."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Objects may be given a name with the “id” attribute, which allows the"},{"type":"text","text":" "},{"type":"text","text":"application to retrieve them from the builder with"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"Gtk.Builder.get_object"},{"type":"text","text":"]. An id is also necessary to use the"},{"type":"text","text":" "},{"type":"text","text":"object as property value in other parts of the UI definition. GTK"},{"type":"text","text":" "},{"type":"text","text":"reserves ids starting and ending with "},{"type":"codeVoice","code":"___"},{"type":"text","text":" (three consecutive"},{"type":"text","text":" "},{"type":"text","text":"underscores) for its own purposes."}]},{"anchor":"Properties","level":3,"type":"heading","text":"Properties"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Setting properties of objects is pretty straightforward with the"},{"type":"text","text":" "},{"type":"codeVoice","code":"<property>"},{"type":"text","text":" element: the “name” attribute specifies the name of the"},{"type":"text","text":" "},{"type":"text","text":"property, and the content of the element specifies the value:"}]},{"type":"codeListing","syntax":"xml","code":["<object class=\"GtkButton\">","  <property name=\"label\">Hello, world<\/property>","<\/object>"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the “translatable” attribute is set to a true value, GTK uses"},{"type":"text","text":" "},{"type":"codeVoice","code":"gettext()"},{"type":"text","text":" (or "},{"type":"codeVoice","code":"dgettext()"},{"type":"text","text":" if the builder has a translation domain set)"},{"type":"text","text":" "},{"type":"text","text":"to find a translation for the value. This happens before the value"},{"type":"text","text":" "},{"type":"text","text":"is parsed, so it can be used for properties of any type, but it is"},{"type":"text","text":" "},{"type":"text","text":"probably most useful for string properties. It is also possible to"},{"type":"text","text":" "},{"type":"text","text":"specify a context to disambiguate short strings, and comments which"},{"type":"text","text":" "},{"type":"text","text":"may help the translators:"}]},{"type":"codeListing","syntax":"xml","code":["<object class=\"GtkButton\">","  <property name=\"label\" translatable=\"yes\" context=\"button\">Hello, world<\/property>","<\/object>"]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkBuilder"},{"type":"text","text":" can parse textual representations for the most common"},{"type":"text","text":" "},{"type":"text","text":"property types:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"characters"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"strings"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"integers"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"floating-point numbers"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"booleans (strings like “TRUE”, “t”, “yes”, “y”, “1” are interpreted"},{"type":"text","text":" "},{"type":"text","text":"as true values, strings like “FALSE”, “f”, “no”, “n”, “0” are interpreted"},{"type":"text","text":" "},{"type":"text","text":"as false values)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"enumeration types (can be specified by their full C identifier their short"},{"type":"text","text":" "},{"type":"text","text":"name used when registering the enumeration type, or their integer value)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"flag types (can be specified by their C identifier, short name, integer"},{"type":"text","text":" "},{"type":"text","text":"value, and optionally combined with “|” for bitwise OR, e.g."},{"type":"text","text":" "},{"type":"text","text":"“GTK_INPUT_HINT_EMOJI|GTK_INPUT_HINT_LOWERCASE”, or “emoji|lowercase”)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"colors (in a format understood by [method"},{"type":"codeVoice","code":"Gdk.RGBA.parse"},{"type":"text","text":"])"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GVariant"},{"type":"text","text":" (can be specified in the format understood by"},{"type":"text","text":" "},{"type":"text","text":"[func"},{"type":"codeVoice","code":"GLib.Variant.parse"},{"type":"text","text":"])"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"pixbufs (can be specified as a filename of an image file to load)"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Objects can be referred to by their name and by default refer to"},{"type":"text","text":" "},{"type":"text","text":"objects declared in the local XML fragment and objects exposed via"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"Gtk.Builder.expose_object"},{"type":"text","text":"]. In general, "},{"type":"codeVoice","code":"GtkBuilder"},{"type":"text","text":" allows"},{"type":"text","text":" "},{"type":"text","text":"forward references to objects declared in the local XML; an object"},{"type":"text","text":" "},{"type":"text","text":"doesn’t have to be constructed before it can be referred to. The"},{"type":"text","text":" "},{"type":"text","text":"exception to this rule is that an object has to be constructed before"},{"type":"text","text":" "},{"type":"text","text":"it can be used as the value of a construct-only property."}]},{"anchor":"Property-bindings","level":3,"type":"heading","text":"Property bindings"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is also possible to bind a property value to another object’s"},{"type":"text","text":" "},{"type":"text","text":"property value using the attributes “bind-source” to specify the"},{"type":"text","text":" "},{"type":"text","text":"source object of the binding, and optionally, “bind-property” and"},{"type":"text","text":" "},{"type":"text","text":"“bind-flags” to specify the source property and source binding flags"},{"type":"text","text":" "},{"type":"text","text":"respectively. Internally, "},{"type":"codeVoice","code":"GtkBuilder"},{"type":"text","text":" implements this using"},{"type":"text","text":" "},{"type":"text","text":"[class[Binding](\/\/documentation\/gobject\/binding] objects."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For instance, in the example below the “label” property of the"},{"type":"text","text":" "},{"type":"codeVoice","code":"bottom_label"},{"type":"text","text":" widget is bound to the “label” property of the"},{"type":"text","text":" "},{"type":"codeVoice","code":"top_button"},{"type":"text","text":" widget:"}]},{"type":"codeListing","syntax":"xml","code":["<object class=\"GtkBox\">","  <property name=\"orientation\">vertical<\/property>","  <child>","    <object class=\"GtkButton\" id=\"top_button\">","      <property name=\"label\">Hello, world<\/property>","    <\/object>","  <\/child>","  <child>","    <object class=\"GtkLabel\" id=\"bottom_label\">","      <property name=\"label\"","                bind-source=\"top_button\"","                bind-property=\"label\"","                bind-flags=\"sync-create\" \/>","    <\/object>","  <\/child>","<\/object>"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For more information, see the documentation of the"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"GObject.Object.bind_property"},{"type":"text","text":"] method."}]},{"anchor":"Internal-children","level":3,"type":"heading","text":"Internal children"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Sometimes it is necessary to refer to widgets which have implicitly"},{"type":"text","text":" "},{"type":"text","text":"been constructed by GTK as part of a composite widget, to set"},{"type":"text","text":" "},{"type":"text","text":"properties on them or to add further children (e.g. the content area"},{"type":"text","text":" "},{"type":"text","text":"of a "},{"type":"codeVoice","code":"GtkDialog"},{"type":"text","text":"). This can be achieved by setting the “internal-child”"},{"type":"text","text":" "},{"type":"text","text":"property of the "},{"type":"codeVoice","code":"<child>"},{"type":"text","text":" element to a true value. Note that "},{"type":"codeVoice","code":"GtkBuilder"},{"type":"text","text":" "},{"type":"text","text":"still requires an "},{"type":"codeVoice","code":"<object>"},{"type":"text","text":" element for the internal child, even if it"},{"type":"text","text":" "},{"type":"text","text":"has already been constructed."}]},{"anchor":"Specialized-children","level":3,"type":"heading","text":"Specialized children"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A number of widgets have different places where a child can be added"},{"type":"text","text":" "},{"type":"text","text":"(e.g. tabs vs. page content in notebooks). This can be reflected in"},{"type":"text","text":" "},{"type":"text","text":"a UI definition by specifying the “type” attribute on a "},{"type":"codeVoice","code":"<child>"},{"type":"text","text":" "},{"type":"text","text":"The possible values for the “type” attribute are described in the"},{"type":"text","text":" "},{"type":"text","text":"sections describing the widget-specific portions of UI definitions."}]},{"anchor":"Signal-handlers-and-function-pointers","level":3,"type":"heading","text":"Signal handlers and function pointers"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Signal handlers are set up with the "},{"type":"codeVoice","code":"<signal>"},{"type":"text","text":" element. The “name”"},{"type":"text","text":" "},{"type":"text","text":"attribute specifies the name of the signal, and the “handler” attribute"},{"type":"text","text":" "},{"type":"text","text":"specifies the function to connect to the signal."}]},{"type":"codeListing","syntax":"xml","code":["<object class=\"GtkButton\" id=\"hello_button\">","  <signal name=\"clicked\" handler=\"hello_button__clicked\" \/>","<\/object>"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The remaining attributes, “after”, “swapped” and “object”, have the"},{"type":"text","text":" "},{"type":"text","text":"same meaning as the corresponding parameters of the"},{"type":"text","text":" "},{"type":"text","text":"[func"},{"type":"codeVoice","code":"GObject.signal_connect_object"},{"type":"text","text":"] or [func"},{"type":"codeVoice","code":"GObject.signal_connect_data"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"functions:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“after” matches the "},{"type":"codeVoice","code":"G_CONNECT_AFTER"},{"type":"text","text":" flag, and will ensure that the"},{"type":"text","text":" "},{"type":"text","text":"handler is called after the default class closure for the signal"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“swapped” matches the "},{"type":"codeVoice","code":"G_CONNECT_SWAPPED"},{"type":"text","text":" flag, and will swap the"},{"type":"text","text":" "},{"type":"text","text":"instance and closure arguments when invoking the signal handler"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“object” will bind the signal handler to the lifetime of the object"},{"type":"text","text":" "},{"type":"text","text":"referenced by the attribute"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"By default “swapped” will be set to “yes” if not specified otherwise, in"},{"type":"text","text":" "},{"type":"text","text":"the case where “object” is set, for convenience. A “last_modification_time”"},{"type":"text","text":" "},{"type":"text","text":"attribute is also allowed, but it does not have a meaning to the builder."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When compiling applications for Windows, you must declare signal callbacks"},{"type":"text","text":" "},{"type":"text","text":"with the "},{"type":"codeVoice","code":"G_MODULE_EXPORT"},{"type":"text","text":" decorator, or they will not be put in the symbol"},{"type":"text","text":" "},{"type":"text","text":"table:"}]},{"type":"codeListing","syntax":"c","code":["G_MODULE_EXPORT void","hello_button__clicked (GtkButton *button,","                       gpointer data)","{","  \/\/ ...","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"On Linux and Unix, this is not necessary; applications should instead"},{"type":"text","text":" "},{"type":"text","text":"be compiled with the "},{"type":"codeVoice","code":"-Wl,--export-dynamic"},{"type":"text","text":" argument inside their compiler"},{"type":"text","text":" "},{"type":"text","text":"flags, and linked against "},{"type":"codeVoice","code":"gmodule-export-2.0"},{"type":"text","text":"."}]},{"anchor":"Example-UI-Definition","level":2,"type":"heading","text":"Example UI Definition"},{"type":"codeListing","syntax":"xml","code":["<interface>","  <object class=\"GtkDialog\" id=\"dialog1\">","    <child internal-child=\"content_area\">","      <object class=\"GtkBox\">","        <child internal-child=\"action_area\">","          <object class=\"GtkBox\">","            <child>","              <object class=\"GtkButton\" id=\"ok_button\">","                <property name=\"label\" translatable=\"yes\">_Ok<\/property>","                <property name=\"use-underline\">True<\/property>","                <signal name=\"clicked\" handler=\"ok_button_clicked\"\/>","              <\/object>","            <\/child>","          <\/object>","        <\/child>","      <\/object>","    <\/child>","  <\/object>","<\/interface>"]},{"anchor":"Using-GtkBuildable-for-extending-UI-definitions","level":2,"type":"heading","text":"Using GtkBuildable for extending UI definitions"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Objects can implement the [iface"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/Buildable"},{"type":"text","text":"] interface to add custom"},{"type":"text","text":" "},{"type":"text","text":"elements and attributes to the XML. Typically, any extension will be"},{"type":"text","text":" "},{"type":"text","text":"documented in each type that implements the interface."}]},{"anchor":"Templates","level":2,"type":"heading","text":"Templates"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When describing a [class"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/Widget"},{"type":"text","text":"], you can use the "},{"type":"codeVoice","code":"<template>"},{"type":"text","text":" tag to"},{"type":"text","text":" "},{"type":"text","text":"describe a UI bound to a specific widget type. GTK will automatically load"},{"type":"text","text":" "},{"type":"text","text":"the UI definition when instantiating the type, and bind children and"},{"type":"text","text":" "},{"type":"text","text":"signal handlers to instance fields and function symbols."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For more information, see the "},{"type":"reference","isActive":true,"identifier":"class.Widget.html`building-composite-widgets-from-template-xml`"},{"type":"text","text":" "},{"type":"text","text":"for details."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GtkBuilder"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"GtkBuilder"},{"type":"text","text":" instance."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/Builder"},{"type":"text","text":" (instead of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef"},{"type":"text","text":") if you want to use Automatic Reference Counting for memory management of the underlying "},{"type":"codeVoice","code":"GtkBuilder"},{"type":"text","text":" instance."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gtk\/builderref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/BuilderProtocol","doc:\/\/Gtk\/4GLib14PointerWrapperP","doc:\/\/Gtk\/10GLibObject14GWeakCapturingP","doc:\/\/Gtk\/10GLibObject0B8ProtocolP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GtkBuilder"},{"type":"text","text":" reads XML descriptions of a user interface and"},{"type":"text","text":" "},{"type":"text","text":"instantiates the described objects."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BuilderRef"}],"title":"BuilderRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:3Gtk10BuilderRefV","modules":[{"name":"Gtk"}],"navigatorTitle":[{"kind":"identifier","text":"BuilderRef"}]},"hierarchy":{"paths":[["doc:\/\/Gtk\/documentation\/Gtk"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/init()","doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/init(_:)-2cfoe","doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/init(_:)-7ujfu","doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/init(_:)-8lo05","doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/init(_:)-9b3","doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/init(_:)-xiri","doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/init(cPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/init(constPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/init(file:)","doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/init(gconstpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/init(gpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/init(mutating:)","doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/init(opaquePointer:)","doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/init(resource:)","doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/init(string:length:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/ptr"]},{"title":"Type Methods","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/newFrom(file:)","doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/newFrom(resource:)","doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/newFrom(string:length:)","doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/unowned(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/BuilderProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/GWeakCapturing-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/ObjectProtocol-Implementations"],"generated":true}],"references":{"doc://Gtk/documentation/Gtk/BuilderProtocol":{"role":"symbol","title":"BuilderProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BuilderProtocol"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GtkBuilder"},{"type":"text","text":" reads XML descriptions of a user interface and"},{"type":"text","text":" "},{"type":"text","text":"instantiates the described objects."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BuilderProtocol"}],"url":"\/documentation\/gtk\/builderprotocol"},"doc://Gtk/documentation/Gtk/BuilderRef/init(_:)-xiri":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderProtocol"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/init(_:)-xiri","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/builderref\/init(_:)-xiri"},"doc://Gtk/documentation/Gtk/BuilderRef/init(_:)-7ujfu":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkBuilder"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/init(_:)-7ujfu","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/builderref\/init(_:)-7ujfu"},"doc://Gtk/documentation/Gtk/BuilderRef/GWeakCapturing-Implementations":{"role":"collectionGroup","title":"GWeakCapturing Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/GWeakCapturing-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/builderref\/gweakcapturing-implementations"},"doc://Gtk/documentation/Gtk/BuilderRef/init(_:)-9b3":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkBuilder"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/init(_:)-9b3","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/builderref\/init(_:)-9b3"},"doc://Gtk/documentation/Gtk/Buildable":{"role":"symbol","title":"Buildable","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Buildable"}],"abstract":[{"type":"codeVoice","code":"GtkBuildable"},{"type":"text","text":" allows objects to extend and customize their deserialization"},{"type":"text","text":" "},{"type":"text","text":"from ui files."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/Buildable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Buildable"}],"url":"\/documentation\/gtk\/buildable"},"doc://Gtk/documentation/Gtk/BuilderRef/init()":{"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Creates a new empty builder object."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/init()","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/builderref\/init()"},"doc://Gtk/10GLibObject0B8ProtocolP":{"type":"unresolvable","title":"GLibObject.ObjectProtocol","identifier":"doc:\/\/Gtk\/10GLibObject0B8ProtocolP"},"doc://Gtk/documentation/Gtk/BuilderRef/newFrom(file:)":{"role":"symbol","title":"newFrom(file:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"newFrom"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">!) -> "},{"kind":"typeIdentifier","text":"BuilderRef","preciseIdentifier":"s:3Gtk10BuilderRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Parses the UI definition in the file "},{"type":"codeVoice","code":"filename"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/newFrom(file:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/builderref\/newfrom(file:)"},"doc://Gtk/documentation/Gtk/BuilderRef/BuilderProtocol-Implementations":{"role":"collectionGroup","title":"BuilderProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/BuilderProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/builderref\/builderprotocol-implementations"},"doc://Gtk/documentation/Gtk/BuilderRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/builderref\/init(mutating:)"},"doc://Gtk/documentation/Gtk/BuilderRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:gtypes.h@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/builderref\/init(gconstpointer:)"},"doc://Gtk/documentation/Gtk/Builder":{"role":"symbol","title":"Builder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Builder"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GtkBuilder"},{"type":"text","text":" reads XML descriptions of a user interface and"},{"type":"text","text":" "},{"type":"text","text":"instantiates the described objects."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/Builder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Builder"}],"url":"\/documentation\/gtk\/builder"},"doc://Gtk/documentation/Gtk/BuilderRef":{"role":"symbol","title":"BuilderRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BuilderRef"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GtkBuilder"},{"type":"text","text":" reads XML descriptions of a user interface and"},{"type":"text","text":" "},{"type":"text","text":"instantiates the described objects."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BuilderRef"}],"url":"\/documentation\/gtk\/builderref"},"doc://Gtk/documentation/Gtk/BuilderRef/init(file:)":{"role":"symbol","title":"init(file:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">!)"}],"abstract":[{"type":"text","text":"Parses the UI definition in the file "},{"type":"codeVoice","code":"filename"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/init(file:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/builderref\/init(file:)"},"doc://Gtk/documentation/Gtk/BuilderRef/init(string:length:)":{"role":"symbol","title":"init(string:length:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"length"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gssize","preciseIdentifier":"c:glibconfig.h@T@gssize"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Parses the UI definition in "},{"type":"codeVoice","code":"string"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/init(string:length:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/builderref\/init(string:length:)"},"doc://Gtk/documentation/Gtk/BuilderRef/init(_:)-2cfoe":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkBuilder"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/init(_:)-2cfoe","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/builderref\/init(_:)-2cfoe"},"doc://Gtk/documentation/Gtk/BuilderRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/builderref\/init(constpointer:)"},"doc://Gtk/documentation/Gtk/Widget":{"role":"symbol","title":"Widget","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Widget"}],"abstract":[{"type":"text","text":"The base class for all widgets."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/Widget","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Widget"}],"url":"\/documentation\/gtk\/widget"},"doc://Gtk/documentation/Gtk/BuilderRef/newFrom(string:length:)":{"role":"symbol","title":"newFrom(string:length:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"newFrom"},{"kind":"text","text":"("},{"kind":"externalParam","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"length"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gssize","preciseIdentifier":"c:glibconfig.h@T@gssize"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"BuilderRef","preciseIdentifier":"s:3Gtk10BuilderRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Parses the UI definition in "},{"type":"codeVoice","code":"string"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/newFrom(string:length:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/builderref\/newfrom(string:length:)"},"doc://Gtk/documentation/Gtk/BuilderProtocol/builder_ptr-6m718":{"defaultImplementations":1,"role":"symbol","title":"builder_ptr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"builder_ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkBuilder"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Typed pointer to the underlying "},{"type":"codeVoice","code":"GtkBuilder"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderProtocol\/builder_ptr-6m718","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/gtk\/builderprotocol\/builder_ptr-6m718"},"class.Widget.html`building-composite-widgets-from-template-xml`":{"title":"GtkWidget documentation","titleInlineContent":[{"type":"codeVoice","code":"GtkWidget"},{"type":"text","text":" documentation"}],"type":"link","identifier":"class.Widget.html`building-composite-widgets-from-template-xml`","url":"class.Widget.html`building-composite-widgets-from-template-xml`"},"doc://Gtk/documentation/Gtk":{"role":"collection","title":"Gtk","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk","kind":"symbol","type":"topic","url":"\/documentation\/gtk"},"doc://Gtk/10GLibObject14GWeakCapturingP":{"type":"unresolvable","title":"GLibObject.GWeakCapturing","identifier":"doc:\/\/Gtk\/10GLibObject14GWeakCapturingP"},"doc://Gtk/documentation/Gtk/BuilderRef/ObjectProtocol-Implementations":{"role":"collectionGroup","title":"ObjectProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/ObjectProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/builderref\/objectprotocol-implementations"},"doc://Gtk/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/Gtk\/4GLib14PointerWrapperP"},"doc://Gtk/documentation/Gtk/BuilderRef/init(_:)-8lo05":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkBuilder"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/init(_:)-8lo05","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/builderref\/init(_:)-8lo05"},"doc://Gtk/documentation/Gtk/BuilderRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/builderref\/init(opaquepointer:)"},"doc://Gtk/documentation/Gtk/BuilderRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GtkBuilder"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderProtocol\/builder_ptr-6m718"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/builderref\/ptr"},"doc://Gtk/documentation/Gtk/BuilderRef/newFrom(resource:)":{"role":"symbol","title":"newFrom(resource:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"newFrom"},{"kind":"text","text":"("},{"kind":"externalParam","text":"resource"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">!) -> "},{"kind":"typeIdentifier","text":"BuilderRef","preciseIdentifier":"s:3Gtk10BuilderRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Parses the UI definition at "},{"type":"codeVoice","code":"resourcePath"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/newFrom(resource:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/builderref\/newfrom(resource:)"},"doc://Gtk/documentation/Gtk/BuilderRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/builderref\/init(gpointer:)"},"doc://Gtk/documentation/Gtk/BuilderRef/init(resource:)":{"role":"symbol","title":"init(resource:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"resource"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">!)"}],"abstract":[{"type":"text","text":"Parses the UI definition at "},{"type":"codeVoice","code":"resourcePath"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/init(resource:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/builderref\/init(resource:)"},"doc://Gtk/documentation/Gtk/BuilderRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/builderref\/init(cpointer:)"},"doc://Gtk/documentation/Gtk/BuilderRef/unowned(_:)":{"role":"symbol","title":"unowned(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unowned"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"BuilderRef","preciseIdentifier":"s:3Gtk10BuilderRefV"}],"abstract":[{"type":"text","text":"This factory is syntactic sugar for setting weak pointers wrapped in "},{"type":"codeVoice","code":"GWeak<T>"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuilderRef\/unowned(_:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/builderref\/unowned(_:)"}}}