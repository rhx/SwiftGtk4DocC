{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GLAreaRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkGLArea"},{"type":"text","text":" sets up its own [class[GLContext](\/\/documentation\/gdk\/glcontext], and creates a custom"},{"type":"text","text":" "},{"type":"text","text":"GL framebuffer that the widget will do GL rendering onto. It also ensures"},{"type":"text","text":" "},{"type":"text","text":"that this framebuffer is the default GL rendering target when rendering."},{"type":"text","text":" "},{"type":"text","text":"The completed rendering is integrated into the larger GTK scene graph as"},{"type":"text","text":" "},{"type":"text","text":"a texture."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In order to draw, you have to connect to the [signal[GLArea](\/\/documentation\/gtk\/glarea\/onrender(flags:handler:)]"},{"type":"text","text":" "},{"type":"text","text":"signal, or subclass "},{"type":"codeVoice","code":"GtkGLArea"},{"type":"text","text":" and override the GtkGLAreaClass.render"},{"type":"text","text":" "},{"type":"text","text":"virtual function."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GtkGLArea"},{"type":"text","text":" widget ensures that the "},{"type":"codeVoice","code":"GdkGLContext"},{"type":"text","text":" is associated with"},{"type":"text","text":" "},{"type":"text","text":"the widgetâ€™s drawing area, and it is kept updated when the size and"},{"type":"text","text":" "},{"type":"text","text":"position of the drawing area changes."}]},{"anchor":"Drawing-with-GtkGLArea","level":2,"type":"heading","text":"Drawing with GtkGLArea"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The simplest way to draw using OpenGL commands in a "},{"type":"codeVoice","code":"GtkGLArea"},{"type":"text","text":" is to"},{"type":"text","text":" "},{"type":"text","text":"create a widget instance and connect to the [signal[GLArea](\/\/documentation\/gtk\/glarea\/onrender(flags:handler:)] signal:"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"render()"},{"type":"text","text":" function will be called when the "},{"type":"codeVoice","code":"GtkGLArea"},{"type":"text","text":" is ready"},{"type":"text","text":" "},{"type":"text","text":"for you to draw its content:"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The initial contents of the framebuffer are transparent."}]},{"type":"codeListing","syntax":"c","code":["static gboolean","render (GtkGLArea *area, GdkGLContext *context)","{","  \/\/ inside this function it's safe to use GL; the given","  \/\/ GdkGLContext has been made current to the drawable","  \/\/ surface used by the `GtkGLArea` and the viewport has","  \/\/ already been set to be the size of the allocation","","  \/\/ we can start by clearing the buffer","  glClearColor (0, 0, 0, 0);","  glClear (GL_COLOR_BUFFER_BIT);","","  \/\/ draw your object","  \/\/ draw_an_object ();","","  \/\/ we completed our drawing; the draw commands will be","  \/\/ flushed at the end of the signal emission chain, and","  \/\/ the buffers will be drawn on the window","  return TRUE;","}","","void setup_glarea (void)","{","  \/\/ create a GtkGLArea instance","  GtkWidget *gl_area = gtk_gl_area_new ();","","  \/\/ connect to the \"render\" signal","  g_signal_connect (gl_area, \"render\", G_CALLBACK (render), NULL);","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you need to initialize OpenGL state, e.g. buffer objects or"},{"type":"text","text":" "},{"type":"text","text":"shaders, you should use the [signal[Widget](\/\/documentation\/gtk\/widget\/onrealize(flags:handler:)] signal;"},{"type":"text","text":" "},{"type":"text","text":"you can use the [signal[Widget](\/\/documentation\/gtk\/widget\/onunrealize(flags:handler:)] signal to clean up."},{"type":"text","text":" "},{"type":"text","text":"Since the "},{"type":"codeVoice","code":"GdkGLContext"},{"type":"text","text":" creation and initialization may fail, you"},{"type":"text","text":" "},{"type":"text","text":"will need to check for errors, using [method"},{"type":"codeVoice","code":"Gtk.GLArea.get_error"},{"type":"text","text":"]."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"An example of how to safely initialize the GL state is:"}]},{"type":"codeListing","syntax":"c","code":["static void","on_realize (GtkGLarea *area)","{","  \/\/ We need to make the context current if we want to","  \/\/ call GL API","  gtk_gl_area_make_current (area);","","  \/\/ If there were errors during the initialization or","  \/\/ when trying to make the context current, this","  \/\/ function will return a GError for you to catch","  if (gtk_gl_area_get_error (area) != NULL)","    return;","","  \/\/ You can also use `gtk_gl_area_set_error()` in order","  \/\/ to show eventual initialization errors on the","  \/\/ GtkGLArea widget itself","  GError *internal_error = NULL;","  init_buffer_objects (&error);","  if (error != NULL)","    {","      gtk_gl_area_set_error (area, error);","      g_error_free (error);","      return;","    }","","  init_shaders (&error);","  if (error != NULL)","    {","      gtk_gl_area_set_error (area, error);","      g_error_free (error);","      return;","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you need to change the options for creating the "},{"type":"codeVoice","code":"GdkGLContext"},{"type":"text","text":" "},{"type":"text","text":"you should use the [signal[GLArea](\/\/documentation\/gtk\/glarea\/oncreatecontext(flags:handler:)] signal."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GtkGLArea"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"GtkGLArea"},{"type":"text","text":" instance."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLArea"},{"type":"text","text":" (instead of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef"},{"type":"text","text":") if you want to use Automatic Reference Counting for memory management of the underlying "},{"type":"codeVoice","code":"GtkGLArea"},{"type":"text","text":" instance."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gtk\/glarearef"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/AccessibleProtocol","doc:\/\/Gtk\/documentation\/Gtk\/BuildableProtocol","doc:\/\/Gtk\/documentation\/Gtk\/ConstraintTargetProtocol","doc:\/\/Gtk\/documentation\/Gtk\/GLAreaProtocol","doc:\/\/Gtk\/4GLib14PointerWrapperP","doc:\/\/Gtk\/10GLibObject14GWeakCapturingP","doc:\/\/Gtk\/10GLibObject24InitiallyUnownedProtocolP","doc:\/\/Gtk\/10GLibObject0B8ProtocolP","doc:\/\/Gtk\/documentation\/Gtk\/WidgetProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef","interfaceLanguage":"swift"},"abstract":[{"type":"codeVoice","code":"GtkGLArea"},{"type":"text","text":" is a widget that allows drawing with OpenGL."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GLAreaRef"}],"title":"GLAreaRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:3Gtk9GLAreaRefV","modules":[{"name":"Gtk"}],"navigatorTitle":[{"kind":"identifier","text":"GLAreaRef"}]},"hierarchy":{"paths":[["doc:\/\/Gtk\/documentation\/Gtk"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/init()","doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/init(_:)-1m1h6","doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/init(_:)-24hqc","doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/init(_:)-4zlte","doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/init(_:)-68mqy","doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/init(_:)-6ocvh","doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/init(cPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/init(constPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/init(gconstpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/init(gpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/init(mutating:)","doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/init(opaquePointer:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/ptr"]},{"title":"Type Methods","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/unowned(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/AccessibleProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/BuildableProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/ConstraintTargetProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/GLAreaProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/GWeakCapturing-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/InitiallyUnownedProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/ObjectProtocol-Implementations","doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/WidgetProtocol-Implementations"],"generated":true}],"references":{"doc://Gtk/documentation/Gtk/GLAreaRef/ConstraintTargetProtocol-Implementations":{"role":"collectionGroup","title":"ConstraintTargetProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/ConstraintTargetProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/glarearef\/constrainttargetprotocol-implementations"},"doc://Gtk/10GLibObject14GWeakCapturingP":{"type":"unresolvable","title":"GLibObject.GWeakCapturing","identifier":"doc:\/\/Gtk\/10GLibObject14GWeakCapturingP"},"doc://Gtk/documentation/Gtk/GLAreaRef":{"role":"symbol","title":"GLAreaRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GLAreaRef"}],"abstract":[{"type":"codeVoice","code":"GtkGLArea"},{"type":"text","text":" is a widget that allows drawing with OpenGL."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GLAreaRef"}],"url":"\/documentation\/gtk\/glarearef"},"doc://Gtk/documentation/Gtk/ConstraintTargetProtocol":{"role":"symbol","title":"ConstraintTargetProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConstraintTargetProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GtkConstraintTarget"},{"type":"text","text":" interface is implemented by objects that"},{"type":"text","text":" "},{"type":"text","text":"can be used as source or target in "},{"type":"codeVoice","code":"GtkConstraint"},{"type":"text","text":"s."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/ConstraintTargetProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ConstraintTargetProtocol"}],"url":"\/documentation\/gtk\/constrainttargetprotocol"},"doc://Gtk/documentation/Gtk/GLAreaRef/init(_:)-1m1h6":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaProtocol"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/init(_:)-1m1h6","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/glarearef\/init(_:)-1m1h6"},"doc://Gtk/10GLibObject0B8ProtocolP":{"type":"unresolvable","title":"GLibObject.ObjectProtocol","identifier":"doc:\/\/Gtk\/10GLibObject0B8ProtocolP"},"doc://Gtk/documentation/Gtk/GLAreaRef/InitiallyUnownedProtocol-Implementations":{"role":"collectionGroup","title":"InitiallyUnownedProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/InitiallyUnownedProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/glarearef\/initiallyunownedprotocol-implementations"},"doc://Gtk/documentation/Gtk/GLAreaRef/init(_:)-6ocvh":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkGLArea"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/init(_:)-6ocvh","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/glarearef\/init(_:)-6ocvh"},"doc://Gtk/documentation/Gtk/GLAreaRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:gtypes.h@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/glarearef\/init(gconstpointer:)"},"doc://Gtk/documentation/Gtk/GLAreaProtocol/gl_area_ptr-42up3":{"defaultImplementations":1,"role":"symbol","title":"gl_area_ptr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"gl_area_ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkGLArea"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Typed pointer to the underlying "},{"type":"codeVoice","code":"GtkGLArea"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaProtocol\/gl_area_ptr-42up3","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/gtk\/glareaprotocol\/gl_area_ptr-42up3"},"doc://Gtk/documentation/Gtk/GLArea":{"role":"symbol","title":"GLArea","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"GLArea"}],"abstract":[{"type":"codeVoice","code":"GtkGLArea"},{"type":"text","text":" is a widget that allows drawing with OpenGL."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLArea","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GLArea"}],"url":"\/documentation\/gtk\/glarea"},"doc://Gtk/documentation/Gtk/GLAreaRef/init(_:)-24hqc":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkGLArea"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/init(_:)-24hqc","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/glarearef\/init(_:)-24hqc"},"doc://Gtk/documentation/Gtk/GLAreaProtocol":{"role":"symbol","title":"GLAreaProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"GLAreaProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkGLArea"},{"type":"text","text":" is a widget that allows drawing with OpenGL."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GLAreaProtocol"}],"url":"\/documentation\/gtk\/glareaprotocol"},"doc://Gtk/documentation/Gtk/GLAreaRef/WidgetProtocol-Implementations":{"role":"collectionGroup","title":"WidgetProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/WidgetProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/glarearef\/widgetprotocol-implementations"},"doc://Gtk/documentation/Gtk/WidgetProtocol":{"role":"symbol","title":"WidgetProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"WidgetProtocol"}],"abstract":[{"type":"text","text":"The base class for all widgets."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/WidgetProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WidgetProtocol"}],"url":"\/documentation\/gtk\/widgetprotocol"},"doc://Gtk/documentation/Gtk/GLAreaRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/glarearef\/init(opaquepointer:)"},"doc://Gtk/documentation/Gtk/GLAreaRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GtkGLArea"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaProtocol\/gl_area_ptr-42up3"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/glarearef\/ptr"},"doc://Gtk/documentation/Gtk":{"role":"collection","title":"Gtk","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk","kind":"symbol","type":"topic","url":"\/documentation\/gtk"},"doc://Gtk/documentation/Gtk/GLAreaRef/GLAreaProtocol-Implementations":{"role":"collectionGroup","title":"GLAreaProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/GLAreaProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/glarearef\/glareaprotocol-implementations"},"doc://Gtk/documentation/Gtk/GLAreaRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/glarearef\/init(mutating:)"},"doc://Gtk/documentation/Gtk/GLAreaRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/glarearef\/init(gpointer:)"},"doc://Gtk/documentation/Gtk/GLAreaRef/AccessibleProtocol-Implementations":{"role":"collectionGroup","title":"AccessibleProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/AccessibleProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/glarearef\/accessibleprotocol-implementations"},"doc://Gtk/documentation/Gtk/GLAreaRef/BuildableProtocol-Implementations":{"role":"collectionGroup","title":"BuildableProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/BuildableProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/glarearef\/buildableprotocol-implementations"},"doc://Gtk/documentation/Gtk/BuildableProtocol":{"role":"symbol","title":"BuildableProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BuildableProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkBuildable"},{"type":"text","text":" allows objects to extend and customize their deserialization"},{"type":"text","text":" "},{"type":"text","text":"from ui files."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/BuildableProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BuildableProtocol"}],"url":"\/documentation\/gtk\/buildableprotocol"},"doc://Gtk/10GLibObject24InitiallyUnownedProtocolP":{"type":"unresolvable","title":"GLibObject.InitiallyUnownedProtocol","identifier":"doc:\/\/Gtk\/10GLibObject24InitiallyUnownedProtocolP"},"doc://Gtk/documentation/Gtk/GLAreaRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/glarearef\/init(constpointer:)"},"doc://Gtk/documentation/Gtk/GLAreaRef/init()":{"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"GtkGLArea"},{"type":"text","text":" widget."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/init()","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/glarearef\/init()"},"doc://Gtk/documentation/Gtk/GLAreaRef/GWeakCapturing-Implementations":{"role":"collectionGroup","title":"GWeakCapturing Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/GWeakCapturing-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/glarearef\/gweakcapturing-implementations"},"doc://Gtk/documentation/Gtk/GLAreaRef/init(_:)-68mqy":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkGLArea"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/init(_:)-68mqy","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/glarearef\/init(_:)-68mqy"},"doc://Gtk/documentation/Gtk/GLAreaRef/unowned(_:)":{"role":"symbol","title":"unowned(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unowned"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GLAreaRef","preciseIdentifier":"s:3Gtk9GLAreaRefV"}],"abstract":[{"type":"text","text":"This factory is syntactic sugar for setting weak pointers wrapped in "},{"type":"codeVoice","code":"GWeak<T>"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/unowned(_:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/glarearef\/unowned(_:)"},"doc://Gtk/documentation/Gtk/AccessibleProtocol":{"role":"symbol","title":"AccessibleProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AccessibleProtocol"}],"abstract":[{"type":"codeVoice","code":"GtkAccessible"},{"type":"text","text":" is an interface for describing UI elements for"},{"type":"text","text":" "},{"type":"text","text":"Assistive Technologies."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/AccessibleProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AccessibleProtocol"}],"url":"\/documentation\/gtk\/accessibleprotocol"},"doc://Gtk/documentation/Gtk/GLAreaRef/ObjectProtocol-Implementations":{"role":"collectionGroup","title":"ObjectProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/ObjectProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/glarearef\/objectprotocol-implementations"},"doc://Gtk/documentation/Gtk/GLAreaRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/glarearef\/init(cpointer:)"},"doc://Gtk/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/Gtk\/4GLib14PointerWrapperP"},"doc://Gtk/documentation/Gtk/GLAreaRef/init(_:)-4zlte":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkGLArea"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/GLAreaRef\/init(_:)-4zlte","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/glarearef\/init(_:)-4zlte"}}}