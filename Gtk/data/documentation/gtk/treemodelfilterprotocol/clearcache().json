{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"clearCache"},{"kind":"text","text":"()"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"clear_cache is deprecated:"}]},{"type":"text","text":" "},{"type":"text","text":"This method is deprecated."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gtk\/treemodelfilterprotocol\/clearcache()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelFilterProtocol\/clearCache()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This function should almost never be called. It clears the "},{"type":"codeVoice","code":"filter"},{"type":"text","text":" "},{"type":"text","text":"of any cached iterators that haven’t been reffed with"},{"type":"text","text":" "},{"type":"codeVoice","code":"gtk_tree_model_ref_node()"},{"type":"text","text":". This might be useful if the child model"},{"type":"text","text":" "},{"type":"text","text":"being filtered is static (and doesn’t change often) and there has been"},{"type":"text","text":" "},{"type":"text","text":"a lot of unreffed access to nodes. As a side effect of this function,"},{"type":"text","text":" "},{"type":"text","text":"all unreffed iters will be invalid."}],"kind":"symbol","metadata":{"modules":[{"name":"Gtk"}],"role":"symbol","title":"clearCache()","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"clearCache"},{"kind":"text","text":"()"}],"symbolKind":"method","externalID":"s:3Gtk23TreeModelFilterProtocolPAAE10clearCacheyyF","extendedModule":"Gtk","platforms":[]},"hierarchy":{"paths":[["doc:\/\/Gtk\/documentation\/Gtk","doc:\/\/Gtk\/documentation\/Gtk\/TreeModelFilterProtocol"]]},"references":{"doc://Gtk/documentation/Gtk/TreeModelFilterProtocol":{"role":"symbol","title":"TreeModelFilterProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeModelFilterProtocol"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GtkTreeModel"},{"type":"text","text":" which hides parts of an underlying tree model"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelFilterProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeModelFilterProtocol"}],"url":"\/documentation\/gtk\/treemodelfilterprotocol"},"doc://Gtk/documentation/Gtk":{"role":"collection","title":"Gtk","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk","kind":"symbol","type":"topic","url":"\/documentation\/gtk"},"doc://Gtk/documentation/Gtk/TreeModelFilterProtocol/clearCache()":{"role":"symbol","title":"clearCache()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"clearCache"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"This function should almost never be called. It clears the "},{"type":"codeVoice","code":"filter"},{"type":"text","text":" "},{"type":"text","text":"of any cached iterators that haven’t been reffed with"},{"type":"text","text":" "},{"type":"codeVoice","code":"gtk_tree_model_ref_node()"},{"type":"text","text":". This might be useful if the child model"},{"type":"text","text":" "},{"type":"text","text":"being filtered is static (and doesn’t change often) and there has been"},{"type":"text","text":" "},{"type":"text","text":"a lot of unreffed access to nodes. As a side effect of this function,"},{"type":"text","text":" "},{"type":"text","text":"all unreffed iters will be invalid."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/TreeModelFilterProtocol\/clearCache()","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/gtk\/treemodelfilterprotocol\/clearcache()"}}}