{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CellLayout"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GtkCellLayout"},{"type":"text","text":" is an interface to be implemented by all objects which"},{"type":"text","text":" "},{"type":"text","text":"want to provide a "},{"type":"codeVoice","code":"GtkTreeViewColumn"},{"type":"text","text":" like API for packing cells,"},{"type":"text","text":" "},{"type":"text","text":"setting attributes and data funcs."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"One of the notable features provided by implementations of"},{"type":"text","text":" "},{"type":"codeVoice","code":"GtkCellLayout"},{"type":"text","text":" are attributes. Attributes let you set the properties"},{"type":"text","text":" "},{"type":"text","text":"in flexible ways. They can just be set to constant values like regular"},{"type":"text","text":" "},{"type":"text","text":"properties. But they can also be mapped to a column of the underlying"},{"type":"text","text":" "},{"type":"text","text":"tree model with "},{"type":"codeVoice","code":"gtk_cell_layout_set_attributes()"},{"type":"text","text":", which means that the value"},{"type":"text","text":" "},{"type":"text","text":"of the attribute can change from cell to cell as they are rendered by"},{"type":"text","text":" "},{"type":"text","text":"the cell renderer. Finally, it is possible to specify a function with"},{"type":"text","text":" "},{"type":"codeVoice","code":"gtk_cell_layout_set_cell_data_func()"},{"type":"text","text":" that is called to determine the"},{"type":"text","text":" "},{"type":"text","text":"value of the attribute for each cell that is rendered."}]},{"anchor":"GtkCellLayouts-as-GtkBuildable","level":2,"type":"heading","text":"GtkCellLayouts as GtkBuildable"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Implementations of GtkCellLayout which also implement the GtkBuildable"},{"type":"text","text":" "},{"type":"text","text":"interface ("},{"type":"codeVoice","code":"GtkCellView"},{"type":"text","text":", "},{"type":"codeVoice","code":"GtkIconView"},{"type":"text","text":", "},{"type":"codeVoice","code":"GtkComboBox"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"codeVoice","code":"GtkEntryCompletion"},{"type":"text","text":", "},{"type":"codeVoice","code":"GtkTreeViewColumn"},{"type":"text","text":") accept "},{"type":"codeVoice","code":"GtkCellRenderer"},{"type":"text","text":" objects"},{"type":"text","text":" "},{"type":"text","text":"as "},{"type":"codeVoice","code":"<child>"},{"type":"text","text":" elements in UI definitions. They support a custom "},{"type":"codeVoice","code":"<attributes>"},{"type":"text","text":" "},{"type":"text","text":"element for their children, which can contain multiple "},{"type":"codeVoice","code":"<attribute>"},{"type":"text","text":" "},{"type":"text","text":"elements. Each "},{"type":"codeVoice","code":"<attribute>"},{"type":"text","text":" element has a name attribute which specifies"},{"type":"text","text":" "},{"type":"text","text":"a property of the cell renderer; the content of the element is the"},{"type":"text","text":" "},{"type":"text","text":"attribute value."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is an example of a UI definition fragment specifying attributes:"}]},{"type":"codeListing","syntax":"xml","code":["<object class=\"GtkCellView\">","  <child>","    <object class=\"GtkCellRendererText\"\/>","    <attributes>","      <attribute name=\"text\">0<\/attribute>","    <\/attributes>","  <\/child>","<\/object>"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Furthermore for implementations of "},{"type":"codeVoice","code":"GtkCellLayout"},{"type":"text","text":" that use a "},{"type":"codeVoice","code":"GtkCellArea"},{"type":"text","text":" "},{"type":"text","text":"to lay out cells (all "},{"type":"codeVoice","code":"GtkCellLayout"},{"type":"text","text":"s in GTK use a "},{"type":"codeVoice","code":"GtkCellArea"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"class.CellArea.html`cell-properties`"},{"type":"text","text":" can also be defined"},{"type":"text","text":" "},{"type":"text","text":"in the format by specifying the custom "},{"type":"codeVoice","code":"<cell-packing>"},{"type":"text","text":" attribute which can"},{"type":"text","text":" "},{"type":"text","text":"contain multiple "},{"type":"codeVoice","code":"<property>"},{"type":"text","text":" elements."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here is a UI definition fragment specifying cell properties:"}]},{"type":"codeListing","syntax":"xml","code":["<object class=\"GtkTreeViewColumn\">","  <child>","    <object class=\"GtkCellRendererText\"\/>","    <cell-packing>","      <property name=\"align\">True<\/property>","      <property name=\"expand\">False<\/property>","    <\/cell-packing>","  <\/child>","<\/object>"]},{"anchor":"Subclassing-GtkCellLayout-implementations","level":2,"type":"heading","text":"Subclassing GtkCellLayout implementations"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When subclassing a widget that implements "},{"type":"codeVoice","code":"GtkCellLayout"},{"type":"text","text":" like"},{"type":"text","text":" "},{"type":"codeVoice","code":"GtkIconView"},{"type":"text","text":" or "},{"type":"codeVoice","code":"GtkComboBox"},{"type":"text","text":", there are some considerations related"},{"type":"text","text":" "},{"type":"text","text":"to the fact that these widgets internally use a "},{"type":"codeVoice","code":"GtkCellArea"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The cell area is exposed as a construct-only property by these"},{"type":"text","text":" "},{"type":"text","text":"widgets. This means that it is possible to e.g. do"}]},{"type":"codeListing","syntax":"c","code":["GtkWIdget *combo =","  g_object_new (GTK_TYPE_COMBO_BOX, \"cell-area\", my_cell_area, NULL);"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"to use a custom cell area with a combo box. But construct properties"},{"type":"text","text":" "},{"type":"text","text":"are only initialized after instance "},{"type":"codeVoice","code":"init()"},{"type":"text","text":" "},{"type":"text","text":"functions have run, which means that using functions which rely on"},{"type":"text","text":" "},{"type":"text","text":"the existence of the cell area in your subclass "},{"type":"codeVoice","code":"init()"},{"type":"text","text":" function will"},{"type":"text","text":" "},{"type":"text","text":"cause the default cell area to be instantiated. In this case, a provided"},{"type":"text","text":" "},{"type":"text","text":"construct property value will be ignored (with a warning, to alert"},{"type":"text","text":" "},{"type":"text","text":"you to the problem)."}]},{"type":"codeListing","syntax":"c","code":["static void","my_combo_box_init (MyComboBox *b)","{","  GtkCellRenderer *cell;","","  cell = gtk_cell_renderer_pixbuf_new ();","","  \/\/ The following call causes the default cell area for combo boxes,","  \/\/ a GtkCellAreaBox, to be instantiated","  gtk_cell_layout_pack_start (GTK_CELL_LAYOUT (b), cell, FALSE);","  ...","}","","GtkWidget *","my_combo_box_new (GtkCellArea *area)","{","  \/\/ This call is going to cause a warning about area being ignored","  return g_object_new (MY_TYPE_COMBO_BOX, \"cell-area\", area, NULL);","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If supporting alternative cell areas with your derived widget is"},{"type":"text","text":" "},{"type":"text","text":"not important, then this does not have to concern you. If you want"},{"type":"text","text":" "},{"type":"text","text":"to support alternative cell areas, you can do so by moving the"},{"type":"text","text":" "},{"type":"text","text":"problematic calls out of "},{"type":"codeVoice","code":"init()"},{"type":"text","text":" and into a "},{"type":"codeVoice","code":"constructor()"},{"type":"text","text":" "},{"type":"text","text":"for your class."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout"},{"type":"text","text":" type acts as an owner of an underlying "},{"type":"codeVoice","code":"GtkCellLayout"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It provides the methods that can operate on this data type through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayoutProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout"},{"type":"text","text":" as a strong reference or owner of a "},{"type":"codeVoice","code":"GtkCellLayout"},{"type":"text","text":" instance."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayoutRef"},{"type":"text","text":" (instead of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout"},{"type":"text","text":") for a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GtkCellLayout"},{"type":"text","text":" instance."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gtk\/celllayout"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/CellLayoutProtocol","doc:\/\/Gtk\/4GLib14PointerWrapperP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"An interface for packing cells"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CellLayout"}],"title":"CellLayout","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:3Gtk10CellLayoutC","modules":[{"name":"Gtk"}],"navigatorTitle":[{"kind":"identifier","text":"CellLayout"}]},"hierarchy":{"paths":[["doc:\/\/Gtk\/documentation\/Gtk"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(_:)-16ete","doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(_:)-1wsok","doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(_:)-7i2t5","doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(_:)-8kwc0","doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(_:)-pg5q","doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(cPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(gconstpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(gpointer:)","doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(opaquePointer:)","doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(raw:)-3vs8s","doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(raw:)-8s8cg","doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(retaining:)","doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(retainingCPointer:)","doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(retainingOpaquePointer:)","doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(retainingRaw:)-4b0az","doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(retainingRaw:)-ida8"]},{"title":"Instance Properties","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/metatypeReferenceForCellLayout","doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/ptr","doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/wrapperForCellLayout"]},{"title":"Type Properties","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/metatypeForCellLayout"]},{"title":"Default Implementations","identifiers":["doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/CellLayoutProtocol-Implementations"],"generated":true}],"references":{"doc://Gtk/documentation/Gtk/CellLayout":{"role":"symbol","title":"CellLayout","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CellLayout"}],"abstract":[{"type":"text","text":"An interface for packing cells"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CellLayout"}],"url":"\/documentation\/gtk\/celllayout"},"doc://Gtk/documentation/Gtk/CellLayoutProtocol":{"role":"symbol","title":"CellLayoutProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CellLayoutProtocol"}],"abstract":[{"type":"text","text":"An interface for packing cells"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayoutProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CellLayoutProtocol"}],"url":"\/documentation\/gtk\/celllayoutprotocol"},"doc://Gtk/documentation/Gtk/CellLayoutProtocol/cell_layout_ptr-8rd36":{"defaultImplementations":1,"role":"symbol","title":"cell_layout_ptr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"cell_layout_ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkCellLayout"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Typed pointer to the underlying "},{"type":"codeVoice","code":"GtkCellLayout"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayoutProtocol\/cell_layout_ptr-8rd36","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/gtk\/celllayoutprotocol\/cell_layout_ptr-8rd36"},"class.CellArea.html`cell-properties`":{"title":"cell properties","titleInlineContent":[{"type":"text","text":"cell properties"}],"type":"link","identifier":"class.CellArea.html`cell-properties`","url":"class.CellArea.html`cell-properties`"},"doc://Gtk/documentation/Gtk/CellLayout/init(retainingRaw:)-ida8":{"role":"symbol","title":"init(retainingRaw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingRaw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayoutProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(retainingRaw:)-ida8","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/celllayout\/init(retainingraw:)-ida8"},"doc://Gtk/documentation/Gtk":{"role":"collection","title":"Gtk","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk","kind":"symbol","type":"topic","url":"\/documentation\/gtk"},"doc://Gtk/documentation/Gtk/CellLayout/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GtkCellLayout"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayoutProtocol\/cell_layout_ptr-8rd36"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/celllayout\/ptr"},"doc://Gtk/documentation/Gtk/CellLayout/init(_:)-16ete":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkCellLayout"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(_:)-16ete","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/celllayout\/init(_:)-16ete"},"doc://Gtk/documentation/Gtk/CellLayout/metatypeForCellLayout":{"role":"symbol","title":"metatypeForCellLayout","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"metatypeForCellLayout"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GtkCellLayoutIface"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Return a "},{"type":"codeVoice","code":"GtkCellLayoutIface"},{"type":"text","text":" reference to the underlying class instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/metatypeForCellLayout","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/celllayout\/metatypeforcelllayout"},"doc://Gtk/documentation/Gtk/CellLayout/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a non-mutating "},{"type":"codeVoice","code":"gpointer"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/celllayout\/init(gpointer:)"},"doc://Gtk/documentation/Gtk/CellLayout/init(retainingRaw:)-4b0az":{"role":"symbol","title":"init(retainingRaw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingRaw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayoutProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(retainingRaw:)-4b0az","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/celllayout\/init(retainingraw:)-4b0az"},"doc://Gtk/documentation/Gtk/CellLayout/init(retainingOpaquePointer:)":{"role":"symbol","title":"init(retainingOpaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingOpaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayoutProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(retainingOpaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/celllayout\/init(retainingopaquepointer:)"},"doc://Gtk/documentation/Gtk/CellLayout/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayoutProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/celllayout\/init(opaquepointer:)"},"doc://Gtk/documentation/Gtk/CellLayout/metatypeReferenceForCellLayout":{"role":"symbol","title":"metatypeReferenceForCellLayout","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"metatypeReferenceForCellLayout"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GType","preciseIdentifier":"c:@T@GType"}],"abstract":[{"type":"text","text":"This getter returns the GLib type identifier registered for "},{"type":"codeVoice","code":"CellLayout"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/metatypeReferenceForCellLayout","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/celllayout\/metatypereferenceforcelllayout"},"doc://Gtk/documentation/Gtk/CellLayout/wrapperForCellLayout":{"role":"symbol","title":"wrapperForCellLayout","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrapperForCellLayout"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CellLayoutIfaceRef","preciseIdentifier":"s:3Gtk18CellLayoutIfaceRefV"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Return the "},{"type":"codeVoice","code":"CellLayoutIface"},{"type":"text","text":" wrapper referencing the metatype of the receiver."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/wrapperForCellLayout","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/celllayout\/wrapperforcelllayout"},"doc://Gtk/documentation/Gtk/CellLayout/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayoutProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/celllayout\/init(cpointer:)"},"doc://Gtk/documentation/Gtk/CellLayout/init(_:)-7i2t5":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayoutProtocol"},{"type":"text","text":" "},{"type":"codeVoice","code":"GtkCellLayout"},{"type":"text","text":" does not allow reference counting."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(_:)-7i2t5","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/celllayout\/init(_:)-7i2t5"},"doc://Gtk/documentation/Gtk/CellLayout/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:gtypes.h@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a non-mutating "},{"type":"codeVoice","code":"gconstpointer"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/celllayout\/init(gconstpointer:)"},"doc://Gtk/documentation/Gtk/CellLayout/init(_:)-pg5q":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkCellLayout"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"CellLayout"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(_:)-pg5q","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/celllayout\/init(_:)-pg5q"},"doc://Gtk/documentation/Gtk/CellLayout/init(raw:)-3vs8s":{"role":"symbol","title":"init(raw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"raw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayoutProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(raw:)-3vs8s","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/celllayout\/init(raw:)-3vs8s"},"doc://Gtk/documentation/Gtk/CellLayoutRef":{"role":"symbol","title":"CellLayoutRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CellLayoutRef"}],"abstract":[{"type":"text","text":"An interface for packing cells"}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayoutRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CellLayoutRef"}],"url":"\/documentation\/gtk\/celllayoutref"},"doc://Gtk/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/Gtk\/4GLib14PointerWrapperP"},"doc://Gtk/documentation/Gtk/CellLayout/init(raw:)-8s8cg":{"role":"symbol","title":"init(raw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"raw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayoutProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(raw:)-8s8cg","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/celllayout\/init(raw:)-8s8cg"},"doc://Gtk/documentation/Gtk/CellLayout/init(_:)-1wsok":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkCellLayout"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Optional initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(_:)-1wsok","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/celllayout\/init(_:)-1wsok"},"doc://Gtk/documentation/Gtk/CellLayout/init(_:)-8kwc0":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkCellLayout"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(_:)-8kwc0","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/celllayout\/init(_:)-8kwc0"},"doc://Gtk/documentation/Gtk/CellLayout/init(retaining:)":{"role":"symbol","title":"init(retaining:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retaining"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GtkCellLayout"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"codeVoice","code":"GtkCellLayout"},{"type":"text","text":" does not allow reference counting, so despite the name no actual retaining will occur."},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(retaining:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/celllayout\/init(retaining:)"},"doc://Gtk/documentation/Gtk/CellLayout/init(retainingCPointer:)":{"role":"symbol","title":"init(retainingCPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"retainingCPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayoutProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/init(retainingCPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gtk\/celllayout\/init(retainingcpointer:)"},"doc://Gtk/documentation/Gtk/CellLayout/CellLayoutProtocol-Implementations":{"role":"collectionGroup","title":"CellLayoutProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gtk\/documentation\/Gtk\/CellLayout\/CellLayoutProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gtk\/celllayout\/celllayoutprotocol-implementations"}}}