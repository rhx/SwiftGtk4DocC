{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ThreadPool"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ThreadPool"},{"type":"text","text":" type acts as an owner of an underlying "},{"type":"codeVoice","code":"GThreadPool"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It provides the methods that can operate on this data type through "},{"type":"codeVoice","code":"ThreadPoolProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"codeVoice","code":"ThreadPool"},{"type":"text","text":" as a strong reference or owner of a "},{"type":"codeVoice","code":"GThreadPool"},{"type":"text","text":" instance."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/threadpool"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","doc:\/\/GLib\/documentation\/GLib\/ThreadPoolProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/ThreadPool","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GThreadPool"},{"type":"text","text":" struct represents a thread pool. It has three"},{"type":"text","text":" "},{"type":"text","text":"public read-only members, but the underlying struct is bigger,"},{"type":"text","text":" "},{"type":"text","text":"so you must not copy this struct."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ThreadPool"}],"title":"ThreadPool","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:4GLib10ThreadPoolC","modules":[{"name":"GLib"}],"navigatorTitle":[{"kind":"identifier","text":"ThreadPool"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(_:)-1r3ft","doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(_:)-3sb8k","doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(_:)-5qqyk","doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(_:)-949on","doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(_:)-xcct","doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(cPointer:)","doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(gconstpointer:)","doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(gpointer:)","doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(opaquePointer:)","doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(raw:)-14ipo","doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(raw:)-49ior","doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(retaining:)","doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(retainingCPointer:)","doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(retainingOpaquePointer:)","doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(retainingRaw:)-2gqbl","doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(retainingRaw:)-53ai8"]},{"title":"Instance Properties","identifiers":["doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/ptr"]},{"title":"Type Methods","identifiers":["doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/new(full:userData:itemFreeFunc:maxThreads:exclusive:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/ThreadPoolProtocol-Implementations"],"generated":true}],"references":{"doc://GLib/documentation/GLib/ThreadPool":{"role":"symbol","title":"ThreadPool","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ThreadPool"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GThreadPool"},{"type":"text","text":" struct represents a thread pool. It has three"},{"type":"text","text":" "},{"type":"text","text":"public read-only members, but the underlying struct is bigger,"},{"type":"text","text":" "},{"type":"text","text":"so you must not copy this struct."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ThreadPool","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ThreadPool"}],"url":"\/documentation\/glib\/threadpool"},"doc://GLib/documentation/GLib/ThreadPool/init(retaining:)":{"role":"symbol","title":"init(retaining:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retaining"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GThreadPool"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"codeVoice","code":"GThreadPool"},{"type":"text","text":" does not allow reference counting, so despite the name no actual retaining will occur."},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"ThreadPool"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(retaining:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/threadpool\/init(retaining:)"},"doc://GLib/documentation/GLib/ThreadPool/ThreadPoolProtocol-Implementations":{"role":"collectionGroup","title":"ThreadPoolProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/ThreadPoolProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/threadpool\/threadpoolprotocol-implementations"},"doc://GLib/documentation/GLib/ThreadPool/init(retainingRaw:)-2gqbl":{"role":"symbol","title":"init(retainingRaw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingRaw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"ThreadPoolProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(retainingRaw:)-2gqbl","kind":"symbol","type":"topic","url":"\/documentation\/glib\/threadpool\/init(retainingraw:)-2gqbl"},"doc://GLib/documentation/GLib/PointerWrapper":{"role":"symbol","title":"PointerWrapper","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PointerWrapper"}],"abstract":[{"type":"text","text":"Protocol for GLib types that wrap pointers."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PointerWrapper"}],"url":"\/documentation\/glib\/pointerwrapper"},"doc://GLib/documentation/GLib/ThreadPool/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"ThreadPoolProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/threadpool\/init(opaquepointer:)"},"doc://GLib/documentation/GLib/ThreadPoolProtocol":{"role":"symbol","title":"ThreadPoolProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ThreadPoolProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GThreadPool"},{"type":"text","text":" struct represents a thread pool. It has three"},{"type":"text","text":" "},{"type":"text","text":"public read-only members, but the underlying struct is bigger,"},{"type":"text","text":" "},{"type":"text","text":"so you must not copy this struct."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ThreadPoolProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ThreadPoolProtocol"}],"url":"\/documentation\/glib\/threadpoolprotocol"},"doc://GLib/documentation/GLib/ThreadPool/init(retainingRaw:)-53ai8":{"role":"symbol","title":"init(retainingRaw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingRaw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"ThreadPoolProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(retainingRaw:)-53ai8","kind":"symbol","type":"topic","url":"\/documentation\/glib\/threadpool\/init(retainingraw:)-53ai8"},"doc://GLib/documentation/GLib/ThreadPool/init(_:)-5qqyk":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GThreadPool"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"ThreadPool"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(_:)-5qqyk","kind":"symbol","type":"topic","url":"\/documentation\/glib\/threadpool\/init(_:)-5qqyk"},"doc://GLib/documentation/GLib/ThreadPool/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GThreadPool"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"codeVoice","code":"_ptr"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/glib\/threadpool\/ptr"},"doc://GLib/documentation/GLib/ThreadPool/init(raw:)-14ipo":{"role":"symbol","title":"init(raw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"raw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"ThreadPoolProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(raw:)-14ipo","kind":"symbol","type":"topic","url":"\/documentation\/glib\/threadpool\/init(raw:)-14ipo"},"doc://GLib/documentation/GLib/ThreadPool/init(_:)-3sb8k":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GThreadPool"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Optional initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"ThreadPool"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(_:)-3sb8k","kind":"symbol","type":"topic","url":"\/documentation\/glib\/threadpool\/init(_:)-3sb8k"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/ThreadPool/init(retainingOpaquePointer:)":{"role":"symbol","title":"init(retainingOpaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingOpaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"ThreadPoolProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(retainingOpaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/threadpool\/init(retainingopaquepointer:)"},"doc://GLib/documentation/GLib/ThreadPool/new(full:userData:itemFreeFunc:maxThreads:exclusive:)":{"role":"symbol","title":"new(full:userData:itemFreeFunc:maxThreads:exclusive:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"new"},{"kind":"text","text":"("},{"kind":"externalParam","text":"full"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GFunc","preciseIdentifier":"c:@T@GFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"itemFreeFunc"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GDestroyNotify","preciseIdentifier":"c:@T@GDestroyNotify"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"maxThreads"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"exclusive"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ThreadPool","preciseIdentifier":"s:4GLib10ThreadPoolC"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"This function creates a new thread pool similar to "},{"type":"codeVoice","code":"g_thread_pool_new()"},{"type":"text","text":" "},{"type":"text","text":"but allowing "},{"type":"codeVoice","code":"item_free_func"},{"type":"text","text":" to be specified to free the data passed"},{"type":"text","text":" "},{"type":"text","text":"to "},{"type":"codeVoice","code":"g_thread_pool_push()"},{"type":"text","text":" in the case that the "},{"type":"codeVoice","code":"GThreadPool"},{"type":"text","text":" is stopped"},{"type":"text","text":" "},{"type":"text","text":"and freed before all tasks have been executed."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/new(full:userData:itemFreeFunc:maxThreads:exclusive:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/threadpool\/new(full:userdata:itemfreefunc:maxthreads:exclusive:)"},"doc://GLib/documentation/GLib/ThreadPool/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"ThreadPoolProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/threadpool\/init(cpointer:)"},"doc://GLib/documentation/GLib/ThreadPool/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a non-mutating "},{"type":"codeVoice","code":"gpointer"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"ThreadPool"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/threadpool\/init(gpointer:)"},"doc://GLib/documentation/GLib/ThreadPool/init(_:)-xcct":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GThreadPool"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"ThreadPool"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(_:)-xcct","kind":"symbol","type":"topic","url":"\/documentation\/glib\/threadpool\/init(_:)-xcct"},"doc://GLib/documentation/GLib/ThreadPool/init(raw:)-49ior":{"role":"symbol","title":"init(raw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"raw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"ThreadPoolProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(raw:)-49ior","kind":"symbol","type":"topic","url":"\/documentation\/glib\/threadpool\/init(raw:)-49ior"},"doc://GLib/documentation/GLib/ThreadPool/init(retainingCPointer:)":{"role":"symbol","title":"init(retainingCPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"retainingCPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"ThreadPoolProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(retainingCPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/threadpool\/init(retainingcpointer:)"},"doc://GLib/documentation/GLib/ThreadPool/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a non-mutating "},{"type":"codeVoice","code":"gconstpointer"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"ThreadPool"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/threadpool\/init(gconstpointer:)"},"doc://GLib/documentation/GLib/ThreadPool/init(_:)-1r3ft":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GThreadPool"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"ThreadPool"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(_:)-1r3ft","kind":"symbol","type":"topic","url":"\/documentation\/glib\/threadpool\/init(_:)-1r3ft"},"doc://GLib/documentation/GLib/ThreadPool/init(_:)-949on":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"codeVoice","code":"ThreadPoolProtocol"},{"type":"text","text":" "},{"type":"codeVoice","code":"GThreadPool"},{"type":"text","text":" does not allow reference counting."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ThreadPool\/init(_:)-949on","kind":"symbol","type":"topic","url":"\/documentation\/glib\/threadpool\/init(_:)-949on"}}}