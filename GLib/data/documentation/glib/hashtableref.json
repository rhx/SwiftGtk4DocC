{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HashTableRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"HashTableRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GHashTable"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"codeVoice","code":"HashTableProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"codeVoice","code":"HashTableRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"GHashTable"},{"type":"text","text":" instance."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/hashtableref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/HashTableProtocol","doc:\/\/GLib\/documentation\/GLib\/PointerWrapper"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GHashTable"},{"type":"text","text":" struct is an opaque data structure to represent a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"..\/Protocols\/HashTableProtocol.html"},{"type":"text","text":". It should only be accessed via the"},{"type":"text","text":" "},{"type":"text","text":"following functions."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HashTableRef"}],"title":"HashTableRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:4GLib12HashTableRefV","modules":[{"name":"GLib"}],"navigatorTitle":[{"kind":"identifier","text":"HashTableRef"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/init(_:)-2a0o7","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/init(_:)-3s5w3","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/init(_:)-68wii","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/init(_:)-7jmn7","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/init(_:)-9idow","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/init(cPointer:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/init(constPointer:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/init(gconstpointer:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/init(gpointer:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/init(mutating:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/init(opaquePointer:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/ptr"]},{"title":"Type Methods","identifiers":["doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/new(full:keyEqualFunc:keyDestroyFunc:valueDestroyFunc:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/HashTableProtocol-Implementations","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/PointerWrapper-Implementations"],"generated":true}],"references":{"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/HashTableRef/init(_:)-2a0o7":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GHashTable"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/init(_:)-2a0o7","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/init(_:)-2a0o7"},"doc://GLib/documentation/GLib/HashTableProtocol":{"role":"symbol","title":"HashTableProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HashTableProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GHashTable"},{"type":"text","text":" struct is an opaque data structure to represent a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"..\/Protocols\/HashTableProtocol.html"},{"type":"text","text":". It should only be accessed via the"},{"type":"text","text":" "},{"type":"text","text":"following functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HashTableProtocol"}],"url":"\/documentation\/glib\/hashtableprotocol"},"doc://GLib/documentation/GLib/HashTableRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"HashTableProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/init(cpointer:)"},"doc://GLib/documentation/GLib/HashTableRef/init(_:)-9idow":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"codeVoice","code":"HashTableProtocol"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/init(_:)-9idow","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/init(_:)-9idow"},"doc://GLib/documentation/GLib/HashTableRef/HashTableProtocol-Implementations":{"role":"collectionGroup","title":"HashTableProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/HashTableProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/hashtableref\/hashtableprotocol-implementations"},"doc://GLib/documentation/GLib/HashTableRef/init(_:)-7jmn7":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GHashTable"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/init(_:)-7jmn7","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/init(_:)-7jmn7"},"doc://GLib/documentation/GLib/HashTableRef/new(full:keyEqualFunc:keyDestroyFunc:valueDestroyFunc:)":{"role":"symbol","title":"new(full:keyEqualFunc:keyDestroyFunc:valueDestroyFunc:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"new"},{"kind":"text","text":"("},{"kind":"externalParam","text":"full"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GHashFunc","preciseIdentifier":"c:@T@GHashFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"keyEqualFunc"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GEqualFunc","preciseIdentifier":"c:@T@GEqualFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"keyDestroyFunc"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GDestroyNotify","preciseIdentifier":"c:@T@GDestroyNotify"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"valueDestroyFunc"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GDestroyNotify","preciseIdentifier":"c:@T@GDestroyNotify"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"HashTableRef","preciseIdentifier":"s:4GLib12HashTableRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"GHashTable"},{"type":"text","text":" like "},{"type":"codeVoice","code":"g_hash_table_new()"},{"type":"text","text":" with a reference"},{"type":"text","text":" "},{"type":"text","text":"count of 1 and allows to specify functions to free the memory"},{"type":"text","text":" "},{"type":"text","text":"allocated for the key and value that get called when removing the"},{"type":"text","text":" "},{"type":"text","text":"entry from the "},{"type":"codeVoice","code":"GHashTable"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/new(full:keyEqualFunc:keyDestroyFunc:valueDestroyFunc:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/new(full:keyequalfunc:keydestroyfunc:valuedestroyfunc:)"},"doc://GLib/documentation/GLib/HashTableRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GHashTable"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"codeVoice","code":"hash_table_ptr"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/ptr"},"doc://GLib/documentation/GLib/HashTableRef/PointerWrapper-Implementations":{"role":"collectionGroup","title":"PointerWrapper Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/PointerWrapper-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/hashtableref\/pointerwrapper-implementations"},"doc://GLib/documentation/GLib/HashTableRef/init(_:)-68wii":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GHashTable"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/init(_:)-68wii","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/init(_:)-68wii"},"doc://GLib/documentation/GLib/HashTableRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/init(gpointer:)"},"doc://GLib/documentation/GLib/HashTableRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/init(gconstpointer:)"},"doc://GLib/documentation/GLib/HashTableRef":{"role":"symbol","title":"HashTableRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HashTableRef"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GHashTable"},{"type":"text","text":" struct is an opaque data structure to represent a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"..\/Protocols\/HashTableProtocol.html"},{"type":"text","text":". It should only be accessed via the"},{"type":"text","text":" "},{"type":"text","text":"following functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HashTableRef"}],"url":"\/documentation\/glib\/hashtableref"},"doc://GLib/documentation/GLib/HashTableRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"HashTableProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/init(opaquepointer:)"},"../Protocols/HashTableProtocol.html":{"title":"Hash Table","titleInlineContent":[{"type":"text","text":"Hash Table"}],"type":"link","identifier":"..\/Protocols\/HashTableProtocol.html","url":"..\/Protocols\/HashTableProtocol.html"},"doc://GLib/documentation/GLib/HashTableRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"HashTableProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/init(constpointer:)"},"doc://GLib/documentation/GLib/PointerWrapper":{"role":"symbol","title":"PointerWrapper","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PointerWrapper"}],"abstract":[{"type":"text","text":"Protocol for GLib types that wrap pointers."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PointerWrapper"}],"url":"\/documentation\/glib\/pointerwrapper"},"doc://GLib/documentation/GLib/HashTableRef/init(_:)-3s5w3":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GHashTable"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/init(_:)-3s5w3","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/init(_:)-3s5w3"},"doc://GLib/documentation/GLib/HashTableRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"HashTableProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/init(mutating:)"}}}