{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replace"},{"kind":"text","text":"("},{"kind":"externalParam","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"stringLen"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gssize","preciseIdentifier":"c:@T@gssize"},{"kind":"text","text":", "},{"kind":"externalParam","text":"startPosition"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"replacement"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"matchOptions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexMatchFlags","preciseIdentifier":"s:4GLib15RegexMatchFlagsV","text":"RegexMatchFlags"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"!"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are also escapes that changes the case of the following text:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"\\l: Convert to lower case the next character"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"\\u: Convert to upper case the next character"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"\\L: Convert to lower case till \\E"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"\\U: Convert to upper case till \\E"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"\\E: End case modification"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you do not need to use backreferences use "},{"type":"codeVoice","code":"g_regex_replace_literal()"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"replacement"},{"type":"text","text":" string must be UTF-8 encoded even if "},{"type":"codeVoice","code":"G_REGEX_RAW"},{"type":"text","text":" was"},{"type":"text","text":" "},{"type":"text","text":"passed to "},{"type":"codeVoice","code":"g_regex_new()"},{"type":"text","text":". If you want to use not UTF-8 encoded strings"},{"type":"text","text":" "},{"type":"text","text":"you can use "},{"type":"codeVoice","code":"g_regex_replace_literal()"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Setting "},{"type":"codeVoice","code":"start_position"},{"type":"text","text":" differs from just passing over a shortened"},{"type":"text","text":" "},{"type":"text","text":"string and setting "},{"type":"codeVoice","code":"G_REGEX_MATCH_NOTBOL"},{"type":"text","text":" in the case of a pattern that"},{"type":"text","text":" "},{"type":"text","text":"begins with any kind of lookbehind assertion, such as “\\b”."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/regexref\/replace(string:stringlen:startposition:replacement:matchoptions:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/RegexRef\/replace(string:stringLen:startPosition:replacement:matchOptions:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Replaces all occurrences of the pattern in "},{"type":"codeVoice","code":"regex"},{"type":"text","text":" with the"},{"type":"text","text":" "},{"type":"text","text":"replacement text. Backreferences of the form ‘\\number’ or"},{"type":"text","text":" "},{"type":"text","text":"‘\\g<number>’ in the replacement text are interpolated by the"},{"type":"text","text":" "},{"type":"text","text":"number-th captured subexpression of the match, ‘\\g<name>’ refers"},{"type":"text","text":" "},{"type":"text","text":"to the captured subexpression with the given name. ‘\\0’ refers"},{"type":"text","text":" "},{"type":"text","text":"to the complete match, but ‘\\0’ followed by a number is the octal"},{"type":"text","text":" "},{"type":"text","text":"representation of a character. To include a literal ’' in the"},{"type":"text","text":" "},{"type":"text","text":"replacement, write ‘\\\\’."}],"kind":"symbol","metadata":{"role":"symbol","title":"replace(string:stringLen:startPosition:replacement:matchOptions:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replace"},{"kind":"text","text":"("},{"kind":"externalParam","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"stringLen"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gssize","preciseIdentifier":"c:@T@gssize"},{"kind":"text","text":", "},{"kind":"externalParam","text":"startPosition"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"replacement"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"matchOptions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RegexMatchFlags","preciseIdentifier":"s:4GLib15RegexMatchFlagsV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"!"}],"symbolKind":"method","externalID":"s:4GLib13RegexProtocolPAAE7replace6string0E3Len13startPosition11replacement12matchOptionsSSSgSPys4Int8VGSg_S2iAnA0B10MatchFlagsVtKF::SYNTHESIZED::s:4GLib8RegexRefV","extendedModule":"GLib","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/RegexRef","doc:\/\/GLib\/documentation\/GLib\/RegexRef\/RegexProtocol-Implementations"]]},"references":{"doc://GLib/documentation/GLib/RegexMatchFlags":{"role":"symbol","title":"RegexMatchFlags","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RegexMatchFlags"}],"abstract":[{"type":"text","text":"Flags specifying match-time options."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexMatchFlags","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RegexMatchFlags"}],"url":"\/documentation\/glib\/regexmatchflags"},"doc://GLib/documentation/GLib/RegexRef/RegexProtocol-Implementations":{"role":"collectionGroup","title":"RegexProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexRef\/RegexProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/regexref\/regexprotocol-implementations"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/RegexRef/replace(string:stringLen:startPosition:replacement:matchOptions:)":{"role":"symbol","title":"replace(string:stringLen:startPosition:replacement:matchOptions:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replace"},{"kind":"text","text":"("},{"kind":"externalParam","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"stringLen"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gssize","preciseIdentifier":"c:@T@gssize"},{"kind":"text","text":", "},{"kind":"externalParam","text":"startPosition"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"replacement"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"matchOptions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RegexMatchFlags","preciseIdentifier":"s:4GLib15RegexMatchFlagsV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Replaces all occurrences of the pattern in "},{"type":"codeVoice","code":"regex"},{"type":"text","text":" with the"},{"type":"text","text":" "},{"type":"text","text":"replacement text. Backreferences of the form ‘\\number’ or"},{"type":"text","text":" "},{"type":"text","text":"‘\\g<number>’ in the replacement text are interpolated by the"},{"type":"text","text":" "},{"type":"text","text":"number-th captured subexpression of the match, ‘\\g<name>’ refers"},{"type":"text","text":" "},{"type":"text","text":"to the captured subexpression with the given name. ‘\\0’ refers"},{"type":"text","text":" "},{"type":"text","text":"to the complete match, but ‘\\0’ followed by a number is the octal"},{"type":"text","text":" "},{"type":"text","text":"representation of a character. To include a literal ’' in the"},{"type":"text","text":" "},{"type":"text","text":"replacement, write ‘\\\\’."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexRef\/replace(string:stringLen:startPosition:replacement:matchOptions:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/regexref\/replace(string:stringlen:startposition:replacement:matchoptions:)"},"doc://GLib/documentation/GLib/RegexRef":{"role":"symbol","title":"RegexRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RegexRef"}],"abstract":[{"type":"text","text":"The g_regex_*() functions implement regular"},{"type":"text","text":" "},{"type":"text","text":"expression pattern matching using syntax and semantics similar to"},{"type":"text","text":" "},{"type":"text","text":"Perl regular expression."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RegexRef"}],"url":"\/documentation\/glib\/regexref"}}}