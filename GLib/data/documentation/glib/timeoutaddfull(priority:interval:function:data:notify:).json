{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"timeoutAddFull"},{"kind":"text","text":"("},{"kind":"externalParam","text":"priority"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"interval"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GSourceFunc","preciseIdentifier":"c:@T@GSourceFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"notify"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GDestroyNotify","preciseIdentifier":"c:@T@GDestroyNotify"},{"kind":"text","text":"? = nil) -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that timeout functions may be delayed, due to the processing of other"},{"type":"text","text":" "},{"type":"text","text":"event sources. Thus they should not be relied on for precise timing."},{"type":"text","text":" "},{"type":"text","text":"After each call to the timeout function, the time of the next"},{"type":"text","text":" "},{"type":"text","text":"timeout is recalculated based on the current time and the given interval"},{"type":"text","text":" "},{"type":"text","text":"(it does not try to ‘catch up’ time lost in delays)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"See "},{"type":"reference","isActive":true,"identifier":"#mainloop-memory-management"},{"type":"text","text":" for details"},{"type":"text","text":" "},{"type":"text","text":"on how to handle the return value and memory management of "},{"type":"codeVoice","code":"data"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This internally creates a main loop source using "},{"type":"codeVoice","code":"g_timeout_source_new()"},{"type":"text","text":" "},{"type":"text","text":"and attaches it to the global "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContext"},{"type":"text","text":" using "},{"type":"codeVoice","code":"g_source_attach()"},{"type":"text","text":", so"},{"type":"text","text":" "},{"type":"text","text":"the callback will be invoked in whichever thread is running that main"},{"type":"text","text":" "},{"type":"text","text":"context. You can do these steps manually if you need greater control or to"},{"type":"text","text":" "},{"type":"text","text":"use a custom main context."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The interval given is in terms of monotonic time, not wall clock time."},{"type":"text","text":" "},{"type":"text","text":"See "},{"type":"codeVoice","code":"g_get_monotonic_time()"},{"type":"text","text":"."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/timeoutaddfull(priority:interval:function:data:notify:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/timeoutAddFull(priority:interval:function:data:notify:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Sets a function to be called at regular intervals, with the given"},{"type":"text","text":" "},{"type":"text","text":"priority.  The function is called repeatedly until it returns"},{"type":"text","text":" "},{"type":"codeVoice","code":"false"},{"type":"text","text":", at which point the timeout is automatically destroyed and"},{"type":"text","text":" "},{"type":"text","text":"the function will not be called again.  The "},{"type":"codeVoice","code":"notify"},{"type":"text","text":" function is"},{"type":"text","text":" "},{"type":"text","text":"called when the timeout is destroyed.  The first call to the"},{"type":"text","text":" "},{"type":"text","text":"function will be at the end of the first "},{"type":"codeVoice","code":"interval"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"timeoutAddFull"},{"kind":"text","text":"("},{"kind":"externalParam","text":"priority"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"interval"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GSourceFunc","preciseIdentifier":"c:@T@GSourceFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"notify"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GDestroyNotify","preciseIdentifier":"c:@T@GDestroyNotify"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"title":"timeoutAddFull(priority:interval:function:data:notify:)","roleHeading":"Function","role":"symbol","symbolKind":"func","externalID":"s:4GLib14timeoutAddFull8priority8interval8function4data6notifyS2i_Sis5Int32VSvSgXCSgAJyAJXCSgtF","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"references":{"doc://GLib/documentation/GLib/timeoutAddFull(priority:interval:function:data:notify:)":{"role":"symbol","title":"timeoutAddFull(priority:interval:function:data:notify:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"timeoutAddFull"},{"kind":"text","text":"("},{"kind":"externalParam","text":"priority"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"interval"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GSourceFunc","preciseIdentifier":"c:@T@GSourceFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"notify"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GDestroyNotify","preciseIdentifier":"c:@T@GDestroyNotify"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Sets a function to be called at regular intervals, with the given"},{"type":"text","text":" "},{"type":"text","text":"priority.  The function is called repeatedly until it returns"},{"type":"text","text":" "},{"type":"codeVoice","code":"false"},{"type":"text","text":", at which point the timeout is automatically destroyed and"},{"type":"text","text":" "},{"type":"text","text":"the function will not be called again.  The "},{"type":"codeVoice","code":"notify"},{"type":"text","text":" function is"},{"type":"text","text":" "},{"type":"text","text":"called when the timeout is destroyed.  The first call to the"},{"type":"text","text":" "},{"type":"text","text":"function will be at the end of the first "},{"type":"codeVoice","code":"interval"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/timeoutAddFull(priority:interval:function:data:notify:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/timeoutaddfull(priority:interval:function:data:notify:)"},"doc://GLib/documentation/GLib/MainContext":{"role":"symbol","title":"MainContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MainContext"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GMainContext"},{"type":"text","text":" struct is an opaque data"},{"type":"text","text":" "},{"type":"text","text":"type representing a set of sources to be handled in a main loop."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MainContext"}],"url":"\/documentation\/glib\/maincontext"},"#mainloop-memory-management":{"title":"memory management of sources","titleInlineContent":[{"type":"text","text":"memory management of sources"}],"type":"link","identifier":"#mainloop-memory-management","url":"#mainloop-memory-management"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"}}}