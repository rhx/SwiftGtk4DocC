{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/action\/init(_:)-3bofv","title":"init!(UnsafeMutablePointer<AtkAction>?)","type":"init"},{"path":"\/documentation\/atk\/action\/init(_:)-6fsdq","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/action\/init(_:)-6y2n1","title":"init!(UnsafePointer<AtkAction>?)","type":"init"},{"path":"\/documentation\/atk\/action\/init(_:)-7m75s","title":"init(UnsafePointer<AtkAction>)","type":"init"},{"path":"\/documentation\/atk\/action\/init(_:)-98ycn","title":"init(UnsafeMutablePointer<AtkAction>)","type":"init"},{"path":"\/documentation\/atk\/action\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/action\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/action\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/action\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/action\/init(raw:)-4wbon","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/action\/init(raw:)-8r66y","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/action\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkAction>)","type":"init"},{"path":"\/documentation\/atk\/action\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/action\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/action\/init(retainingraw:)-8cdm0","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/action\/init(retainingraw:)-zc8o","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/action\/metatypereferenceforaction","title":"var metatypeReferenceForAction: GType","type":"property"},{"path":"\/documentation\/atk\/action\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"path":"\/documentation\/atk\/action\/wrapperforaction","title":"var wrapperForAction: ActionIfaceRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/action\/metatypeforaction","title":"static var metatypeForAction: AtkActionIface?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/action\/action_ptr","title":"var action_ptr: UnsafeMutablePointer<AtkAction>!","type":"property"},{"path":"\/documentation\/atk\/action\/nactions","title":"var nActions: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/action\/doaction(i:)","title":"func doAction(i: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/action\/getdescription(i:)","title":"func getDescription(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/action\/getkeybinding(i:)","title":"func getKeybinding(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/action\/getlocalizedname(i:)","title":"func getLocalizedName(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/action\/getnactions()","title":"func getNActions() -> Int","type":"method"},{"path":"\/documentation\/atk\/action\/getname(i:)","title":"func getName(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/action\/setdescription(i:desc:)","title":"func setDescription(i: Int, desc: UnsafePointer<gchar>!) -> Bool","type":"method"}],"path":"\/documentation\/atk\/action\/actionprotocol-implementations","title":"ActionProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/action","title":"Action","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/attribute\/init(_:)-1l8ea","title":"init(UnsafeMutablePointer<AtkAttribute>)","type":"init"},{"path":"\/documentation\/atk\/attribute\/init(_:)-6s7e0","title":"init!(UnsafeMutablePointer<AtkAttribute>?)","type":"init"},{"path":"\/documentation\/atk\/attribute\/init(_:)-6sd15","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/attribute\/init(_:)-8dqhg","title":"init(UnsafePointer<AtkAttribute>)","type":"init"},{"path":"\/documentation\/atk\/attribute\/init(_:)-8p4gy","title":"init!(UnsafePointer<AtkAttribute>?)","type":"init"},{"path":"\/documentation\/atk\/attribute\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/attribute\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/attribute\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/attribute\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/attribute\/init(raw:)-6nil0","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/attribute\/init(raw:)-97ux3","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/attribute\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkAttribute>)","type":"init"},{"path":"\/documentation\/atk\/attribute\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/attribute\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/attribute\/init(retainingraw:)-1axdz","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/attribute\/init(retainingraw:)-9bltf","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/attribute\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/attribute\/name","title":"var name: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/atk\/attribute\/value","title":"var value: UnsafeMutablePointer<gchar>!","type":"property"}],"path":"\/documentation\/atk\/attribute\/attributeprotocol-implementations","title":"AttributeProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/attribute","title":"Attribute","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/component\/init(_:)-32c21","title":"init(UnsafePointer<AtkComponent>)","type":"init"},{"path":"\/documentation\/atk\/component\/init(_:)-5k0ub","title":"init(UnsafeMutablePointer<AtkComponent>)","type":"init"},{"path":"\/documentation\/atk\/component\/init(_:)-82p3i","title":"init!(UnsafePointer<AtkComponent>?)","type":"init"},{"path":"\/documentation\/atk\/component\/init(_:)-9kgc0","title":"init!(UnsafeMutablePointer<AtkComponent>?)","type":"init"},{"path":"\/documentation\/atk\/component\/init(_:)-zroe","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/component\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/component\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/component\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/component\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/component\/init(raw:)-38bd9","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/component\/init(raw:)-5snr2","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/component\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkComponent>)","type":"init"},{"path":"\/documentation\/atk\/component\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/component\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/component\/init(retainingraw:)-3l7z5","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/component\/init(retainingraw:)-7yig8","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/component\/metatypereferenceforcomponent","title":"var metatypeReferenceForComponent: GType","type":"property"},{"path":"\/documentation\/atk\/component\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"path":"\/documentation\/atk\/component\/wrapperforcomponent","title":"var wrapperForComponent: ComponentIfaceRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/component\/metatypeforcomponent","title":"static var metatypeForComponent: AtkComponentIface?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/component\/alpha","title":"var alpha: Double","type":"property"},{"path":"\/documentation\/atk\/component\/component_ptr","title":"var component_ptr: UnsafeMutablePointer<AtkComponent>!","type":"property"},{"path":"\/documentation\/atk\/component\/layer","title":"var layer: AtkLayer","type":"property"},{"path":"\/documentation\/atk\/component\/mdizorder","title":"var mdiZorder: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/component\/addfocus(handler:)","title":"func addFocus(handler: AtkFocusHandler?) -> Int","type":"method"},{"path":"\/documentation\/atk\/component\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ComponentSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/component\/connect(signal:flags:handler:)","title":"func connect(signal: ComponentSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/component\/contains(x:y:coordtype:)","title":"func contains(x: Int, y: Int, coordType: AtkCoordType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/component\/getalpha()","title":"func getAlpha() -> Double","type":"method"},{"path":"\/documentation\/atk\/component\/getextents(x:y:width:height:coordtype:)","title":"func getExtents(x: UnsafeMutablePointer<gint>!, y: UnsafeMutablePointer<gint>!, width: UnsafeMutablePointer<gint>!, height: UnsafeMutablePointer<gint>!, coordType: AtkCoordType)","type":"method"},{"path":"\/documentation\/atk\/component\/getlayer()","title":"func getLayer() -> AtkLayer","type":"method"},{"path":"\/documentation\/atk\/component\/getmdizorder()","title":"func getMdiZorder() -> Int","type":"method"},{"path":"\/documentation\/atk\/component\/getposition(x:y:coordtype:)","title":"func getPosition(x: UnsafeMutablePointer<gint>!, y: UnsafeMutablePointer<gint>!, coordType: AtkCoordType)","type":"method"},{"path":"\/documentation\/atk\/component\/getsize(width:height:)","title":"func getSize(width: UnsafeMutablePointer<gint>!, height: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/atk\/component\/grabfocus()","title":"func grabFocus() -> Bool","type":"method"},{"path":"\/documentation\/atk\/component\/onboundschanged(flags:handler:)","title":"func onBoundsChanged(flags: ConnectFlags, handler: (ComponentRef, RectangleRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/component\/refaccessibleatpoint(x:y:coordtype:)","title":"func refAccessibleAtPoint(x: Int, y: Int, coordType: AtkCoordType) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/component\/removefocushandler(handlerid:)","title":"func removeFocusHandler(handlerId: Int)","type":"method"},{"path":"\/documentation\/atk\/component\/scrollto(type:)","title":"func scrollTo(type: AtkScrollType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/component\/scrolltopoint(coords:x:y:)","title":"func scrollToPoint(coords: AtkCoordType, x: Int, y: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/component\/setextents(x:y:width:height:coordtype:)","title":"func setExtents(x: Int, y: Int, width: Int, height: Int, coordType: AtkCoordType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/component\/setposition(x:y:coordtype:)","title":"func setPosition(x: Int, y: Int, coordType: AtkCoordType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/component\/setsize(width:height:)","title":"func setSize(width: Int, height: Int) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/component\/boundschangedsignal","title":"static var boundsChangedSignal: ComponentSignalName","type":"property"}],"path":"\/documentation\/atk\/component\/componentprotocol-implementations","title":"ComponentProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/component","title":"Component","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/document\/init(_:)-3bia1","title":"init(UnsafeMutablePointer<AtkDocument>)","type":"init"},{"path":"\/documentation\/atk\/document\/init(_:)-43pdh","title":"init!(UnsafeMutablePointer<AtkDocument>?)","type":"init"},{"path":"\/documentation\/atk\/document\/init(_:)-6pce4","title":"init(UnsafePointer<AtkDocument>)","type":"init"},{"path":"\/documentation\/atk\/document\/init(_:)-9e3bc","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/document\/init(_:)-9e7y1","title":"init!(UnsafePointer<AtkDocument>?)","type":"init"},{"path":"\/documentation\/atk\/document\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/document\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/document\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/document\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/document\/init(raw:)-6dmt8","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/document\/init(raw:)-8ac2v","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/document\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkDocument>)","type":"init"},{"path":"\/documentation\/atk\/document\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/document\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/document\/init(retainingraw:)-6bh74","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/document\/init(retainingraw:)-6q7i","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/document\/metatypereferencefordocument","title":"var metatypeReferenceForDocument: GType","type":"property"},{"path":"\/documentation\/atk\/document\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"path":"\/documentation\/atk\/document\/wrapperfordocument","title":"var wrapperForDocument: DocumentIfaceRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/document\/metatypefordocument","title":"static var metatypeForDocument: AtkDocumentIface?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/document\/attributes","title":"var attributes: UnsafeMutablePointer<AtkAttributeSet>!","type":"property"},{"path":"\/documentation\/atk\/document\/currentpagenumber","title":"var currentPageNumber: Int","type":"property"},{"path":"\/documentation\/atk\/document\/document","title":"var document: gpointer?","type":"property"},{"path":"\/documentation\/atk\/document\/documenttype","title":"var documentType: String!","type":"property"},{"path":"\/documentation\/atk\/document\/document_ptr","title":"var document_ptr: UnsafeMutablePointer<AtkDocument>!","type":"property"},{"path":"\/documentation\/atk\/document\/locale","title":"var locale: String!","type":"property"},{"path":"\/documentation\/atk\/document\/pagecount","title":"var pageCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/document\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: DocumentSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/document\/connect(signal:flags:handler:)","title":"func connect(signal: DocumentSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/document\/getattributevalue(attributename:)","title":"func getAttributeValue(attributeName: UnsafePointer<gchar>!) -> String!","type":"method"},{"path":"\/documentation\/atk\/document\/getattributes()","title":"func getAttributes() -> UnsafeMutablePointer<AtkAttributeSet>!","type":"method"},{"path":"\/documentation\/atk\/document\/getcurrentpagenumber()","title":"func getCurrentPageNumber() -> Int","type":"method"},{"path":"\/documentation\/atk\/document\/getdocument()","title":"func getDocument() -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/document\/getdocumenttype()","title":"func getDocumentType() -> String!","type":"method"},{"path":"\/documentation\/atk\/document\/getlocale()","title":"func getLocale() -> String!","type":"method"},{"path":"\/documentation\/atk\/document\/getpagecount()","title":"func getPageCount() -> Int","type":"method"},{"path":"\/documentation\/atk\/document\/onloadcomplete(flags:handler:)","title":"func onLoadComplete(flags: ConnectFlags, handler: (DocumentRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/document\/onloadstopped(flags:handler:)","title":"func onLoadStopped(flags: ConnectFlags, handler: (DocumentRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/document\/onpagechanged(flags:handler:)","title":"func onPageChanged(flags: ConnectFlags, handler: (DocumentRef, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/document\/onreload(flags:handler:)","title":"func onReload(flags: ConnectFlags, handler: (DocumentRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/document\/setattributevalue(attributename:attributevalue:)","title":"func setAttributeValue(attributeName: UnsafePointer<gchar>!, attributeValue: UnsafePointer<gchar>!) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/document\/loadcompletesignal","title":"static var loadCompleteSignal: DocumentSignalName","type":"property"},{"path":"\/documentation\/atk\/document\/loadstoppedsignal","title":"static var loadStoppedSignal: DocumentSignalName","type":"property"},{"path":"\/documentation\/atk\/document\/pagechangedsignal","title":"static var pageChangedSignal: DocumentSignalName","type":"property"},{"path":"\/documentation\/atk\/document\/reloadsignal","title":"static var reloadSignal: DocumentSignalName","type":"property"}],"path":"\/documentation\/atk\/document\/documentprotocol-implementations","title":"DocumentProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/document","title":"Document","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/editabletext\/init(_:)-5gtju","title":"init!(UnsafeMutablePointer<AtkEditableText>?)","type":"init"},{"path":"\/documentation\/atk\/editabletext\/init(_:)-6by8h","title":"init(UnsafeMutablePointer<AtkEditableText>)","type":"init"},{"path":"\/documentation\/atk\/editabletext\/init(_:)-7xz36","title":"init(UnsafePointer<AtkEditableText>)","type":"init"},{"path":"\/documentation\/atk\/editabletext\/init(_:)-8k6wi","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/editabletext\/init(_:)-nxln","title":"init!(UnsafePointer<AtkEditableText>?)","type":"init"},{"path":"\/documentation\/atk\/editabletext\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/editabletext\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/editabletext\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/editabletext\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/editabletext\/init(raw:)-1mri7","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/editabletext\/init(raw:)-5hm62","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/editabletext\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkEditableText>)","type":"init"},{"path":"\/documentation\/atk\/editabletext\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/editabletext\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/editabletext\/init(retainingraw:)-72o5w","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/editabletext\/init(retainingraw:)-9p803","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/editabletext\/metatypereferenceforeditabletext","title":"var metatypeReferenceForEditableText: GType","type":"property"},{"path":"\/documentation\/atk\/editabletext\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"path":"\/documentation\/atk\/editabletext\/wrapperforeditabletext","title":"var wrapperForEditableText: EditableTextIfaceRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/editabletext\/metatypeforeditabletext","title":"static var metatypeForEditableText: AtkEditableTextIface?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/editabletext\/editable_text_ptr","title":"var editable_text_ptr: UnsafeMutablePointer<AtkEditableText>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/editabletext\/copytext(startpos:endpos:)","title":"func copyText(startPos: Int, endPos: Int)","type":"method"},{"path":"\/documentation\/atk\/editabletext\/cuttext(startpos:endpos:)","title":"func cutText(startPos: Int, endPos: Int)","type":"method"},{"path":"\/documentation\/atk\/editabletext\/deletetext(startpos:endpos:)","title":"func deleteText(startPos: Int, endPos: Int)","type":"method"},{"path":"\/documentation\/atk\/editabletext\/inserttext(string:length:position:)","title":"func insertText(string: UnsafePointer<gchar>!, length: Int, position: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/atk\/editabletext\/pastetext(position:)","title":"func pasteText(position: Int)","type":"method"},{"path":"\/documentation\/atk\/editabletext\/setrunattributes(attribset:startoffset:endoffset:)","title":"func setRunAttributes(attribSet: UnsafeMutablePointer<AtkAttributeSet>!, startOffset: Int, endOffset: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/editabletext\/settextcontents(string:)","title":"func setTextContents(string: UnsafePointer<gchar>!)","type":"method"}],"path":"\/documentation\/atk\/editabletext\/editabletextprotocol-implementations","title":"EditableTextProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/editabletext","title":"EditableText","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessible\/init(_:)-2w25p","title":"init(UnsafePointer<AtkGObjectAccessible>)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessible\/init(_:)-7urlm","title":"init(UnsafeMutablePointer<AtkGObjectAccessible>)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessible\/init(_:)-8ejaa","title":"init!(UnsafePointer<AtkGObjectAccessible>?)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessible\/init(_:)-sw8h","title":"init!(UnsafeMutablePointer<AtkGObjectAccessible>?)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessible\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessible\/init(gobjectaccessible:)","title":"init<T>(gObjectAccessible: T)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessible\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessible\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessible\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessible\/init(raw:)-1fyxk","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessible\/init(raw:)-ivmd","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessible\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkGObjectAccessible>)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessible\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessible\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessible\/init(retainingraw:)-1j59u","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessible\/init(retainingraw:)-6flee","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessible\/metatypereferenceforgobjectaccessible","title":"var metatypeReferenceForGObjectAccessible: GType","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessible\/wrapperforgobjectaccessible","title":"var wrapperForGObjectAccessible: GObjectAccessibleClassRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessible\/metatypeforgobjectaccessible","title":"static var metatypeForGObjectAccessible: AtkGObjectAccessibleClass?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessible\/for_(object:)","title":"static func for_<GObjectObjectT>(object: GObjectObjectT) -> Object!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessible\/gobject_accessible_ptr","title":"var gobject_accessible_ptr: UnsafeMutablePointer<AtkGObjectAccessible>!","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessible\/object","title":"var object: ObjectRef!","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessible\/parent","title":"var parent: AtkObject","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessible\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: GObjectAccessiblePropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessible\/get(property:)","title":"func get(property: GObjectAccessiblePropertyName) -> Value","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessible\/getobject()","title":"func getObject() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessible\/set(property:value:)","title":"func set(property: GObjectAccessiblePropertyName, value: Value)","type":"method"}],"path":"\/documentation\/atk\/gobjectaccessible\/gobjectaccessibleprotocol-implementations","title":"GObjectAccessibleProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/gobjectaccessible","title":"GObjectAccessible","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlink\/init(_:)-1a4z6","title":"init(UnsafePointer<AtkHyperlink>)","type":"init"},{"path":"\/documentation\/atk\/hyperlink\/init(_:)-1mb9","title":"init(UnsafeMutablePointer<AtkHyperlink>)","type":"init"},{"path":"\/documentation\/atk\/hyperlink\/init(_:)-3kubw","title":"init!(UnsafePointer<AtkHyperlink>?)","type":"init"},{"path":"\/documentation\/atk\/hyperlink\/init(_:)-6pabn","title":"init!(UnsafeMutablePointer<AtkHyperlink>?)","type":"init"},{"path":"\/documentation\/atk\/hyperlink\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/hyperlink\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/hyperlink\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/hyperlink\/init(hyperlink:)","title":"init<T>(hyperlink: T)","type":"init"},{"path":"\/documentation\/atk\/hyperlink\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/hyperlink\/init(raw:)-356mk","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/hyperlink\/init(raw:)-5rqgj","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/hyperlink\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkHyperlink>)","type":"init"},{"path":"\/documentation\/atk\/hyperlink\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/hyperlink\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/hyperlink\/init(retainingraw:)-5lndc","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/hyperlink\/init(retainingraw:)-5wum3","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlink\/metatypereferenceforhyperlink","title":"var metatypeReferenceForHyperlink: GType","type":"property"},{"path":"\/documentation\/atk\/hyperlink\/wrapperforhyperlink","title":"var wrapperForHyperlink: HyperlinkClassRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlink\/metatypeforhyperlink","title":"static var metatypeForHyperlink: AtkHyperlinkClass?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlink\/action_ptr","title":"var action_ptr: UnsafeMutablePointer<AtkAction>!","type":"property"},{"path":"\/documentation\/atk\/hyperlink\/nactions","title":"var nActions: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlink\/doaction(i:)","title":"func doAction(i: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/hyperlink\/getdescription(i:)","title":"func getDescription(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/hyperlink\/getkeybinding(i:)","title":"func getKeybinding(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/hyperlink\/getlocalizedname(i:)","title":"func getLocalizedName(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/hyperlink\/getnactions()","title":"func getNActions() -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlink\/getname(i:)","title":"func getName(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/hyperlink\/setdescription(i:desc:)","title":"func setDescription(i: Int, desc: UnsafePointer<gchar>!) -> Bool","type":"method"}],"path":"\/documentation\/atk\/hyperlink\/actionprotocol-implementations","title":"ActionProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlink\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/atk\/hyperlink\/hyperlink_ptr","title":"var hyperlink_ptr: UnsafeMutablePointer<AtkHyperlink>!","type":"property"},{"path":"\/documentation\/atk\/hyperlink\/isinline","title":"var isInline: Bool","type":"property"},{"path":"\/documentation\/atk\/hyperlink\/isselectedlink","title":"var isSelectedLink: Bool","type":"property"},{"path":"\/documentation\/atk\/hyperlink\/isvalid","title":"var isValid: Bool","type":"property"},{"path":"\/documentation\/atk\/hyperlink\/nanchors","title":"var nAnchors: Int","type":"property"},{"path":"\/documentation\/atk\/hyperlink\/parent","title":"var parent: GObject","type":"property"},{"path":"\/documentation\/atk\/hyperlink\/startindex","title":"var startIndex: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlink\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: HyperlinkPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/hyperlink\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: HyperlinkSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlink\/connect(signal:flags:handler:)","title":"func connect(signal: HyperlinkSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlink\/get(property:)","title":"func get(property: HyperlinkPropertyName) -> Value","type":"method"},{"path":"\/documentation\/atk\/hyperlink\/getendindex()","title":"func getEndIndex() -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlink\/getnanchors()","title":"func getNAnchors() -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlink\/getobject(i:)","title":"func getObject(i: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/hyperlink\/getstartindex()","title":"func getStartIndex() -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlink\/geturi(i:)","title":"func getUri(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/hyperlink\/onlinkactivated(flags:handler:)","title":"func onLinkActivated(flags: ConnectFlags, handler: (HyperlinkRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlink\/onnotifyendindex(flags:handler:)","title":"func onNotifyEndIndex(flags: ConnectFlags, handler: (HyperlinkRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlink\/onnotifynumberofanchors(flags:handler:)","title":"func onNotifyNumberOfAnchors(flags: ConnectFlags, handler: (HyperlinkRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlink\/onnotifyselectedlink(flags:handler:)","title":"func onNotifySelectedLink(flags: ConnectFlags, handler: (HyperlinkRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlink\/onnotifystartindex(flags:handler:)","title":"func onNotifyStartIndex(flags: ConnectFlags, handler: (HyperlinkRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlink\/set(property:value:)","title":"func set(property: HyperlinkPropertyName, value: Value)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlink\/linkactivatedsignal","title":"static var linkActivatedSignal: HyperlinkSignalName","type":"property"},{"path":"\/documentation\/atk\/hyperlink\/notifyendindexsignal","title":"static var notifyEndIndexSignal: HyperlinkSignalName","type":"property"},{"path":"\/documentation\/atk\/hyperlink\/notifynumberofanchorssignal","title":"static var notifyNumberOfAnchorsSignal: HyperlinkSignalName","type":"property"},{"path":"\/documentation\/atk\/hyperlink\/notifyselectedlinksignal","title":"static var notifySelectedLinkSignal: HyperlinkSignalName","type":"property"},{"path":"\/documentation\/atk\/hyperlink\/notifystartindexsignal","title":"static var notifyStartIndexSignal: HyperlinkSignalName","type":"property"}],"path":"\/documentation\/atk\/hyperlink\/hyperlinkprotocol-implementations","title":"HyperlinkProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/hyperlink","title":"Hyperlink","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkimpl\/init(_:)-1lwir","title":"init!(UnsafeMutablePointer<AtkHyperlinkImpl>?)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimpl\/init(_:)-2nz7v","title":"init(UnsafeMutablePointer<AtkHyperlinkImpl>)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimpl\/init(_:)-3u3d4","title":"init!(UnsafePointer<AtkHyperlinkImpl>?)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimpl\/init(_:)-8r59x","title":"init(UnsafePointer<AtkHyperlinkImpl>)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimpl\/init(_:)-9x18n","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimpl\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimpl\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimpl\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimpl\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimpl\/init(raw:)-34ol7","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimpl\/init(raw:)-9x2n1","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimpl\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkHyperlinkImpl>)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimpl\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimpl\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimpl\/init(retainingraw:)-2pqs5","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimpl\/init(retainingraw:)-5e8a","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkimpl\/metatypereferenceforhyperlinkimpl","title":"var metatypeReferenceForHyperlinkImpl: GType","type":"property"},{"path":"\/documentation\/atk\/hyperlinkimpl\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"path":"\/documentation\/atk\/hyperlinkimpl\/wrapperforhyperlinkimpl","title":"var wrapperForHyperlinkImpl: HyperlinkImplIfaceRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkimpl\/metatypeforhyperlinkimpl","title":"static var metatypeForHyperlinkImpl: AtkHyperlinkImplIface?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkimpl\/hyperlink","title":"var hyperlink: HyperlinkRef!","type":"property"},{"path":"\/documentation\/atk\/hyperlinkimpl\/hyperlink_impl_ptr","title":"var hyperlink_impl_ptr: UnsafeMutablePointer<AtkHyperlinkImpl>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkimpl\/gethyperlink()","title":"func getHyperlink() -> HyperlinkRef!","type":"method"}],"path":"\/documentation\/atk\/hyperlinkimpl\/hyperlinkimplprotocol-implementations","title":"HyperlinkImplProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/hyperlinkimpl","title":"HyperlinkImpl","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/hypertext\/init(_:)-3s0lw","title":"init(UnsafeMutablePointer<AtkHypertext>)","type":"init"},{"path":"\/documentation\/atk\/hypertext\/init(_:)-3wfnr","title":"init!(UnsafePointer<AtkHypertext>?)","type":"init"},{"path":"\/documentation\/atk\/hypertext\/init(_:)-4e889","title":"init(UnsafePointer<AtkHypertext>)","type":"init"},{"path":"\/documentation\/atk\/hypertext\/init(_:)-7z0c2","title":"init!(UnsafeMutablePointer<AtkHypertext>?)","type":"init"},{"path":"\/documentation\/atk\/hypertext\/init(_:)-a2lr","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/hypertext\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/hypertext\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/hypertext\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/hypertext\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/hypertext\/init(raw:)-74hl1","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/hypertext\/init(raw:)-7fovw","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/hypertext\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkHypertext>)","type":"init"},{"path":"\/documentation\/atk\/hypertext\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/hypertext\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/hypertext\/init(retainingraw:)-5l3z","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/hypertext\/init(retainingraw:)-7ku4v","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hypertext\/metatypereferenceforhypertext","title":"var metatypeReferenceForHypertext: GType","type":"property"},{"path":"\/documentation\/atk\/hypertext\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"path":"\/documentation\/atk\/hypertext\/wrapperforhypertext","title":"var wrapperForHypertext: HypertextIfaceRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hypertext\/metatypeforhypertext","title":"static var metatypeForHypertext: AtkHypertextIface?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hypertext\/hypertext_ptr","title":"var hypertext_ptr: UnsafeMutablePointer<AtkHypertext>!","type":"property"},{"path":"\/documentation\/atk\/hypertext\/nlinks","title":"var nLinks: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/hypertext\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: HypertextSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/hypertext\/connect(signal:flags:handler:)","title":"func connect(signal: HypertextSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/hypertext\/getlink(linkindex:)","title":"func getLink(linkIndex: Int) -> HyperlinkRef!","type":"method"},{"path":"\/documentation\/atk\/hypertext\/getlinkindex(charindex:)","title":"func getLinkIndex(charIndex: Int) -> Int","type":"method"},{"path":"\/documentation\/atk\/hypertext\/getnlinks()","title":"func getNLinks() -> Int","type":"method"},{"path":"\/documentation\/atk\/hypertext\/onlinkselected(flags:handler:)","title":"func onLinkSelected(flags: ConnectFlags, handler: (HypertextRef, Int) -> Void) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hypertext\/linkselectedsignal","title":"static var linkSelectedSignal: HypertextSignalName","type":"property"}],"path":"\/documentation\/atk\/hypertext\/hypertextprotocol-implementations","title":"HypertextProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/hypertext","title":"Hypertext","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/image\/init(_:)-11hev","title":"init(UnsafePointer<AtkImage>)","type":"init"},{"path":"\/documentation\/atk\/image\/init(_:)-2xia","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/image\/init(_:)-45ycn","title":"init!(UnsafePointer<AtkImage>?)","type":"init"},{"path":"\/documentation\/atk\/image\/init(_:)-51ghi","title":"init!(UnsafeMutablePointer<AtkImage>?)","type":"init"},{"path":"\/documentation\/atk\/image\/init(_:)-9tg4o","title":"init(UnsafeMutablePointer<AtkImage>)","type":"init"},{"path":"\/documentation\/atk\/image\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/image\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/image\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/image\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/image\/init(raw:)-5iw8i","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/image\/init(raw:)-8nvx9","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/image\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkImage>)","type":"init"},{"path":"\/documentation\/atk\/image\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/image\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/image\/init(retainingraw:)-8udvz","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/image\/init(retainingraw:)-tpcr","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/image\/metatypereferenceforimage","title":"var metatypeReferenceForImage: GType","type":"property"},{"path":"\/documentation\/atk\/image\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"path":"\/documentation\/atk\/image\/wrapperforimage","title":"var wrapperForImage: ImageIfaceRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/image\/metatypeforimage","title":"static var metatypeForImage: AtkImageIface?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/image\/imagedescription","title":"var imageDescription: String!","type":"property"},{"path":"\/documentation\/atk\/image\/imagelocale","title":"var imageLocale: String!","type":"property"},{"path":"\/documentation\/atk\/image\/image_ptr","title":"var image_ptr: UnsafeMutablePointer<AtkImage>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/image\/getimagedescription()","title":"func getImageDescription() -> String!","type":"method"},{"path":"\/documentation\/atk\/image\/getimagelocale()","title":"func getImageLocale() -> String!","type":"method"},{"path":"\/documentation\/atk\/image\/getimageposition(x:y:coordtype:)","title":"func getImagePosition(x: UnsafeMutablePointer<gint>!, y: UnsafeMutablePointer<gint>!, coordType: AtkCoordType)","type":"method"},{"path":"\/documentation\/atk\/image\/getimagesize(width:height:)","title":"func getImageSize(width: UnsafeMutablePointer<gint>!, height: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/atk\/image\/setimage(description:)","title":"func setImage(description: UnsafePointer<gchar>!) -> Bool","type":"method"}],"path":"\/documentation\/atk\/image\/imageprotocol-implementations","title":"ImageProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/image","title":"Image","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/implementor\/init(_:)-2wmj2","title":"init(UnsafeMutablePointer<AtkImplementor>)","type":"init"},{"path":"\/documentation\/atk\/implementor\/init(_:)-5aso6","title":"init(UnsafePointer<AtkImplementor>)","type":"init"},{"path":"\/documentation\/atk\/implementor\/init(_:)-6l8ho","title":"init!(UnsafePointer<AtkImplementor>?)","type":"init"},{"path":"\/documentation\/atk\/implementor\/init(_:)-8yp84","title":"init!(UnsafeMutablePointer<AtkImplementor>?)","type":"init"},{"path":"\/documentation\/atk\/implementor\/init(_:)-9vem6","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/implementor\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/implementor\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/implementor\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/implementor\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/implementor\/init(raw:)-37vu7","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/implementor\/init(raw:)-54l4o","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/implementor\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkImplementor>)","type":"init"},{"path":"\/documentation\/atk\/implementor\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/implementor\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/implementor\/init(retainingraw:)-26o9d","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/implementor\/init(retainingraw:)-8dmjf","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/implementor\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/implementor\/refaccessible()","title":"func refAccessible() -> ObjectRef!","type":"method"}],"path":"\/documentation\/atk\/implementor\/implementorprotocol-implementations","title":"ImplementorProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/implementor","title":"Implementor","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/implementoriface\/init(_:)-17n8n","title":"init!(UnsafePointer<AtkImplementorIface>?)","type":"init"},{"path":"\/documentation\/atk\/implementoriface\/init(_:)-4gpbx","title":"init(UnsafePointer<AtkImplementorIface>)","type":"init"},{"path":"\/documentation\/atk\/implementoriface\/init(_:)-6gph9","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/implementoriface\/init(_:)-8q5y2","title":"init!(UnsafeMutablePointer<AtkImplementorIface>?)","type":"init"},{"path":"\/documentation\/atk\/implementoriface\/init(_:)-ve4n","title":"init(UnsafeMutablePointer<AtkImplementorIface>)","type":"init"},{"path":"\/documentation\/atk\/implementoriface\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/implementoriface\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/implementoriface\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/implementoriface\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/implementoriface\/init(raw:)-3chaa","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/implementoriface\/init(raw:)-77btb","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/implementoriface\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkImplementorIface>)","type":"init"},{"path":"\/documentation\/atk\/implementoriface\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/implementoriface\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/implementoriface\/init(retainingraw:)-5o80l","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/implementoriface\/init(retainingraw:)-9j2q8","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/implementoriface\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/implementoriface\/implementor_ptr","title":"var implementor_ptr: UnsafeMutablePointer<AtkImplementorIface>!","type":"property"}],"path":"\/documentation\/atk\/implementoriface\/implementorifaceprotocol-implementations","title":"ImplementorIfaceProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/implementoriface","title":"ImplementorIface","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/keyeventstruct\/init(_:)-2yilq","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/keyeventstruct\/init(_:)-32zty","title":"init(UnsafePointer<AtkKeyEventStruct>)","type":"init"},{"path":"\/documentation\/atk\/keyeventstruct\/init(_:)-9rth8","title":"init!(UnsafePointer<AtkKeyEventStruct>?)","type":"init"},{"path":"\/documentation\/atk\/keyeventstruct\/init(_:)-vhoi","title":"init(UnsafeMutablePointer<AtkKeyEventStruct>)","type":"init"},{"path":"\/documentation\/atk\/keyeventstruct\/init(_:)-vyzn","title":"init!(UnsafeMutablePointer<AtkKeyEventStruct>?)","type":"init"},{"path":"\/documentation\/atk\/keyeventstruct\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/keyeventstruct\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/keyeventstruct\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/keyeventstruct\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/keyeventstruct\/init(raw:)-3a9tm","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/keyeventstruct\/init(raw:)-8df0x","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/keyeventstruct\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkKeyEventStruct>)","type":"init"},{"path":"\/documentation\/atk\/keyeventstruct\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/keyeventstruct\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/keyeventstruct\/init(retainingraw:)-16rgc","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/keyeventstruct\/init(retainingraw:)-4zeav","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/keyeventstruct\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/keyeventstruct\/keycode","title":"var keycode: guint16","type":"property"},{"path":"\/documentation\/atk\/keyeventstruct\/keyval","title":"var keyval: guint","type":"property"},{"path":"\/documentation\/atk\/keyeventstruct\/length","title":"var length: gint","type":"property"},{"path":"\/documentation\/atk\/keyeventstruct\/state","title":"var state: guint","type":"property"},{"path":"\/documentation\/atk\/keyeventstruct\/string","title":"var string: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/atk\/keyeventstruct\/timestamp","title":"var timestamp: guint32","type":"property"},{"path":"\/documentation\/atk\/keyeventstruct\/type","title":"var type: gint","type":"property"}],"path":"\/documentation\/atk\/keyeventstruct\/keyeventstructprotocol-implementations","title":"KeyEventStructProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/keyeventstruct","title":"KeyEventStruct","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/misc\/init(_:)-1x7em","title":"init!(UnsafeMutablePointer<AtkMisc>?)","type":"init"},{"path":"\/documentation\/atk\/misc\/init(_:)-55ojc","title":"init(UnsafeMutablePointer<AtkMisc>)","type":"init"},{"path":"\/documentation\/atk\/misc\/init(_:)-8bsxe","title":"init!(UnsafePointer<AtkMisc>?)","type":"init"},{"path":"\/documentation\/atk\/misc\/init(_:)-9yn2o","title":"init(UnsafePointer<AtkMisc>)","type":"init"},{"path":"\/documentation\/atk\/misc\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/misc\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/misc\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/misc\/init(misc:)","title":"init<T>(misc: T)","type":"init"},{"path":"\/documentation\/atk\/misc\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/misc\/init(raw:)-1qk44","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/misc\/init(raw:)-2nnmf","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/misc\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkMisc>)","type":"init"},{"path":"\/documentation\/atk\/misc\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/misc\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/misc\/init(retainingraw:)-36lo3","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/misc\/init(retainingraw:)-89qwe","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/misc\/metatypereferenceformisc","title":"var metatypeReferenceForMisc: GType","type":"property"},{"path":"\/documentation\/atk\/misc\/wrapperformisc","title":"var wrapperForMisc: MiscClassRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/misc\/metatypeformisc","title":"static var metatypeForMisc: AtkMiscClass?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/misc\/getinstance()","title":"static func getInstance() -> Misc!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/misc\/misc_ptr","title":"var misc_ptr: UnsafeMutablePointer<AtkMisc>!","type":"property"},{"path":"\/documentation\/atk\/misc\/parent","title":"var parent: GObject","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/misc\/threadsenter()","title":"func threadsEnter()","type":"method"},{"path":"\/documentation\/atk\/misc\/threadsleave()","title":"func threadsLeave()","type":"method"}],"path":"\/documentation\/atk\/misc\/miscprotocol-implementations","title":"MiscProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/misc","title":"Misc","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/init(_:)-1pprr","title":"init!(UnsafeMutablePointer<AtkNoOpObject>?)","type":"init"},{"path":"\/documentation\/atk\/noopobject\/init(_:)-2cmr4","title":"init(UnsafeMutablePointer<AtkNoOpObject>)","type":"init"},{"path":"\/documentation\/atk\/noopobject\/init(_:)-7p636","title":"init!(UnsafePointer<AtkNoOpObject>?)","type":"init"},{"path":"\/documentation\/atk\/noopobject\/init(_:)-8h5px","title":"init(UnsafePointer<AtkNoOpObject>)","type":"init"},{"path":"\/documentation\/atk\/noopobject\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/noopobject\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/noopobject\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/noopobject\/init(noopobject:)","title":"init<T>(noOpObject: T)","type":"init"},{"path":"\/documentation\/atk\/noopobject\/init(obj:)","title":"init<GObjectObjectT>(obj: GObjectObjectT)","type":"init"},{"path":"\/documentation\/atk\/noopobject\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/noopobject\/init(raw:)-2q7hc","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/noopobject\/init(raw:)-8uyem","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/noopobject\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkNoOpObject>)","type":"init"},{"path":"\/documentation\/atk\/noopobject\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/noopobject\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/noopobject\/init(retainingraw:)-4j3v","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/noopobject\/init(retainingraw:)-fqa8","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/metatypereferencefornoopobject","title":"var metatypeReferenceForNoOpObject: GType","type":"property"},{"path":"\/documentation\/atk\/noopobject\/wrapperfornoopobject","title":"var wrapperForNoOpObject: NoOpObjectClassRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/metatypefornoopobject","title":"static var metatypeForNoOpObject: AtkNoOpObjectClass?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/action_ptr","title":"var action_ptr: UnsafeMutablePointer<AtkAction>!","type":"property"},{"path":"\/documentation\/atk\/noopobject\/nactions","title":"var nActions: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/doaction(i:)","title":"func doAction(i: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getdescription(i:)","title":"func getDescription(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getkeybinding(i:)","title":"func getKeybinding(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getlocalizedname(i:)","title":"func getLocalizedName(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getnactions()","title":"func getNActions() -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getname(i:)","title":"func getName(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/setdescription(i:desc:)","title":"func setDescription(i: Int, desc: UnsafePointer<gchar>!) -> Bool","type":"method"}],"path":"\/documentation\/atk\/noopobject\/actionprotocol-implementations","title":"ActionProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/alpha","title":"var alpha: Double","type":"property"},{"path":"\/documentation\/atk\/noopobject\/component_ptr","title":"var component_ptr: UnsafeMutablePointer<AtkComponent>!","type":"property"},{"path":"\/documentation\/atk\/noopobject\/layer","title":"var layer: AtkLayer","type":"property"},{"path":"\/documentation\/atk\/noopobject\/mdizorder","title":"var mdiZorder: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/addfocus(handler:)","title":"func addFocus(handler: AtkFocusHandler?) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/connect(signal:flags:data:destroydata:signalhandler:)-7pzdx","title":"func connect(signal: ComponentSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/connect(signal:flags:handler:)-3zqg5","title":"func connect(signal: ComponentSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/contains(x:y:coordtype:)","title":"func contains(x: Int, y: Int, coordType: AtkCoordType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getalpha()","title":"func getAlpha() -> Double","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getextents(x:y:width:height:coordtype:)","title":"func getExtents(x: UnsafeMutablePointer<gint>!, y: UnsafeMutablePointer<gint>!, width: UnsafeMutablePointer<gint>!, height: UnsafeMutablePointer<gint>!, coordType: AtkCoordType)","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getlayer()","title":"func getLayer() -> AtkLayer","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getmdizorder()","title":"func getMdiZorder() -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getposition(x:y:coordtype:)","title":"func getPosition(x: UnsafeMutablePointer<gint>!, y: UnsafeMutablePointer<gint>!, coordType: AtkCoordType)","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getsize(width:height:)","title":"func getSize(width: UnsafeMutablePointer<gint>!, height: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/atk\/noopobject\/grabfocus()","title":"func grabFocus() -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobject\/onboundschanged(flags:handler:)","title":"func onBoundsChanged(flags: ConnectFlags, handler: (ComponentRef, RectangleRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/refaccessibleatpoint(x:y:coordtype:)","title":"func refAccessibleAtPoint(x: Int, y: Int, coordType: AtkCoordType) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/removefocushandler(handlerid:)","title":"func removeFocusHandler(handlerId: Int)","type":"method"},{"path":"\/documentation\/atk\/noopobject\/scrollto(type:)","title":"func scrollTo(type: AtkScrollType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobject\/scrolltopoint(coords:x:y:)","title":"func scrollToPoint(coords: AtkCoordType, x: Int, y: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobject\/setextents(x:y:width:height:coordtype:)","title":"func setExtents(x: Int, y: Int, width: Int, height: Int, coordType: AtkCoordType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobject\/setposition(x:y:coordtype:)","title":"func setPosition(x: Int, y: Int, coordType: AtkCoordType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobject\/setsize(width:height:)","title":"func setSize(width: Int, height: Int) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/boundschangedsignal","title":"static var boundsChangedSignal: ComponentSignalName","type":"property"}],"path":"\/documentation\/atk\/noopobject\/componentprotocol-implementations","title":"ComponentProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/attributes","title":"var attributes: UnsafeMutablePointer<AtkAttributeSet>!","type":"property"},{"path":"\/documentation\/atk\/noopobject\/currentpagenumber","title":"var currentPageNumber: Int","type":"property"},{"path":"\/documentation\/atk\/noopobject\/document","title":"var document: gpointer?","type":"property"},{"path":"\/documentation\/atk\/noopobject\/documenttype","title":"var documentType: String!","type":"property"},{"path":"\/documentation\/atk\/noopobject\/document_ptr","title":"var document_ptr: UnsafeMutablePointer<AtkDocument>!","type":"property"},{"path":"\/documentation\/atk\/noopobject\/locale","title":"var locale: String!","type":"property"},{"path":"\/documentation\/atk\/noopobject\/pagecount","title":"var pageCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/connect(signal:flags:data:destroydata:signalhandler:)-196sh","title":"func connect(signal: DocumentSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/connect(signal:flags:handler:)-22efp","title":"func connect(signal: DocumentSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getattributevalue(attributename:)","title":"func getAttributeValue(attributeName: UnsafePointer<gchar>!) -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getattributes()","title":"func getAttributes() -> UnsafeMutablePointer<AtkAttributeSet>!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getcurrentpagenumber()","title":"func getCurrentPageNumber() -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getdocument()","title":"func getDocument() -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getdocumenttype()","title":"func getDocumentType() -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getlocale()","title":"func getLocale() -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getpagecount()","title":"func getPageCount() -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/onloadcomplete(flags:handler:)","title":"func onLoadComplete(flags: ConnectFlags, handler: (DocumentRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/onloadstopped(flags:handler:)","title":"func onLoadStopped(flags: ConnectFlags, handler: (DocumentRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/onpagechanged(flags:handler:)","title":"func onPageChanged(flags: ConnectFlags, handler: (DocumentRef, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/onreload(flags:handler:)","title":"func onReload(flags: ConnectFlags, handler: (DocumentRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/setattributevalue(attributename:attributevalue:)","title":"func setAttributeValue(attributeName: UnsafePointer<gchar>!, attributeValue: UnsafePointer<gchar>!) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/loadcompletesignal","title":"static var loadCompleteSignal: DocumentSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobject\/loadstoppedsignal","title":"static var loadStoppedSignal: DocumentSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobject\/pagechangedsignal","title":"static var pageChangedSignal: DocumentSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobject\/reloadsignal","title":"static var reloadSignal: DocumentSignalName","type":"property"}],"path":"\/documentation\/atk\/noopobject\/documentprotocol-implementations","title":"DocumentProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/editable_text_ptr","title":"var editable_text_ptr: UnsafeMutablePointer<AtkEditableText>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/copytext(startpos:endpos:)","title":"func copyText(startPos: Int, endPos: Int)","type":"method"},{"path":"\/documentation\/atk\/noopobject\/cuttext(startpos:endpos:)","title":"func cutText(startPos: Int, endPos: Int)","type":"method"},{"path":"\/documentation\/atk\/noopobject\/deletetext(startpos:endpos:)","title":"func deleteText(startPos: Int, endPos: Int)","type":"method"},{"path":"\/documentation\/atk\/noopobject\/inserttext(string:length:position:)","title":"func insertText(string: UnsafePointer<gchar>!, length: Int, position: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/atk\/noopobject\/pastetext(position:)","title":"func pasteText(position: Int)","type":"method"},{"path":"\/documentation\/atk\/noopobject\/setrunattributes(attribset:startoffset:endoffset:)","title":"func setRunAttributes(attribSet: UnsafeMutablePointer<AtkAttributeSet>!, startOffset: Int, endOffset: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobject\/settextcontents(string:)","title":"func setTextContents(string: UnsafePointer<gchar>!)","type":"method"}],"path":"\/documentation\/atk\/noopobject\/editabletextprotocol-implementations","title":"EditableTextProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/hypertext_ptr","title":"var hypertext_ptr: UnsafeMutablePointer<AtkHypertext>!","type":"property"},{"path":"\/documentation\/atk\/noopobject\/nlinks","title":"var nLinks: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/connect(signal:flags:data:destroydata:signalhandler:)-53uam","title":"func connect(signal: HypertextSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/connect(signal:flags:handler:)-31jfn","title":"func connect(signal: HypertextSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getlink(linkindex:)","title":"func getLink(linkIndex: Int) -> HyperlinkRef!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getlinkindex(charindex:)","title":"func getLinkIndex(charIndex: Int) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getnlinks()","title":"func getNLinks() -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/onlinkselected(flags:handler:)","title":"func onLinkSelected(flags: ConnectFlags, handler: (HypertextRef, Int) -> Void) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/linkselectedsignal","title":"static var linkSelectedSignal: HypertextSignalName","type":"property"}],"path":"\/documentation\/atk\/noopobject\/hypertextprotocol-implementations","title":"HypertextProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/imagedescription","title":"var imageDescription: String!","type":"property"},{"path":"\/documentation\/atk\/noopobject\/imagelocale","title":"var imageLocale: String!","type":"property"},{"path":"\/documentation\/atk\/noopobject\/image_ptr","title":"var image_ptr: UnsafeMutablePointer<AtkImage>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/getimagedescription()","title":"func getImageDescription() -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getimagelocale()","title":"func getImageLocale() -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getimageposition(x:y:coordtype:)","title":"func getImagePosition(x: UnsafeMutablePointer<gint>!, y: UnsafeMutablePointer<gint>!, coordType: AtkCoordType)","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getimagesize(width:height:)","title":"func getImageSize(width: UnsafeMutablePointer<gint>!, height: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/atk\/noopobject\/setimage(description:)","title":"func setImage(description: UnsafePointer<gchar>!) -> Bool","type":"method"}],"path":"\/documentation\/atk\/noopobject\/imageprotocol-implementations","title":"ImageProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/no_op_object_ptr","title":"var no_op_object_ptr: UnsafeMutablePointer<AtkNoOpObject>!","type":"property"},{"path":"\/documentation\/atk\/noopobject\/parent","title":"var parent: AtkObject","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/bind(property:to:_:flags:transformfrom:transformto:)-1bk8g","title":"func bind<Q, T>(property: NoOpObjectPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/get(property:)","title":"func get(property: NoOpObjectPropertyName) -> Value","type":"method"},{"path":"\/documentation\/atk\/noopobject\/set(property:value:)","title":"func set(property: NoOpObjectPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/atk\/noopobject\/noopobjectprotocol-implementations","title":"NoOpObjectProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/selectioncount","title":"var selectionCount: Int","type":"property"},{"path":"\/documentation\/atk\/noopobject\/selection_ptr","title":"var selection_ptr: UnsafeMutablePointer<AtkSelection>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/addselection(i:)","title":"func addSelection(i: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobject\/clearselection()","title":"func clearSelection() -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobject\/connect(signal:flags:data:destroydata:signalhandler:)-j3fs","title":"func connect(signal: SelectionSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/connect(signal:flags:handler:)-1weoe","title":"func connect(signal: SelectionSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getselectioncount()","title":"func getSelectionCount() -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/ischildselected(i:)","title":"func isChildSelected(i: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobject\/onselectionchanged(flags:handler:)","title":"func onSelectionChanged(flags: ConnectFlags, handler: (SelectionRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/refselection(i:)","title":"func refSelection(i: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/removeselection(i:)","title":"func removeSelection(i: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobject\/selectallselection()","title":"func selectAllSelection() -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/selectionchangedsignal","title":"static var selectionChangedSignal: SelectionSignalName","type":"property"}],"path":"\/documentation\/atk\/noopobject\/selectionprotocol-implementations","title":"SelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/columnheadercells","title":"var columnHeaderCells: RefArrayRef<ObjectRef>!","type":"property"},{"path":"\/documentation\/atk\/noopobject\/columnspan","title":"var columnSpan: Int","type":"property"},{"path":"\/documentation\/atk\/noopobject\/rowheadercells","title":"var rowHeaderCells: RefArrayRef<ObjectRef>!","type":"property"},{"path":"\/documentation\/atk\/noopobject\/rowspan","title":"var rowSpan: Int","type":"property"},{"path":"\/documentation\/atk\/noopobject\/table","title":"var table: ObjectRef!","type":"property"},{"path":"\/documentation\/atk\/noopobject\/table_cell_ptr","title":"var table_cell_ptr: UnsafeMutablePointer<AtkTableCell>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/bind(property:to:_:flags:transformfrom:transformto:)-6367n","title":"func bind<Q, T>(property: TableCellPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getcolumnheadercells()","title":"func getColumnHeaderCells() -> RefArrayRef<ObjectRef>!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getcolumnspan()","title":"func getColumnSpan() -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getposition(row:column:)","title":"func getPosition(row: UnsafeMutablePointer<gint>!, column: UnsafeMutablePointer<gint>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getrowcolumnspan(row:column:rowspan:columnspan:)","title":"func getRowColumnSpan(row: UnsafeMutablePointer<gint>!, column: UnsafeMutablePointer<gint>!, rowSpan: UnsafeMutablePointer<gint>!, columnSpan: UnsafeMutablePointer<gint>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getrowheadercells()","title":"func getRowHeaderCells() -> RefArrayRef<ObjectRef>!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getrowspan()","title":"func getRowSpan() -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/gettable()","title":"func getTable() -> ObjectRef!","type":"method"}],"path":"\/documentation\/atk\/noopobject\/tablecellprotocol-implementations","title":"TableCellProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/caption","title":"var caption: ObjectRef!","type":"property"},{"path":"\/documentation\/atk\/noopobject\/ncolumns","title":"var nColumns: Int","type":"property"},{"path":"\/documentation\/atk\/noopobject\/nrows","title":"var nRows: Int","type":"property"},{"path":"\/documentation\/atk\/noopobject\/summary","title":"var summary: ObjectRef!","type":"property"},{"path":"\/documentation\/atk\/noopobject\/table_ptr","title":"var table_ptr: UnsafeMutablePointer<AtkTable>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/addcolumnselection(column:)","title":"func addColumnSelection(column: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobject\/addrowselection(row:)","title":"func addRowSelection(row: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobject\/connect(signal:flags:data:destroydata:signalhandler:)-9z8ix","title":"func connect(signal: TableSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/connect(signal:flags:handler:)-5w5ik","title":"func connect(signal: TableSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getcaption()","title":"func getCaption() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getcolumnat(index:)","title":"func getColumnAt(index: Int) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getcolumndescription(column:)","title":"func getColumnDescription(column: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getcolumnextentat(row:column:)","title":"func getColumnExtentAt(row: Int, column: Int) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getcolumnheader(column:)","title":"func getColumnHeader(column: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getindexat(row:column:)","title":"func getIndexAt(row: Int, column: Int) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getncolumns()","title":"func getNColumns() -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getnrows()","title":"func getNRows() -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getrowat(index:)","title":"func getRowAt(index: Int) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getrowdescription(row:)","title":"func getRowDescription(row: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getrowextentat(row:column:)","title":"func getRowExtentAt(row: Int, column: Int) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getrowheader(row:)","title":"func getRowHeader(row: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getselectedcolumns(selected:)","title":"func getSelectedColumns(selected: UnsafeMutablePointer<UnsafeMutablePointer<gint>?>!) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getselectedrows(selected:)","title":"func getSelectedRows(selected: UnsafeMutablePointer<UnsafeMutablePointer<gint>?>!) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getsummary()","title":"func getSummary() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/iscolumnselected(column:)","title":"func isColumnSelected(column: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobject\/isrowselected(row:)","title":"func isRowSelected(row: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobject\/isselected(row:column:)","title":"func isSelected(row: Int, column: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobject\/oncolumndeleted(flags:handler:)","title":"func onColumnDeleted(flags: ConnectFlags, handler: (TableRef, Int, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/oncolumninserted(flags:handler:)","title":"func onColumnInserted(flags: ConnectFlags, handler: (TableRef, Int, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/oncolumnreordered(flags:handler:)","title":"func onColumnReordered(flags: ConnectFlags, handler: (TableRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/onmodelchanged(flags:handler:)","title":"func onModelChanged(flags: ConnectFlags, handler: (TableRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/onrowdeleted(flags:handler:)","title":"func onRowDeleted(flags: ConnectFlags, handler: (TableRef, Int, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/onrowinserted(flags:handler:)","title":"func onRowInserted(flags: ConnectFlags, handler: (TableRef, Int, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/onrowreordered(flags:handler:)","title":"func onRowReordered(flags: ConnectFlags, handler: (TableRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/refat(row:column:)","title":"func refAt(row: Int, column: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/removecolumnselection(column:)","title":"func removeColumnSelection(column: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobject\/removerowselection(row:)","title":"func removeRowSelection(row: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobject\/set(caption:)","title":"func set<ObjectT>(caption: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/noopobject\/setcolumndescription(column:description:)","title":"func setColumnDescription(column: Int, description: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/noopobject\/setcolumnheader(column:header:)","title":"func setColumnHeader<ObjectT>(column: Int, header: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/noopobject\/setrowdescription(row:description:)","title":"func setRowDescription(row: Int, description: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/noopobject\/setrowheader(row:header:)","title":"func setRowHeader<ObjectT>(row: Int, header: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/noopobject\/setsummary(accessible:)","title":"func setSummary<ObjectT>(accessible: ObjectT)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/columndeletedsignal","title":"static var columnDeletedSignal: TableSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobject\/columninsertedsignal","title":"static var columnInsertedSignal: TableSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobject\/columnreorderedsignal","title":"static var columnReorderedSignal: TableSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobject\/modelchangedsignal","title":"static var modelChangedSignal: TableSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobject\/rowdeletedsignal","title":"static var rowDeletedSignal: TableSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobject\/rowinsertedsignal","title":"static var rowInsertedSignal: TableSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobject\/rowreorderedsignal","title":"static var rowReorderedSignal: TableSignalName","type":"property"}],"path":"\/documentation\/atk\/noopobject\/tableprotocol-implementations","title":"TableProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/caretoffset","title":"var caretOffset: Int","type":"property"},{"path":"\/documentation\/atk\/noopobject\/charactercount","title":"var characterCount: Int","type":"property"},{"path":"\/documentation\/atk\/noopobject\/defaultattributes","title":"var defaultAttributes: UnsafeMutablePointer<AtkAttributeSet>!","type":"property"},{"path":"\/documentation\/atk\/noopobject\/nselections","title":"var nSelections: Int","type":"property"},{"path":"\/documentation\/atk\/noopobject\/text_ptr","title":"var text_ptr: UnsafeMutablePointer<AtkText>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/addselection(startoffset:endoffset:)","title":"func addSelection(startOffset: Int, endOffset: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobject\/connect(signal:flags:data:destroydata:signalhandler:)-8661l","title":"func connect(signal: TextSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/connect(signal:flags:handler:)-6czxn","title":"func connect(signal: TextSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getboundedranges(rect:coordtype:xcliptype:ycliptype:)","title":"func getBoundedRanges<TextRectangleT>(rect: TextRectangleT, coordType: AtkCoordType, xClipType: AtkTextClipType, yClipType: AtkTextClipType) -> UnsafeMutablePointer<UnsafeMutablePointer<AtkTextRange>?>!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getcaretoffset()","title":"func getCaretOffset() -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getcharacterat(offset:)","title":"func getCharacterAt(offset: Int) -> gunichar","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getcharactercount()","title":"func getCharacterCount() -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getcharacterextents(offset:x:y:width:height:coords:)","title":"func getCharacterExtents(offset: Int, x: UnsafeMutablePointer<gint>!, y: UnsafeMutablePointer<gint>!, width: UnsafeMutablePointer<gint>!, height: UnsafeMutablePointer<gint>!, coords: AtkCoordType)","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getdefaultattributes()","title":"func getDefaultAttributes() -> UnsafeMutablePointer<AtkAttributeSet>!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getnselections()","title":"func getNSelections() -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getoffsetatpoint(x:y:coords:)","title":"func getOffsetAtPoint(x: Int, y: Int, coords: AtkCoordType) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getrangeextents(startoffset:endoffset:coordtype:rect:)","title":"func getRangeExtents<TextRectangleT>(startOffset: Int, endOffset: Int, coordType: AtkCoordType, rect: TextRectangleT)","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getrunattributes(offset:startoffset:endoffset:)","title":"func getRunAttributes(offset: Int, startOffset: UnsafeMutablePointer<gint>!, endOffset: UnsafeMutablePointer<gint>!) -> UnsafeMutablePointer<AtkAttributeSet>!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getselection(selectionnum:startoffset:endoffset:)","title":"func getSelection(selectionNum: Int, startOffset: UnsafeMutablePointer<gint>!, endOffset: UnsafeMutablePointer<gint>!) -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getstringat(offset:granularity:startoffset:endoffset:)","title":"func getStringAt(offset: Int, granularity: AtkTextGranularity, startOffset: UnsafeMutablePointer<gint>!, endOffset: UnsafeMutablePointer<gint>!) -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/gettext(startoffset:endoffset:)","title":"func getText(startOffset: Int, endOffset: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/gettextafter(offset:boundarytype:startoffset:endoffset:)","title":"func getTextAfter(offset: Int, boundaryType: AtkTextBoundary, startOffset: UnsafeMutablePointer<gint>!, endOffset: UnsafeMutablePointer<gint>!) -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/gettextat(offset:boundarytype:startoffset:endoffset:)","title":"func getTextAt(offset: Int, boundaryType: AtkTextBoundary, startOffset: UnsafeMutablePointer<gint>!, endOffset: UnsafeMutablePointer<gint>!) -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/gettextbefore(offset:boundarytype:startoffset:endoffset:)","title":"func getTextBefore(offset: Int, boundaryType: AtkTextBoundary, startOffset: UnsafeMutablePointer<gint>!, endOffset: UnsafeMutablePointer<gint>!) -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/ontextattributeschanged(flags:handler:)","title":"func onTextAttributesChanged(flags: ConnectFlags, handler: (TextRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/ontextcaretmoved(flags:handler:)","title":"func onTextCaretMoved(flags: ConnectFlags, handler: (TextRef, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/ontextchanged(flags:handler:)","title":"func onTextChanged(flags: ConnectFlags, handler: (TextRef, Int, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/ontextinsert(flags:handler:)","title":"func onTextInsert(flags: ConnectFlags, handler: (TextRef, Int, Int, String) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/ontextremove(flags:handler:)","title":"func onTextRemove(flags: ConnectFlags, handler: (TextRef, Int, Int, String) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/ontextselectionchanged(flags:handler:)","title":"func onTextSelectionChanged(flags: ConnectFlags, handler: (TextRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/removeselection(selectionnum:)","title":"func removeSelection(selectionNum: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobject\/scrollsubstringto(startoffset:endoffset:type:)","title":"func scrollSubstringTo(startOffset: Int, endOffset: Int, type: AtkScrollType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobject\/scrollsubstringtopoint(startoffset:endoffset:coords:x:y:)","title":"func scrollSubstringToPoint(startOffset: Int, endOffset: Int, coords: AtkCoordType, x: Int, y: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobject\/setcaret(offset:)","title":"func setCaret(offset: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobject\/setselection(selectionnum:startoffset:endoffset:)","title":"func setSelection(selectionNum: Int, startOffset: Int, endOffset: Int) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/textattributeschangedsignal","title":"static var textAttributesChangedSignal: TextSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobject\/textcaretmovedsignal","title":"static var textCaretMovedSignal: TextSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobject\/textchangedsignal","title":"static var textChangedSignal: TextSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobject\/textinsertsignal","title":"static var textInsertSignal: TextSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobject\/textremovesignal","title":"static var textRemoveSignal: TextSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobject\/textselectionchangedsignal","title":"static var textSelectionChangedSignal: TextSignalName","type":"property"}],"path":"\/documentation\/atk\/noopobject\/textprotocol-implementations","title":"TextProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/increment","title":"var increment: Double","type":"property"},{"path":"\/documentation\/atk\/noopobject\/range","title":"var range: RangeRef!","type":"property"},{"path":"\/documentation\/atk\/noopobject\/subranges","title":"var subRanges: RefSListRef<RangeRef>!","type":"property"},{"path":"\/documentation\/atk\/noopobject\/value_ptr","title":"var value_ptr: UnsafeMutablePointer<AtkValue>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/connect(signal:flags:data:destroydata:signalhandler:)-52h7o","title":"func connect(signal: ValueSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/connect(signal:flags:handler:)-5nem8","title":"func connect(signal: ValueSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getcurrent(value:)","title":"func getCurrent<GObjectValueT>(value: GObjectValueT)","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getincrement()","title":"func getIncrement() -> Double","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getmaximum(value:)","title":"func getMaximum<GObjectValueT>(value: GObjectValueT)","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getminimum(value:)","title":"func getMinimum<GObjectValueT>(value: GObjectValueT)","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getminimumincrement(value:)","title":"func getMinimumIncrement<GObjectValueT>(value: GObjectValueT)","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getrange()","title":"func getRange() -> RangeRef!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getsubranges()","title":"func getSubRanges() -> RefSListRef<RangeRef>!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/getvalueandtext(value:text:)","title":"func getValueAndText(value: UnsafeMutablePointer<gdouble>!, text: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!)","type":"method"},{"path":"\/documentation\/atk\/noopobject\/onvaluechanged(flags:handler:)","title":"func onValueChanged(flags: ConnectFlags, handler: (ValueRef, Double, String) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/setcurrent(value:)","title":"func setCurrent<GObjectValueT>(value: GObjectValueT) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobject\/setvalue(newvalue:)","title":"func setValue(newValue: Double)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/valuechangedsignal","title":"static var valueChangedSignal: ValueSignalName","type":"property"}],"path":"\/documentation\/atk\/noopobject\/valueprotocol-implementations","title":"ValueProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/window_ptr","title":"var window_ptr: UnsafeMutablePointer<AtkWindow>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/bind(property:to:_:flags:transformfrom:transformto:)-2skzv","title":"func bind<Q, T>(property: WindowPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/noopobject\/connect(signal:flags:data:destroydata:signalhandler:)-14evf","title":"func connect(signal: WindowSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/connect(signal:flags:handler:)-392v2","title":"func connect(signal: WindowSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/onactivate(flags:handler:)","title":"func onActivate(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/oncreate(flags:handler:)","title":"func onCreate(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/ondeactivate(flags:handler:)","title":"func onDeactivate(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/ondestroy(flags:handler:)","title":"func onDestroy(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/onmaximize(flags:handler:)","title":"func onMaximize(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/onminimize(flags:handler:)","title":"func onMinimize(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/onmove(flags:handler:)","title":"func onMove(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/onresize(flags:handler:)","title":"func onResize(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobject\/onrestore(flags:handler:)","title":"func onRestore(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobject\/activatesignal","title":"static var activateSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobject\/createsignal","title":"static var createSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobject\/deactivatesignal","title":"static var deactivateSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobject\/destroysignal","title":"static var destroySignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobject\/maximizesignal","title":"static var maximizeSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobject\/minimizesignal","title":"static var minimizeSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobject\/movesignal","title":"static var moveSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobject\/resizesignal","title":"static var resizeSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobject\/restoresignal","title":"static var restoreSignal: WindowSignalName","type":"property"}],"path":"\/documentation\/atk\/noopobject\/windowprotocol-implementations","title":"WindowProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/noopobject","title":"NoOpObject","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectfactory\/init()","title":"init()","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactory\/init(_:)-277x8","title":"init!(UnsafeMutablePointer<AtkNoOpObjectFactory>?)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactory\/init(_:)-385rw","title":"init(UnsafePointer<AtkNoOpObjectFactory>)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactory\/init(_:)-3xhdm","title":"init(UnsafeMutablePointer<AtkNoOpObjectFactory>)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactory\/init(_:)-9en19","title":"init!(UnsafePointer<AtkNoOpObjectFactory>?)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactory\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactory\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactory\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactory\/init(noopobjectfactory:)","title":"init<T>(noOpObjectFactory: T)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactory\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactory\/init(raw:)-140ed","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactory\/init(raw:)-1d016","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactory\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkNoOpObjectFactory>)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactory\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactory\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactory\/init(retainingraw:)-2yoly","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactory\/init(retainingraw:)-9ta14","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectfactory\/metatypereferencefornoopobjectfactory","title":"var metatypeReferenceForNoOpObjectFactory: GType","type":"property"},{"path":"\/documentation\/atk\/noopobjectfactory\/wrapperfornoopobjectfactory","title":"var wrapperForNoOpObjectFactory: NoOpObjectFactoryClassRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectfactory\/metatypefornoopobjectfactory","title":"static var metatypeForNoOpObjectFactory: AtkNoOpObjectFactoryClass?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectfactory\/no_op_object_factory_ptr","title":"var no_op_object_factory_ptr: UnsafeMutablePointer<AtkNoOpObjectFactory>!","type":"property"},{"path":"\/documentation\/atk\/noopobjectfactory\/parent","title":"var parent: AtkObjectFactory","type":"property"}],"path":"\/documentation\/atk\/noopobjectfactory\/noopobjectfactoryprotocol-implementations","title":"NoOpObjectFactoryProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/noopobjectfactory","title":"NoOpObjectFactory","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/object\/init(_:)-1oks","title":"init(UnsafeMutablePointer<AtkObject>)","type":"init"},{"path":"\/documentation\/atk\/object\/init(_:)-3cf8p","title":"init!(UnsafeMutablePointer<AtkObject>?)","type":"init"},{"path":"\/documentation\/atk\/object\/init(_:)-7atcf","title":"init!(UnsafePointer<AtkObject>?)","type":"init"},{"path":"\/documentation\/atk\/object\/init(_:)-8s9jd","title":"init(UnsafePointer<AtkObject>)","type":"init"},{"path":"\/documentation\/atk\/object\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/object\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/object\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/object\/init(object:)","title":"init<T>(object: T)","type":"init"},{"path":"\/documentation\/atk\/object\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/object\/init(raw:)-5qmlm","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/object\/init(raw:)-nhcf","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/object\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkObject>)","type":"init"},{"path":"\/documentation\/atk\/object\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/object\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/object\/init(retainingraw:)-5rg4j","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/object\/init(retainingraw:)-8e09c","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/object\/metatypereferenceforatkobject","title":"var metatypeReferenceForAtkObject: GType","type":"property"},{"path":"\/documentation\/atk\/object\/wrapperforatkobject","title":"var wrapperForAtkObject: ObjectClassRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/object\/metatypeforatkobject","title":"static var metatypeForAtkObject: AtkObjectClass?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/object\/accessibleid","title":"var accessibleId: String!","type":"property"},{"path":"\/documentation\/atk\/object\/accessibleparent","title":"var accessibleParent: ObjectRef!","type":"property"},{"path":"\/documentation\/atk\/object\/attributes","title":"var attributes: UnsafeMutablePointer<AtkAttributeSet>!","type":"property"},{"path":"\/documentation\/atk\/object\/description","title":"var description: String!","type":"property"},{"path":"\/documentation\/atk\/object\/indexinparent","title":"var indexInParent: Int","type":"property"},{"path":"\/documentation\/atk\/object\/layer","title":"var layer: AtkLayer","type":"property"},{"path":"\/documentation\/atk\/object\/mdizorder","title":"var mdiZorder: Int","type":"property"},{"path":"\/documentation\/atk\/object\/naccessiblechildren","title":"var nAccessibleChildren: Int","type":"property"},{"path":"\/documentation\/atk\/object\/name","title":"var name: String!","type":"property"},{"path":"\/documentation\/atk\/object\/objectlocale","title":"var objectLocale: String!","type":"property"},{"path":"\/documentation\/atk\/object\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<AtkObject>!","type":"property"},{"path":"\/documentation\/atk\/object\/parent","title":"var parent: ObjectRef!","type":"property"},{"path":"\/documentation\/atk\/object\/relationset","title":"var relationSet: RelationSetRef!","type":"property"},{"path":"\/documentation\/atk\/object\/role","title":"var role: AtkRole","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/object\/add(relationship:target:)","title":"func add<ObjectT>(relationship: AtkRelationType, target: ObjectT) -> Bool","type":"method"},{"path":"\/documentation\/atk\/object\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: ObjectPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/object\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/object\/connect(signal:flags:handler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/object\/connectpropertychange(handler:)","title":"func connectPropertyChange(handler: UnsafeMutablePointer<AtkPropertyChangeHandler?>!) -> Int","type":"method"},{"path":"\/documentation\/atk\/object\/focustrackernotify()","title":"func focusTrackerNotify()","type":"method"},{"path":"\/documentation\/atk\/object\/get(property:)","title":"func get(property: ObjectPropertyName) -> Value","type":"method"},{"path":"\/documentation\/atk\/object\/getaccessibleid()","title":"func getAccessibleId() -> String!","type":"method"},{"path":"\/documentation\/atk\/object\/getattributes()","title":"func getAttributes() -> UnsafeMutablePointer<AtkAttributeSet>!","type":"method"},{"path":"\/documentation\/atk\/object\/getdescription()","title":"func getDescription() -> String!","type":"method"},{"path":"\/documentation\/atk\/object\/getindexinparent()","title":"func getIndexInParent() -> Int","type":"method"},{"path":"\/documentation\/atk\/object\/getlayer()","title":"func getLayer() -> AtkLayer","type":"method"},{"path":"\/documentation\/atk\/object\/getmdizorder()","title":"func getMdiZorder() -> Int","type":"method"},{"path":"\/documentation\/atk\/object\/getnaccessiblechildren()","title":"func getNAccessibleChildren() -> Int","type":"method"},{"path":"\/documentation\/atk\/object\/getname()","title":"func getName() -> String!","type":"method"},{"path":"\/documentation\/atk\/object\/getobjectlocale()","title":"func getObjectLocale() -> String!","type":"method"},{"path":"\/documentation\/atk\/object\/getparent()","title":"func getParent() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/object\/getrole()","title":"func getRole() -> AtkRole","type":"method"},{"path":"\/documentation\/atk\/object\/initialize(data:)","title":"func initialize(data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/object\/notifystatechange(state:value:)","title":"func notifyStateChange(state: AtkState, value: Bool)","type":"method"},{"path":"\/documentation\/atk\/object\/onactivedescendantchanged(flags:handler:)","title":"func onActiveDescendantChanged(flags: ConnectFlags, handler: (ObjectRef, ObjectRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/object\/onannouncement(flags:handler:)","title":"func onAnnouncement(flags: ConnectFlags, handler: (ObjectRef, String) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/object\/onchildrenchanged(flags:handler:)","title":"func onChildrenChanged(flags: ConnectFlags, handler: (ObjectRef, UInt, ObjectRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/object\/onfocusevent(flags:handler:)","title":"func onFocusEvent(flags: ConnectFlags, handler: (ObjectRef, Bool) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/object\/onnotification(flags:handler:)","title":"func onNotification(flags: ConnectFlags, handler: (ObjectRef, String, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/object\/onnotifyaccessiblecomponentlayer(flags:handler:)","title":"func onNotifyAccessibleComponentLayer(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/object\/onnotifyaccessiblecomponentmdizorder(flags:handler:)","title":"func onNotifyAccessibleComponentMdiZorder(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/object\/onnotifyaccessibledescription(flags:handler:)","title":"func onNotifyAccessibleDescription(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/object\/onnotifyaccessiblehypertextnlinks(flags:handler:)","title":"func onNotifyAccessibleHypertextNlinks(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/object\/onnotifyaccessiblename(flags:handler:)","title":"func onNotifyAccessibleName(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/object\/onnotifyaccessibleparent(flags:handler:)","title":"func onNotifyAccessibleParent(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/object\/onnotifyaccessiblerole(flags:handler:)","title":"func onNotifyAccessibleRole(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/object\/onnotifyaccessibletablecaption(flags:handler:)","title":"func onNotifyAccessibleTableCaption(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/object\/onnotifyaccessibletablecaptionobject(flags:handler:)","title":"func onNotifyAccessibleTableCaptionObject(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/object\/onnotifyaccessibletablecolumndescription(flags:handler:)","title":"func onNotifyAccessibleTableColumnDescription(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/object\/onnotifyaccessibletablecolumnheader(flags:handler:)","title":"func onNotifyAccessibleTableColumnHeader(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/object\/onnotifyaccessibletablerowdescription(flags:handler:)","title":"func onNotifyAccessibleTableRowDescription(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/object\/onnotifyaccessibletablerowheader(flags:handler:)","title":"func onNotifyAccessibleTableRowHeader(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/object\/onnotifyaccessibletablesummary(flags:handler:)","title":"func onNotifyAccessibleTableSummary(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/object\/onnotifyaccessiblevalue(flags:handler:)","title":"func onNotifyAccessibleValue(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/object\/onpropertychange(flags:handler:)","title":"func onPropertyChange(flags: ConnectFlags, handler: (ObjectRef, PropertyValuesRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/object\/onstatechange(flags:handler:)","title":"func onStateChange(flags: ConnectFlags, handler: (ObjectRef, String, Bool) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/object\/onvisibledatachanged(flags:handler:)","title":"func onVisibleDataChanged(flags: ConnectFlags, handler: (ObjectRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/object\/peekparent()","title":"func peekParent() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/object\/refaccessiblechild(i:)","title":"func refAccessibleChild(i: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/object\/refrelationset()","title":"func refRelationSet() -> RelationSetRef!","type":"method"},{"path":"\/documentation\/atk\/object\/refstateset()","title":"func refStateSet() -> StateSetRef!","type":"method"},{"path":"\/documentation\/atk\/object\/remove(relationship:target:)","title":"func remove<ObjectT>(relationship: AtkRelationType, target: ObjectT) -> Bool","type":"method"},{"path":"\/documentation\/atk\/object\/removepropertychangehandler(handlerid:)","title":"func removePropertyChangeHandler(handlerId: Int)","type":"method"},{"path":"\/documentation\/atk\/object\/set(description:)","title":"func set(description: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/object\/set(name:)","title":"func set(name: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/object\/set(parent:)","title":"func set<ObjectT>(parent: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/object\/set(property:value:)","title":"func set(property: ObjectPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/atk\/object\/set(role:)","title":"func set(role: AtkRole)","type":"method"},{"path":"\/documentation\/atk\/object\/setaccessibleid(name:)","title":"func setAccessibleId(name: UnsafePointer<gchar>!)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/object\/activedescendantchangedsignal","title":"static var activeDescendantChangedSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/object\/announcementsignal","title":"static var announcementSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/object\/childrenchangedsignal","title":"static var childrenChangedSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/object\/focuseventsignal","title":"static var focusEventSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/object\/notificationsignal","title":"static var notificationSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/object\/notifyaccessiblecomponentlayersignal","title":"static var notifyAccessibleComponentLayerSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/object\/notifyaccessiblecomponentmdizordersignal","title":"static var notifyAccessibleComponentMdiZorderSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/object\/notifyaccessibledescriptionsignal","title":"static var notifyAccessibleDescriptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/object\/notifyaccessiblehypertextnlinkssignal","title":"static var notifyAccessibleHypertextNlinksSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/object\/notifyaccessiblenamesignal","title":"static var notifyAccessibleNameSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/object\/notifyaccessibleparentsignal","title":"static var notifyAccessibleParentSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/object\/notifyaccessiblerolesignal","title":"static var notifyAccessibleRoleSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/object\/notifyaccessibletablecaptionobjectsignal","title":"static var notifyAccessibleTableCaptionObjectSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/object\/notifyaccessibletablecaptionsignal","title":"static var notifyAccessibleTableCaptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/object\/notifyaccessibletablecolumndescriptionsignal","title":"static var notifyAccessibleTableColumnDescriptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/object\/notifyaccessibletablecolumnheadersignal","title":"static var notifyAccessibleTableColumnHeaderSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/object\/notifyaccessibletablerowdescriptionsignal","title":"static var notifyAccessibleTableRowDescriptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/object\/notifyaccessibletablerowheadersignal","title":"static var notifyAccessibleTableRowHeaderSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/object\/notifyaccessibletablesummarysignal","title":"static var notifyAccessibleTableSummarySignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/object\/notifyaccessiblevaluesignal","title":"static var notifyAccessibleValueSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/object\/propertychangesignal","title":"static var propertyChangeSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/object\/statechangesignal","title":"static var stateChangeSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/object\/visibledatachangedsignal","title":"static var visibleDataChangedSignal: ObjectSignalName","type":"property"}],"path":"\/documentation\/atk\/object\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/object","title":"Object","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/objectfactory\/init(_:)-1d7em","title":"init!(UnsafeMutablePointer<AtkObjectFactory>?)","type":"init"},{"path":"\/documentation\/atk\/objectfactory\/init(_:)-2xst5","title":"init!(UnsafePointer<AtkObjectFactory>?)","type":"init"},{"path":"\/documentation\/atk\/objectfactory\/init(_:)-4ct55","title":"init(UnsafePointer<AtkObjectFactory>)","type":"init"},{"path":"\/documentation\/atk\/objectfactory\/init(_:)-6qcpn","title":"init(UnsafeMutablePointer<AtkObjectFactory>)","type":"init"},{"path":"\/documentation\/atk\/objectfactory\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/objectfactory\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/objectfactory\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/objectfactory\/init(objectfactory:)","title":"init<T>(objectFactory: T)","type":"init"},{"path":"\/documentation\/atk\/objectfactory\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/objectfactory\/init(raw:)-80e4z","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/objectfactory\/init(raw:)-8bldk","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/objectfactory\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkObjectFactory>)","type":"init"},{"path":"\/documentation\/atk\/objectfactory\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/objectfactory\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/objectfactory\/init(retainingraw:)-58mvf","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/objectfactory\/init(retainingraw:)-77jm8","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/objectfactory\/metatypereferenceforobjectfactory","title":"var metatypeReferenceForObjectFactory: GType","type":"property"},{"path":"\/documentation\/atk\/objectfactory\/wrapperforobjectfactory","title":"var wrapperForObjectFactory: ObjectFactoryClassRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/objectfactory\/metatypeforobjectfactory","title":"static var metatypeForObjectFactory: AtkObjectFactoryClass?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/objectfactory\/accessibletype","title":"var accessibleType: GType","type":"property"},{"path":"\/documentation\/atk\/objectfactory\/object_factory_ptr","title":"var object_factory_ptr: UnsafeMutablePointer<AtkObjectFactory>!","type":"property"},{"path":"\/documentation\/atk\/objectfactory\/parent","title":"var parent: GObject","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/objectfactory\/createaccessible(obj:)","title":"func createAccessible<GObjectObjectT>(obj: GObjectObjectT) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/objectfactory\/getaccessibletype()","title":"func getAccessibleType() -> GType","type":"method"},{"path":"\/documentation\/atk\/objectfactory\/invalidate()","title":"func invalidate()","type":"method"}],"path":"\/documentation\/atk\/objectfactory\/objectfactoryprotocol-implementations","title":"ObjectFactoryProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/objectfactory","title":"ObjectFactory","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/plug\/init()","title":"init()","type":"init"},{"path":"\/documentation\/atk\/plug\/init(_:)-1z8c4","title":"init(UnsafePointer<AtkPlug>)","type":"init"},{"path":"\/documentation\/atk\/plug\/init(_:)-4bahs","title":"init!(UnsafeMutablePointer<AtkPlug>?)","type":"init"},{"path":"\/documentation\/atk\/plug\/init(_:)-5ph8b","title":"init!(UnsafePointer<AtkPlug>?)","type":"init"},{"path":"\/documentation\/atk\/plug\/init(_:)-6gpyh","title":"init(UnsafeMutablePointer<AtkPlug>)","type":"init"},{"path":"\/documentation\/atk\/plug\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/plug\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/plug\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/plug\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/plug\/init(plug:)","title":"init<T>(plug: T)","type":"init"},{"path":"\/documentation\/atk\/plug\/init(raw:)-1xrdj","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/plug\/init(raw:)-52r06","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/plug\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkPlug>)","type":"init"},{"path":"\/documentation\/atk\/plug\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/plug\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/plug\/init(retainingraw:)-6b77n","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/plug\/init(retainingraw:)-8xrea","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/plug\/metatypereferenceforplug","title":"var metatypeReferenceForPlug: GType","type":"property"},{"path":"\/documentation\/atk\/plug\/wrapperforplug","title":"var wrapperForPlug: PlugClassRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/plug\/metatypeforplug","title":"static var metatypeForPlug: AtkPlugClass?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/plug\/alpha","title":"var alpha: Double","type":"property"},{"path":"\/documentation\/atk\/plug\/component_ptr","title":"var component_ptr: UnsafeMutablePointer<AtkComponent>!","type":"property"},{"path":"\/documentation\/atk\/plug\/layer","title":"var layer: AtkLayer","type":"property"},{"path":"\/documentation\/atk\/plug\/mdizorder","title":"var mdiZorder: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/plug\/addfocus(handler:)","title":"func addFocus(handler: AtkFocusHandler?) -> Int","type":"method"},{"path":"\/documentation\/atk\/plug\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ComponentSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/plug\/connect(signal:flags:handler:)","title":"func connect(signal: ComponentSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/plug\/contains(x:y:coordtype:)","title":"func contains(x: Int, y: Int, coordType: AtkCoordType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/plug\/getalpha()","title":"func getAlpha() -> Double","type":"method"},{"path":"\/documentation\/atk\/plug\/getextents(x:y:width:height:coordtype:)","title":"func getExtents(x: UnsafeMutablePointer<gint>!, y: UnsafeMutablePointer<gint>!, width: UnsafeMutablePointer<gint>!, height: UnsafeMutablePointer<gint>!, coordType: AtkCoordType)","type":"method"},{"path":"\/documentation\/atk\/plug\/getlayer()","title":"func getLayer() -> AtkLayer","type":"method"},{"path":"\/documentation\/atk\/plug\/getmdizorder()","title":"func getMdiZorder() -> Int","type":"method"},{"path":"\/documentation\/atk\/plug\/getposition(x:y:coordtype:)","title":"func getPosition(x: UnsafeMutablePointer<gint>!, y: UnsafeMutablePointer<gint>!, coordType: AtkCoordType)","type":"method"},{"path":"\/documentation\/atk\/plug\/getsize(width:height:)","title":"func getSize(width: UnsafeMutablePointer<gint>!, height: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/atk\/plug\/grabfocus()","title":"func grabFocus() -> Bool","type":"method"},{"path":"\/documentation\/atk\/plug\/onboundschanged(flags:handler:)","title":"func onBoundsChanged(flags: ConnectFlags, handler: (ComponentRef, RectangleRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/plug\/refaccessibleatpoint(x:y:coordtype:)","title":"func refAccessibleAtPoint(x: Int, y: Int, coordType: AtkCoordType) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/plug\/removefocushandler(handlerid:)","title":"func removeFocusHandler(handlerId: Int)","type":"method"},{"path":"\/documentation\/atk\/plug\/scrollto(type:)","title":"func scrollTo(type: AtkScrollType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/plug\/scrolltopoint(coords:x:y:)","title":"func scrollToPoint(coords: AtkCoordType, x: Int, y: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/plug\/setextents(x:y:width:height:coordtype:)","title":"func setExtents(x: Int, y: Int, width: Int, height: Int, coordType: AtkCoordType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/plug\/setposition(x:y:coordtype:)","title":"func setPosition(x: Int, y: Int, coordType: AtkCoordType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/plug\/setsize(width:height:)","title":"func setSize(width: Int, height: Int) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/plug\/boundschangedsignal","title":"static var boundsChangedSignal: ComponentSignalName","type":"property"}],"path":"\/documentation\/atk\/plug\/componentprotocol-implementations","title":"ComponentProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/plug\/id","title":"var id: String!","type":"property"},{"path":"\/documentation\/atk\/plug\/parent","title":"var parent: AtkObject","type":"property"},{"path":"\/documentation\/atk\/plug\/plug_ptr","title":"var plug_ptr: UnsafeMutablePointer<AtkPlug>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/plug\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: PlugPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/plug\/get(property:)","title":"func get(property: PlugPropertyName) -> Value","type":"method"},{"path":"\/documentation\/atk\/plug\/getid()","title":"func getId() -> String!","type":"method"},{"path":"\/documentation\/atk\/plug\/set(child:)","title":"func set<ObjectT>(child: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/plug\/set(property:value:)","title":"func set(property: PlugPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/atk\/plug\/plugprotocol-implementations","title":"PlugProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/plug","title":"Plug","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/propertyvalues\/init(_:)-12j23","title":"init!(UnsafeMutablePointer<AtkPropertyValues>?)","type":"init"},{"path":"\/documentation\/atk\/propertyvalues\/init(_:)-1egce","title":"init!(UnsafePointer<AtkPropertyValues>?)","type":"init"},{"path":"\/documentation\/atk\/propertyvalues\/init(_:)-2xxca","title":"init(UnsafePointer<AtkPropertyValues>)","type":"init"},{"path":"\/documentation\/atk\/propertyvalues\/init(_:)-5da6u","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/propertyvalues\/init(_:)-8i017","title":"init(UnsafeMutablePointer<AtkPropertyValues>)","type":"init"},{"path":"\/documentation\/atk\/propertyvalues\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/propertyvalues\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/propertyvalues\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/propertyvalues\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/propertyvalues\/init(raw:)-3va1d","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/propertyvalues\/init(raw:)-70a0g","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/propertyvalues\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkPropertyValues>)","type":"init"},{"path":"\/documentation\/atk\/propertyvalues\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/propertyvalues\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/propertyvalues\/init(retainingraw:)-8lxve","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/propertyvalues\/init(retainingraw:)-ozxj","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/propertyvalues\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/propertyvalues\/newvalue","title":"var newValue: GValue","type":"property"},{"path":"\/documentation\/atk\/propertyvalues\/oldvalue","title":"var oldValue: GValue","type":"property"},{"path":"\/documentation\/atk\/propertyvalues\/propertyname","title":"var propertyName: UnsafePointer<gchar>!","type":"property"}],"path":"\/documentation\/atk\/propertyvalues\/propertyvaluesprotocol-implementations","title":"PropertyValuesProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/propertyvalues","title":"PropertyValues","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/range\/init(_:)-3cv7p","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/range\/init(_:)-3qkzd","title":"init(UnsafePointer<AtkRange>)","type":"init"},{"path":"\/documentation\/atk\/range\/init(_:)-833ee","title":"init(UnsafeMutablePointer<AtkRange>)","type":"init"},{"path":"\/documentation\/atk\/range\/init(_:)-8ybdm","title":"init!(UnsafePointer<AtkRange>?)","type":"init"},{"path":"\/documentation\/atk\/range\/init(_:)-cgzl","title":"init!(UnsafeMutablePointer<AtkRange>?)","type":"init"},{"path":"\/documentation\/atk\/range\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/range\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/range\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/range\/init(lowerlimit:upperlimit:description:)","title":"init(lowerLimit: Double, upperLimit: Double, description: UnsafePointer<gchar>!)","type":"init"},{"path":"\/documentation\/atk\/range\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/range\/init(raw:)-4r3mp","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/range\/init(raw:)-dtco","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/range\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkRange>)","type":"init"},{"path":"\/documentation\/atk\/range\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/range\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/range\/init(retainingraw:)-40y5z","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/range\/init(retainingraw:)-8xeaj","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/range\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/range\/description","title":"var description: String!","type":"property"},{"path":"\/documentation\/atk\/range\/lowerlimit","title":"var lowerLimit: Double","type":"property"},{"path":"\/documentation\/atk\/range\/range_ptr","title":"var range_ptr: UnsafeMutablePointer<AtkRange>!","type":"property"},{"path":"\/documentation\/atk\/range\/upperlimit","title":"var upperLimit: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/range\/copy()","title":"func copy() -> RangeRef!","type":"method"},{"path":"\/documentation\/atk\/range\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/atk\/range\/getdescription()","title":"func getDescription() -> String!","type":"method"},{"path":"\/documentation\/atk\/range\/getlowerlimit()","title":"func getLowerLimit() -> Double","type":"method"},{"path":"\/documentation\/atk\/range\/getupperlimit()","title":"func getUpperLimit() -> Double","type":"method"}],"path":"\/documentation\/atk\/range\/rangeprotocol-implementations","title":"RangeProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/range","title":"Range","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/rectangle\/init(_:)-24q51","title":"init(UnsafeMutablePointer<AtkRectangle>)","type":"init"},{"path":"\/documentation\/atk\/rectangle\/init(_:)-3jg2m","title":"init!(UnsafeMutablePointer<AtkRectangle>?)","type":"init"},{"path":"\/documentation\/atk\/rectangle\/init(_:)-5sxcg","title":"init!(UnsafePointer<AtkRectangle>?)","type":"init"},{"path":"\/documentation\/atk\/rectangle\/init(_:)-7k029","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/rectangle\/init(_:)-x3fd","title":"init(UnsafePointer<AtkRectangle>)","type":"init"},{"path":"\/documentation\/atk\/rectangle\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/rectangle\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/rectangle\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/rectangle\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/rectangle\/init(raw:)-59xm2","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/rectangle\/init(raw:)-94sa9","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/rectangle\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkRectangle>)","type":"init"},{"path":"\/documentation\/atk\/rectangle\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/rectangle\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/rectangle\/init(retainingraw:)-21j4","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/rectangle\/init(retainingraw:)-2oldr","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/rectangle\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/rectangle\/height","title":"var height: gint","type":"property"},{"path":"\/documentation\/atk\/rectangle\/rectangle_ptr","title":"var rectangle_ptr: UnsafeMutablePointer<AtkRectangle>!","type":"property"},{"path":"\/documentation\/atk\/rectangle\/width","title":"var width: gint","type":"property"},{"path":"\/documentation\/atk\/rectangle\/x","title":"var x: gint","type":"property"},{"path":"\/documentation\/atk\/rectangle\/y","title":"var y: gint","type":"property"}],"path":"\/documentation\/atk\/rectangle\/rectangleprotocol-implementations","title":"RectangleProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/rectangle","title":"Rectangle","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/registry\/init(_:)-2zagz","title":"init(UnsafePointer<AtkRegistry>)","type":"init"},{"path":"\/documentation\/atk\/registry\/init(_:)-3qt68","title":"init(UnsafeMutablePointer<AtkRegistry>)","type":"init"},{"path":"\/documentation\/atk\/registry\/init(_:)-40x4m","title":"init!(UnsafePointer<AtkRegistry>?)","type":"init"},{"path":"\/documentation\/atk\/registry\/init(_:)-bb9r","title":"init!(UnsafeMutablePointer<AtkRegistry>?)","type":"init"},{"path":"\/documentation\/atk\/registry\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/registry\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/registry\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/registry\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/registry\/init(raw:)-6vhhr","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/registry\/init(raw:)-74h4k","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/registry\/init(registry:)","title":"init<T>(registry: T)","type":"init"},{"path":"\/documentation\/atk\/registry\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkRegistry>)","type":"init"},{"path":"\/documentation\/atk\/registry\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/registry\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/registry\/init(retainingraw:)-3d256","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/registry\/init(retainingraw:)-6i249","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/registry\/metatypereferenceforregistry","title":"var metatypeReferenceForRegistry: GType","type":"property"},{"path":"\/documentation\/atk\/registry\/wrapperforregistry","title":"var wrapperForRegistry: RegistryClassRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/registry\/metatypeforregistry","title":"static var metatypeForRegistry: AtkRegistryClass?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/registry\/factorysingletoncache","title":"var factorySingletonCache: HashTableRef!","type":"property"},{"path":"\/documentation\/atk\/registry\/factorytyperegistry","title":"var factoryTypeRegistry: HashTableRef!","type":"property"},{"path":"\/documentation\/atk\/registry\/parent","title":"var parent: GObject","type":"property"},{"path":"\/documentation\/atk\/registry\/registry_ptr","title":"var registry_ptr: UnsafeMutablePointer<AtkRegistry>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/registry\/getfactory(type:)-7bp6a","title":"func getFactory(type: GType) -> GType","type":"method"},{"path":"\/documentation\/atk\/registry\/getfactory(type:)-8jc4c","title":"func getFactory(type: GType) -> ObjectFactoryRef!","type":"method"},{"path":"\/documentation\/atk\/registry\/setfactory(type:factorytype:)","title":"func setFactory(type: GType, factoryType: GType)","type":"method"}],"path":"\/documentation\/atk\/registry\/registryprotocol-implementations","title":"RegistryProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/registry","title":"Registry","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/relation\/init(_:)-1t60e","title":"init!(UnsafePointer<AtkRelation>?)","type":"init"},{"path":"\/documentation\/atk\/relation\/init(_:)-6joxm","title":"init(UnsafeMutablePointer<AtkRelation>)","type":"init"},{"path":"\/documentation\/atk\/relation\/init(_:)-7asjt","title":"init(UnsafePointer<AtkRelation>)","type":"init"},{"path":"\/documentation\/atk\/relation\/init(_:)-8ovzu","title":"init!(UnsafeMutablePointer<AtkRelation>?)","type":"init"},{"path":"\/documentation\/atk\/relation\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/relation\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/relation\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/relation\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/relation\/init(raw:)-4neyl","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/relation\/init(raw:)-ursq","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/relation\/init(relation:)","title":"init<T>(relation: T)","type":"init"},{"path":"\/documentation\/atk\/relation\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkRelation>)","type":"init"},{"path":"\/documentation\/atk\/relation\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/relation\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/relation\/init(retainingraw:)-7adso","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/relation\/init(retainingraw:)-7ll0h","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/relation\/init(targets:ntargets:relationship:)","title":"init(targets: UnsafeMutablePointer<UnsafeMutablePointer<AtkObject>?>!, nTargets: Int, relationship: AtkRelationType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/relation\/metatypereferenceforrelation","title":"var metatypeReferenceForRelation: GType","type":"property"},{"path":"\/documentation\/atk\/relation\/wrapperforrelation","title":"var wrapperForRelation: RelationClassRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/relation\/metatypeforrelation","title":"static var metatypeForRelation: AtkRelationClass?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/relation\/parent","title":"var parent: GObject","type":"property"},{"path":"\/documentation\/atk\/relation\/relationtype","title":"var relationType: AtkRelationType","type":"property"},{"path":"\/documentation\/atk\/relation\/relation_ptr","title":"var relation_ptr: UnsafeMutablePointer<AtkRelation>!","type":"property"},{"path":"\/documentation\/atk\/relation\/relationship","title":"var relationship: AtkRelationType","type":"property"},{"path":"\/documentation\/atk\/relation\/target","title":"var target: RefArrayRef<ObjectRef>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/relation\/add(target:)","title":"func add<ObjectT>(target: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/relation\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: RelationPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/relation\/get(property:)","title":"func get(property: RelationPropertyName) -> Value","type":"method"},{"path":"\/documentation\/atk\/relation\/getrelationtype()","title":"func getRelationType() -> AtkRelationType","type":"method"},{"path":"\/documentation\/atk\/relation\/gettarget()","title":"func getTarget() -> RefArrayRef<ObjectRef>!","type":"method"},{"path":"\/documentation\/atk\/relation\/remove(target:)","title":"func remove<ObjectT>(target: ObjectT) -> Bool","type":"method"},{"path":"\/documentation\/atk\/relation\/set(property:value:)","title":"func set(property: RelationPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/atk\/relation\/relationprotocol-implementations","title":"RelationProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/relation","title":"Relation","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/relationset\/init()","title":"init()","type":"init"},{"path":"\/documentation\/atk\/relationset\/init(_:)-106v8","title":"init(UnsafeMutablePointer<AtkRelationSet>)","type":"init"},{"path":"\/documentation\/atk\/relationset\/init(_:)-1o87u","title":"init!(UnsafeMutablePointer<AtkRelationSet>?)","type":"init"},{"path":"\/documentation\/atk\/relationset\/init(_:)-5mj6x","title":"init!(UnsafePointer<AtkRelationSet>?)","type":"init"},{"path":"\/documentation\/atk\/relationset\/init(_:)-o28v","title":"init(UnsafePointer<AtkRelationSet>)","type":"init"},{"path":"\/documentation\/atk\/relationset\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/relationset\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/relationset\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/relationset\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/relationset\/init(raw:)-9epn0","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/relationset\/init(raw:)-9pwmf","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/relationset\/init(relationset:)","title":"init<T>(relationSet: T)","type":"init"},{"path":"\/documentation\/atk\/relationset\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkRelationSet>)","type":"init"},{"path":"\/documentation\/atk\/relationset\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/relationset\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/relationset\/init(retainingraw:)-1ab4q","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/relationset\/init(retainingraw:)-6dg79","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/relationset\/metatypereferenceforrelationset","title":"var metatypeReferenceForRelationSet: GType","type":"property"},{"path":"\/documentation\/atk\/relationset\/wrapperforrelationset","title":"var wrapperForRelationSet: RelationSetClassRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/relationset\/metatypeforrelationset","title":"static var metatypeForRelationSet: AtkRelationSetClass?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/relationset\/nrelations","title":"var nRelations: Int","type":"property"},{"path":"\/documentation\/atk\/relationset\/parent","title":"var parent: GObject","type":"property"},{"path":"\/documentation\/atk\/relationset\/relation_set_ptr","title":"var relation_set_ptr: UnsafeMutablePointer<AtkRelationSet>!","type":"property"},{"path":"\/documentation\/atk\/relationset\/relations","title":"var relations: PtrArrayRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/relationset\/add(relation:)","title":"func add<RelationT>(relation: RelationT)","type":"method"},{"path":"\/documentation\/atk\/relationset\/addrelationbytype(relationship:target:)","title":"func addRelationByType<ObjectT>(relationship: AtkRelationType, target: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/relationset\/contains(relationship:)","title":"func contains(relationship: AtkRelationType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/relationset\/containstarget(relationship:target:)","title":"func containsTarget<ObjectT>(relationship: AtkRelationType, target: ObjectT) -> Bool","type":"method"},{"path":"\/documentation\/atk\/relationset\/getnrelations()","title":"func getNRelations() -> Int","type":"method"},{"path":"\/documentation\/atk\/relationset\/getrelation(i:)","title":"func getRelation(i: Int) -> RelationRef!","type":"method"},{"path":"\/documentation\/atk\/relationset\/getrelationbytype(relationship:)","title":"func getRelationByType(relationship: AtkRelationType) -> RelationRef!","type":"method"},{"path":"\/documentation\/atk\/relationset\/remove(relation:)","title":"func remove<RelationT>(relation: RelationT)","type":"method"}],"path":"\/documentation\/atk\/relationset\/relationsetprotocol-implementations","title":"RelationSetProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/relationset","title":"RelationSet","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/selection\/init(_:)-16rek","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/selection\/init(_:)-3w6u9","title":"init(UnsafeMutablePointer<AtkSelection>)","type":"init"},{"path":"\/documentation\/atk\/selection\/init(_:)-51mjm","title":"init(UnsafePointer<AtkSelection>)","type":"init"},{"path":"\/documentation\/atk\/selection\/init(_:)-6584","title":"init!(UnsafePointer<AtkSelection>?)","type":"init"},{"path":"\/documentation\/atk\/selection\/init(_:)-71adg","title":"init!(UnsafeMutablePointer<AtkSelection>?)","type":"init"},{"path":"\/documentation\/atk\/selection\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/selection\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/selection\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/selection\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/selection\/init(raw:)-1x4qi","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/selection\/init(raw:)-9a62y","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/selection\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkSelection>)","type":"init"},{"path":"\/documentation\/atk\/selection\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/selection\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/selection\/init(retainingraw:)-4yzov","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/selection\/init(retainingraw:)-5a6vq","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/selection\/metatypereferenceforselection","title":"var metatypeReferenceForSelection: GType","type":"property"},{"path":"\/documentation\/atk\/selection\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"path":"\/documentation\/atk\/selection\/wrapperforselection","title":"var wrapperForSelection: SelectionIfaceRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/selection\/metatypeforselection","title":"static var metatypeForSelection: AtkSelectionIface?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/selection\/selectioncount","title":"var selectionCount: Int","type":"property"},{"path":"\/documentation\/atk\/selection\/selection_ptr","title":"var selection_ptr: UnsafeMutablePointer<AtkSelection>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/selection\/addselection(i:)","title":"func addSelection(i: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/selection\/clearselection()","title":"func clearSelection() -> Bool","type":"method"},{"path":"\/documentation\/atk\/selection\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: SelectionSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/selection\/connect(signal:flags:handler:)","title":"func connect(signal: SelectionSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/selection\/getselectioncount()","title":"func getSelectionCount() -> Int","type":"method"},{"path":"\/documentation\/atk\/selection\/ischildselected(i:)","title":"func isChildSelected(i: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/selection\/onselectionchanged(flags:handler:)","title":"func onSelectionChanged(flags: ConnectFlags, handler: (SelectionRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/selection\/refselection(i:)","title":"func refSelection(i: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/selection\/removeselection(i:)","title":"func removeSelection(i: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/selection\/selectallselection()","title":"func selectAllSelection() -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/selection\/selectionchangedsignal","title":"static var selectionChangedSignal: SelectionSignalName","type":"property"}],"path":"\/documentation\/atk\/selection\/selectionprotocol-implementations","title":"SelectionProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/selection","title":"Selection","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/socket\/init()","title":"init()","type":"init"},{"path":"\/documentation\/atk\/socket\/init(_:)-23rxc","title":"init!(UnsafePointer<AtkSocket>?)","type":"init"},{"path":"\/documentation\/atk\/socket\/init(_:)-2y5w6","title":"init(UnsafePointer<AtkSocket>)","type":"init"},{"path":"\/documentation\/atk\/socket\/init(_:)-3tnfk","title":"init!(UnsafeMutablePointer<AtkSocket>?)","type":"init"},{"path":"\/documentation\/atk\/socket\/init(_:)-qpq1","title":"init(UnsafeMutablePointer<AtkSocket>)","type":"init"},{"path":"\/documentation\/atk\/socket\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/socket\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/socket\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/socket\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/socket\/init(raw:)-5hfay","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/socket\/init(raw:)-8mezf","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/socket\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkSocket>)","type":"init"},{"path":"\/documentation\/atk\/socket\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/socket\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/socket\/init(retainingraw:)-26x1z","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/socket\/init(retainingraw:)-61rhm","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/socket\/init(socket:)","title":"init<T>(socket: T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/socket\/metatypereferenceforsocket","title":"var metatypeReferenceForSocket: GType","type":"property"},{"path":"\/documentation\/atk\/socket\/wrapperforsocket","title":"var wrapperForSocket: SocketClassRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/socket\/metatypeforsocket","title":"static var metatypeForSocket: AtkSocketClass?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/socket\/alpha","title":"var alpha: Double","type":"property"},{"path":"\/documentation\/atk\/socket\/component_ptr","title":"var component_ptr: UnsafeMutablePointer<AtkComponent>!","type":"property"},{"path":"\/documentation\/atk\/socket\/layer","title":"var layer: AtkLayer","type":"property"},{"path":"\/documentation\/atk\/socket\/mdizorder","title":"var mdiZorder: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/socket\/addfocus(handler:)","title":"func addFocus(handler: AtkFocusHandler?) -> Int","type":"method"},{"path":"\/documentation\/atk\/socket\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ComponentSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/socket\/connect(signal:flags:handler:)","title":"func connect(signal: ComponentSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/socket\/contains(x:y:coordtype:)","title":"func contains(x: Int, y: Int, coordType: AtkCoordType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/socket\/getalpha()","title":"func getAlpha() -> Double","type":"method"},{"path":"\/documentation\/atk\/socket\/getextents(x:y:width:height:coordtype:)","title":"func getExtents(x: UnsafeMutablePointer<gint>!, y: UnsafeMutablePointer<gint>!, width: UnsafeMutablePointer<gint>!, height: UnsafeMutablePointer<gint>!, coordType: AtkCoordType)","type":"method"},{"path":"\/documentation\/atk\/socket\/getlayer()","title":"func getLayer() -> AtkLayer","type":"method"},{"path":"\/documentation\/atk\/socket\/getmdizorder()","title":"func getMdiZorder() -> Int","type":"method"},{"path":"\/documentation\/atk\/socket\/getposition(x:y:coordtype:)","title":"func getPosition(x: UnsafeMutablePointer<gint>!, y: UnsafeMutablePointer<gint>!, coordType: AtkCoordType)","type":"method"},{"path":"\/documentation\/atk\/socket\/getsize(width:height:)","title":"func getSize(width: UnsafeMutablePointer<gint>!, height: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/atk\/socket\/grabfocus()","title":"func grabFocus() -> Bool","type":"method"},{"path":"\/documentation\/atk\/socket\/onboundschanged(flags:handler:)","title":"func onBoundsChanged(flags: ConnectFlags, handler: (ComponentRef, RectangleRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/socket\/refaccessibleatpoint(x:y:coordtype:)","title":"func refAccessibleAtPoint(x: Int, y: Int, coordType: AtkCoordType) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/socket\/removefocushandler(handlerid:)","title":"func removeFocusHandler(handlerId: Int)","type":"method"},{"path":"\/documentation\/atk\/socket\/scrollto(type:)","title":"func scrollTo(type: AtkScrollType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/socket\/scrolltopoint(coords:x:y:)","title":"func scrollToPoint(coords: AtkCoordType, x: Int, y: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/socket\/setextents(x:y:width:height:coordtype:)","title":"func setExtents(x: Int, y: Int, width: Int, height: Int, coordType: AtkCoordType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/socket\/setposition(x:y:coordtype:)","title":"func setPosition(x: Int, y: Int, coordType: AtkCoordType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/socket\/setsize(width:height:)","title":"func setSize(width: Int, height: Int) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/socket\/boundschangedsignal","title":"static var boundsChangedSignal: ComponentSignalName","type":"property"}],"path":"\/documentation\/atk\/socket\/componentprotocol-implementations","title":"ComponentProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/socket\/isoccupied","title":"var isOccupied: Bool","type":"property"},{"path":"\/documentation\/atk\/socket\/parent","title":"var parent: AtkObject","type":"property"},{"path":"\/documentation\/atk\/socket\/socket_ptr","title":"var socket_ptr: UnsafeMutablePointer<AtkSocket>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/socket\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: SocketPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/socket\/embed(plugid:)","title":"func embed(plugId: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/socket\/get(property:)","title":"func get(property: SocketPropertyName) -> Value","type":"method"},{"path":"\/documentation\/atk\/socket\/set(property:value:)","title":"func set(property: SocketPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/atk\/socket\/socketprotocol-implementations","title":"SocketProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/socket","title":"Socket","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/stateset\/init()","title":"init()","type":"init"},{"path":"\/documentation\/atk\/stateset\/init(_:)-19oyb","title":"init(UnsafePointer<AtkStateSet>)","type":"init"},{"path":"\/documentation\/atk\/stateset\/init(_:)-374wp","title":"init!(UnsafePointer<AtkStateSet>?)","type":"init"},{"path":"\/documentation\/atk\/stateset\/init(_:)-90dyu","title":"init(UnsafeMutablePointer<AtkStateSet>)","type":"init"},{"path":"\/documentation\/atk\/stateset\/init(_:)-9srce","title":"init!(UnsafeMutablePointer<AtkStateSet>?)","type":"init"},{"path":"\/documentation\/atk\/stateset\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/stateset\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/stateset\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/stateset\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/stateset\/init(raw:)-6aobq","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/stateset\/init(raw:)-odf2","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/stateset\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkStateSet>)","type":"init"},{"path":"\/documentation\/atk\/stateset\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/stateset\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/stateset\/init(retainingraw:)-1do1m","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/stateset\/init(retainingraw:)-58ihx","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/stateset\/init(stateset:)","title":"init<T>(stateSet: T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/stateset\/metatypereferenceforstateset","title":"var metatypeReferenceForStateSet: GType","type":"property"},{"path":"\/documentation\/atk\/stateset\/wrapperforstateset","title":"var wrapperForStateSet: StateSetClassRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/stateset\/metatypeforstateset","title":"static var metatypeForStateSet: AtkStateSetClass?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/stateset\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/atk\/stateset\/parent","title":"var parent: GObject","type":"property"},{"path":"\/documentation\/atk\/stateset\/state_set_ptr","title":"var state_set_ptr: UnsafeMutablePointer<AtkStateSet>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/stateset\/addstate(type:)","title":"func addState(type: AtkStateType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/stateset\/addstates(types:ntypes:)","title":"func addStates(types: UnsafeMutablePointer<AtkStateType>!, nTypes: Int)","type":"method"},{"path":"\/documentation\/atk\/stateset\/andsets(compareset:)","title":"func andSets<StateSetT>(compareSet: StateSetT) -> StateSetRef!","type":"method"},{"path":"\/documentation\/atk\/stateset\/clearstates()","title":"func clearStates()","type":"method"},{"path":"\/documentation\/atk\/stateset\/containsstate(type:)","title":"func containsState(type: AtkStateType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/stateset\/containsstates(types:ntypes:)","title":"func containsStates(types: UnsafeMutablePointer<AtkStateType>!, nTypes: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/stateset\/orsets(compareset:)","title":"func orSets<StateSetT>(compareSet: StateSetT) -> StateSetRef!","type":"method"},{"path":"\/documentation\/atk\/stateset\/removestate(type:)","title":"func removeState(type: AtkStateType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/stateset\/xorsets(compareset:)","title":"func xorSets<StateSetT>(compareSet: StateSetT) -> StateSetRef!","type":"method"}],"path":"\/documentation\/atk\/stateset\/statesetprotocol-implementations","title":"StateSetProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/stateset","title":"StateSet","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/streamablecontent\/init(_:)-2vn4l","title":"init!(UnsafePointer<AtkStreamableContent>?)","type":"init"},{"path":"\/documentation\/atk\/streamablecontent\/init(_:)-3xvpa","title":"init!(UnsafeMutablePointer<AtkStreamableContent>?)","type":"init"},{"path":"\/documentation\/atk\/streamablecontent\/init(_:)-54y84","title":"init(UnsafePointer<AtkStreamableContent>)","type":"init"},{"path":"\/documentation\/atk\/streamablecontent\/init(_:)-7icpv","title":"init(UnsafeMutablePointer<AtkStreamableContent>)","type":"init"},{"path":"\/documentation\/atk\/streamablecontent\/init(_:)-7yys4","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/streamablecontent\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/streamablecontent\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/streamablecontent\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/streamablecontent\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/streamablecontent\/init(raw:)-1tjbf","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/streamablecontent\/init(raw:)-4g3h6","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/streamablecontent\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkStreamableContent>)","type":"init"},{"path":"\/documentation\/atk\/streamablecontent\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/streamablecontent\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/streamablecontent\/init(retainingraw:)-3v9ms","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/streamablecontent\/init(retainingraw:)-ex5","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/streamablecontent\/metatypereferenceforstreamablecontent","title":"var metatypeReferenceForStreamableContent: GType","type":"property"},{"path":"\/documentation\/atk\/streamablecontent\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"path":"\/documentation\/atk\/streamablecontent\/wrapperforstreamablecontent","title":"var wrapperForStreamableContent: StreamableContentIfaceRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/streamablecontent\/metatypeforstreamablecontent","title":"static var metatypeForStreamableContent: AtkStreamableContentIface?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/streamablecontent\/nmimetypes","title":"var nMimeTypes: Int","type":"property"},{"path":"\/documentation\/atk\/streamablecontent\/streamable_content_ptr","title":"var streamable_content_ptr: UnsafeMutablePointer<AtkStreamableContent>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/streamablecontent\/getmimetype(i:)","title":"func getMimeType(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/streamablecontent\/getnmimetypes()","title":"func getNMimeTypes() -> Int","type":"method"},{"path":"\/documentation\/atk\/streamablecontent\/getstream(mimetype:)","title":"func getStream(mimeType: UnsafePointer<gchar>!) -> IOChannelRef!","type":"method"},{"path":"\/documentation\/atk\/streamablecontent\/geturi(mimetype:)","title":"func getUri(mimeType: UnsafePointer<gchar>!) -> String!","type":"method"}],"path":"\/documentation\/atk\/streamablecontent\/streamablecontentprotocol-implementations","title":"StreamableContentProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/streamablecontent","title":"StreamableContent","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/table\/init(_:)-1h7jw","title":"init!(UnsafeMutablePointer<AtkTable>?)","type":"init"},{"path":"\/documentation\/atk\/table\/init(_:)-220","title":"init!(UnsafePointer<AtkTable>?)","type":"init"},{"path":"\/documentation\/atk\/table\/init(_:)-4we3m","title":"init(UnsafePointer<AtkTable>)","type":"init"},{"path":"\/documentation\/atk\/table\/init(_:)-9nmdh","title":"init(UnsafeMutablePointer<AtkTable>)","type":"init"},{"path":"\/documentation\/atk\/table\/init(_:)-qfcw","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/table\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/table\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/table\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/table\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/table\/init(raw:)-5wh6r","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/table\/init(raw:)-8gtqq","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/table\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkTable>)","type":"init"},{"path":"\/documentation\/atk\/table\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/table\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/table\/init(retainingraw:)-3ogn3","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/table\/init(retainingraw:)-6tgke","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/table\/metatypereferencefortable","title":"var metatypeReferenceForTable: GType","type":"property"},{"path":"\/documentation\/atk\/table\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"path":"\/documentation\/atk\/table\/wrapperfortable","title":"var wrapperForTable: TableIfaceRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/table\/metatypefortable","title":"static var metatypeForTable: AtkTableIface?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/table\/caption","title":"var caption: ObjectRef!","type":"property"},{"path":"\/documentation\/atk\/table\/ncolumns","title":"var nColumns: Int","type":"property"},{"path":"\/documentation\/atk\/table\/nrows","title":"var nRows: Int","type":"property"},{"path":"\/documentation\/atk\/table\/summary","title":"var summary: ObjectRef!","type":"property"},{"path":"\/documentation\/atk\/table\/table_ptr","title":"var table_ptr: UnsafeMutablePointer<AtkTable>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/table\/addcolumnselection(column:)","title":"func addColumnSelection(column: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/table\/addrowselection(row:)","title":"func addRowSelection(row: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/table\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: TableSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/table\/connect(signal:flags:handler:)","title":"func connect(signal: TableSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/table\/getcaption()","title":"func getCaption() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/table\/getcolumnat(index:)","title":"func getColumnAt(index: Int) -> Int","type":"method"},{"path":"\/documentation\/atk\/table\/getcolumndescription(column:)","title":"func getColumnDescription(column: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/table\/getcolumnextentat(row:column:)","title":"func getColumnExtentAt(row: Int, column: Int) -> Int","type":"method"},{"path":"\/documentation\/atk\/table\/getcolumnheader(column:)","title":"func getColumnHeader(column: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/table\/getindexat(row:column:)","title":"func getIndexAt(row: Int, column: Int) -> Int","type":"method"},{"path":"\/documentation\/atk\/table\/getncolumns()","title":"func getNColumns() -> Int","type":"method"},{"path":"\/documentation\/atk\/table\/getnrows()","title":"func getNRows() -> Int","type":"method"},{"path":"\/documentation\/atk\/table\/getrowat(index:)","title":"func getRowAt(index: Int) -> Int","type":"method"},{"path":"\/documentation\/atk\/table\/getrowdescription(row:)","title":"func getRowDescription(row: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/table\/getrowextentat(row:column:)","title":"func getRowExtentAt(row: Int, column: Int) -> Int","type":"method"},{"path":"\/documentation\/atk\/table\/getrowheader(row:)","title":"func getRowHeader(row: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/table\/getselectedcolumns(selected:)","title":"func getSelectedColumns(selected: UnsafeMutablePointer<UnsafeMutablePointer<gint>?>!) -> Int","type":"method"},{"path":"\/documentation\/atk\/table\/getselectedrows(selected:)","title":"func getSelectedRows(selected: UnsafeMutablePointer<UnsafeMutablePointer<gint>?>!) -> Int","type":"method"},{"path":"\/documentation\/atk\/table\/getsummary()","title":"func getSummary() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/table\/iscolumnselected(column:)","title":"func isColumnSelected(column: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/table\/isrowselected(row:)","title":"func isRowSelected(row: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/table\/isselected(row:column:)","title":"func isSelected(row: Int, column: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/table\/oncolumndeleted(flags:handler:)","title":"func onColumnDeleted(flags: ConnectFlags, handler: (TableRef, Int, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/table\/oncolumninserted(flags:handler:)","title":"func onColumnInserted(flags: ConnectFlags, handler: (TableRef, Int, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/table\/oncolumnreordered(flags:handler:)","title":"func onColumnReordered(flags: ConnectFlags, handler: (TableRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/table\/onmodelchanged(flags:handler:)","title":"func onModelChanged(flags: ConnectFlags, handler: (TableRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/table\/onrowdeleted(flags:handler:)","title":"func onRowDeleted(flags: ConnectFlags, handler: (TableRef, Int, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/table\/onrowinserted(flags:handler:)","title":"func onRowInserted(flags: ConnectFlags, handler: (TableRef, Int, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/table\/onrowreordered(flags:handler:)","title":"func onRowReordered(flags: ConnectFlags, handler: (TableRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/table\/refat(row:column:)","title":"func refAt(row: Int, column: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/table\/removecolumnselection(column:)","title":"func removeColumnSelection(column: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/table\/removerowselection(row:)","title":"func removeRowSelection(row: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/table\/set(caption:)","title":"func set<ObjectT>(caption: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/table\/setcolumndescription(column:description:)","title":"func setColumnDescription(column: Int, description: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/table\/setcolumnheader(column:header:)","title":"func setColumnHeader<ObjectT>(column: Int, header: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/table\/setrowdescription(row:description:)","title":"func setRowDescription(row: Int, description: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/table\/setrowheader(row:header:)","title":"func setRowHeader<ObjectT>(row: Int, header: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/table\/setsummary(accessible:)","title":"func setSummary<ObjectT>(accessible: ObjectT)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/table\/columndeletedsignal","title":"static var columnDeletedSignal: TableSignalName","type":"property"},{"path":"\/documentation\/atk\/table\/columninsertedsignal","title":"static var columnInsertedSignal: TableSignalName","type":"property"},{"path":"\/documentation\/atk\/table\/columnreorderedsignal","title":"static var columnReorderedSignal: TableSignalName","type":"property"},{"path":"\/documentation\/atk\/table\/modelchangedsignal","title":"static var modelChangedSignal: TableSignalName","type":"property"},{"path":"\/documentation\/atk\/table\/rowdeletedsignal","title":"static var rowDeletedSignal: TableSignalName","type":"property"},{"path":"\/documentation\/atk\/table\/rowinsertedsignal","title":"static var rowInsertedSignal: TableSignalName","type":"property"},{"path":"\/documentation\/atk\/table\/rowreorderedsignal","title":"static var rowReorderedSignal: TableSignalName","type":"property"}],"path":"\/documentation\/atk\/table\/tableprotocol-implementations","title":"TableProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/table","title":"Table","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecell\/init(_:)-122ip","title":"init!(UnsafePointer<AtkTableCell>?)","type":"init"},{"path":"\/documentation\/atk\/tablecell\/init(_:)-5udvs","title":"init!(UnsafeMutablePointer<AtkTableCell>?)","type":"init"},{"path":"\/documentation\/atk\/tablecell\/init(_:)-7f5cc","title":"init(UnsafePointer<AtkTableCell>)","type":"init"},{"path":"\/documentation\/atk\/tablecell\/init(_:)-908kg","title":"init(UnsafeMutablePointer<AtkTableCell>)","type":"init"},{"path":"\/documentation\/atk\/tablecell\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/tablecell\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/tablecell\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/tablecell\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/tablecell\/init(raw:)-66141","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/tablecell\/init(raw:)-8qdn4","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/tablecell\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkTableCell>)","type":"init"},{"path":"\/documentation\/atk\/tablecell\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/tablecell\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/tablecell\/init(retainingraw:)-6stbw","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/tablecell\/init(retainingraw:)-9fdf1","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/tablecell\/init(tablecell:)","title":"init<T>(tableCell: T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecell\/metatypereferencefortablecell","title":"var metatypeReferenceForTableCell: GType","type":"property"},{"path":"\/documentation\/atk\/tablecell\/wrapperfortablecell","title":"var wrapperForTableCell: TableCellIfaceRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecell\/metatypefortablecell","title":"static var metatypeForTableCell: AtkTableCellIface?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecell\/columnheadercells","title":"var columnHeaderCells: RefArrayRef<ObjectRef>!","type":"property"},{"path":"\/documentation\/atk\/tablecell\/columnspan","title":"var columnSpan: Int","type":"property"},{"path":"\/documentation\/atk\/tablecell\/rowheadercells","title":"var rowHeaderCells: RefArrayRef<ObjectRef>!","type":"property"},{"path":"\/documentation\/atk\/tablecell\/rowspan","title":"var rowSpan: Int","type":"property"},{"path":"\/documentation\/atk\/tablecell\/table","title":"var table: ObjectRef!","type":"property"},{"path":"\/documentation\/atk\/tablecell\/table_cell_ptr","title":"var table_cell_ptr: UnsafeMutablePointer<AtkTableCell>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecell\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: TableCellPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/tablecell\/get(property:)","title":"func get(property: TableCellPropertyName) -> Value","type":"method"},{"path":"\/documentation\/atk\/tablecell\/getcolumnheadercells()","title":"func getColumnHeaderCells() -> RefArrayRef<ObjectRef>!","type":"method"},{"path":"\/documentation\/atk\/tablecell\/getcolumnspan()","title":"func getColumnSpan() -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecell\/getposition(row:column:)","title":"func getPosition(row: UnsafeMutablePointer<gint>!, column: UnsafeMutablePointer<gint>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/tablecell\/getrowcolumnspan(row:column:rowspan:columnspan:)","title":"func getRowColumnSpan(row: UnsafeMutablePointer<gint>!, column: UnsafeMutablePointer<gint>!, rowSpan: UnsafeMutablePointer<gint>!, columnSpan: UnsafeMutablePointer<gint>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/tablecell\/getrowheadercells()","title":"func getRowHeaderCells() -> RefArrayRef<ObjectRef>!","type":"method"},{"path":"\/documentation\/atk\/tablecell\/getrowspan()","title":"func getRowSpan() -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecell\/gettable()","title":"func getTable() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/tablecell\/set(property:value:)","title":"func set(property: TableCellPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/atk\/tablecell\/tablecellprotocol-implementations","title":"TableCellProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/tablecell","title":"TableCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/text\/init(_:)-2hbx4","title":"init(UnsafeMutablePointer<AtkText>)","type":"init"},{"path":"\/documentation\/atk\/text\/init(_:)-4hip4","title":"init(UnsafePointer<AtkText>)","type":"init"},{"path":"\/documentation\/atk\/text\/init(_:)-8kk46","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/text\/init(_:)-8p3vf","title":"init!(UnsafeMutablePointer<AtkText>?)","type":"init"},{"path":"\/documentation\/atk\/text\/init(_:)-9ll5o","title":"init!(UnsafePointer<AtkText>?)","type":"init"},{"path":"\/documentation\/atk\/text\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/text\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/text\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/text\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/text\/init(raw:)-1hgwx","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/text\/init(raw:)-440uo","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/text\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkText>)","type":"init"},{"path":"\/documentation\/atk\/text\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/text\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/text\/init(retainingraw:)-8d14s","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/text\/init(retainingraw:)-8o87v","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/text\/metatypereferencefortext","title":"var metatypeReferenceForText: GType","type":"property"},{"path":"\/documentation\/atk\/text\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"path":"\/documentation\/atk\/text\/wrapperfortext","title":"var wrapperForText: TextIfaceRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/text\/metatypefortext","title":"static var metatypeForText: AtkTextIface?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/text\/caretoffset","title":"var caretOffset: Int","type":"property"},{"path":"\/documentation\/atk\/text\/charactercount","title":"var characterCount: Int","type":"property"},{"path":"\/documentation\/atk\/text\/defaultattributes","title":"var defaultAttributes: UnsafeMutablePointer<AtkAttributeSet>!","type":"property"},{"path":"\/documentation\/atk\/text\/nselections","title":"var nSelections: Int","type":"property"},{"path":"\/documentation\/atk\/text\/text_ptr","title":"var text_ptr: UnsafeMutablePointer<AtkText>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/text\/addselection(startoffset:endoffset:)","title":"func addSelection(startOffset: Int, endOffset: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/text\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: TextSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/text\/connect(signal:flags:handler:)","title":"func connect(signal: TextSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/text\/getboundedranges(rect:coordtype:xcliptype:ycliptype:)","title":"func getBoundedRanges<TextRectangleT>(rect: TextRectangleT, coordType: AtkCoordType, xClipType: AtkTextClipType, yClipType: AtkTextClipType) -> UnsafeMutablePointer<UnsafeMutablePointer<AtkTextRange>?>!","type":"method"},{"path":"\/documentation\/atk\/text\/getcaretoffset()","title":"func getCaretOffset() -> Int","type":"method"},{"path":"\/documentation\/atk\/text\/getcharacterat(offset:)","title":"func getCharacterAt(offset: Int) -> gunichar","type":"method"},{"path":"\/documentation\/atk\/text\/getcharactercount()","title":"func getCharacterCount() -> Int","type":"method"},{"path":"\/documentation\/atk\/text\/getcharacterextents(offset:x:y:width:height:coords:)","title":"func getCharacterExtents(offset: Int, x: UnsafeMutablePointer<gint>!, y: UnsafeMutablePointer<gint>!, width: UnsafeMutablePointer<gint>!, height: UnsafeMutablePointer<gint>!, coords: AtkCoordType)","type":"method"},{"path":"\/documentation\/atk\/text\/getdefaultattributes()","title":"func getDefaultAttributes() -> UnsafeMutablePointer<AtkAttributeSet>!","type":"method"},{"path":"\/documentation\/atk\/text\/getnselections()","title":"func getNSelections() -> Int","type":"method"},{"path":"\/documentation\/atk\/text\/getoffsetatpoint(x:y:coords:)","title":"func getOffsetAtPoint(x: Int, y: Int, coords: AtkCoordType) -> Int","type":"method"},{"path":"\/documentation\/atk\/text\/getrangeextents(startoffset:endoffset:coordtype:rect:)","title":"func getRangeExtents<TextRectangleT>(startOffset: Int, endOffset: Int, coordType: AtkCoordType, rect: TextRectangleT)","type":"method"},{"path":"\/documentation\/atk\/text\/getrunattributes(offset:startoffset:endoffset:)","title":"func getRunAttributes(offset: Int, startOffset: UnsafeMutablePointer<gint>!, endOffset: UnsafeMutablePointer<gint>!) -> UnsafeMutablePointer<AtkAttributeSet>!","type":"method"},{"path":"\/documentation\/atk\/text\/getselection(selectionnum:startoffset:endoffset:)","title":"func getSelection(selectionNum: Int, startOffset: UnsafeMutablePointer<gint>!, endOffset: UnsafeMutablePointer<gint>!) -> String!","type":"method"},{"path":"\/documentation\/atk\/text\/getstringat(offset:granularity:startoffset:endoffset:)","title":"func getStringAt(offset: Int, granularity: AtkTextGranularity, startOffset: UnsafeMutablePointer<gint>!, endOffset: UnsafeMutablePointer<gint>!) -> String!","type":"method"},{"path":"\/documentation\/atk\/text\/gettext(startoffset:endoffset:)","title":"func getText(startOffset: Int, endOffset: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/text\/gettextafter(offset:boundarytype:startoffset:endoffset:)","title":"func getTextAfter(offset: Int, boundaryType: AtkTextBoundary, startOffset: UnsafeMutablePointer<gint>!, endOffset: UnsafeMutablePointer<gint>!) -> String!","type":"method"},{"path":"\/documentation\/atk\/text\/gettextat(offset:boundarytype:startoffset:endoffset:)","title":"func getTextAt(offset: Int, boundaryType: AtkTextBoundary, startOffset: UnsafeMutablePointer<gint>!, endOffset: UnsafeMutablePointer<gint>!) -> String!","type":"method"},{"path":"\/documentation\/atk\/text\/gettextbefore(offset:boundarytype:startoffset:endoffset:)","title":"func getTextBefore(offset: Int, boundaryType: AtkTextBoundary, startOffset: UnsafeMutablePointer<gint>!, endOffset: UnsafeMutablePointer<gint>!) -> String!","type":"method"},{"path":"\/documentation\/atk\/text\/ontextattributeschanged(flags:handler:)","title":"func onTextAttributesChanged(flags: ConnectFlags, handler: (TextRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/text\/ontextcaretmoved(flags:handler:)","title":"func onTextCaretMoved(flags: ConnectFlags, handler: (TextRef, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/text\/ontextchanged(flags:handler:)","title":"func onTextChanged(flags: ConnectFlags, handler: (TextRef, Int, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/text\/ontextinsert(flags:handler:)","title":"func onTextInsert(flags: ConnectFlags, handler: (TextRef, Int, Int, String) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/text\/ontextremove(flags:handler:)","title":"func onTextRemove(flags: ConnectFlags, handler: (TextRef, Int, Int, String) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/text\/ontextselectionchanged(flags:handler:)","title":"func onTextSelectionChanged(flags: ConnectFlags, handler: (TextRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/text\/removeselection(selectionnum:)","title":"func removeSelection(selectionNum: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/text\/scrollsubstringto(startoffset:endoffset:type:)","title":"func scrollSubstringTo(startOffset: Int, endOffset: Int, type: AtkScrollType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/text\/scrollsubstringtopoint(startoffset:endoffset:coords:x:y:)","title":"func scrollSubstringToPoint(startOffset: Int, endOffset: Int, coords: AtkCoordType, x: Int, y: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/text\/setcaret(offset:)","title":"func setCaret(offset: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/text\/setselection(selectionnum:startoffset:endoffset:)","title":"func setSelection(selectionNum: Int, startOffset: Int, endOffset: Int) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/text\/textattributeschangedsignal","title":"static var textAttributesChangedSignal: TextSignalName","type":"property"},{"path":"\/documentation\/atk\/text\/textcaretmovedsignal","title":"static var textCaretMovedSignal: TextSignalName","type":"property"},{"path":"\/documentation\/atk\/text\/textchangedsignal","title":"static var textChangedSignal: TextSignalName","type":"property"},{"path":"\/documentation\/atk\/text\/textinsertsignal","title":"static var textInsertSignal: TextSignalName","type":"property"},{"path":"\/documentation\/atk\/text\/textremovesignal","title":"static var textRemoveSignal: TextSignalName","type":"property"},{"path":"\/documentation\/atk\/text\/textselectionchangedsignal","title":"static var textSelectionChangedSignal: TextSignalName","type":"property"}],"path":"\/documentation\/atk\/text\/textprotocol-implementations","title":"TextProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/text","title":"Text","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/textrange\/init(_:)-24mqk","title":"init(UnsafePointer<AtkTextRange>)","type":"init"},{"path":"\/documentation\/atk\/textrange\/init(_:)-2abwe","title":"init(UnsafeMutablePointer<AtkTextRange>)","type":"init"},{"path":"\/documentation\/atk\/textrange\/init(_:)-792bf","title":"init!(UnsafeMutablePointer<AtkTextRange>?)","type":"init"},{"path":"\/documentation\/atk\/textrange\/init(_:)-7ghe9","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/textrange\/init(_:)-9gpto","title":"init!(UnsafePointer<AtkTextRange>?)","type":"init"},{"path":"\/documentation\/atk\/textrange\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/textrange\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/textrange\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/textrange\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/textrange\/init(raw:)-b73e","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/textrange\/init(raw:)-me9v","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/textrange\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkTextRange>)","type":"init"},{"path":"\/documentation\/atk\/textrange\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/textrange\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/textrange\/init(retainingraw:)-4081l","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/textrange\/init(retainingraw:)-4xblo","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/textrange\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/textrange\/bounds","title":"var bounds: AtkTextRectangle","type":"property"},{"path":"\/documentation\/atk\/textrange\/content","title":"var content: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/atk\/textrange\/endoffset","title":"var endOffset: gint","type":"property"},{"path":"\/documentation\/atk\/textrange\/startoffset","title":"var startOffset: gint","type":"property"},{"path":"\/documentation\/atk\/textrange\/text_range_ptr","title":"var text_range_ptr: UnsafeMutablePointer<AtkTextRange>!","type":"property"}],"path":"\/documentation\/atk\/textrange\/textrangeprotocol-implementations","title":"TextRangeProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/textrange","title":"TextRange","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/textrectangle\/init(_:)-6o467","title":"init!(UnsafeMutablePointer<AtkTextRectangle>?)","type":"init"},{"path":"\/documentation\/atk\/textrectangle\/init(_:)-7569c","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/textrectangle\/init(_:)-7gunr","title":"init(UnsafeMutablePointer<AtkTextRectangle>)","type":"init"},{"path":"\/documentation\/atk\/textrectangle\/init(_:)-95mfx","title":"init(UnsafePointer<AtkTextRectangle>)","type":"init"},{"path":"\/documentation\/atk\/textrectangle\/init(_:)-9dmva","title":"init!(UnsafePointer<AtkTextRectangle>?)","type":"init"},{"path":"\/documentation\/atk\/textrectangle\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/textrectangle\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/textrectangle\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/textrectangle\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/textrectangle\/init(raw:)-3vmyn","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/textrectangle\/init(raw:)-7qhbm","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/textrectangle\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkTextRectangle>)","type":"init"},{"path":"\/documentation\/atk\/textrectangle\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/textrectangle\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/textrectangle\/init(retainingraw:)-8w02o","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/textrectangle\/init(retainingraw:)-9t3j9","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/textrectangle\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/textrectangle\/height","title":"var height: gint","type":"property"},{"path":"\/documentation\/atk\/textrectangle\/width","title":"var width: gint","type":"property"},{"path":"\/documentation\/atk\/textrectangle\/x","title":"var x: gint","type":"property"},{"path":"\/documentation\/atk\/textrectangle\/y","title":"var y: gint","type":"property"}],"path":"\/documentation\/atk\/textrectangle\/textrectangleprotocol-implementations","title":"TextRectangleProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/textrectangle","title":"TextRectangle","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/util\/init(_:)-40rvk","title":"init(UnsafePointer<AtkUtil>)","type":"init"},{"path":"\/documentation\/atk\/util\/init(_:)-461s0","title":"init!(UnsafePointer<AtkUtil>?)","type":"init"},{"path":"\/documentation\/atk\/util\/init(_:)-8tqjc","title":"init(UnsafeMutablePointer<AtkUtil>)","type":"init"},{"path":"\/documentation\/atk\/util\/init(_:)-l1tn","title":"init!(UnsafeMutablePointer<AtkUtil>?)","type":"init"},{"path":"\/documentation\/atk\/util\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/util\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/util\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/util\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/util\/init(raw:)-2lt0u","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/util\/init(raw:)-9e6wg","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/util\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkUtil>)","type":"init"},{"path":"\/documentation\/atk\/util\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/util\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/util\/init(retainingraw:)-89a4q","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/util\/init(retainingraw:)-u13u","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/util\/init(util:)","title":"init<T>(util: T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/util\/metatypereferenceforutil","title":"var metatypeReferenceForUtil: GType","type":"property"},{"path":"\/documentation\/atk\/util\/wrapperforutil","title":"var wrapperForUtil: UtilClassRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/util\/metatypeforutil","title":"static var metatypeForUtil: AtkUtilClass?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/util\/parent","title":"var parent: GObject","type":"property"},{"path":"\/documentation\/atk\/util\/util_ptr","title":"var util_ptr: UnsafeMutablePointer<AtkUtil>!","type":"property"}],"path":"\/documentation\/atk\/util\/utilprotocol-implementations","title":"UtilProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/util","title":"Util","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/value\/init(_:)-3t25o","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/value\/init(_:)-4oys0","title":"init!(UnsafePointer<AtkValue>?)","type":"init"},{"path":"\/documentation\/atk\/value\/init(_:)-6helo","title":"init(UnsafePointer<AtkValue>)","type":"init"},{"path":"\/documentation\/atk\/value\/init(_:)-93rsv","title":"init(UnsafeMutablePointer<AtkValue>)","type":"init"},{"path":"\/documentation\/atk\/value\/init(_:)-9dynu","title":"init!(UnsafeMutablePointer<AtkValue>?)","type":"init"},{"path":"\/documentation\/atk\/value\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/value\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/value\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/value\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/value\/init(raw:)-45ih8","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/value\/init(raw:)-98nmx","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/value\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkValue>)","type":"init"},{"path":"\/documentation\/atk\/value\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/value\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/value\/init(retainingraw:)-2fnue","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/value\/init(retainingraw:)-8mm2g","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/value\/metatypereferenceforvalue","title":"var metatypeReferenceForValue: GType","type":"property"},{"path":"\/documentation\/atk\/value\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"path":"\/documentation\/atk\/value\/wrapperforvalue","title":"var wrapperForValue: ValueIfaceRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/value\/metatypeforvalue","title":"static var metatypeForValue: AtkValueIface?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/value\/increment","title":"var increment: Double","type":"property"},{"path":"\/documentation\/atk\/value\/range","title":"var range: RangeRef!","type":"property"},{"path":"\/documentation\/atk\/value\/subranges","title":"var subRanges: RefSListRef<RangeRef>!","type":"property"},{"path":"\/documentation\/atk\/value\/value_ptr","title":"var value_ptr: UnsafeMutablePointer<AtkValue>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/value\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ValueSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/value\/connect(signal:flags:handler:)","title":"func connect(signal: ValueSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/value\/getcurrent(value:)","title":"func getCurrent<GObjectValueT>(value: GObjectValueT)","type":"method"},{"path":"\/documentation\/atk\/value\/getincrement()","title":"func getIncrement() -> Double","type":"method"},{"path":"\/documentation\/atk\/value\/getmaximum(value:)","title":"func getMaximum<GObjectValueT>(value: GObjectValueT)","type":"method"},{"path":"\/documentation\/atk\/value\/getminimum(value:)","title":"func getMinimum<GObjectValueT>(value: GObjectValueT)","type":"method"},{"path":"\/documentation\/atk\/value\/getminimumincrement(value:)","title":"func getMinimumIncrement<GObjectValueT>(value: GObjectValueT)","type":"method"},{"path":"\/documentation\/atk\/value\/getrange()","title":"func getRange() -> RangeRef!","type":"method"},{"path":"\/documentation\/atk\/value\/getsubranges()","title":"func getSubRanges() -> RefSListRef<RangeRef>!","type":"method"},{"path":"\/documentation\/atk\/value\/getvalueandtext(value:text:)","title":"func getValueAndText(value: UnsafeMutablePointer<gdouble>!, text: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!)","type":"method"},{"path":"\/documentation\/atk\/value\/onvaluechanged(flags:handler:)","title":"func onValueChanged(flags: ConnectFlags, handler: (ValueRef, Double, String) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/value\/setcurrent(value:)","title":"func setCurrent<GObjectValueT>(value: GObjectValueT) -> Bool","type":"method"},{"path":"\/documentation\/atk\/value\/setvalue(newvalue:)","title":"func setValue(newValue: Double)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/value\/valuechangedsignal","title":"static var valueChangedSignal: ValueSignalName","type":"property"}],"path":"\/documentation\/atk\/value\/valueprotocol-implementations","title":"ValueProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/value","title":"Value","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/window\/init(_:)-4cozy","title":"init!(UnsafeMutablePointer<AtkWindow>?)","type":"init"},{"path":"\/documentation\/atk\/window\/init(_:)-6dbhj","title":"init(UnsafePointer<AtkWindow>)","type":"init"},{"path":"\/documentation\/atk\/window\/init(_:)-6m62o","title":"init!(UnsafePointer<AtkWindow>?)","type":"init"},{"path":"\/documentation\/atk\/window\/init(_:)-7kycj","title":"init(UnsafeMutablePointer<AtkWindow>)","type":"init"},{"path":"\/documentation\/atk\/window\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/window\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/window\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/window\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/window\/init(raw:)-4eot6","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/window\/init(raw:)-89joh","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/window\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<AtkWindow>)","type":"init"},{"path":"\/documentation\/atk\/window\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/window\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/window\/init(retainingraw:)-3hub3","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/window\/init(retainingraw:)-vai8","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/atk\/window\/init(window:)","title":"init<T>(window: T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/window\/metatypereferenceforwindow","title":"var metatypeReferenceForWindow: GType","type":"property"},{"path":"\/documentation\/atk\/window\/wrapperforwindow","title":"var wrapperForWindow: WindowIfaceRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/window\/metatypeforwindow","title":"static var metatypeForWindow: AtkWindowIface?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/window\/window_ptr","title":"var window_ptr: UnsafeMutablePointer<AtkWindow>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/window\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: WindowPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/window\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: WindowSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/window\/connect(signal:flags:handler:)","title":"func connect(signal: WindowSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/window\/get(property:)","title":"func get(property: WindowPropertyName) -> Value","type":"method"},{"path":"\/documentation\/atk\/window\/onactivate(flags:handler:)","title":"func onActivate(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/window\/oncreate(flags:handler:)","title":"func onCreate(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/window\/ondeactivate(flags:handler:)","title":"func onDeactivate(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/window\/ondestroy(flags:handler:)","title":"func onDestroy(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/window\/onmaximize(flags:handler:)","title":"func onMaximize(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/window\/onminimize(flags:handler:)","title":"func onMinimize(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/window\/onmove(flags:handler:)","title":"func onMove(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/window\/onresize(flags:handler:)","title":"func onResize(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/window\/onrestore(flags:handler:)","title":"func onRestore(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/window\/set(property:value:)","title":"func set(property: WindowPropertyName, value: Value)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/window\/activatesignal","title":"static var activateSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/window\/createsignal","title":"static var createSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/window\/deactivatesignal","title":"static var deactivateSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/window\/destroysignal","title":"static var destroySignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/window\/maximizesignal","title":"static var maximizeSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/window\/minimizesignal","title":"static var minimizeSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/window\/movesignal","title":"static var moveSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/window\/resizesignal","title":"static var resizeSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/window\/restoresignal","title":"static var restoreSignal: WindowSignalName","type":"property"}],"path":"\/documentation\/atk\/window\/windowprotocol-implementations","title":"WindowProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/window","title":"Window","type":"class"},{"title":"Protocols","type":"groupMarker"},{"path":"\/documentation\/atk\/actionifaceprotocol","title":"ActionIfaceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/atk\/actionprotocol\/action_ptr-4pv90","title":"var action_ptr: UnsafeMutablePointer<AtkAction>!","type":"property"}],"title":"ActionProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/actionprotocol\/action_ptr-1nixs","title":"var action_ptr: UnsafeMutablePointer<AtkAction>!","type":"property"},{"path":"\/documentation\/atk\/actionprotocol\/nactions","title":"var nActions: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/actionprotocol\/doaction(i:)","title":"func doAction(i: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/actionprotocol\/getdescription(i:)","title":"func getDescription(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/actionprotocol\/getkeybinding(i:)","title":"func getKeybinding(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/actionprotocol\/getlocalizedname(i:)","title":"func getLocalizedName(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/actionprotocol\/getnactions()","title":"func getNActions() -> Int","type":"method"},{"path":"\/documentation\/atk\/actionprotocol\/getname(i:)","title":"func getName(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/actionprotocol\/setdescription(i:desc:)","title":"func setDescription(i: Int, desc: UnsafePointer<gchar>!) -> Bool","type":"method"}],"path":"\/documentation\/atk\/actionprotocol","title":"ActionProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/attributeprotocol\/name","title":"var name: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/atk\/attributeprotocol\/value","title":"var value: UnsafeMutablePointer<gchar>!","type":"property"}],"path":"\/documentation\/atk\/attributeprotocol","title":"AttributeProtocol","type":"protocol"},{"path":"\/documentation\/atk\/componentifaceprotocol","title":"ComponentIfaceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/componentprotocol\/alpha","title":"var alpha: Double","type":"property"},{"children":[{"children":[{"path":"\/documentation\/atk\/componentprotocol\/component_ptr-4fac0","title":"var component_ptr: UnsafeMutablePointer<AtkComponent>!","type":"property"}],"title":"ComponentProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/componentprotocol\/component_ptr-2askj","title":"var component_ptr: UnsafeMutablePointer<AtkComponent>!","type":"property"},{"path":"\/documentation\/atk\/componentprotocol\/layer","title":"var layer: AtkLayer","type":"property"},{"path":"\/documentation\/atk\/componentprotocol\/mdizorder","title":"var mdiZorder: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/componentprotocol\/addfocus(handler:)","title":"func addFocus(handler: AtkFocusHandler?) -> Int","type":"method"},{"path":"\/documentation\/atk\/componentprotocol\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ComponentSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/componentprotocol\/connect(signal:flags:handler:)","title":"func connect(signal: ComponentSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/componentprotocol\/contains(x:y:coordtype:)","title":"func contains(x: Int, y: Int, coordType: AtkCoordType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/componentprotocol\/getalpha()","title":"func getAlpha() -> Double","type":"method"},{"path":"\/documentation\/atk\/componentprotocol\/getextents(x:y:width:height:coordtype:)","title":"func getExtents(x: UnsafeMutablePointer<gint>!, y: UnsafeMutablePointer<gint>!, width: UnsafeMutablePointer<gint>!, height: UnsafeMutablePointer<gint>!, coordType: AtkCoordType)","type":"method"},{"path":"\/documentation\/atk\/componentprotocol\/getlayer()","title":"func getLayer() -> AtkLayer","type":"method"},{"path":"\/documentation\/atk\/componentprotocol\/getmdizorder()","title":"func getMdiZorder() -> Int","type":"method"},{"path":"\/documentation\/atk\/componentprotocol\/getposition(x:y:coordtype:)","title":"func getPosition(x: UnsafeMutablePointer<gint>!, y: UnsafeMutablePointer<gint>!, coordType: AtkCoordType)","type":"method"},{"path":"\/documentation\/atk\/componentprotocol\/getsize(width:height:)","title":"func getSize(width: UnsafeMutablePointer<gint>!, height: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/atk\/componentprotocol\/grabfocus()","title":"func grabFocus() -> Bool","type":"method"},{"path":"\/documentation\/atk\/componentprotocol\/onboundschanged(flags:handler:)","title":"func onBoundsChanged(flags: ConnectFlags, handler: (ComponentRef, RectangleRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/componentprotocol\/refaccessibleatpoint(x:y:coordtype:)","title":"func refAccessibleAtPoint(x: Int, y: Int, coordType: AtkCoordType) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/componentprotocol\/removefocushandler(handlerid:)","title":"func removeFocusHandler(handlerId: Int)","type":"method"},{"path":"\/documentation\/atk\/componentprotocol\/scrollto(type:)","title":"func scrollTo(type: AtkScrollType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/componentprotocol\/scrolltopoint(coords:x:y:)","title":"func scrollToPoint(coords: AtkCoordType, x: Int, y: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/componentprotocol\/setextents(x:y:width:height:coordtype:)","title":"func setExtents(x: Int, y: Int, width: Int, height: Int, coordType: AtkCoordType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/componentprotocol\/setposition(x:y:coordtype:)","title":"func setPosition(x: Int, y: Int, coordType: AtkCoordType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/componentprotocol\/setsize(width:height:)","title":"func setSize(width: Int, height: Int) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/componentprotocol\/boundschangedsignal","title":"static var boundsChangedSignal: ComponentSignalName","type":"property"}],"path":"\/documentation\/atk\/componentprotocol","title":"ComponentProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/documentifaceprotocol\/parent","title":"var parent: GTypeInterface","type":"property"}],"path":"\/documentation\/atk\/documentifaceprotocol","title":"DocumentIfaceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/documentprotocol\/attributes","title":"var attributes: UnsafeMutablePointer<AtkAttributeSet>!","type":"property"},{"path":"\/documentation\/atk\/documentprotocol\/currentpagenumber","title":"var currentPageNumber: Int","type":"property"},{"path":"\/documentation\/atk\/documentprotocol\/document","title":"var document: gpointer?","type":"property"},{"path":"\/documentation\/atk\/documentprotocol\/documenttype","title":"var documentType: String!","type":"property"},{"children":[{"children":[{"path":"\/documentation\/atk\/documentprotocol\/document_ptr-3bcha","title":"var document_ptr: UnsafeMutablePointer<AtkDocument>!","type":"property"}],"title":"DocumentProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/documentprotocol\/document_ptr-5neak","title":"var document_ptr: UnsafeMutablePointer<AtkDocument>!","type":"property"},{"path":"\/documentation\/atk\/documentprotocol\/locale","title":"var locale: String!","type":"property"},{"path":"\/documentation\/atk\/documentprotocol\/pagecount","title":"var pageCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/documentprotocol\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: DocumentSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/documentprotocol\/connect(signal:flags:handler:)","title":"func connect(signal: DocumentSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/documentprotocol\/getattributevalue(attributename:)","title":"func getAttributeValue(attributeName: UnsafePointer<gchar>!) -> String!","type":"method"},{"path":"\/documentation\/atk\/documentprotocol\/getattributes()","title":"func getAttributes() -> UnsafeMutablePointer<AtkAttributeSet>!","type":"method"},{"path":"\/documentation\/atk\/documentprotocol\/getcurrentpagenumber()","title":"func getCurrentPageNumber() -> Int","type":"method"},{"path":"\/documentation\/atk\/documentprotocol\/getdocument()","title":"func getDocument() -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/documentprotocol\/getdocumenttype()","title":"func getDocumentType() -> String!","type":"method"},{"path":"\/documentation\/atk\/documentprotocol\/getlocale()","title":"func getLocale() -> String!","type":"method"},{"path":"\/documentation\/atk\/documentprotocol\/getpagecount()","title":"func getPageCount() -> Int","type":"method"},{"path":"\/documentation\/atk\/documentprotocol\/onloadcomplete(flags:handler:)","title":"func onLoadComplete(flags: ConnectFlags, handler: (DocumentRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/documentprotocol\/onloadstopped(flags:handler:)","title":"func onLoadStopped(flags: ConnectFlags, handler: (DocumentRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/documentprotocol\/onpagechanged(flags:handler:)","title":"func onPageChanged(flags: ConnectFlags, handler: (DocumentRef, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/documentprotocol\/onreload(flags:handler:)","title":"func onReload(flags: ConnectFlags, handler: (DocumentRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/documentprotocol\/setattributevalue(attributename:attributevalue:)","title":"func setAttributeValue(attributeName: UnsafePointer<gchar>!, attributeValue: UnsafePointer<gchar>!) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/documentprotocol\/loadcompletesignal","title":"static var loadCompleteSignal: DocumentSignalName","type":"property"},{"path":"\/documentation\/atk\/documentprotocol\/loadstoppedsignal","title":"static var loadStoppedSignal: DocumentSignalName","type":"property"},{"path":"\/documentation\/atk\/documentprotocol\/pagechangedsignal","title":"static var pageChangedSignal: DocumentSignalName","type":"property"},{"path":"\/documentation\/atk\/documentprotocol\/reloadsignal","title":"static var reloadSignal: DocumentSignalName","type":"property"}],"path":"\/documentation\/atk\/documentprotocol","title":"DocumentProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/editabletextifaceprotocol\/parentinterface","title":"var parentInterface: GTypeInterface","type":"property"}],"path":"\/documentation\/atk\/editabletextifaceprotocol","title":"EditableTextIfaceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/atk\/editabletextprotocol\/editable_text_ptr-95e1p","title":"var editable_text_ptr: UnsafeMutablePointer<AtkEditableText>!","type":"property"}],"title":"EditableTextProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/editabletextprotocol\/editable_text_ptr-6qi2a","title":"var editable_text_ptr: UnsafeMutablePointer<AtkEditableText>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/editabletextprotocol\/copytext(startpos:endpos:)","title":"func copyText(startPos: Int, endPos: Int)","type":"method"},{"path":"\/documentation\/atk\/editabletextprotocol\/cuttext(startpos:endpos:)","title":"func cutText(startPos: Int, endPos: Int)","type":"method"},{"path":"\/documentation\/atk\/editabletextprotocol\/deletetext(startpos:endpos:)","title":"func deleteText(startPos: Int, endPos: Int)","type":"method"},{"path":"\/documentation\/atk\/editabletextprotocol\/inserttext(string:length:position:)","title":"func insertText(string: UnsafePointer<gchar>!, length: Int, position: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/atk\/editabletextprotocol\/pastetext(position:)","title":"func pasteText(position: Int)","type":"method"},{"path":"\/documentation\/atk\/editabletextprotocol\/setrunattributes(attribset:startoffset:endoffset:)","title":"func setRunAttributes(attribSet: UnsafeMutablePointer<AtkAttributeSet>!, startOffset: Int, endOffset: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/editabletextprotocol\/settextcontents(string:)","title":"func setTextContents(string: UnsafePointer<gchar>!)","type":"method"}],"path":"\/documentation\/atk\/editabletextprotocol","title":"EditableTextProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessibleclassprotocol\/pad1","title":"var pad1: AtkFunction!","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleclassprotocol\/pad2","title":"var pad2: AtkFunction!","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleclassprotocol\/parentclass","title":"var parentClass: AtkObjectClass","type":"property"}],"path":"\/documentation\/atk\/gobjectaccessibleclassprotocol","title":"GObjectAccessibleClassProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/atk\/gobjectaccessibleprotocol\/gobject_accessible_ptr-51xb1","title":"var gobject_accessible_ptr: UnsafeMutablePointer<AtkGObjectAccessible>!","type":"property"}],"title":"GObjectAccessibleProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/gobjectaccessibleprotocol\/gobject_accessible_ptr-vgbg","title":"var gobject_accessible_ptr: UnsafeMutablePointer<AtkGObjectAccessible>!","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleprotocol\/object","title":"var object: ObjectRef!","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleprotocol\/parent","title":"var parent: AtkObject","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessibleprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: GObjectAccessiblePropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleprotocol\/get(property:)","title":"func get(property: GObjectAccessiblePropertyName) -> Value","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleprotocol\/getobject()","title":"func getObject() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleprotocol\/set(property:value:)","title":"func set(property: GObjectAccessiblePropertyName, value: Value)","type":"method"}],"path":"\/documentation\/atk\/gobjectaccessibleprotocol","title":"GObjectAccessibleProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkclassprotocol\/pad1","title":"var pad1: AtkFunction!","type":"property"},{"path":"\/documentation\/atk\/hyperlinkclassprotocol\/parent","title":"var parent: GObjectClass","type":"property"}],"path":"\/documentation\/atk\/hyperlinkclassprotocol","title":"HyperlinkClassProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkimplifaceprotocol\/parent","title":"var parent: GTypeInterface","type":"property"}],"path":"\/documentation\/atk\/hyperlinkimplifaceprotocol","title":"HyperlinkImplIfaceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkimplprotocol\/hyperlink","title":"var hyperlink: HyperlinkRef!","type":"property"},{"children":[{"children":[{"path":"\/documentation\/atk\/hyperlinkimplprotocol\/hyperlink_impl_ptr-2lqgy","title":"var hyperlink_impl_ptr: UnsafeMutablePointer<AtkHyperlinkImpl>!","type":"property"}],"title":"HyperlinkImplProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/hyperlinkimplprotocol\/hyperlink_impl_ptr-fnj8","title":"var hyperlink_impl_ptr: UnsafeMutablePointer<AtkHyperlinkImpl>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkimplprotocol\/gethyperlink()","title":"func getHyperlink() -> HyperlinkRef!","type":"method"}],"path":"\/documentation\/atk\/hyperlinkimplprotocol","title":"HyperlinkImplProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkprotocol\/endindex","title":"var endIndex: Int","type":"property"},{"children":[{"children":[{"path":"\/documentation\/atk\/hyperlinkprotocol\/hyperlink_ptr-3ib6e","title":"var hyperlink_ptr: UnsafeMutablePointer<AtkHyperlink>!","type":"property"}],"title":"HyperlinkProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/hyperlinkprotocol\/hyperlink_ptr-3mo06","title":"var hyperlink_ptr: UnsafeMutablePointer<AtkHyperlink>!","type":"property"},{"path":"\/documentation\/atk\/hyperlinkprotocol\/isinline","title":"var isInline: Bool","type":"property"},{"path":"\/documentation\/atk\/hyperlinkprotocol\/isselectedlink","title":"var isSelectedLink: Bool","type":"property"},{"path":"\/documentation\/atk\/hyperlinkprotocol\/isvalid","title":"var isValid: Bool","type":"property"},{"path":"\/documentation\/atk\/hyperlinkprotocol\/nanchors","title":"var nAnchors: Int","type":"property"},{"path":"\/documentation\/atk\/hyperlinkprotocol\/parent","title":"var parent: GObject","type":"property"},{"path":"\/documentation\/atk\/hyperlinkprotocol\/startindex","title":"var startIndex: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: HyperlinkPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/hyperlinkprotocol\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: HyperlinkSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkprotocol\/connect(signal:flags:handler:)","title":"func connect(signal: HyperlinkSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkprotocol\/get(property:)","title":"func get(property: HyperlinkPropertyName) -> Value","type":"method"},{"path":"\/documentation\/atk\/hyperlinkprotocol\/getendindex()","title":"func getEndIndex() -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkprotocol\/getnanchors()","title":"func getNAnchors() -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkprotocol\/getobject(i:)","title":"func getObject(i: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/hyperlinkprotocol\/getstartindex()","title":"func getStartIndex() -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkprotocol\/geturi(i:)","title":"func getUri(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/hyperlinkprotocol\/onlinkactivated(flags:handler:)","title":"func onLinkActivated(flags: ConnectFlags, handler: (HyperlinkRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkprotocol\/onnotifyendindex(flags:handler:)","title":"func onNotifyEndIndex(flags: ConnectFlags, handler: (HyperlinkRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkprotocol\/onnotifynumberofanchors(flags:handler:)","title":"func onNotifyNumberOfAnchors(flags: ConnectFlags, handler: (HyperlinkRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkprotocol\/onnotifyselectedlink(flags:handler:)","title":"func onNotifySelectedLink(flags: ConnectFlags, handler: (HyperlinkRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkprotocol\/onnotifystartindex(flags:handler:)","title":"func onNotifyStartIndex(flags: ConnectFlags, handler: (HyperlinkRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkprotocol\/set(property:value:)","title":"func set(property: HyperlinkPropertyName, value: Value)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkprotocol\/linkactivatedsignal","title":"static var linkActivatedSignal: HyperlinkSignalName","type":"property"},{"path":"\/documentation\/atk\/hyperlinkprotocol\/notifyendindexsignal","title":"static var notifyEndIndexSignal: HyperlinkSignalName","type":"property"},{"path":"\/documentation\/atk\/hyperlinkprotocol\/notifynumberofanchorssignal","title":"static var notifyNumberOfAnchorsSignal: HyperlinkSignalName","type":"property"},{"path":"\/documentation\/atk\/hyperlinkprotocol\/notifyselectedlinksignal","title":"static var notifySelectedLinkSignal: HyperlinkSignalName","type":"property"},{"path":"\/documentation\/atk\/hyperlinkprotocol\/notifystartindexsignal","title":"static var notifyStartIndexSignal: HyperlinkSignalName","type":"property"}],"path":"\/documentation\/atk\/hyperlinkprotocol","title":"HyperlinkProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hypertextifaceprotocol\/parent","title":"var parent: GTypeInterface","type":"property"}],"path":"\/documentation\/atk\/hypertextifaceprotocol","title":"HypertextIfaceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/atk\/hypertextprotocol\/hypertext_ptr-9o8w9","title":"var hypertext_ptr: UnsafeMutablePointer<AtkHypertext>!","type":"property"}],"title":"HypertextProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/hypertextprotocol\/hypertext_ptr-162bb","title":"var hypertext_ptr: UnsafeMutablePointer<AtkHypertext>!","type":"property"},{"path":"\/documentation\/atk\/hypertextprotocol\/nlinks","title":"var nLinks: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/hypertextprotocol\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: HypertextSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/hypertextprotocol\/connect(signal:flags:handler:)","title":"func connect(signal: HypertextSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/hypertextprotocol\/getlink(linkindex:)","title":"func getLink(linkIndex: Int) -> HyperlinkRef!","type":"method"},{"path":"\/documentation\/atk\/hypertextprotocol\/getlinkindex(charindex:)","title":"func getLinkIndex(charIndex: Int) -> Int","type":"method"},{"path":"\/documentation\/atk\/hypertextprotocol\/getnlinks()","title":"func getNLinks() -> Int","type":"method"},{"path":"\/documentation\/atk\/hypertextprotocol\/onlinkselected(flags:handler:)","title":"func onLinkSelected(flags: ConnectFlags, handler: (HypertextRef, Int) -> Void) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hypertextprotocol\/linkselectedsignal","title":"static var linkSelectedSignal: HypertextSignalName","type":"property"}],"path":"\/documentation\/atk\/hypertextprotocol","title":"HypertextProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/imageifaceprotocol\/parent","title":"var parent: GTypeInterface","type":"property"}],"path":"\/documentation\/atk\/imageifaceprotocol","title":"ImageIfaceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/imageprotocol\/imagedescription","title":"var imageDescription: String!","type":"property"},{"path":"\/documentation\/atk\/imageprotocol\/imagelocale","title":"var imageLocale: String!","type":"property"},{"children":[{"children":[{"path":"\/documentation\/atk\/imageprotocol\/image_ptr-48bjb","title":"var image_ptr: UnsafeMutablePointer<AtkImage>!","type":"property"}],"title":"ImageProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/imageprotocol\/image_ptr-4kbii","title":"var image_ptr: UnsafeMutablePointer<AtkImage>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/imageprotocol\/getimagedescription()","title":"func getImageDescription() -> String!","type":"method"},{"path":"\/documentation\/atk\/imageprotocol\/getimagelocale()","title":"func getImageLocale() -> String!","type":"method"},{"path":"\/documentation\/atk\/imageprotocol\/getimageposition(x:y:coordtype:)","title":"func getImagePosition(x: UnsafeMutablePointer<gint>!, y: UnsafeMutablePointer<gint>!, coordType: AtkCoordType)","type":"method"},{"path":"\/documentation\/atk\/imageprotocol\/getimagesize(width:height:)","title":"func getImageSize(width: UnsafeMutablePointer<gint>!, height: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/atk\/imageprotocol\/setimage(description:)","title":"func setImage(description: UnsafePointer<gchar>!) -> Bool","type":"method"}],"path":"\/documentation\/atk\/imageprotocol","title":"ImageProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/atk\/implementorifaceprotocol\/implementor_ptr-7tx5o","title":"var implementor_ptr: UnsafeMutablePointer<AtkImplementorIface>!","type":"property"}],"title":"ImplementorIfaceProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/implementorifaceprotocol\/implementor_ptr-1ymya","title":"var implementor_ptr: UnsafeMutablePointer<AtkImplementorIface>!","type":"property"}],"path":"\/documentation\/atk\/implementorifaceprotocol","title":"ImplementorIfaceProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/implementorprotocol\/refaccessible()","title":"func refAccessible() -> ObjectRef!","type":"method"}],"path":"\/documentation\/atk\/implementorprotocol","title":"ImplementorProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/keyeventstructprotocol\/keycode","title":"var keycode: guint16","type":"property"},{"path":"\/documentation\/atk\/keyeventstructprotocol\/keyval","title":"var keyval: guint","type":"property"},{"path":"\/documentation\/atk\/keyeventstructprotocol\/length","title":"var length: gint","type":"property"},{"path":"\/documentation\/atk\/keyeventstructprotocol\/state","title":"var state: guint","type":"property"},{"path":"\/documentation\/atk\/keyeventstructprotocol\/string","title":"var string: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/atk\/keyeventstructprotocol\/timestamp","title":"var timestamp: guint32","type":"property"},{"path":"\/documentation\/atk\/keyeventstructprotocol\/type","title":"var type: gint","type":"property"}],"path":"\/documentation\/atk\/keyeventstructprotocol","title":"KeyEventStructProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/miscclassprotocol\/parent","title":"var parent: GObjectClass","type":"property"},{"path":"\/documentation\/atk\/miscclassprotocol\/vfuncs","title":"var vfuncs: (gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?)","type":"property"}],"path":"\/documentation\/atk\/miscclassprotocol","title":"MiscClassProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/atk\/miscprotocol\/misc_ptr-34pkw","title":"var misc_ptr: UnsafeMutablePointer<AtkMisc>!","type":"property"}],"title":"MiscProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/miscprotocol\/misc_ptr-ugqu","title":"var misc_ptr: UnsafeMutablePointer<AtkMisc>!","type":"property"},{"path":"\/documentation\/atk\/miscprotocol\/parent","title":"var parent: GObject","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/miscprotocol\/threadsenter()","title":"func threadsEnter()","type":"method"},{"path":"\/documentation\/atk\/miscprotocol\/threadsleave()","title":"func threadsLeave()","type":"method"}],"path":"\/documentation\/atk\/miscprotocol","title":"MiscProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectclassprotocol\/parentclass","title":"var parentClass: AtkObjectClass","type":"property"}],"path":"\/documentation\/atk\/noopobjectclassprotocol","title":"NoOpObjectClassProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectfactoryclassprotocol\/parentclass","title":"var parentClass: AtkObjectFactoryClass","type":"property"}],"path":"\/documentation\/atk\/noopobjectfactoryclassprotocol","title":"NoOpObjectFactoryClassProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/atk\/noopobjectfactoryprotocol\/no_op_object_factory_ptr-5fd1f","title":"var no_op_object_factory_ptr: UnsafeMutablePointer<AtkNoOpObjectFactory>!","type":"property"}],"title":"NoOpObjectFactoryProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/noopobjectfactoryprotocol\/no_op_object_factory_ptr-5rxx8","title":"var no_op_object_factory_ptr: UnsafeMutablePointer<AtkNoOpObjectFactory>!","type":"property"},{"path":"\/documentation\/atk\/noopobjectfactoryprotocol\/parent","title":"var parent: AtkObjectFactory","type":"property"}],"path":"\/documentation\/atk\/noopobjectfactoryprotocol","title":"NoOpObjectFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/atk\/noopobjectprotocol\/no_op_object_ptr-64fem","title":"var no_op_object_ptr: UnsafeMutablePointer<AtkNoOpObject>!","type":"property"}],"title":"NoOpObjectProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/noopobjectprotocol\/no_op_object_ptr-9snqn","title":"var no_op_object_ptr: UnsafeMutablePointer<AtkNoOpObject>!","type":"property"},{"path":"\/documentation\/atk\/noopobjectprotocol\/parent","title":"var parent: AtkObject","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: NoOpObjectPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectprotocol\/get(property:)","title":"func get(property: NoOpObjectPropertyName) -> Value","type":"method"},{"path":"\/documentation\/atk\/noopobjectprotocol\/set(property:value:)","title":"func set(property: NoOpObjectPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/atk\/noopobjectprotocol","title":"NoOpObjectProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/objectclassprotocol\/pad1","title":"var pad1: AtkFunction!","type":"property"},{"path":"\/documentation\/atk\/objectclassprotocol\/parent","title":"var parent: GObjectClass","type":"property"}],"path":"\/documentation\/atk\/objectclassprotocol","title":"ObjectClassProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/objectfactoryclassprotocol\/pad1","title":"var pad1: AtkFunction!","type":"property"},{"path":"\/documentation\/atk\/objectfactoryclassprotocol\/pad2","title":"var pad2: AtkFunction!","type":"property"},{"path":"\/documentation\/atk\/objectfactoryclassprotocol\/parentclass","title":"var parentClass: GObjectClass","type":"property"}],"path":"\/documentation\/atk\/objectfactoryclassprotocol","title":"ObjectFactoryClassProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/objectfactoryprotocol\/accessibletype","title":"var accessibleType: GType","type":"property"},{"children":[{"children":[{"path":"\/documentation\/atk\/objectfactoryprotocol\/object_factory_ptr-2mas","title":"var object_factory_ptr: UnsafeMutablePointer<AtkObjectFactory>!","type":"property"}],"title":"ObjectFactoryProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/objectfactoryprotocol\/object_factory_ptr-5a529","title":"var object_factory_ptr: UnsafeMutablePointer<AtkObjectFactory>!","type":"property"},{"path":"\/documentation\/atk\/objectfactoryprotocol\/parent","title":"var parent: GObject","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/objectfactoryprotocol\/createaccessible(obj:)","title":"func createAccessible<GObjectObjectT>(obj: GObjectObjectT) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/objectfactoryprotocol\/getaccessibletype()","title":"func getAccessibleType() -> GType","type":"method"},{"path":"\/documentation\/atk\/objectfactoryprotocol\/invalidate()","title":"func invalidate()","type":"method"}],"path":"\/documentation\/atk\/objectfactoryprotocol","title":"ObjectFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/objectprotocol\/accessibleid","title":"var accessibleId: String!","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/accessibleparent","title":"var accessibleParent: ObjectRef!","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/attributes","title":"var attributes: UnsafeMutablePointer<AtkAttributeSet>!","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/description","title":"var description: String!","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/indexinparent","title":"var indexInParent: Int","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/layer","title":"var layer: AtkLayer","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/mdizorder","title":"var mdiZorder: Int","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/naccessiblechildren","title":"var nAccessibleChildren: Int","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/name","title":"var name: String!","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/objectlocale","title":"var objectLocale: String!","type":"property"},{"children":[{"children":[{"path":"\/documentation\/atk\/objectprotocol\/object_ptr-6a05p","title":"var object_ptr: UnsafeMutablePointer<AtkObject>!","type":"property"}],"title":"ObjectProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/objectprotocol\/object_ptr-4kdf8","title":"var object_ptr: UnsafeMutablePointer<AtkObject>!","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/parent","title":"var parent: ObjectRef!","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/relationset","title":"var relationSet: RelationSetRef!","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/role","title":"var role: AtkRole","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/objectprotocol\/add(relationship:target:)","title":"func add<ObjectT>(relationship: AtkRelationType, target: ObjectT) -> Bool","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: ObjectPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/connect(signal:flags:handler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/connectpropertychange(handler:)","title":"func connectPropertyChange(handler: UnsafeMutablePointer<AtkPropertyChangeHandler?>!) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/focustrackernotify()","title":"func focusTrackerNotify()","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/get(property:)","title":"func get(property: ObjectPropertyName) -> Value","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/getaccessibleid()","title":"func getAccessibleId() -> String!","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/getattributes()","title":"func getAttributes() -> UnsafeMutablePointer<AtkAttributeSet>!","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/getdescription()","title":"func getDescription() -> String!","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/getindexinparent()","title":"func getIndexInParent() -> Int","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/getlayer()","title":"func getLayer() -> AtkLayer","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/getmdizorder()","title":"func getMdiZorder() -> Int","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/getnaccessiblechildren()","title":"func getNAccessibleChildren() -> Int","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/getname()","title":"func getName() -> String!","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/getobjectlocale()","title":"func getObjectLocale() -> String!","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/getparent()","title":"func getParent() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/getrole()","title":"func getRole() -> AtkRole","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/initialize(data:)","title":"func initialize(data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/notifystatechange(state:value:)","title":"func notifyStateChange(state: AtkState, value: Bool)","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/onactivedescendantchanged(flags:handler:)","title":"func onActiveDescendantChanged(flags: ConnectFlags, handler: (ObjectRef, ObjectRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/onannouncement(flags:handler:)","title":"func onAnnouncement(flags: ConnectFlags, handler: (ObjectRef, String) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/onchildrenchanged(flags:handler:)","title":"func onChildrenChanged(flags: ConnectFlags, handler: (ObjectRef, UInt, ObjectRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/onfocusevent(flags:handler:)","title":"func onFocusEvent(flags: ConnectFlags, handler: (ObjectRef, Bool) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/onnotification(flags:handler:)","title":"func onNotification(flags: ConnectFlags, handler: (ObjectRef, String, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/onnotifyaccessiblecomponentlayer(flags:handler:)","title":"func onNotifyAccessibleComponentLayer(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/onnotifyaccessiblecomponentmdizorder(flags:handler:)","title":"func onNotifyAccessibleComponentMdiZorder(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/onnotifyaccessibledescription(flags:handler:)","title":"func onNotifyAccessibleDescription(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/onnotifyaccessiblehypertextnlinks(flags:handler:)","title":"func onNotifyAccessibleHypertextNlinks(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/onnotifyaccessiblename(flags:handler:)","title":"func onNotifyAccessibleName(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/onnotifyaccessibleparent(flags:handler:)","title":"func onNotifyAccessibleParent(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/onnotifyaccessiblerole(flags:handler:)","title":"func onNotifyAccessibleRole(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/onnotifyaccessibletablecaption(flags:handler:)","title":"func onNotifyAccessibleTableCaption(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/onnotifyaccessibletablecaptionobject(flags:handler:)","title":"func onNotifyAccessibleTableCaptionObject(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/onnotifyaccessibletablecolumndescription(flags:handler:)","title":"func onNotifyAccessibleTableColumnDescription(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/onnotifyaccessibletablecolumnheader(flags:handler:)","title":"func onNotifyAccessibleTableColumnHeader(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/onnotifyaccessibletablerowdescription(flags:handler:)","title":"func onNotifyAccessibleTableRowDescription(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/onnotifyaccessibletablerowheader(flags:handler:)","title":"func onNotifyAccessibleTableRowHeader(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/onnotifyaccessibletablesummary(flags:handler:)","title":"func onNotifyAccessibleTableSummary(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/onnotifyaccessiblevalue(flags:handler:)","title":"func onNotifyAccessibleValue(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/onpropertychange(flags:handler:)","title":"func onPropertyChange(flags: ConnectFlags, handler: (ObjectRef, PropertyValuesRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/onstatechange(flags:handler:)","title":"func onStateChange(flags: ConnectFlags, handler: (ObjectRef, String, Bool) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/onvisibledatachanged(flags:handler:)","title":"func onVisibleDataChanged(flags: ConnectFlags, handler: (ObjectRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/peekparent()","title":"func peekParent() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/refaccessiblechild(i:)","title":"func refAccessibleChild(i: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/refrelationset()","title":"func refRelationSet() -> RelationSetRef!","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/refstateset()","title":"func refStateSet() -> StateSetRef!","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/remove(relationship:target:)","title":"func remove<ObjectT>(relationship: AtkRelationType, target: ObjectT) -> Bool","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/removepropertychangehandler(handlerid:)","title":"func removePropertyChangeHandler(handlerId: Int)","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/set(description:)","title":"func set(description: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/set(name:)","title":"func set(name: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/set(parent:)","title":"func set<ObjectT>(parent: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/set(property:value:)","title":"func set(property: ObjectPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/set(role:)","title":"func set(role: AtkRole)","type":"method"},{"path":"\/documentation\/atk\/objectprotocol\/setaccessibleid(name:)","title":"func setAccessibleId(name: UnsafePointer<gchar>!)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/objectprotocol\/activedescendantchangedsignal","title":"static var activeDescendantChangedSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/announcementsignal","title":"static var announcementSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/childrenchangedsignal","title":"static var childrenChangedSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/focuseventsignal","title":"static var focusEventSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/notificationsignal","title":"static var notificationSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/notifyaccessiblecomponentlayersignal","title":"static var notifyAccessibleComponentLayerSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/notifyaccessiblecomponentmdizordersignal","title":"static var notifyAccessibleComponentMdiZorderSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/notifyaccessibledescriptionsignal","title":"static var notifyAccessibleDescriptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/notifyaccessiblehypertextnlinkssignal","title":"static var notifyAccessibleHypertextNlinksSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/notifyaccessiblenamesignal","title":"static var notifyAccessibleNameSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/notifyaccessibleparentsignal","title":"static var notifyAccessibleParentSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/notifyaccessiblerolesignal","title":"static var notifyAccessibleRoleSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/notifyaccessibletablecaptionobjectsignal","title":"static var notifyAccessibleTableCaptionObjectSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/notifyaccessibletablecaptionsignal","title":"static var notifyAccessibleTableCaptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/notifyaccessibletablecolumndescriptionsignal","title":"static var notifyAccessibleTableColumnDescriptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/notifyaccessibletablecolumnheadersignal","title":"static var notifyAccessibleTableColumnHeaderSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/notifyaccessibletablerowdescriptionsignal","title":"static var notifyAccessibleTableRowDescriptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/notifyaccessibletablerowheadersignal","title":"static var notifyAccessibleTableRowHeaderSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/notifyaccessibletablesummarysignal","title":"static var notifyAccessibleTableSummarySignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/notifyaccessiblevaluesignal","title":"static var notifyAccessibleValueSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/propertychangesignal","title":"static var propertyChangeSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/statechangesignal","title":"static var stateChangeSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectprotocol\/visibledatachangedsignal","title":"static var visibleDataChangedSignal: ObjectSignalName","type":"property"}],"path":"\/documentation\/atk\/objectprotocol","title":"ObjectProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/plugclassprotocol\/parentclass","title":"var parentClass: AtkObjectClass","type":"property"}],"path":"\/documentation\/atk\/plugclassprotocol","title":"PlugClassProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/plugprotocol\/id","title":"var id: String!","type":"property"},{"path":"\/documentation\/atk\/plugprotocol\/parent","title":"var parent: AtkObject","type":"property"},{"children":[{"children":[{"path":"\/documentation\/atk\/plugprotocol\/plug_ptr-8btik","title":"var plug_ptr: UnsafeMutablePointer<AtkPlug>!","type":"property"}],"title":"PlugProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/plugprotocol\/plug_ptr-87f24","title":"var plug_ptr: UnsafeMutablePointer<AtkPlug>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/plugprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: PlugPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/plugprotocol\/get(property:)","title":"func get(property: PlugPropertyName) -> Value","type":"method"},{"path":"\/documentation\/atk\/plugprotocol\/getid()","title":"func getId() -> String!","type":"method"},{"path":"\/documentation\/atk\/plugprotocol\/set(child:)","title":"func set<ObjectT>(child: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/plugprotocol\/set(property:value:)","title":"func set(property: PlugPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/atk\/plugprotocol","title":"PlugProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/propertyvaluesprotocol\/newvalue","title":"var newValue: GValue","type":"property"},{"path":"\/documentation\/atk\/propertyvaluesprotocol\/oldvalue","title":"var oldValue: GValue","type":"property"},{"path":"\/documentation\/atk\/propertyvaluesprotocol\/propertyname","title":"var propertyName: UnsafePointer<gchar>!","type":"property"}],"path":"\/documentation\/atk\/propertyvaluesprotocol","title":"PropertyValuesProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/rangeprotocol\/description","title":"var description: String!","type":"property"},{"path":"\/documentation\/atk\/rangeprotocol\/lowerlimit","title":"var lowerLimit: Double","type":"property"},{"children":[{"children":[{"path":"\/documentation\/atk\/rangeprotocol\/range_ptr-9qi6n","title":"var range_ptr: UnsafeMutablePointer<AtkRange>!","type":"property"}],"title":"RangeProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/rangeprotocol\/range_ptr-1snbq","title":"var range_ptr: UnsafeMutablePointer<AtkRange>!","type":"property"},{"path":"\/documentation\/atk\/rangeprotocol\/upperlimit","title":"var upperLimit: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/rangeprotocol\/copy()","title":"func copy() -> RangeRef!","type":"method"},{"path":"\/documentation\/atk\/rangeprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/atk\/rangeprotocol\/getdescription()","title":"func getDescription() -> String!","type":"method"},{"path":"\/documentation\/atk\/rangeprotocol\/getlowerlimit()","title":"func getLowerLimit() -> Double","type":"method"},{"path":"\/documentation\/atk\/rangeprotocol\/getupperlimit()","title":"func getUpperLimit() -> Double","type":"method"}],"path":"\/documentation\/atk\/rangeprotocol","title":"RangeProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/rectangleprotocol\/height","title":"var height: gint","type":"property"},{"children":[{"children":[{"path":"\/documentation\/atk\/rectangleprotocol\/rectangle_ptr-1uadj","title":"var rectangle_ptr: UnsafeMutablePointer<AtkRectangle>!","type":"property"}],"title":"RectangleProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/rectangleprotocol\/rectangle_ptr-70ajx","title":"var rectangle_ptr: UnsafeMutablePointer<AtkRectangle>!","type":"property"},{"path":"\/documentation\/atk\/rectangleprotocol\/width","title":"var width: gint","type":"property"},{"path":"\/documentation\/atk\/rectangleprotocol\/x","title":"var x: gint","type":"property"},{"path":"\/documentation\/atk\/rectangleprotocol\/y","title":"var y: gint","type":"property"}],"path":"\/documentation\/atk\/rectangleprotocol","title":"RectangleProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/registryclassprotocol\/parentclass","title":"var parentClass: GObjectClass","type":"property"}],"path":"\/documentation\/atk\/registryclassprotocol","title":"RegistryClassProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/registryprotocol\/factorysingletoncache","title":"var factorySingletonCache: HashTableRef!","type":"property"},{"path":"\/documentation\/atk\/registryprotocol\/factorytyperegistry","title":"var factoryTypeRegistry: HashTableRef!","type":"property"},{"path":"\/documentation\/atk\/registryprotocol\/parent","title":"var parent: GObject","type":"property"},{"children":[{"children":[{"path":"\/documentation\/atk\/registryprotocol\/registry_ptr-69mrj","title":"var registry_ptr: UnsafeMutablePointer<AtkRegistry>!","type":"property"}],"title":"RegistryProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/registryprotocol\/registry_ptr-2f6ya","title":"var registry_ptr: UnsafeMutablePointer<AtkRegistry>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/registryprotocol\/getfactory(type:)-2mwmm","title":"func getFactory(type: GType) -> ObjectFactoryRef!","type":"method"},{"path":"\/documentation\/atk\/registryprotocol\/getfactory(type:)-79909","title":"func getFactory(type: GType) -> GType","type":"method"},{"path":"\/documentation\/atk\/registryprotocol\/setfactory(type:factorytype:)","title":"func setFactory(type: GType, factoryType: GType)","type":"method"}],"path":"\/documentation\/atk\/registryprotocol","title":"RegistryProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/relationclassprotocol\/parent","title":"var parent: GObjectClass","type":"property"}],"path":"\/documentation\/atk\/relationclassprotocol","title":"RelationClassProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/relationprotocol\/parent","title":"var parent: GObject","type":"property"},{"path":"\/documentation\/atk\/relationprotocol\/relationtype","title":"var relationType: AtkRelationType","type":"property"},{"children":[{"children":[{"path":"\/documentation\/atk\/relationprotocol\/relation_ptr-1aoda","title":"var relation_ptr: UnsafeMutablePointer<AtkRelation>!","type":"property"}],"title":"RelationProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/relationprotocol\/relation_ptr-1sxo8","title":"var relation_ptr: UnsafeMutablePointer<AtkRelation>!","type":"property"},{"path":"\/documentation\/atk\/relationprotocol\/relationship","title":"var relationship: AtkRelationType","type":"property"},{"path":"\/documentation\/atk\/relationprotocol\/target","title":"var target: RefArrayRef<ObjectRef>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/relationprotocol\/add(target:)","title":"func add<ObjectT>(target: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/relationprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: RelationPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/relationprotocol\/get(property:)","title":"func get(property: RelationPropertyName) -> Value","type":"method"},{"path":"\/documentation\/atk\/relationprotocol\/getrelationtype()","title":"func getRelationType() -> AtkRelationType","type":"method"},{"path":"\/documentation\/atk\/relationprotocol\/gettarget()","title":"func getTarget() -> RefArrayRef<ObjectRef>!","type":"method"},{"path":"\/documentation\/atk\/relationprotocol\/remove(target:)","title":"func remove<ObjectT>(target: ObjectT) -> Bool","type":"method"},{"path":"\/documentation\/atk\/relationprotocol\/set(property:value:)","title":"func set(property: RelationPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/atk\/relationprotocol","title":"RelationProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/relationsetclassprotocol\/pad1","title":"var pad1: AtkFunction!","type":"property"},{"path":"\/documentation\/atk\/relationsetclassprotocol\/pad2","title":"var pad2: AtkFunction!","type":"property"},{"path":"\/documentation\/atk\/relationsetclassprotocol\/parent","title":"var parent: GObjectClass","type":"property"}],"path":"\/documentation\/atk\/relationsetclassprotocol","title":"RelationSetClassProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/relationsetprotocol\/nrelations","title":"var nRelations: Int","type":"property"},{"path":"\/documentation\/atk\/relationsetprotocol\/parent","title":"var parent: GObject","type":"property"},{"children":[{"children":[{"path":"\/documentation\/atk\/relationsetprotocol\/relation_set_ptr-2uzig","title":"var relation_set_ptr: UnsafeMutablePointer<AtkRelationSet>!","type":"property"}],"title":"RelationSetProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/relationsetprotocol\/relation_set_ptr-1qcwi","title":"var relation_set_ptr: UnsafeMutablePointer<AtkRelationSet>!","type":"property"},{"path":"\/documentation\/atk\/relationsetprotocol\/relations","title":"var relations: PtrArrayRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/relationsetprotocol\/add(relation:)","title":"func add<RelationT>(relation: RelationT)","type":"method"},{"path":"\/documentation\/atk\/relationsetprotocol\/addrelationbytype(relationship:target:)","title":"func addRelationByType<ObjectT>(relationship: AtkRelationType, target: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/relationsetprotocol\/contains(relationship:)","title":"func contains(relationship: AtkRelationType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/relationsetprotocol\/containstarget(relationship:target:)","title":"func containsTarget<ObjectT>(relationship: AtkRelationType, target: ObjectT) -> Bool","type":"method"},{"path":"\/documentation\/atk\/relationsetprotocol\/getnrelations()","title":"func getNRelations() -> Int","type":"method"},{"path":"\/documentation\/atk\/relationsetprotocol\/getrelation(i:)","title":"func getRelation(i: Int) -> RelationRef!","type":"method"},{"path":"\/documentation\/atk\/relationsetprotocol\/getrelationbytype(relationship:)","title":"func getRelationByType(relationship: AtkRelationType) -> RelationRef!","type":"method"},{"path":"\/documentation\/atk\/relationsetprotocol\/remove(relation:)","title":"func remove<RelationT>(relation: RelationT)","type":"method"}],"path":"\/documentation\/atk\/relationsetprotocol","title":"RelationSetProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/selectionifaceprotocol\/parent","title":"var parent: GTypeInterface","type":"property"}],"path":"\/documentation\/atk\/selectionifaceprotocol","title":"SelectionIfaceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/selectionprotocol\/selectioncount","title":"var selectionCount: Int","type":"property"},{"children":[{"children":[{"path":"\/documentation\/atk\/selectionprotocol\/selection_ptr-5wyo9","title":"var selection_ptr: UnsafeMutablePointer<AtkSelection>!","type":"property"}],"title":"SelectionProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/selectionprotocol\/selection_ptr-9j0s5","title":"var selection_ptr: UnsafeMutablePointer<AtkSelection>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/selectionprotocol\/addselection(i:)","title":"func addSelection(i: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/selectionprotocol\/clearselection()","title":"func clearSelection() -> Bool","type":"method"},{"path":"\/documentation\/atk\/selectionprotocol\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: SelectionSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/selectionprotocol\/connect(signal:flags:handler:)","title":"func connect(signal: SelectionSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/selectionprotocol\/getselectioncount()","title":"func getSelectionCount() -> Int","type":"method"},{"path":"\/documentation\/atk\/selectionprotocol\/ischildselected(i:)","title":"func isChildSelected(i: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/selectionprotocol\/onselectionchanged(flags:handler:)","title":"func onSelectionChanged(flags: ConnectFlags, handler: (SelectionRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/selectionprotocol\/refselection(i:)","title":"func refSelection(i: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/selectionprotocol\/removeselection(i:)","title":"func removeSelection(i: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/selectionprotocol\/selectallselection()","title":"func selectAllSelection() -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/selectionprotocol\/selectionchangedsignal","title":"static var selectionChangedSignal: SelectionSignalName","type":"property"}],"path":"\/documentation\/atk\/selectionprotocol","title":"SelectionProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/socketclassprotocol\/parentclass","title":"var parentClass: AtkObjectClass","type":"property"}],"path":"\/documentation\/atk\/socketclassprotocol","title":"SocketClassProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/socketprotocol\/isoccupied","title":"var isOccupied: Bool","type":"property"},{"path":"\/documentation\/atk\/socketprotocol\/parent","title":"var parent: AtkObject","type":"property"},{"children":[{"children":[{"path":"\/documentation\/atk\/socketprotocol\/socket_ptr-8vieu","title":"var socket_ptr: UnsafeMutablePointer<AtkSocket>!","type":"property"}],"title":"SocketProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/socketprotocol\/socket_ptr-5sr8z","title":"var socket_ptr: UnsafeMutablePointer<AtkSocket>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/socketprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: SocketPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/socketprotocol\/embed(plugid:)","title":"func embed(plugId: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/socketprotocol\/get(property:)","title":"func get(property: SocketPropertyName) -> Value","type":"method"},{"path":"\/documentation\/atk\/socketprotocol\/set(property:value:)","title":"func set(property: SocketPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/atk\/socketprotocol","title":"SocketProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/statesetclassprotocol\/parent","title":"var parent: GObjectClass","type":"property"}],"path":"\/documentation\/atk\/statesetclassprotocol","title":"StateSetClassProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/statesetprotocol\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/atk\/statesetprotocol\/parent","title":"var parent: GObject","type":"property"},{"children":[{"children":[{"path":"\/documentation\/atk\/statesetprotocol\/state_set_ptr-7093j","title":"var state_set_ptr: UnsafeMutablePointer<AtkStateSet>!","type":"property"}],"title":"StateSetProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/statesetprotocol\/state_set_ptr-33ma9","title":"var state_set_ptr: UnsafeMutablePointer<AtkStateSet>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/statesetprotocol\/addstate(type:)","title":"func addState(type: AtkStateType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/statesetprotocol\/addstates(types:ntypes:)","title":"func addStates(types: UnsafeMutablePointer<AtkStateType>!, nTypes: Int)","type":"method"},{"path":"\/documentation\/atk\/statesetprotocol\/andsets(compareset:)","title":"func andSets<StateSetT>(compareSet: StateSetT) -> StateSetRef!","type":"method"},{"path":"\/documentation\/atk\/statesetprotocol\/clearstates()","title":"func clearStates()","type":"method"},{"path":"\/documentation\/atk\/statesetprotocol\/containsstate(type:)","title":"func containsState(type: AtkStateType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/statesetprotocol\/containsstates(types:ntypes:)","title":"func containsStates(types: UnsafeMutablePointer<AtkStateType>!, nTypes: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/statesetprotocol\/orsets(compareset:)","title":"func orSets<StateSetT>(compareSet: StateSetT) -> StateSetRef!","type":"method"},{"path":"\/documentation\/atk\/statesetprotocol\/removestate(type:)","title":"func removeState(type: AtkStateType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/statesetprotocol\/xorsets(compareset:)","title":"func xorSets<StateSetT>(compareSet: StateSetT) -> StateSetRef!","type":"method"}],"path":"\/documentation\/atk\/statesetprotocol","title":"StateSetProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/streamablecontentifaceprotocol\/pad1","title":"var pad1: AtkFunction!","type":"property"},{"path":"\/documentation\/atk\/streamablecontentifaceprotocol\/pad2","title":"var pad2: AtkFunction!","type":"property"},{"path":"\/documentation\/atk\/streamablecontentifaceprotocol\/pad3","title":"var pad3: AtkFunction!","type":"property"},{"path":"\/documentation\/atk\/streamablecontentifaceprotocol\/parent","title":"var parent: GTypeInterface","type":"property"}],"path":"\/documentation\/atk\/streamablecontentifaceprotocol","title":"StreamableContentIfaceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/streamablecontentprotocol\/nmimetypes","title":"var nMimeTypes: Int","type":"property"},{"children":[{"children":[{"path":"\/documentation\/atk\/streamablecontentprotocol\/streamable_content_ptr-5ix7v","title":"var streamable_content_ptr: UnsafeMutablePointer<AtkStreamableContent>!","type":"property"}],"title":"StreamableContentProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/streamablecontentprotocol\/streamable_content_ptr-1hhh2","title":"var streamable_content_ptr: UnsafeMutablePointer<AtkStreamableContent>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/streamablecontentprotocol\/getmimetype(i:)","title":"func getMimeType(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/streamablecontentprotocol\/getnmimetypes()","title":"func getNMimeTypes() -> Int","type":"method"},{"path":"\/documentation\/atk\/streamablecontentprotocol\/getstream(mimetype:)","title":"func getStream(mimeType: UnsafePointer<gchar>!) -> IOChannelRef!","type":"method"},{"path":"\/documentation\/atk\/streamablecontentprotocol\/geturi(mimetype:)","title":"func getUri(mimeType: UnsafePointer<gchar>!) -> String!","type":"method"}],"path":"\/documentation\/atk\/streamablecontentprotocol","title":"StreamableContentProtocol","type":"protocol"},{"path":"\/documentation\/atk\/tablecellifaceprotocol","title":"TableCellIfaceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecellprotocol\/columnheadercells","title":"var columnHeaderCells: RefArrayRef<ObjectRef>!","type":"property"},{"path":"\/documentation\/atk\/tablecellprotocol\/columnspan","title":"var columnSpan: Int","type":"property"},{"path":"\/documentation\/atk\/tablecellprotocol\/rowheadercells","title":"var rowHeaderCells: RefArrayRef<ObjectRef>!","type":"property"},{"path":"\/documentation\/atk\/tablecellprotocol\/rowspan","title":"var rowSpan: Int","type":"property"},{"path":"\/documentation\/atk\/tablecellprotocol\/table","title":"var table: ObjectRef!","type":"property"},{"children":[{"children":[{"path":"\/documentation\/atk\/tablecellprotocol\/table_cell_ptr-e4gq","title":"var table_cell_ptr: UnsafeMutablePointer<AtkTableCell>!","type":"property"}],"title":"TableCellProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/tablecellprotocol\/table_cell_ptr-6gu24","title":"var table_cell_ptr: UnsafeMutablePointer<AtkTableCell>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecellprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: TableCellPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/tablecellprotocol\/get(property:)","title":"func get(property: TableCellPropertyName) -> Value","type":"method"},{"path":"\/documentation\/atk\/tablecellprotocol\/getcolumnheadercells()","title":"func getColumnHeaderCells() -> RefArrayRef<ObjectRef>!","type":"method"},{"path":"\/documentation\/atk\/tablecellprotocol\/getcolumnspan()","title":"func getColumnSpan() -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellprotocol\/getposition(row:column:)","title":"func getPosition(row: UnsafeMutablePointer<gint>!, column: UnsafeMutablePointer<gint>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/tablecellprotocol\/getrowcolumnspan(row:column:rowspan:columnspan:)","title":"func getRowColumnSpan(row: UnsafeMutablePointer<gint>!, column: UnsafeMutablePointer<gint>!, rowSpan: UnsafeMutablePointer<gint>!, columnSpan: UnsafeMutablePointer<gint>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/tablecellprotocol\/getrowheadercells()","title":"func getRowHeaderCells() -> RefArrayRef<ObjectRef>!","type":"method"},{"path":"\/documentation\/atk\/tablecellprotocol\/getrowspan()","title":"func getRowSpan() -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellprotocol\/gettable()","title":"func getTable() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/tablecellprotocol\/set(property:value:)","title":"func set(property: TableCellPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/atk\/tablecellprotocol","title":"TableCellProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/tableifaceprotocol\/parent","title":"var parent: GTypeInterface","type":"property"}],"path":"\/documentation\/atk\/tableifaceprotocol","title":"TableIfaceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/tableprotocol\/caption","title":"var caption: ObjectRef!","type":"property"},{"path":"\/documentation\/atk\/tableprotocol\/ncolumns","title":"var nColumns: Int","type":"property"},{"path":"\/documentation\/atk\/tableprotocol\/nrows","title":"var nRows: Int","type":"property"},{"path":"\/documentation\/atk\/tableprotocol\/summary","title":"var summary: ObjectRef!","type":"property"},{"children":[{"children":[{"path":"\/documentation\/atk\/tableprotocol\/table_ptr-ogy4","title":"var table_ptr: UnsafeMutablePointer<AtkTable>!","type":"property"}],"title":"TableProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/tableprotocol\/table_ptr-9nqpy","title":"var table_ptr: UnsafeMutablePointer<AtkTable>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/tableprotocol\/addcolumnselection(column:)","title":"func addColumnSelection(column: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/addrowselection(row:)","title":"func addRowSelection(row: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: TableSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/connect(signal:flags:handler:)","title":"func connect(signal: TableSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/getcaption()","title":"func getCaption() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/getcolumnat(index:)","title":"func getColumnAt(index: Int) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/getcolumndescription(column:)","title":"func getColumnDescription(column: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/getcolumnextentat(row:column:)","title":"func getColumnExtentAt(row: Int, column: Int) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/getcolumnheader(column:)","title":"func getColumnHeader(column: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/getindexat(row:column:)","title":"func getIndexAt(row: Int, column: Int) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/getncolumns()","title":"func getNColumns() -> Int","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/getnrows()","title":"func getNRows() -> Int","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/getrowat(index:)","title":"func getRowAt(index: Int) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/getrowdescription(row:)","title":"func getRowDescription(row: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/getrowextentat(row:column:)","title":"func getRowExtentAt(row: Int, column: Int) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/getrowheader(row:)","title":"func getRowHeader(row: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/getselectedcolumns(selected:)","title":"func getSelectedColumns(selected: UnsafeMutablePointer<UnsafeMutablePointer<gint>?>!) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/getselectedrows(selected:)","title":"func getSelectedRows(selected: UnsafeMutablePointer<UnsafeMutablePointer<gint>?>!) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/getsummary()","title":"func getSummary() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/iscolumnselected(column:)","title":"func isColumnSelected(column: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/isrowselected(row:)","title":"func isRowSelected(row: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/isselected(row:column:)","title":"func isSelected(row: Int, column: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/oncolumndeleted(flags:handler:)","title":"func onColumnDeleted(flags: ConnectFlags, handler: (TableRef, Int, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/oncolumninserted(flags:handler:)","title":"func onColumnInserted(flags: ConnectFlags, handler: (TableRef, Int, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/oncolumnreordered(flags:handler:)","title":"func onColumnReordered(flags: ConnectFlags, handler: (TableRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/onmodelchanged(flags:handler:)","title":"func onModelChanged(flags: ConnectFlags, handler: (TableRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/onrowdeleted(flags:handler:)","title":"func onRowDeleted(flags: ConnectFlags, handler: (TableRef, Int, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/onrowinserted(flags:handler:)","title":"func onRowInserted(flags: ConnectFlags, handler: (TableRef, Int, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/onrowreordered(flags:handler:)","title":"func onRowReordered(flags: ConnectFlags, handler: (TableRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/refat(row:column:)","title":"func refAt(row: Int, column: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/removecolumnselection(column:)","title":"func removeColumnSelection(column: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/removerowselection(row:)","title":"func removeRowSelection(row: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/set(caption:)","title":"func set<ObjectT>(caption: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/setcolumndescription(column:description:)","title":"func setColumnDescription(column: Int, description: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/setcolumnheader(column:header:)","title":"func setColumnHeader<ObjectT>(column: Int, header: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/setrowdescription(row:description:)","title":"func setRowDescription(row: Int, description: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/setrowheader(row:header:)","title":"func setRowHeader<ObjectT>(row: Int, header: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/tableprotocol\/setsummary(accessible:)","title":"func setSummary<ObjectT>(accessible: ObjectT)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/tableprotocol\/columndeletedsignal","title":"static var columnDeletedSignal: TableSignalName","type":"property"},{"path":"\/documentation\/atk\/tableprotocol\/columninsertedsignal","title":"static var columnInsertedSignal: TableSignalName","type":"property"},{"path":"\/documentation\/atk\/tableprotocol\/columnreorderedsignal","title":"static var columnReorderedSignal: TableSignalName","type":"property"},{"path":"\/documentation\/atk\/tableprotocol\/modelchangedsignal","title":"static var modelChangedSignal: TableSignalName","type":"property"},{"path":"\/documentation\/atk\/tableprotocol\/rowdeletedsignal","title":"static var rowDeletedSignal: TableSignalName","type":"property"},{"path":"\/documentation\/atk\/tableprotocol\/rowinsertedsignal","title":"static var rowInsertedSignal: TableSignalName","type":"property"},{"path":"\/documentation\/atk\/tableprotocol\/rowreorderedsignal","title":"static var rowReorderedSignal: TableSignalName","type":"property"}],"path":"\/documentation\/atk\/tableprotocol","title":"TableProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/textifaceprotocol\/parent","title":"var parent: GTypeInterface","type":"property"}],"path":"\/documentation\/atk\/textifaceprotocol","title":"TextIfaceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/textprotocol\/caretoffset","title":"var caretOffset: Int","type":"property"},{"path":"\/documentation\/atk\/textprotocol\/charactercount","title":"var characterCount: Int","type":"property"},{"path":"\/documentation\/atk\/textprotocol\/defaultattributes","title":"var defaultAttributes: UnsafeMutablePointer<AtkAttributeSet>!","type":"property"},{"path":"\/documentation\/atk\/textprotocol\/nselections","title":"var nSelections: Int","type":"property"},{"children":[{"children":[{"path":"\/documentation\/atk\/textprotocol\/text_ptr-6p4km","title":"var text_ptr: UnsafeMutablePointer<AtkText>!","type":"property"}],"title":"TextProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/textprotocol\/text_ptr-wlzp","title":"var text_ptr: UnsafeMutablePointer<AtkText>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/textprotocol\/addselection(startoffset:endoffset:)","title":"func addSelection(startOffset: Int, endOffset: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/textprotocol\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: TextSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/textprotocol\/connect(signal:flags:handler:)","title":"func connect(signal: TextSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/textprotocol\/getboundedranges(rect:coordtype:xcliptype:ycliptype:)","title":"func getBoundedRanges<TextRectangleT>(rect: TextRectangleT, coordType: AtkCoordType, xClipType: AtkTextClipType, yClipType: AtkTextClipType) -> UnsafeMutablePointer<UnsafeMutablePointer<AtkTextRange>?>!","type":"method"},{"path":"\/documentation\/atk\/textprotocol\/getcaretoffset()","title":"func getCaretOffset() -> Int","type":"method"},{"path":"\/documentation\/atk\/textprotocol\/getcharacterat(offset:)","title":"func getCharacterAt(offset: Int) -> gunichar","type":"method"},{"path":"\/documentation\/atk\/textprotocol\/getcharactercount()","title":"func getCharacterCount() -> Int","type":"method"},{"path":"\/documentation\/atk\/textprotocol\/getcharacterextents(offset:x:y:width:height:coords:)","title":"func getCharacterExtents(offset: Int, x: UnsafeMutablePointer<gint>!, y: UnsafeMutablePointer<gint>!, width: UnsafeMutablePointer<gint>!, height: UnsafeMutablePointer<gint>!, coords: AtkCoordType)","type":"method"},{"path":"\/documentation\/atk\/textprotocol\/getdefaultattributes()","title":"func getDefaultAttributes() -> UnsafeMutablePointer<AtkAttributeSet>!","type":"method"},{"path":"\/documentation\/atk\/textprotocol\/getnselections()","title":"func getNSelections() -> Int","type":"method"},{"path":"\/documentation\/atk\/textprotocol\/getoffsetatpoint(x:y:coords:)","title":"func getOffsetAtPoint(x: Int, y: Int, coords: AtkCoordType) -> Int","type":"method"},{"path":"\/documentation\/atk\/textprotocol\/getrangeextents(startoffset:endoffset:coordtype:rect:)","title":"func getRangeExtents<TextRectangleT>(startOffset: Int, endOffset: Int, coordType: AtkCoordType, rect: TextRectangleT)","type":"method"},{"path":"\/documentation\/atk\/textprotocol\/getrunattributes(offset:startoffset:endoffset:)","title":"func getRunAttributes(offset: Int, startOffset: UnsafeMutablePointer<gint>!, endOffset: UnsafeMutablePointer<gint>!) -> UnsafeMutablePointer<AtkAttributeSet>!","type":"method"},{"path":"\/documentation\/atk\/textprotocol\/getselection(selectionnum:startoffset:endoffset:)","title":"func getSelection(selectionNum: Int, startOffset: UnsafeMutablePointer<gint>!, endOffset: UnsafeMutablePointer<gint>!) -> String!","type":"method"},{"path":"\/documentation\/atk\/textprotocol\/getstringat(offset:granularity:startoffset:endoffset:)","title":"func getStringAt(offset: Int, granularity: AtkTextGranularity, startOffset: UnsafeMutablePointer<gint>!, endOffset: UnsafeMutablePointer<gint>!) -> String!","type":"method"},{"path":"\/documentation\/atk\/textprotocol\/gettext(startoffset:endoffset:)","title":"func getText(startOffset: Int, endOffset: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/textprotocol\/gettextafter(offset:boundarytype:startoffset:endoffset:)","title":"func getTextAfter(offset: Int, boundaryType: AtkTextBoundary, startOffset: UnsafeMutablePointer<gint>!, endOffset: UnsafeMutablePointer<gint>!) -> String!","type":"method"},{"path":"\/documentation\/atk\/textprotocol\/gettextat(offset:boundarytype:startoffset:endoffset:)","title":"func getTextAt(offset: Int, boundaryType: AtkTextBoundary, startOffset: UnsafeMutablePointer<gint>!, endOffset: UnsafeMutablePointer<gint>!) -> String!","type":"method"},{"path":"\/documentation\/atk\/textprotocol\/gettextbefore(offset:boundarytype:startoffset:endoffset:)","title":"func getTextBefore(offset: Int, boundaryType: AtkTextBoundary, startOffset: UnsafeMutablePointer<gint>!, endOffset: UnsafeMutablePointer<gint>!) -> String!","type":"method"},{"path":"\/documentation\/atk\/textprotocol\/ontextattributeschanged(flags:handler:)","title":"func onTextAttributesChanged(flags: ConnectFlags, handler: (TextRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/textprotocol\/ontextcaretmoved(flags:handler:)","title":"func onTextCaretMoved(flags: ConnectFlags, handler: (TextRef, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/textprotocol\/ontextchanged(flags:handler:)","title":"func onTextChanged(flags: ConnectFlags, handler: (TextRef, Int, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/textprotocol\/ontextinsert(flags:handler:)","title":"func onTextInsert(flags: ConnectFlags, handler: (TextRef, Int, Int, String) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/textprotocol\/ontextremove(flags:handler:)","title":"func onTextRemove(flags: ConnectFlags, handler: (TextRef, Int, Int, String) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/textprotocol\/ontextselectionchanged(flags:handler:)","title":"func onTextSelectionChanged(flags: ConnectFlags, handler: (TextRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/textprotocol\/removeselection(selectionnum:)","title":"func removeSelection(selectionNum: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/textprotocol\/scrollsubstringto(startoffset:endoffset:type:)","title":"func scrollSubstringTo(startOffset: Int, endOffset: Int, type: AtkScrollType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/textprotocol\/scrollsubstringtopoint(startoffset:endoffset:coords:x:y:)","title":"func scrollSubstringToPoint(startOffset: Int, endOffset: Int, coords: AtkCoordType, x: Int, y: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/textprotocol\/setcaret(offset:)","title":"func setCaret(offset: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/textprotocol\/setselection(selectionnum:startoffset:endoffset:)","title":"func setSelection(selectionNum: Int, startOffset: Int, endOffset: Int) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/textprotocol\/textattributeschangedsignal","title":"static var textAttributesChangedSignal: TextSignalName","type":"property"},{"path":"\/documentation\/atk\/textprotocol\/textcaretmovedsignal","title":"static var textCaretMovedSignal: TextSignalName","type":"property"},{"path":"\/documentation\/atk\/textprotocol\/textchangedsignal","title":"static var textChangedSignal: TextSignalName","type":"property"},{"path":"\/documentation\/atk\/textprotocol\/textinsertsignal","title":"static var textInsertSignal: TextSignalName","type":"property"},{"path":"\/documentation\/atk\/textprotocol\/textremovesignal","title":"static var textRemoveSignal: TextSignalName","type":"property"},{"path":"\/documentation\/atk\/textprotocol\/textselectionchangedsignal","title":"static var textSelectionChangedSignal: TextSignalName","type":"property"}],"path":"\/documentation\/atk\/textprotocol","title":"TextProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/textrangeprotocol\/bounds","title":"var bounds: AtkTextRectangle","type":"property"},{"path":"\/documentation\/atk\/textrangeprotocol\/content","title":"var content: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/atk\/textrangeprotocol\/endoffset","title":"var endOffset: gint","type":"property"},{"path":"\/documentation\/atk\/textrangeprotocol\/startoffset","title":"var startOffset: gint","type":"property"},{"children":[{"children":[{"path":"\/documentation\/atk\/textrangeprotocol\/text_range_ptr-8psm","title":"var text_range_ptr: UnsafeMutablePointer<AtkTextRange>!","type":"property"}],"title":"TextRangeProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/textrangeprotocol\/text_range_ptr-5yhwg","title":"var text_range_ptr: UnsafeMutablePointer<AtkTextRange>!","type":"property"}],"path":"\/documentation\/atk\/textrangeprotocol","title":"TextRangeProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/textrectangleprotocol\/height","title":"var height: gint","type":"property"},{"path":"\/documentation\/atk\/textrectangleprotocol\/width","title":"var width: gint","type":"property"},{"path":"\/documentation\/atk\/textrectangleprotocol\/x","title":"var x: gint","type":"property"},{"path":"\/documentation\/atk\/textrectangleprotocol\/y","title":"var y: gint","type":"property"}],"path":"\/documentation\/atk\/textrectangleprotocol","title":"TextRectangleProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/utilclassprotocol\/parent","title":"var parent: GObjectClass","type":"property"}],"path":"\/documentation\/atk\/utilclassprotocol","title":"UtilClassProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/utilprotocol\/parent","title":"var parent: GObject","type":"property"},{"children":[{"children":[{"path":"\/documentation\/atk\/utilprotocol\/util_ptr-53d12","title":"var util_ptr: UnsafeMutablePointer<AtkUtil>!","type":"property"}],"title":"UtilProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/utilprotocol\/util_ptr-2e7ie","title":"var util_ptr: UnsafeMutablePointer<AtkUtil>!","type":"property"}],"path":"\/documentation\/atk\/utilprotocol","title":"UtilProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/valueifaceprotocol\/parent","title":"var parent: GTypeInterface","type":"property"}],"path":"\/documentation\/atk\/valueifaceprotocol","title":"ValueIfaceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/valueprotocol\/increment","title":"var increment: Double","type":"property"},{"path":"\/documentation\/atk\/valueprotocol\/range","title":"var range: RangeRef!","type":"property"},{"path":"\/documentation\/atk\/valueprotocol\/subranges","title":"var subRanges: RefSListRef<RangeRef>!","type":"property"},{"children":[{"children":[{"path":"\/documentation\/atk\/valueprotocol\/value_ptr-67r45","title":"var value_ptr: UnsafeMutablePointer<AtkValue>!","type":"property"}],"title":"ValueProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/valueprotocol\/value_ptr-8e474","title":"var value_ptr: UnsafeMutablePointer<AtkValue>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/valueprotocol\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ValueSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/valueprotocol\/connect(signal:flags:handler:)","title":"func connect(signal: ValueSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/valueprotocol\/getcurrent(value:)","title":"func getCurrent<GObjectValueT>(value: GObjectValueT)","type":"method"},{"path":"\/documentation\/atk\/valueprotocol\/getincrement()","title":"func getIncrement() -> Double","type":"method"},{"path":"\/documentation\/atk\/valueprotocol\/getmaximum(value:)","title":"func getMaximum<GObjectValueT>(value: GObjectValueT)","type":"method"},{"path":"\/documentation\/atk\/valueprotocol\/getminimum(value:)","title":"func getMinimum<GObjectValueT>(value: GObjectValueT)","type":"method"},{"path":"\/documentation\/atk\/valueprotocol\/getminimumincrement(value:)","title":"func getMinimumIncrement<GObjectValueT>(value: GObjectValueT)","type":"method"},{"path":"\/documentation\/atk\/valueprotocol\/getrange()","title":"func getRange() -> RangeRef!","type":"method"},{"path":"\/documentation\/atk\/valueprotocol\/getsubranges()","title":"func getSubRanges() -> RefSListRef<RangeRef>!","type":"method"},{"path":"\/documentation\/atk\/valueprotocol\/getvalueandtext(value:text:)","title":"func getValueAndText(value: UnsafeMutablePointer<gdouble>!, text: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!)","type":"method"},{"path":"\/documentation\/atk\/valueprotocol\/onvaluechanged(flags:handler:)","title":"func onValueChanged(flags: ConnectFlags, handler: (ValueRef, Double, String) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/valueprotocol\/setcurrent(value:)","title":"func setCurrent<GObjectValueT>(value: GObjectValueT) -> Bool","type":"method"},{"path":"\/documentation\/atk\/valueprotocol\/setvalue(newvalue:)","title":"func setValue(newValue: Double)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/valueprotocol\/valuechangedsignal","title":"static var valueChangedSignal: ValueSignalName","type":"property"}],"path":"\/documentation\/atk\/valueprotocol","title":"ValueProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/windowifaceprotocol\/parent","title":"var parent: GTypeInterface","type":"property"}],"path":"\/documentation\/atk\/windowifaceprotocol","title":"WindowIfaceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/atk\/windowprotocol\/window_ptr-8p1n2","title":"var window_ptr: UnsafeMutablePointer<AtkWindow>!","type":"property"}],"title":"WindowProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/atk\/windowprotocol\/window_ptr-6tu2s","title":"var window_ptr: UnsafeMutablePointer<AtkWindow>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/windowprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: WindowPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/windowprotocol\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: WindowSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowprotocol\/connect(signal:flags:handler:)","title":"func connect(signal: WindowSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowprotocol\/get(property:)","title":"func get(property: WindowPropertyName) -> Value","type":"method"},{"path":"\/documentation\/atk\/windowprotocol\/onactivate(flags:handler:)","title":"func onActivate(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowprotocol\/oncreate(flags:handler:)","title":"func onCreate(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowprotocol\/ondeactivate(flags:handler:)","title":"func onDeactivate(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowprotocol\/ondestroy(flags:handler:)","title":"func onDestroy(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowprotocol\/onmaximize(flags:handler:)","title":"func onMaximize(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowprotocol\/onminimize(flags:handler:)","title":"func onMinimize(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowprotocol\/onmove(flags:handler:)","title":"func onMove(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowprotocol\/onresize(flags:handler:)","title":"func onResize(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowprotocol\/onrestore(flags:handler:)","title":"func onRestore(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowprotocol\/set(property:value:)","title":"func set(property: WindowPropertyName, value: Value)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/windowprotocol\/activatesignal","title":"static var activateSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/windowprotocol\/createsignal","title":"static var createSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/windowprotocol\/deactivatesignal","title":"static var deactivateSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/windowprotocol\/destroysignal","title":"static var destroySignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/windowprotocol\/maximizesignal","title":"static var maximizeSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/windowprotocol\/minimizesignal","title":"static var minimizeSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/windowprotocol\/movesignal","title":"static var moveSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/windowprotocol\/resizesignal","title":"static var resizeSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/windowprotocol\/restoresignal","title":"static var restoreSignal: WindowSignalName","type":"property"}],"path":"\/documentation\/atk\/windowprotocol","title":"WindowProtocol","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/actionifaceref\/init(_:)-1fs93","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/actionifaceref\/init(_:)-3g10a","title":"init(UnsafePointer<AtkActionIface>)","type":"init"},{"path":"\/documentation\/atk\/actionifaceref\/init(_:)-3lq5g","title":"init(UnsafeMutablePointer<AtkActionIface>)","type":"init"},{"path":"\/documentation\/atk\/actionifaceref\/init(_:)-78iuh","title":"init!(UnsafeMutablePointer<AtkActionIface>?)","type":"init"},{"path":"\/documentation\/atk\/actionifaceref\/init(_:)-9g6cq","title":"init!(UnsafePointer<AtkActionIface>?)","type":"init"},{"path":"\/documentation\/atk\/actionifaceref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/actionifaceref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/actionifaceref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/actionifaceref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/actionifaceref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/actionifaceref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/actionifaceref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/actionifaceref\/metatype","title":"static var metatype: AtkActionIface?","type":"property"},{"path":"\/documentation\/atk\/actionifaceref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/atk\/actionifaceref\/wrapper","title":"static var wrapper: ActionIfaceRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/actionifaceref\/newaction(properties:nproperties:names:values:)","title":"static func newAction(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> Action!","type":"method"},{"path":"\/documentation\/atk\/actionifaceref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> Action!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/actionifaceref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/actionifaceref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/atk\/actionifaceref","title":"ActionIfaceRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/actionref\/init(_:)-19r49","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/actionref\/init(_:)-41yux","title":"init!(UnsafeMutablePointer<AtkAction>?)","type":"init"},{"path":"\/documentation\/atk\/actionref\/init(_:)-5zwnq","title":"init!(UnsafePointer<AtkAction>?)","type":"init"},{"path":"\/documentation\/atk\/actionref\/init(_:)-60v6j","title":"init(UnsafeMutablePointer<AtkAction>)","type":"init"},{"path":"\/documentation\/atk\/actionref\/init(_:)-7v9bk","title":"init(UnsafePointer<AtkAction>)","type":"init"},{"path":"\/documentation\/atk\/actionref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/actionref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/actionref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/actionref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/actionref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/actionref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/actionref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/actionref\/action_ptr","title":"var action_ptr: UnsafeMutablePointer<AtkAction>!","type":"property"},{"path":"\/documentation\/atk\/actionref\/nactions","title":"var nActions: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/actionref\/doaction(i:)","title":"func doAction(i: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/actionref\/getdescription(i:)","title":"func getDescription(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/actionref\/getkeybinding(i:)","title":"func getKeybinding(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/actionref\/getlocalizedname(i:)","title":"func getLocalizedName(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/actionref\/getnactions()","title":"func getNActions() -> Int","type":"method"},{"path":"\/documentation\/atk\/actionref\/getname(i:)","title":"func getName(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/actionref\/setdescription(i:desc:)","title":"func setDescription(i: Int, desc: UnsafePointer<gchar>!) -> Bool","type":"method"}],"path":"\/documentation\/atk\/actionref\/actionprotocol-implementations","title":"ActionProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/actionref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/actionref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/atk\/actionref","title":"ActionRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/attributeref\/init(_:)-1n76r","title":"init!(UnsafeMutablePointer<AtkAttribute>?)","type":"init"},{"path":"\/documentation\/atk\/attributeref\/init(_:)-1rorx","title":"init!(UnsafePointer<AtkAttribute>?)","type":"init"},{"path":"\/documentation\/atk\/attributeref\/init(_:)-3d059","title":"init(UnsafePointer<AtkAttribute>)","type":"init"},{"path":"\/documentation\/atk\/attributeref\/init(_:)-3etyx","title":"init(UnsafeMutablePointer<AtkAttribute>)","type":"init"},{"path":"\/documentation\/atk\/attributeref\/init(_:)-7kh4l","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/attributeref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/attributeref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/attributeref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/attributeref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/attributeref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/attributeref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/attributeref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/attributeref\/name","title":"var name: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/atk\/attributeref\/value","title":"var value: UnsafeMutablePointer<gchar>!","type":"property"}],"path":"\/documentation\/atk\/attributeref\/attributeprotocol-implementations","title":"AttributeProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/attributeref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/attributeref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/atk\/attributeref","title":"AttributeRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/componentifaceref\/init(_:)-44kd7","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/componentifaceref\/init(_:)-4sy56","title":"init(UnsafePointer<AtkComponentIface>)","type":"init"},{"path":"\/documentation\/atk\/componentifaceref\/init(_:)-7j3fd","title":"init(UnsafeMutablePointer<AtkComponentIface>)","type":"init"},{"path":"\/documentation\/atk\/componentifaceref\/init(_:)-94dtv","title":"init!(UnsafeMutablePointer<AtkComponentIface>?)","type":"init"},{"path":"\/documentation\/atk\/componentifaceref\/init(_:)-9ep6k","title":"init!(UnsafePointer<AtkComponentIface>?)","type":"init"},{"path":"\/documentation\/atk\/componentifaceref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/componentifaceref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/componentifaceref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/componentifaceref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/componentifaceref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/componentifaceref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/componentifaceref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/componentifaceref\/metatype","title":"static var metatype: AtkComponentIface?","type":"property"},{"path":"\/documentation\/atk\/componentifaceref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/atk\/componentifaceref\/wrapper","title":"static var wrapper: ComponentIfaceRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/componentifaceref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> Component!","type":"method"},{"path":"\/documentation\/atk\/componentifaceref\/newcomponent(properties:nproperties:names:values:)","title":"static func newComponent(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> Component!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/componentifaceref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/componentifaceref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/atk\/componentifaceref","title":"ComponentIfaceRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/componentref\/init(_:)-1j2tt","title":"init!(UnsafePointer<AtkComponent>?)","type":"init"},{"path":"\/documentation\/atk\/componentref\/init(_:)-2mhqa","title":"init(UnsafePointer<AtkComponent>)","type":"init"},{"path":"\/documentation\/atk\/componentref\/init(_:)-4nq72","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/componentref\/init(_:)-691ds","title":"init!(UnsafeMutablePointer<AtkComponent>?)","type":"init"},{"path":"\/documentation\/atk\/componentref\/init(_:)-755py","title":"init(UnsafeMutablePointer<AtkComponent>)","type":"init"},{"path":"\/documentation\/atk\/componentref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/componentref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/componentref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/componentref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/componentref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/componentref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/componentref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/componentref\/alpha","title":"var alpha: Double","type":"property"},{"path":"\/documentation\/atk\/componentref\/component_ptr","title":"var component_ptr: UnsafeMutablePointer<AtkComponent>!","type":"property"},{"path":"\/documentation\/atk\/componentref\/layer","title":"var layer: AtkLayer","type":"property"},{"path":"\/documentation\/atk\/componentref\/mdizorder","title":"var mdiZorder: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/componentref\/addfocus(handler:)","title":"func addFocus(handler: AtkFocusHandler?) -> Int","type":"method"},{"path":"\/documentation\/atk\/componentref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ComponentSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/componentref\/connect(signal:flags:handler:)","title":"func connect(signal: ComponentSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/componentref\/contains(x:y:coordtype:)","title":"func contains(x: Int, y: Int, coordType: AtkCoordType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/componentref\/getalpha()","title":"func getAlpha() -> Double","type":"method"},{"path":"\/documentation\/atk\/componentref\/getextents(x:y:width:height:coordtype:)","title":"func getExtents(x: UnsafeMutablePointer<gint>!, y: UnsafeMutablePointer<gint>!, width: UnsafeMutablePointer<gint>!, height: UnsafeMutablePointer<gint>!, coordType: AtkCoordType)","type":"method"},{"path":"\/documentation\/atk\/componentref\/getlayer()","title":"func getLayer() -> AtkLayer","type":"method"},{"path":"\/documentation\/atk\/componentref\/getmdizorder()","title":"func getMdiZorder() -> Int","type":"method"},{"path":"\/documentation\/atk\/componentref\/getposition(x:y:coordtype:)","title":"func getPosition(x: UnsafeMutablePointer<gint>!, y: UnsafeMutablePointer<gint>!, coordType: AtkCoordType)","type":"method"},{"path":"\/documentation\/atk\/componentref\/getsize(width:height:)","title":"func getSize(width: UnsafeMutablePointer<gint>!, height: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/atk\/componentref\/grabfocus()","title":"func grabFocus() -> Bool","type":"method"},{"path":"\/documentation\/atk\/componentref\/onboundschanged(flags:handler:)","title":"func onBoundsChanged(flags: ConnectFlags, handler: (ComponentRef, RectangleRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/componentref\/refaccessibleatpoint(x:y:coordtype:)","title":"func refAccessibleAtPoint(x: Int, y: Int, coordType: AtkCoordType) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/componentref\/removefocushandler(handlerid:)","title":"func removeFocusHandler(handlerId: Int)","type":"method"},{"path":"\/documentation\/atk\/componentref\/scrollto(type:)","title":"func scrollTo(type: AtkScrollType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/componentref\/scrolltopoint(coords:x:y:)","title":"func scrollToPoint(coords: AtkCoordType, x: Int, y: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/componentref\/setextents(x:y:width:height:coordtype:)","title":"func setExtents(x: Int, y: Int, width: Int, height: Int, coordType: AtkCoordType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/componentref\/setposition(x:y:coordtype:)","title":"func setPosition(x: Int, y: Int, coordType: AtkCoordType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/componentref\/setsize(width:height:)","title":"func setSize(width: Int, height: Int) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/componentref\/boundschangedsignal","title":"static var boundsChangedSignal: ComponentSignalName","type":"property"}],"path":"\/documentation\/atk\/componentref\/componentprotocol-implementations","title":"ComponentProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/componentref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/componentref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/atk\/componentref","title":"ComponentRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/documentifaceref\/init(_:)-1efkf","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/documentifaceref\/init(_:)-2suno","title":"init!(UnsafePointer<AtkDocumentIface>?)","type":"init"},{"path":"\/documentation\/atk\/documentifaceref\/init(_:)-46hgf","title":"init(UnsafePointer<AtkDocumentIface>)","type":"init"},{"path":"\/documentation\/atk\/documentifaceref\/init(_:)-4unkq","title":"init(UnsafeMutablePointer<AtkDocumentIface>)","type":"init"},{"path":"\/documentation\/atk\/documentifaceref\/init(_:)-88kxp","title":"init!(UnsafeMutablePointer<AtkDocumentIface>?)","type":"init"},{"path":"\/documentation\/atk\/documentifaceref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/documentifaceref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/documentifaceref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/documentifaceref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/documentifaceref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/documentifaceref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/documentifaceref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/documentifaceref\/metatype","title":"static var metatype: AtkDocumentIface?","type":"property"},{"path":"\/documentation\/atk\/documentifaceref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/atk\/documentifaceref\/wrapper","title":"static var wrapper: DocumentIfaceRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/documentifaceref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> Document!","type":"method"},{"path":"\/documentation\/atk\/documentifaceref\/newdocument(properties:nproperties:names:values:)","title":"static func newDocument(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> Document!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/documentifaceref\/parent","title":"var parent: GTypeInterface","type":"property"}],"path":"\/documentation\/atk\/documentifaceref\/documentifaceprotocol-implementations","title":"DocumentIfaceProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/documentifaceref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/documentifaceref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/atk\/documentifaceref","title":"DocumentIfaceRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/documentref\/init(_:)-7tal","title":"init(UnsafePointer<AtkDocument>)","type":"init"},{"path":"\/documentation\/atk\/documentref\/init(_:)-7uhkd","title":"init(UnsafeMutablePointer<AtkDocument>)","type":"init"},{"path":"\/documentation\/atk\/documentref\/init(_:)-7ukx5","title":"init!(UnsafeMutablePointer<AtkDocument>?)","type":"init"},{"path":"\/documentation\/atk\/documentref\/init(_:)-7xcpy","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/documentref\/init(_:)-pjmv","title":"init!(UnsafePointer<AtkDocument>?)","type":"init"},{"path":"\/documentation\/atk\/documentref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/documentref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/documentref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/documentref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/documentref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/documentref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/documentref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/documentref\/attributes","title":"var attributes: UnsafeMutablePointer<AtkAttributeSet>!","type":"property"},{"path":"\/documentation\/atk\/documentref\/currentpagenumber","title":"var currentPageNumber: Int","type":"property"},{"path":"\/documentation\/atk\/documentref\/document","title":"var document: gpointer?","type":"property"},{"path":"\/documentation\/atk\/documentref\/documenttype","title":"var documentType: String!","type":"property"},{"path":"\/documentation\/atk\/documentref\/document_ptr","title":"var document_ptr: UnsafeMutablePointer<AtkDocument>!","type":"property"},{"path":"\/documentation\/atk\/documentref\/locale","title":"var locale: String!","type":"property"},{"path":"\/documentation\/atk\/documentref\/pagecount","title":"var pageCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/documentref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: DocumentSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/documentref\/connect(signal:flags:handler:)","title":"func connect(signal: DocumentSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/documentref\/getattributevalue(attributename:)","title":"func getAttributeValue(attributeName: UnsafePointer<gchar>!) -> String!","type":"method"},{"path":"\/documentation\/atk\/documentref\/getattributes()","title":"func getAttributes() -> UnsafeMutablePointer<AtkAttributeSet>!","type":"method"},{"path":"\/documentation\/atk\/documentref\/getcurrentpagenumber()","title":"func getCurrentPageNumber() -> Int","type":"method"},{"path":"\/documentation\/atk\/documentref\/getdocument()","title":"func getDocument() -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/documentref\/getdocumenttype()","title":"func getDocumentType() -> String!","type":"method"},{"path":"\/documentation\/atk\/documentref\/getlocale()","title":"func getLocale() -> String!","type":"method"},{"path":"\/documentation\/atk\/documentref\/getpagecount()","title":"func getPageCount() -> Int","type":"method"},{"path":"\/documentation\/atk\/documentref\/onloadcomplete(flags:handler:)","title":"func onLoadComplete(flags: ConnectFlags, handler: (DocumentRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/documentref\/onloadstopped(flags:handler:)","title":"func onLoadStopped(flags: ConnectFlags, handler: (DocumentRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/documentref\/onpagechanged(flags:handler:)","title":"func onPageChanged(flags: ConnectFlags, handler: (DocumentRef, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/documentref\/onreload(flags:handler:)","title":"func onReload(flags: ConnectFlags, handler: (DocumentRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/documentref\/setattributevalue(attributename:attributevalue:)","title":"func setAttributeValue(attributeName: UnsafePointer<gchar>!, attributeValue: UnsafePointer<gchar>!) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/documentref\/loadcompletesignal","title":"static var loadCompleteSignal: DocumentSignalName","type":"property"},{"path":"\/documentation\/atk\/documentref\/loadstoppedsignal","title":"static var loadStoppedSignal: DocumentSignalName","type":"property"},{"path":"\/documentation\/atk\/documentref\/pagechangedsignal","title":"static var pageChangedSignal: DocumentSignalName","type":"property"},{"path":"\/documentation\/atk\/documentref\/reloadsignal","title":"static var reloadSignal: DocumentSignalName","type":"property"}],"path":"\/documentation\/atk\/documentref\/documentprotocol-implementations","title":"DocumentProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/documentref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/documentref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/atk\/documentref","title":"DocumentRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/editabletextifaceref\/init(_:)-29pu7","title":"init!(UnsafePointer<AtkEditableTextIface>?)","type":"init"},{"path":"\/documentation\/atk\/editabletextifaceref\/init(_:)-2bvfm","title":"init!(UnsafeMutablePointer<AtkEditableTextIface>?)","type":"init"},{"path":"\/documentation\/atk\/editabletextifaceref\/init(_:)-5plqy","title":"init(UnsafeMutablePointer<AtkEditableTextIface>)","type":"init"},{"path":"\/documentation\/atk\/editabletextifaceref\/init(_:)-7bs16","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/editabletextifaceref\/init(_:)-7huk","title":"init(UnsafePointer<AtkEditableTextIface>)","type":"init"},{"path":"\/documentation\/atk\/editabletextifaceref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/editabletextifaceref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/editabletextifaceref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/editabletextifaceref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/editabletextifaceref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/editabletextifaceref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/editabletextifaceref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/editabletextifaceref\/metatype","title":"static var metatype: AtkEditableTextIface?","type":"property"},{"path":"\/documentation\/atk\/editabletextifaceref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/atk\/editabletextifaceref\/wrapper","title":"static var wrapper: EditableTextIfaceRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/editabletextifaceref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> EditableText!","type":"method"},{"path":"\/documentation\/atk\/editabletextifaceref\/neweditabletext(properties:nproperties:names:values:)","title":"static func newEditableText(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> EditableText!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/editabletextifaceref\/parentinterface","title":"var parentInterface: GTypeInterface","type":"property"}],"path":"\/documentation\/atk\/editabletextifaceref\/editabletextifaceprotocol-implementations","title":"EditableTextIfaceProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/editabletextifaceref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/editabletextifaceref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/atk\/editabletextifaceref","title":"EditableTextIfaceRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/editabletextref\/init(_:)-1q2j1","title":"init!(UnsafeMutablePointer<AtkEditableText>?)","type":"init"},{"path":"\/documentation\/atk\/editabletextref\/init(_:)-3zv3e","title":"init(UnsafeMutablePointer<AtkEditableText>)","type":"init"},{"path":"\/documentation\/atk\/editabletextref\/init(_:)-45k6s","title":"init(UnsafePointer<AtkEditableText>)","type":"init"},{"path":"\/documentation\/atk\/editabletextref\/init(_:)-5vie4","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/editabletextref\/init(_:)-6zlr3","title":"init!(UnsafePointer<AtkEditableText>?)","type":"init"},{"path":"\/documentation\/atk\/editabletextref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/editabletextref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/editabletextref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/editabletextref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/editabletextref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/editabletextref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/editabletextref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/editabletextref\/editable_text_ptr","title":"var editable_text_ptr: UnsafeMutablePointer<AtkEditableText>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/editabletextref\/copytext(startpos:endpos:)","title":"func copyText(startPos: Int, endPos: Int)","type":"method"},{"path":"\/documentation\/atk\/editabletextref\/cuttext(startpos:endpos:)","title":"func cutText(startPos: Int, endPos: Int)","type":"method"},{"path":"\/documentation\/atk\/editabletextref\/deletetext(startpos:endpos:)","title":"func deleteText(startPos: Int, endPos: Int)","type":"method"},{"path":"\/documentation\/atk\/editabletextref\/inserttext(string:length:position:)","title":"func insertText(string: UnsafePointer<gchar>!, length: Int, position: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/atk\/editabletextref\/pastetext(position:)","title":"func pasteText(position: Int)","type":"method"},{"path":"\/documentation\/atk\/editabletextref\/setrunattributes(attribset:startoffset:endoffset:)","title":"func setRunAttributes(attribSet: UnsafeMutablePointer<AtkAttributeSet>!, startOffset: Int, endOffset: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/editabletextref\/settextcontents(string:)","title":"func setTextContents(string: UnsafePointer<gchar>!)","type":"method"}],"path":"\/documentation\/atk\/editabletextref\/editabletextprotocol-implementations","title":"EditableTextProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/editabletextref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/editabletextref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/atk\/editabletextref","title":"EditableTextRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessibleclassref\/init(_:)-4g4sz","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessibleclassref\/init(_:)-69vvs","title":"init(UnsafeMutablePointer<AtkGObjectAccessibleClass>)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessibleclassref\/init(_:)-7roai","title":"init!(UnsafePointer<AtkGObjectAccessibleClass>?)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessibleclassref\/init(_:)-8hdvw","title":"init(UnsafePointer<AtkGObjectAccessibleClass>)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessibleclassref\/init(_:)-8vf6q","title":"init!(UnsafeMutablePointer<AtkGObjectAccessibleClass>?)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessibleclassref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessibleclassref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessibleclassref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessibleclassref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessibleclassref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessibleclassref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessibleclassref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessibleclassref\/metatype","title":"static var metatype: AtkGObjectAccessibleClass?","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleclassref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleclassref\/wrapper","title":"static var wrapper: GObjectAccessibleClassRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessibleclassref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> GObjectAccessible!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleclassref\/newgobjectaccessible(properties:nproperties:names:values:)","title":"static func newGObjectAccessible(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> GObjectAccessible!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessibleclassref\/pad1","title":"var pad1: AtkFunction!","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleclassref\/pad2","title":"var pad2: AtkFunction!","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleclassref\/parentclass","title":"var parentClass: AtkObjectClass","type":"property"}],"path":"\/documentation\/atk\/gobjectaccessibleclassref\/gobjectaccessibleclassprotocol-implementations","title":"GObjectAccessibleClassProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessibleclassref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/gobjectaccessibleclassref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/atk\/gobjectaccessibleclassref","title":"GObjectAccessibleClassRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/init(_:)-1826f","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/init(_:)-2ys5r","title":"init(UnsafeMutablePointer<AtkGObjectAccessible>)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/init(_:)-4b2ls","title":"init!(UnsafePointer<AtkGObjectAccessible>?)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/init(_:)-5gy5p","title":"init!(UnsafeMutablePointer<AtkGObjectAccessible>?)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/init(_:)-6cq1b","title":"init(UnsafePointer<AtkGObjectAccessible>)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/for_(object:)","title":"static func for_<GObjectObjectT>(object: GObjectObjectT) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/unowned(_:)","title":"static func unowned<T>(T) -> GObjectAccessibleRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/gobject_accessible_ptr","title":"var gobject_accessible_ptr: UnsafeMutablePointer<AtkGObjectAccessible>!","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/object","title":"var object: ObjectRef!","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/parent","title":"var parent: AtkObject","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/bind(property:to:_:flags:transformfrom:transformto:)-451ol","title":"func bind<Q, T>(property: GObjectAccessiblePropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/get(property:)","title":"func get(property: GObjectAccessiblePropertyName) -> Value","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/getobject()","title":"func getObject() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/set(property:value:)","title":"func set(property: GObjectAccessiblePropertyName, value: Value)","type":"method"}],"path":"\/documentation\/atk\/gobjectaccessibleref\/gobjectaccessibleprotocol-implementations","title":"GObjectAccessibleProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/gobjectaccessibleref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/accessibleid","title":"var accessibleId: String!","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/accessibleparent","title":"var accessibleParent: ObjectRef!","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/attributes","title":"var attributes: UnsafeMutablePointer<AtkAttributeSet>!","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/description","title":"var description: String!","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/indexinparent","title":"var indexInParent: Int","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/layer","title":"var layer: AtkLayer","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/mdizorder","title":"var mdiZorder: Int","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/naccessiblechildren","title":"var nAccessibleChildren: Int","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/name","title":"var name: String!","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/objectlocale","title":"var objectLocale: String!","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<AtkObject>!","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/relationset","title":"var relationSet: RelationSetRef!","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/role","title":"var role: AtkRole","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/add(relationship:target:)","title":"func add<ObjectT>(relationship: AtkRelationType, target: ObjectT) -> Bool","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/bind(_:to:property:flags:convertfrom:convertto:)-67wbq","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/bind(_:to:property:flags:convertfrom:convertto:)-6u0a0","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/bind(property:to:_:flags:transformfrom:transformto:)-2mq1w","title":"func bind<Q, T>(property: ObjectPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/connect(signal:flags:handler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/connectpropertychange(handler:)","title":"func connectPropertyChange(handler: UnsafeMutablePointer<AtkPropertyChangeHandler?>!) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/focustrackernotify()","title":"func focusTrackerNotify()","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/getaccessibleid()","title":"func getAccessibleId() -> String!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/getattributes()","title":"func getAttributes() -> UnsafeMutablePointer<AtkAttributeSet>!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/getdescription()","title":"func getDescription() -> String!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/getindexinparent()","title":"func getIndexInParent() -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/getlayer()","title":"func getLayer() -> AtkLayer","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/getmdizorder()","title":"func getMdiZorder() -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/getnaccessiblechildren()","title":"func getNAccessibleChildren() -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/getname()","title":"func getName() -> String!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/getobjectlocale()","title":"func getObjectLocale() -> String!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/getparent()","title":"func getParent() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/getrole()","title":"func getRole() -> AtkRole","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/initialize(data:)","title":"func initialize(data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/notifystatechange(state:value:)","title":"func notifyStateChange(state: AtkState, value: Bool)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/onactivedescendantchanged(flags:handler:)","title":"func onActiveDescendantChanged(flags: ConnectFlags, handler: (ObjectRef, ObjectRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/onannouncement(flags:handler:)","title":"func onAnnouncement(flags: ConnectFlags, handler: (ObjectRef, String) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/onchildrenchanged(flags:handler:)","title":"func onChildrenChanged(flags: ConnectFlags, handler: (ObjectRef, UInt, ObjectRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/onfocusevent(flags:handler:)","title":"func onFocusEvent(flags: ConnectFlags, handler: (ObjectRef, Bool) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/onnotification(flags:handler:)","title":"func onNotification(flags: ConnectFlags, handler: (ObjectRef, String, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/onnotifyaccessiblecomponentlayer(flags:handler:)","title":"func onNotifyAccessibleComponentLayer(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/onnotifyaccessiblecomponentmdizorder(flags:handler:)","title":"func onNotifyAccessibleComponentMdiZorder(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/onnotifyaccessibledescription(flags:handler:)","title":"func onNotifyAccessibleDescription(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/onnotifyaccessiblehypertextnlinks(flags:handler:)","title":"func onNotifyAccessibleHypertextNlinks(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/onnotifyaccessiblename(flags:handler:)","title":"func onNotifyAccessibleName(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/onnotifyaccessibleparent(flags:handler:)","title":"func onNotifyAccessibleParent(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/onnotifyaccessiblerole(flags:handler:)","title":"func onNotifyAccessibleRole(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/onnotifyaccessibletablecaption(flags:handler:)","title":"func onNotifyAccessibleTableCaption(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/onnotifyaccessibletablecaptionobject(flags:handler:)","title":"func onNotifyAccessibleTableCaptionObject(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/onnotifyaccessibletablecolumndescription(flags:handler:)","title":"func onNotifyAccessibleTableColumnDescription(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/onnotifyaccessibletablecolumnheader(flags:handler:)","title":"func onNotifyAccessibleTableColumnHeader(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/onnotifyaccessibletablerowdescription(flags:handler:)","title":"func onNotifyAccessibleTableRowDescription(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/onnotifyaccessibletablerowheader(flags:handler:)","title":"func onNotifyAccessibleTableRowHeader(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/onnotifyaccessibletablesummary(flags:handler:)","title":"func onNotifyAccessibleTableSummary(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/onnotifyaccessiblevalue(flags:handler:)","title":"func onNotifyAccessibleValue(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/onpropertychange(flags:handler:)","title":"func onPropertyChange(flags: ConnectFlags, handler: (ObjectRef, PropertyValuesRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/onstatechange(flags:handler:)","title":"func onStateChange(flags: ConnectFlags, handler: (ObjectRef, String, Bool) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/onvisibledatachanged(flags:handler:)","title":"func onVisibleDataChanged(flags: ConnectFlags, handler: (ObjectRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/peekparent()","title":"func peekParent() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/refaccessiblechild(i:)","title":"func refAccessibleChild(i: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/refrelationset()","title":"func refRelationSet() -> RelationSetRef!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/refstateset()","title":"func refStateSet() -> StateSetRef!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/remove(relationship:target:)","title":"func remove<ObjectT>(relationship: AtkRelationType, target: ObjectT) -> Bool","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/removepropertychangehandler(handlerid:)","title":"func removePropertyChangeHandler(handlerId: Int)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/set(description:)","title":"func set(description: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/set(name:)","title":"func set(name: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/set(parent:)","title":"func set<ObjectT>(parent: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/set(role:)","title":"func set(role: AtkRole)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/setaccessibleid(name:)","title":"func setAccessibleId(name: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/activedescendantchangedsignal","title":"static var activeDescendantChangedSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/announcementsignal","title":"static var announcementSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/childrenchangedsignal","title":"static var childrenChangedSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/focuseventsignal","title":"static var focusEventSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/notificationsignal","title":"static var notificationSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/notifyaccessiblecomponentlayersignal","title":"static var notifyAccessibleComponentLayerSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/notifyaccessiblecomponentmdizordersignal","title":"static var notifyAccessibleComponentMdiZorderSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/notifyaccessibledescriptionsignal","title":"static var notifyAccessibleDescriptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/notifyaccessiblehypertextnlinkssignal","title":"static var notifyAccessibleHypertextNlinksSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/notifyaccessiblenamesignal","title":"static var notifyAccessibleNameSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/notifyaccessibleparentsignal","title":"static var notifyAccessibleParentSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/notifyaccessiblerolesignal","title":"static var notifyAccessibleRoleSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/notifyaccessibletablecaptionobjectsignal","title":"static var notifyAccessibleTableCaptionObjectSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/notifyaccessibletablecaptionsignal","title":"static var notifyAccessibleTableCaptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/notifyaccessibletablecolumndescriptionsignal","title":"static var notifyAccessibleTableColumnDescriptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/notifyaccessibletablecolumnheadersignal","title":"static var notifyAccessibleTableColumnHeaderSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/notifyaccessibletablerowdescriptionsignal","title":"static var notifyAccessibleTableRowDescriptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/notifyaccessibletablerowheadersignal","title":"static var notifyAccessibleTableRowHeaderSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/notifyaccessibletablesummarysignal","title":"static var notifyAccessibleTableSummarySignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/notifyaccessiblevaluesignal","title":"static var notifyAccessibleValueSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/propertychangesignal","title":"static var propertyChangeSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/statechangesignal","title":"static var stateChangeSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/visibledatachangedsignal","title":"static var visibleDataChangedSignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/atk\/gobjectaccessibleref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/atk\/gobjectaccessibleref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/gobjectaccessibleref","title":"GObjectAccessibleRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkclassref\/init(_:)-1muft","title":"init!(UnsafeMutablePointer<AtkHyperlinkClass>?)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkclassref\/init(_:)-33tkb","title":"init(UnsafePointer<AtkHyperlinkClass>)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkclassref\/init(_:)-52apt","title":"init!(UnsafePointer<AtkHyperlinkClass>?)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkclassref\/init(_:)-6ca16","title":"init(UnsafeMutablePointer<AtkHyperlinkClass>)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkclassref\/init(_:)-buu7","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkclassref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkclassref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkclassref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkclassref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkclassref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkclassref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkclassref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkclassref\/metatype","title":"static var metatype: AtkHyperlinkClass?","type":"property"},{"path":"\/documentation\/atk\/hyperlinkclassref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/atk\/hyperlinkclassref\/wrapper","title":"static var wrapper: HyperlinkClassRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkclassref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> Hyperlink!","type":"method"},{"path":"\/documentation\/atk\/hyperlinkclassref\/newhyperlink(properties:nproperties:names:values:)","title":"static func newHyperlink(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> Hyperlink!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkclassref\/pad1","title":"var pad1: AtkFunction!","type":"property"},{"path":"\/documentation\/atk\/hyperlinkclassref\/parent","title":"var parent: GObjectClass","type":"property"}],"path":"\/documentation\/atk\/hyperlinkclassref\/hyperlinkclassprotocol-implementations","title":"HyperlinkClassProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkclassref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/hyperlinkclassref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/atk\/hyperlinkclassref","title":"HyperlinkClassRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkimplifaceref\/init(_:)-1q6hp","title":"init(UnsafeMutablePointer<AtkHyperlinkImplIface>)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimplifaceref\/init(_:)-3sv7r","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimplifaceref\/init(_:)-4i0jt","title":"init!(UnsafeMutablePointer<AtkHyperlinkImplIface>?)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimplifaceref\/init(_:)-4x5fr","title":"init!(UnsafePointer<AtkHyperlinkImplIface>?)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimplifaceref\/init(_:)-8dp0f","title":"init(UnsafePointer<AtkHyperlinkImplIface>)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimplifaceref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimplifaceref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimplifaceref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimplifaceref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimplifaceref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimplifaceref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkimplifaceref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkimplifaceref\/metatype","title":"static var metatype: AtkHyperlinkImplIface?","type":"property"},{"path":"\/documentation\/atk\/hyperlinkimplifaceref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/atk\/hyperlinkimplifaceref\/wrapper","title":"static var wrapper: HyperlinkImplIfaceRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkimplifaceref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> HyperlinkImpl!","type":"method"},{"path":"\/documentation\/atk\/hyperlinkimplifaceref\/newhyperlinkimpl(properties:nproperties:names:values:)","title":"static func newHyperlinkImpl(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> HyperlinkImpl!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkimplifaceref\/parent","title":"var parent: GTypeInterface","type":"property"}],"path":"\/documentation\/atk\/hyperlinkimplifaceref\/hyperlinkimplifaceprotocol-implementations","title":"HyperlinkImplIfaceProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkimplifaceref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/hyperlinkimplifaceref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/atk\/hyperlinkimplifaceref","title":"HyperlinkImplIfaceRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkimplref\/init(_:)-4r82w","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimplref\/init(_:)-70t7b","title":"init!(UnsafeMutablePointer<AtkHyperlinkImpl>?)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimplref\/init(_:)-7gvnv","title":"init!(UnsafePointer<AtkHyperlinkImpl>?)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimplref\/init(_:)-7r13n","title":"init(UnsafeMutablePointer<AtkHyperlinkImpl>)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimplref\/init(_:)-82sio","title":"init(UnsafePointer<AtkHyperlinkImpl>)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimplref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimplref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimplref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimplref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimplref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkimplref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkimplref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkimplref\/hyperlink","title":"var hyperlink: HyperlinkRef!","type":"property"},{"path":"\/documentation\/atk\/hyperlinkimplref\/hyperlink_impl_ptr","title":"var hyperlink_impl_ptr: UnsafeMutablePointer<AtkHyperlinkImpl>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkimplref\/gethyperlink()","title":"func getHyperlink() -> HyperlinkRef!","type":"method"}],"path":"\/documentation\/atk\/hyperlinkimplref\/hyperlinkimplprotocol-implementations","title":"HyperlinkImplProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkimplref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/hyperlinkimplref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/atk\/hyperlinkimplref","title":"HyperlinkImplRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkref\/init(_:)-1ai2k","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkref\/init(_:)-3o1bb","title":"init(UnsafePointer<AtkHyperlink>)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkref\/init(_:)-6l9yr","title":"init!(UnsafePointer<AtkHyperlink>?)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkref\/init(_:)-7oimt","title":"init!(UnsafeMutablePointer<AtkHyperlink>?)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkref\/init(_:)-8kcby","title":"init(UnsafeMutablePointer<AtkHyperlink>)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkref\/unowned(_:)","title":"static func unowned<T>(T) -> HyperlinkRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkref\/action_ptr","title":"var action_ptr: UnsafeMutablePointer<AtkAction>!","type":"property"},{"path":"\/documentation\/atk\/hyperlinkref\/nactions","title":"var nActions: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkref\/doaction(i:)","title":"func doAction(i: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/getdescription(i:)","title":"func getDescription(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/getkeybinding(i:)","title":"func getKeybinding(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/getlocalizedname(i:)","title":"func getLocalizedName(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/getnactions()","title":"func getNActions() -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/getname(i:)","title":"func getName(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/setdescription(i:desc:)","title":"func setDescription(i: Int, desc: UnsafePointer<gchar>!) -> Bool","type":"method"}],"path":"\/documentation\/atk\/hyperlinkref\/actionprotocol-implementations","title":"ActionProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/hyperlinkref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkref\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/atk\/hyperlinkref\/hyperlink_ptr","title":"var hyperlink_ptr: UnsafeMutablePointer<AtkHyperlink>!","type":"property"},{"path":"\/documentation\/atk\/hyperlinkref\/isinline","title":"var isInline: Bool","type":"property"},{"path":"\/documentation\/atk\/hyperlinkref\/isselectedlink","title":"var isSelectedLink: Bool","type":"property"},{"path":"\/documentation\/atk\/hyperlinkref\/isvalid","title":"var isValid: Bool","type":"property"},{"path":"\/documentation\/atk\/hyperlinkref\/nanchors","title":"var nAnchors: Int","type":"property"},{"path":"\/documentation\/atk\/hyperlinkref\/parent","title":"var parent: GObject","type":"property"},{"path":"\/documentation\/atk\/hyperlinkref\/startindex","title":"var startIndex: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkref\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: HyperlinkPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: HyperlinkSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/connect(signal:flags:handler:)","title":"func connect(signal: HyperlinkSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/get(property:)","title":"func get(property: HyperlinkPropertyName) -> Value","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/getendindex()","title":"func getEndIndex() -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/getnanchors()","title":"func getNAnchors() -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/getobject(i:)","title":"func getObject(i: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/getstartindex()","title":"func getStartIndex() -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/geturi(i:)","title":"func getUri(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/onlinkactivated(flags:handler:)","title":"func onLinkActivated(flags: ConnectFlags, handler: (HyperlinkRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/onnotifyendindex(flags:handler:)","title":"func onNotifyEndIndex(flags: ConnectFlags, handler: (HyperlinkRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/onnotifynumberofanchors(flags:handler:)","title":"func onNotifyNumberOfAnchors(flags: ConnectFlags, handler: (HyperlinkRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/onnotifyselectedlink(flags:handler:)","title":"func onNotifySelectedLink(flags: ConnectFlags, handler: (HyperlinkRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/onnotifystartindex(flags:handler:)","title":"func onNotifyStartIndex(flags: ConnectFlags, handler: (HyperlinkRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/set(property:value:)","title":"func set(property: HyperlinkPropertyName, value: Value)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkref\/linkactivatedsignal","title":"static var linkActivatedSignal: HyperlinkSignalName","type":"property"},{"path":"\/documentation\/atk\/hyperlinkref\/notifyendindexsignal","title":"static var notifyEndIndexSignal: HyperlinkSignalName","type":"property"},{"path":"\/documentation\/atk\/hyperlinkref\/notifynumberofanchorssignal","title":"static var notifyNumberOfAnchorsSignal: HyperlinkSignalName","type":"property"},{"path":"\/documentation\/atk\/hyperlinkref\/notifyselectedlinksignal","title":"static var notifySelectedLinkSignal: HyperlinkSignalName","type":"property"},{"path":"\/documentation\/atk\/hyperlinkref\/notifystartindexsignal","title":"static var notifyStartIndexSignal: HyperlinkSignalName","type":"property"}],"path":"\/documentation\/atk\/hyperlinkref\/hyperlinkprotocol-implementations","title":"HyperlinkProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/atk\/hyperlinkref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/atk\/hyperlinkref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/atk\/hyperlinkref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/atk\/hyperlinkref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/atk\/hyperlinkref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/bind(_:to:property:flags:convertfrom:convertto:)-6eexj","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/bind(_:to:property:flags:convertfrom:convertto:)-7qig2","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/atk\/hyperlinkref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/atk\/hyperlinkref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/hyperlinkref","title":"HyperlinkRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkstateflags\/init(_:)-6u7wa","title":"init(AtkHyperlinkStateFlags)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkstateflags\/init(_:)-8m0jw","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkstateflags\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkstateflags\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/atk\/hyperlinkstateflags\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/atk\/hyperlinkstateflags\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/atk\/hyperlinkstateflags\/value","title":"var value: AtkHyperlinkStateFlags","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkstateflags\/inline","title":"static let inline: HyperlinkStateFlags","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkstateflags\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/hyperlinkstateflags\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkstateflags\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkstateflags\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/atk\/hyperlinkstateflags\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkstateflags\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkstateflags\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkstateflags\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkstateflags\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/atk\/hyperlinkstateflags\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/atk\/hyperlinkstateflags\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/atk\/hyperlinkstateflags\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/atk\/hyperlinkstateflags\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/atk\/hyperlinkstateflags\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkstateflags\/init(_:)-5t1j","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/atk\/hyperlinkstateflags\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkstateflags\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkstateflags\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/atk\/hyperlinkstateflags\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/atk\/hyperlinkstateflags\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/atk\/hyperlinkstateflags\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/atk\/hyperlinkstateflags\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/atk\/hyperlinkstateflags\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/atk\/hyperlinkstateflags\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/atk\/hyperlinkstateflags\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/atk\/hyperlinkstateflags","title":"HyperlinkStateFlags","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/hypertextifaceref\/init(_:)-2gpbw","title":"init(UnsafeMutablePointer<AtkHypertextIface>)","type":"init"},{"path":"\/documentation\/atk\/hypertextifaceref\/init(_:)-406fv","title":"init!(UnsafePointer<AtkHypertextIface>?)","type":"init"},{"path":"\/documentation\/atk\/hypertextifaceref\/init(_:)-8xmux","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/hypertextifaceref\/init(_:)-9a2n8","title":"init(UnsafePointer<AtkHypertextIface>)","type":"init"},{"path":"\/documentation\/atk\/hypertextifaceref\/init(_:)-9cthe","title":"init!(UnsafeMutablePointer<AtkHypertextIface>?)","type":"init"},{"path":"\/documentation\/atk\/hypertextifaceref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/hypertextifaceref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/hypertextifaceref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/hypertextifaceref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/hypertextifaceref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/hypertextifaceref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hypertextifaceref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hypertextifaceref\/metatype","title":"static var metatype: AtkHypertextIface?","type":"property"},{"path":"\/documentation\/atk\/hypertextifaceref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/atk\/hypertextifaceref\/wrapper","title":"static var wrapper: HypertextIfaceRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/hypertextifaceref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> Hypertext!","type":"method"},{"path":"\/documentation\/atk\/hypertextifaceref\/newhypertext(properties:nproperties:names:values:)","title":"static func newHypertext(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> Hypertext!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hypertextifaceref\/parent","title":"var parent: GTypeInterface","type":"property"}],"path":"\/documentation\/atk\/hypertextifaceref\/hypertextifaceprotocol-implementations","title":"HypertextIfaceProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/hypertextifaceref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/hypertextifaceref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/atk\/hypertextifaceref","title":"HypertextIfaceRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/hypertextref\/init(_:)-409k9","title":"init(UnsafePointer<AtkHypertext>)","type":"init"},{"path":"\/documentation\/atk\/hypertextref\/init(_:)-57wf9","title":"init(UnsafeMutablePointer<AtkHypertext>)","type":"init"},{"path":"\/documentation\/atk\/hypertextref\/init(_:)-5x0tx","title":"init!(UnsafeMutablePointer<AtkHypertext>?)","type":"init"},{"path":"\/documentation\/atk\/hypertextref\/init(_:)-6mpkw","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/hypertextref\/init(_:)-86hyn","title":"init!(UnsafePointer<AtkHypertext>?)","type":"init"},{"path":"\/documentation\/atk\/hypertextref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/hypertextref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/hypertextref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/hypertextref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/hypertextref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/hypertextref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hypertextref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hypertextref\/hypertext_ptr","title":"var hypertext_ptr: UnsafeMutablePointer<AtkHypertext>!","type":"property"},{"path":"\/documentation\/atk\/hypertextref\/nlinks","title":"var nLinks: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/hypertextref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: HypertextSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/hypertextref\/connect(signal:flags:handler:)","title":"func connect(signal: HypertextSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/hypertextref\/getlink(linkindex:)","title":"func getLink(linkIndex: Int) -> HyperlinkRef!","type":"method"},{"path":"\/documentation\/atk\/hypertextref\/getlinkindex(charindex:)","title":"func getLinkIndex(charIndex: Int) -> Int","type":"method"},{"path":"\/documentation\/atk\/hypertextref\/getnlinks()","title":"func getNLinks() -> Int","type":"method"},{"path":"\/documentation\/atk\/hypertextref\/onlinkselected(flags:handler:)","title":"func onLinkSelected(flags: ConnectFlags, handler: (HypertextRef, Int) -> Void) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hypertextref\/linkselectedsignal","title":"static var linkSelectedSignal: HypertextSignalName","type":"property"}],"path":"\/documentation\/atk\/hypertextref\/hypertextprotocol-implementations","title":"HypertextProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/hypertextref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/hypertextref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/atk\/hypertextref","title":"HypertextRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/imageifaceref\/init(_:)-1dc3t","title":"init(UnsafeMutablePointer<AtkImageIface>)","type":"init"},{"path":"\/documentation\/atk\/imageifaceref\/init(_:)-22abg","title":"init!(UnsafePointer<AtkImageIface>?)","type":"init"},{"path":"\/documentation\/atk\/imageifaceref\/init(_:)-2yfbx","title":"init(UnsafePointer<AtkImageIface>)","type":"init"},{"path":"\/documentation\/atk\/imageifaceref\/init(_:)-3apej","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/imageifaceref\/init(_:)-79khi","title":"init!(UnsafeMutablePointer<AtkImageIface>?)","type":"init"},{"path":"\/documentation\/atk\/imageifaceref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/imageifaceref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/imageifaceref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/imageifaceref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/imageifaceref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/imageifaceref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/imageifaceref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/imageifaceref\/metatype","title":"static var metatype: AtkImageIface?","type":"property"},{"path":"\/documentation\/atk\/imageifaceref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/atk\/imageifaceref\/wrapper","title":"static var wrapper: ImageIfaceRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/imageifaceref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> Image!","type":"method"},{"path":"\/documentation\/atk\/imageifaceref\/newimage(properties:nproperties:names:values:)","title":"static func newImage(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> Image!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/imageifaceref\/parent","title":"var parent: GTypeInterface","type":"property"}],"path":"\/documentation\/atk\/imageifaceref\/imageifaceprotocol-implementations","title":"ImageIfaceProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/imageifaceref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/imageifaceref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/atk\/imageifaceref","title":"ImageIfaceRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/imageref\/init(_:)-20wkw","title":"init!(UnsafeMutablePointer<AtkImage>?)","type":"init"},{"path":"\/documentation\/atk\/imageref\/init(_:)-4l5tf","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/imageref\/init(_:)-4myh0","title":"init(UnsafeMutablePointer<AtkImage>)","type":"init"},{"path":"\/documentation\/atk\/imageref\/init(_:)-9a73v","title":"init!(UnsafePointer<AtkImage>?)","type":"init"},{"path":"\/documentation\/atk\/imageref\/init(_:)-ek1f","title":"init(UnsafePointer<AtkImage>)","type":"init"},{"path":"\/documentation\/atk\/imageref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/imageref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/imageref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/imageref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/imageref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/imageref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/imageref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/imageref\/imagedescription","title":"var imageDescription: String!","type":"property"},{"path":"\/documentation\/atk\/imageref\/imagelocale","title":"var imageLocale: String!","type":"property"},{"path":"\/documentation\/atk\/imageref\/image_ptr","title":"var image_ptr: UnsafeMutablePointer<AtkImage>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/imageref\/getimagedescription()","title":"func getImageDescription() -> String!","type":"method"},{"path":"\/documentation\/atk\/imageref\/getimagelocale()","title":"func getImageLocale() -> String!","type":"method"},{"path":"\/documentation\/atk\/imageref\/getimageposition(x:y:coordtype:)","title":"func getImagePosition(x: UnsafeMutablePointer<gint>!, y: UnsafeMutablePointer<gint>!, coordType: AtkCoordType)","type":"method"},{"path":"\/documentation\/atk\/imageref\/getimagesize(width:height:)","title":"func getImageSize(width: UnsafeMutablePointer<gint>!, height: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/atk\/imageref\/setimage(description:)","title":"func setImage(description: UnsafePointer<gchar>!) -> Bool","type":"method"}],"path":"\/documentation\/atk\/imageref\/imageprotocol-implementations","title":"ImageProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/imageref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/imageref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/atk\/imageref","title":"ImageRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/implementorifaceref\/init(_:)-10nbk","title":"init(UnsafeMutablePointer<AtkImplementorIface>)","type":"init"},{"path":"\/documentation\/atk\/implementorifaceref\/init(_:)-2q6wi","title":"init!(UnsafeMutablePointer<AtkImplementorIface>?)","type":"init"},{"path":"\/documentation\/atk\/implementorifaceref\/init(_:)-3wh58","title":"init(UnsafePointer<AtkImplementorIface>)","type":"init"},{"path":"\/documentation\/atk\/implementorifaceref\/init(_:)-4737j","title":"init!(UnsafePointer<AtkImplementorIface>?)","type":"init"},{"path":"\/documentation\/atk\/implementorifaceref\/init(_:)-zyv1","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/implementorifaceref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/implementorifaceref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/implementorifaceref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/implementorifaceref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/implementorifaceref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/implementorifaceref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/implementorifaceref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/implementorifaceref\/implementor_ptr","title":"var implementor_ptr: UnsafeMutablePointer<AtkImplementorIface>!","type":"property"}],"path":"\/documentation\/atk\/implementorifaceref\/implementorifaceprotocol-implementations","title":"ImplementorIfaceProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/implementorifaceref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/implementorifaceref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/atk\/implementorifaceref","title":"ImplementorIfaceRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/implementorref\/init(_:)-23jj2","title":"init(UnsafePointer<AtkImplementor>)","type":"init"},{"path":"\/documentation\/atk\/implementorref\/init(_:)-39h2g","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/implementorref\/init(_:)-4oh1s","title":"init(UnsafeMutablePointer<AtkImplementor>)","type":"init"},{"path":"\/documentation\/atk\/implementorref\/init(_:)-7ipf7","title":"init!(UnsafePointer<AtkImplementor>?)","type":"init"},{"path":"\/documentation\/atk\/implementorref\/init(_:)-8jnju","title":"init!(UnsafeMutablePointer<AtkImplementor>?)","type":"init"},{"path":"\/documentation\/atk\/implementorref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/implementorref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/implementorref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/implementorref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/implementorref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/implementorref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/implementorref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/implementorref\/refaccessible()","title":"func refAccessible() -> ObjectRef!","type":"method"}],"path":"\/documentation\/atk\/implementorref\/implementorprotocol-implementations","title":"ImplementorProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/implementorref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/implementorref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/atk\/implementorref","title":"ImplementorRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/keyeventstructref\/init(_:)-2b749","title":"init!(UnsafePointer<AtkKeyEventStruct>?)","type":"init"},{"path":"\/documentation\/atk\/keyeventstructref\/init(_:)-3k30k","title":"init(UnsafePointer<AtkKeyEventStruct>)","type":"init"},{"path":"\/documentation\/atk\/keyeventstructref\/init(_:)-4ku1y","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/keyeventstructref\/init(_:)-5xkhv","title":"init!(UnsafeMutablePointer<AtkKeyEventStruct>?)","type":"init"},{"path":"\/documentation\/atk\/keyeventstructref\/init(_:)-6pe2f","title":"init(UnsafeMutablePointer<AtkKeyEventStruct>)","type":"init"},{"path":"\/documentation\/atk\/keyeventstructref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/keyeventstructref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/keyeventstructref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/keyeventstructref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/keyeventstructref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/keyeventstructref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/keyeventstructref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/keyeventstructref\/keycode","title":"var keycode: guint16","type":"property"},{"path":"\/documentation\/atk\/keyeventstructref\/keyval","title":"var keyval: guint","type":"property"},{"path":"\/documentation\/atk\/keyeventstructref\/length","title":"var length: gint","type":"property"},{"path":"\/documentation\/atk\/keyeventstructref\/state","title":"var state: guint","type":"property"},{"path":"\/documentation\/atk\/keyeventstructref\/string","title":"var string: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/atk\/keyeventstructref\/timestamp","title":"var timestamp: guint32","type":"property"},{"path":"\/documentation\/atk\/keyeventstructref\/type","title":"var type: gint","type":"property"}],"path":"\/documentation\/atk\/keyeventstructref\/keyeventstructprotocol-implementations","title":"KeyEventStructProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/keyeventstructref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/keyeventstructref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/atk\/keyeventstructref","title":"KeyEventStructRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/miscclassref\/init(_:)-1egxu","title":"init(UnsafeMutablePointer<AtkMiscClass>)","type":"init"},{"path":"\/documentation\/atk\/miscclassref\/init(_:)-3qcbf","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/miscclassref\/init(_:)-44mf5","title":"init(UnsafePointer<AtkMiscClass>)","type":"init"},{"path":"\/documentation\/atk\/miscclassref\/init(_:)-7fof9","title":"init!(UnsafePointer<AtkMiscClass>?)","type":"init"},{"path":"\/documentation\/atk\/miscclassref\/init(_:)-7pziu","title":"init!(UnsafeMutablePointer<AtkMiscClass>?)","type":"init"},{"path":"\/documentation\/atk\/miscclassref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/miscclassref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/miscclassref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/miscclassref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/miscclassref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/miscclassref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/miscclassref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/miscclassref\/metatype","title":"static var metatype: AtkMiscClass?","type":"property"},{"path":"\/documentation\/atk\/miscclassref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/atk\/miscclassref\/wrapper","title":"static var wrapper: MiscClassRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/miscclassref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> Misc!","type":"method"},{"path":"\/documentation\/atk\/miscclassref\/newmisc(properties:nproperties:names:values:)","title":"static func newMisc(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> Misc!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/miscclassref\/parent","title":"var parent: GObjectClass","type":"property"},{"path":"\/documentation\/atk\/miscclassref\/vfuncs","title":"var vfuncs: (gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?, gpointer?)","type":"property"}],"path":"\/documentation\/atk\/miscclassref\/miscclassprotocol-implementations","title":"MiscClassProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/miscclassref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/miscclassref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/atk\/miscclassref","title":"MiscClassRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/miscref\/init(_:)-2ctkc","title":"init!(UnsafeMutablePointer<AtkMisc>?)","type":"init"},{"path":"\/documentation\/atk\/miscref\/init(_:)-415f9","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/miscref\/init(_:)-423d5","title":"init!(UnsafePointer<AtkMisc>?)","type":"init"},{"path":"\/documentation\/atk\/miscref\/init(_:)-5zm6i","title":"init(UnsafePointer<AtkMisc>)","type":"init"},{"path":"\/documentation\/atk\/miscref\/init(_:)-s137","title":"init(UnsafeMutablePointer<AtkMisc>)","type":"init"},{"path":"\/documentation\/atk\/miscref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/miscref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/miscref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/miscref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/miscref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/miscref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/miscref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/miscref\/getinstance()","title":"static func getInstance() -> MiscRef!","type":"method"},{"path":"\/documentation\/atk\/miscref\/unowned(_:)","title":"static func unowned<T>(T) -> MiscRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/miscref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/miscref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/miscref\/misc_ptr","title":"var misc_ptr: UnsafeMutablePointer<AtkMisc>!","type":"property"},{"path":"\/documentation\/atk\/miscref\/parent","title":"var parent: GObject","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/miscref\/threadsenter()","title":"func threadsEnter()","type":"method"},{"path":"\/documentation\/atk\/miscref\/threadsleave()","title":"func threadsLeave()","type":"method"}],"path":"\/documentation\/atk\/miscref\/miscprotocol-implementations","title":"MiscProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/miscref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/atk\/miscref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/atk\/miscref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/atk\/miscref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/atk\/miscref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/atk\/miscref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/miscref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/miscref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/atk\/miscref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/miscref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/miscref\/bind(_:to:property:flags:convertfrom:convertto:)-4jhie","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/miscref\/bind(_:to:property:flags:convertfrom:convertto:)-4wdl","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/miscref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/miscref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/miscref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/miscref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/miscref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/miscref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/miscref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/atk\/miscref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/miscref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/miscref\/connect(signal:flags:handler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/miscref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/miscref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/miscref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/miscref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/miscref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/miscref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/miscref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/miscref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/atk\/miscref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/atk\/miscref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/atk\/miscref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/miscref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/miscref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/miscref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/miscref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/miscref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/miscref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/atk\/miscref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/miscref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/miscref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/miscref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/miscref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/miscref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/miscref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/miscref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/atk\/miscref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/miscref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/miscref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/miscref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/miscref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/miscref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/miscref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/miscref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/miscref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/miscref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/miscref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/miscref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/atk\/miscref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/miscref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/miscref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/miscref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/miscref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/miscref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/miscref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/atk\/miscref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/miscref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/miscref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/atk\/miscref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/atk\/miscref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/miscref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/miscref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/miscref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/miscref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/atk\/miscref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/atk\/miscref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/atk\/miscref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/atk\/miscref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/miscref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/miscref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/miscref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/atk\/miscref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/atk\/miscref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/atk\/miscref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/miscref","title":"MiscRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectclassref\/init(_:)-227t9","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/noopobjectclassref\/init(_:)-5he4x","title":"init(UnsafeMutablePointer<AtkNoOpObjectClass>)","type":"init"},{"path":"\/documentation\/atk\/noopobjectclassref\/init(_:)-6khy7","title":"init!(UnsafeMutablePointer<AtkNoOpObjectClass>?)","type":"init"},{"path":"\/documentation\/atk\/noopobjectclassref\/init(_:)-7ltcv","title":"init(UnsafePointer<AtkNoOpObjectClass>)","type":"init"},{"path":"\/documentation\/atk\/noopobjectclassref\/init(_:)-7m9ny","title":"init!(UnsafePointer<AtkNoOpObjectClass>?)","type":"init"},{"path":"\/documentation\/atk\/noopobjectclassref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/noopobjectclassref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/noopobjectclassref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/noopobjectclassref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/noopobjectclassref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/noopobjectclassref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectclassref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectclassref\/metatype","title":"static var metatype: AtkNoOpObjectClass?","type":"property"},{"path":"\/documentation\/atk\/noopobjectclassref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/atk\/noopobjectclassref\/wrapper","title":"static var wrapper: NoOpObjectClassRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectclassref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> NoOpObject!","type":"method"},{"path":"\/documentation\/atk\/noopobjectclassref\/newnoopobject(properties:nproperties:names:values:)","title":"static func newNoOpObject(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> NoOpObject!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectclassref\/parentclass","title":"var parentClass: AtkObjectClass","type":"property"}],"path":"\/documentation\/atk\/noopobjectclassref\/noopobjectclassprotocol-implementations","title":"NoOpObjectClassProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectclassref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/noopobjectclassref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/atk\/noopobjectclassref","title":"NoOpObjectClassRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectfactoryclassref\/init(_:)-532jf","title":"init!(UnsafeMutablePointer<AtkNoOpObjectFactoryClass>?)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactoryclassref\/init(_:)-88av9","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactoryclassref\/init(_:)-8s5bv","title":"init(UnsafePointer<AtkNoOpObjectFactoryClass>)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactoryclassref\/init(_:)-bilg","title":"init!(UnsafePointer<AtkNoOpObjectFactoryClass>?)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactoryclassref\/init(_:)-in8v","title":"init(UnsafeMutablePointer<AtkNoOpObjectFactoryClass>)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactoryclassref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactoryclassref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactoryclassref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactoryclassref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactoryclassref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactoryclassref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectfactoryclassref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectfactoryclassref\/metatype","title":"static var metatype: AtkNoOpObjectFactoryClass?","type":"property"},{"path":"\/documentation\/atk\/noopobjectfactoryclassref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/atk\/noopobjectfactoryclassref\/wrapper","title":"static var wrapper: NoOpObjectFactoryClassRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectfactoryclassref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> NoOpObjectFactory!","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryclassref\/newnoopobjectfactory(properties:nproperties:names:values:)","title":"static func newNoOpObjectFactory(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> NoOpObjectFactory!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectfactoryclassref\/parentclass","title":"var parentClass: AtkObjectFactoryClass","type":"property"}],"path":"\/documentation\/atk\/noopobjectfactoryclassref\/noopobjectfactoryclassprotocol-implementations","title":"NoOpObjectFactoryClassProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectfactoryclassref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/noopobjectfactoryclassref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/atk\/noopobjectfactoryclassref","title":"NoOpObjectFactoryClassRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/init()","title":"init()","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/init(_:)-2144w","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/init(_:)-2o5cy","title":"init!(UnsafeMutablePointer<AtkNoOpObjectFactory>?)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/init(_:)-3udhp","title":"init(UnsafePointer<AtkNoOpObjectFactory>)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/init(_:)-6xrdg","title":"init!(UnsafePointer<AtkNoOpObjectFactory>?)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/init(_:)-7ppoa","title":"init(UnsafeMutablePointer<AtkNoOpObjectFactory>)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/unowned(_:)","title":"static func unowned<T>(T) -> NoOpObjectFactoryRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/noopobjectfactoryref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/no_op_object_factory_ptr","title":"var no_op_object_factory_ptr: UnsafeMutablePointer<AtkNoOpObjectFactory>!","type":"property"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/parent","title":"var parent: AtkObjectFactory","type":"property"}],"path":"\/documentation\/atk\/noopobjectfactoryref\/noopobjectfactoryprotocol-implementations","title":"NoOpObjectFactoryProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/accessibletype","title":"var accessibleType: GType","type":"property"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/object_factory_ptr","title":"var object_factory_ptr: UnsafeMutablePointer<AtkObjectFactory>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/createaccessible(obj:)","title":"func createAccessible<GObjectObjectT>(obj: GObjectObjectT) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/getaccessibletype()","title":"func getAccessibleType() -> GType","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/invalidate()","title":"func invalidate()","type":"method"}],"path":"\/documentation\/atk\/noopobjectfactoryref\/objectfactoryprotocol-implementations","title":"ObjectFactoryProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/bind(_:to:property:flags:convertfrom:convertto:)-5p2ff","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/bind(_:to:property:flags:convertfrom:convertto:)-5ui4n","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/connect(signal:flags:handler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/atk\/noopobjectfactoryref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/atk\/noopobjectfactoryref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/noopobjectfactoryref","title":"NoOpObjectFactoryRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/init(_:)-2ssej","title":"init!(UnsafeMutablePointer<AtkNoOpObject>?)","type":"init"},{"path":"\/documentation\/atk\/noopobjectref\/init(_:)-2w2gh","title":"init(UnsafePointer<AtkNoOpObject>)","type":"init"},{"path":"\/documentation\/atk\/noopobjectref\/init(_:)-6y9n9","title":"init(UnsafeMutablePointer<AtkNoOpObject>)","type":"init"},{"path":"\/documentation\/atk\/noopobjectref\/init(_:)-f2jr","title":"init!(UnsafePointer<AtkNoOpObject>?)","type":"init"},{"path":"\/documentation\/atk\/noopobjectref\/init(_:)-mhqx","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/noopobjectref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/noopobjectref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/noopobjectref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/noopobjectref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/noopobjectref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/noopobjectref\/init(obj:)","title":"init<GObjectObjectT>(obj: GObjectObjectT)","type":"init"},{"path":"\/documentation\/atk\/noopobjectref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/unowned(_:)","title":"static func unowned<T>(T) -> NoOpObjectRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/action_ptr","title":"var action_ptr: UnsafeMutablePointer<AtkAction>!","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/nactions","title":"var nActions: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/doaction(i:)","title":"func doAction(i: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getdescription(i:)","title":"func getDescription(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getkeybinding(i:)","title":"func getKeybinding(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getlocalizedname(i:)","title":"func getLocalizedName(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getnactions()","title":"func getNActions() -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getname(i:)","title":"func getName(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/setdescription(i:desc:)","title":"func setDescription(i: Int, desc: UnsafePointer<gchar>!) -> Bool","type":"method"}],"path":"\/documentation\/atk\/noopobjectref\/actionprotocol-implementations","title":"ActionProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/alpha","title":"var alpha: Double","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/component_ptr","title":"var component_ptr: UnsafeMutablePointer<AtkComponent>!","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/layer-9ubv7","title":"var layer: AtkLayer","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/mdizorder-5qho3","title":"var mdiZorder: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/addfocus(handler:)","title":"func addFocus(handler: AtkFocusHandler?) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/connect(signal:flags:data:destroydata:signalhandler:)-3avpq","title":"func connect(signal: ComponentSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/connect(signal:flags:handler:)-9gu4m","title":"func connect(signal: ComponentSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/contains(x:y:coordtype:)","title":"func contains(x: Int, y: Int, coordType: AtkCoordType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getalpha()","title":"func getAlpha() -> Double","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getextents(x:y:width:height:coordtype:)","title":"func getExtents(x: UnsafeMutablePointer<gint>!, y: UnsafeMutablePointer<gint>!, width: UnsafeMutablePointer<gint>!, height: UnsafeMutablePointer<gint>!, coordType: AtkCoordType)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getlayer()-1d6g8","title":"func getLayer() -> AtkLayer","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getmdizorder()-1mv2c","title":"func getMdiZorder() -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getposition(x:y:coordtype:)","title":"func getPosition(x: UnsafeMutablePointer<gint>!, y: UnsafeMutablePointer<gint>!, coordType: AtkCoordType)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getsize(width:height:)","title":"func getSize(width: UnsafeMutablePointer<gint>!, height: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/grabfocus()","title":"func grabFocus() -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onboundschanged(flags:handler:)","title":"func onBoundsChanged(flags: ConnectFlags, handler: (ComponentRef, RectangleRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/refaccessibleatpoint(x:y:coordtype:)","title":"func refAccessibleAtPoint(x: Int, y: Int, coordType: AtkCoordType) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/removefocushandler(handlerid:)","title":"func removeFocusHandler(handlerId: Int)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/scrollto(type:)","title":"func scrollTo(type: AtkScrollType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/scrolltopoint(coords:x:y:)","title":"func scrollToPoint(coords: AtkCoordType, x: Int, y: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/setextents(x:y:width:height:coordtype:)","title":"func setExtents(x: Int, y: Int, width: Int, height: Int, coordType: AtkCoordType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/setposition(x:y:coordtype:)","title":"func setPosition(x: Int, y: Int, coordType: AtkCoordType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/setsize(width:height:)","title":"func setSize(width: Int, height: Int) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/boundschangedsignal","title":"static var boundsChangedSignal: ComponentSignalName","type":"property"}],"path":"\/documentation\/atk\/noopobjectref\/componentprotocol-implementations","title":"ComponentProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/attributes-6q2qk","title":"var attributes: UnsafeMutablePointer<AtkAttributeSet>!","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/currentpagenumber","title":"var currentPageNumber: Int","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/document","title":"var document: gpointer?","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/documenttype","title":"var documentType: String!","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/document_ptr","title":"var document_ptr: UnsafeMutablePointer<AtkDocument>!","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/locale","title":"var locale: String!","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/pagecount","title":"var pageCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/connect(signal:flags:data:destroydata:signalhandler:)-2thi3","title":"func connect(signal: DocumentSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/connect(signal:flags:handler:)-3hwpw","title":"func connect(signal: DocumentSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getattributevalue(attributename:)","title":"func getAttributeValue(attributeName: UnsafePointer<gchar>!) -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getattributes()-7qah0","title":"func getAttributes() -> UnsafeMutablePointer<AtkAttributeSet>!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getcurrentpagenumber()","title":"func getCurrentPageNumber() -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getdocument()","title":"func getDocument() -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getdocumenttype()","title":"func getDocumentType() -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getlocale()","title":"func getLocale() -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getpagecount()","title":"func getPageCount() -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onloadcomplete(flags:handler:)","title":"func onLoadComplete(flags: ConnectFlags, handler: (DocumentRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onloadstopped(flags:handler:)","title":"func onLoadStopped(flags: ConnectFlags, handler: (DocumentRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onpagechanged(flags:handler:)","title":"func onPageChanged(flags: ConnectFlags, handler: (DocumentRef, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onreload(flags:handler:)","title":"func onReload(flags: ConnectFlags, handler: (DocumentRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/setattributevalue(attributename:attributevalue:)","title":"func setAttributeValue(attributeName: UnsafePointer<gchar>!, attributeValue: UnsafePointer<gchar>!) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/loadcompletesignal","title":"static var loadCompleteSignal: DocumentSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/loadstoppedsignal","title":"static var loadStoppedSignal: DocumentSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/pagechangedsignal","title":"static var pageChangedSignal: DocumentSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/reloadsignal","title":"static var reloadSignal: DocumentSignalName","type":"property"}],"path":"\/documentation\/atk\/noopobjectref\/documentprotocol-implementations","title":"DocumentProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/editable_text_ptr","title":"var editable_text_ptr: UnsafeMutablePointer<AtkEditableText>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/copytext(startpos:endpos:)","title":"func copyText(startPos: Int, endPos: Int)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/cuttext(startpos:endpos:)","title":"func cutText(startPos: Int, endPos: Int)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/deletetext(startpos:endpos:)","title":"func deleteText(startPos: Int, endPos: Int)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/inserttext(string:length:position:)","title":"func insertText(string: UnsafePointer<gchar>!, length: Int, position: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/pastetext(position:)","title":"func pasteText(position: Int)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/setrunattributes(attribset:startoffset:endoffset:)","title":"func setRunAttributes(attribSet: UnsafeMutablePointer<AtkAttributeSet>!, startOffset: Int, endOffset: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/settextcontents(string:)","title":"func setTextContents(string: UnsafePointer<gchar>!)","type":"method"}],"path":"\/documentation\/atk\/noopobjectref\/editabletextprotocol-implementations","title":"EditableTextProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/noopobjectref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/hypertext_ptr","title":"var hypertext_ptr: UnsafeMutablePointer<AtkHypertext>!","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/nlinks","title":"var nLinks: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/connect(signal:flags:data:destroydata:signalhandler:)-n0pq","title":"func connect(signal: HypertextSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/connect(signal:flags:handler:)-8a8za","title":"func connect(signal: HypertextSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getlink(linkindex:)","title":"func getLink(linkIndex: Int) -> HyperlinkRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getlinkindex(charindex:)","title":"func getLinkIndex(charIndex: Int) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getnlinks()","title":"func getNLinks() -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onlinkselected(flags:handler:)","title":"func onLinkSelected(flags: ConnectFlags, handler: (HypertextRef, Int) -> Void) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/linkselectedsignal","title":"static var linkSelectedSignal: HypertextSignalName","type":"property"}],"path":"\/documentation\/atk\/noopobjectref\/hypertextprotocol-implementations","title":"HypertextProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/imagedescription","title":"var imageDescription: String!","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/imagelocale","title":"var imageLocale: String!","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/image_ptr","title":"var image_ptr: UnsafeMutablePointer<AtkImage>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/getimagedescription()","title":"func getImageDescription() -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getimagelocale()","title":"func getImageLocale() -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getimageposition(x:y:coordtype:)","title":"func getImagePosition(x: UnsafeMutablePointer<gint>!, y: UnsafeMutablePointer<gint>!, coordType: AtkCoordType)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getimagesize(width:height:)","title":"func getImageSize(width: UnsafeMutablePointer<gint>!, height: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/setimage(description:)","title":"func setImage(description: UnsafePointer<gchar>!) -> Bool","type":"method"}],"path":"\/documentation\/atk\/noopobjectref\/imageprotocol-implementations","title":"ImageProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/no_op_object_ptr","title":"var no_op_object_ptr: UnsafeMutablePointer<AtkNoOpObject>!","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/parent","title":"var parent: AtkObject","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/bind(property:to:_:flags:transformfrom:transformto:)-8q9ab","title":"func bind<Q, T>(property: NoOpObjectPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/get(property:)","title":"func get(property: NoOpObjectPropertyName) -> Value","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/set(property:value:)","title":"func set(property: NoOpObjectPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/atk\/noopobjectref\/noopobjectprotocol-implementations","title":"NoOpObjectProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/accessibleid","title":"var accessibleId: String!","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/accessibleparent","title":"var accessibleParent: ObjectRef!","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/attributes-nb3g","title":"var attributes: UnsafeMutablePointer<AtkAttributeSet>!","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/description","title":"var description: String!","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/indexinparent","title":"var indexInParent: Int","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/layer-xj6s","title":"var layer: AtkLayer","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/mdizorder-697vv","title":"var mdiZorder: Int","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/naccessiblechildren","title":"var nAccessibleChildren: Int","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/name","title":"var name: String!","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/objectlocale","title":"var objectLocale: String!","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<AtkObject>!","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/relationset","title":"var relationSet: RelationSetRef!","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/role","title":"var role: AtkRole","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/add(relationship:target:)","title":"func add<ObjectT>(relationship: AtkRelationType, target: ObjectT) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/bind(_:to:property:flags:convertfrom:convertto:)-1zgw5","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/bind(_:to:property:flags:convertfrom:convertto:)-6nvhe","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/bind(property:to:_:flags:transformfrom:transformto:)-2j1ay","title":"func bind<Q, T>(property: ObjectPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/connect(signal:flags:data:destroydata:signalhandler:)-4fx3g","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/connect(signal:flags:data:destroydata:signalhandler:)-4jukl","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/connect(signal:flags:handler:)-14ejh","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/connect(signal:flags:handler:)-1djjd","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/connectpropertychange(handler:)","title":"func connectPropertyChange(handler: UnsafeMutablePointer<AtkPropertyChangeHandler?>!) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/focustrackernotify()","title":"func focusTrackerNotify()","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getaccessibleid()","title":"func getAccessibleId() -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getattributes()-jbvz","title":"func getAttributes() -> UnsafeMutablePointer<AtkAttributeSet>!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getdescription()","title":"func getDescription() -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getindexinparent()","title":"func getIndexInParent() -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getlayer()-2bebq","title":"func getLayer() -> AtkLayer","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getmdizorder()-2m9m1","title":"func getMdiZorder() -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getnaccessiblechildren()","title":"func getNAccessibleChildren() -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getname()","title":"func getName() -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getobjectlocale()","title":"func getObjectLocale() -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getparent()","title":"func getParent() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getrole()","title":"func getRole() -> AtkRole","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/initialize(data:)","title":"func initialize(data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/notifystatechange(state:value:)","title":"func notifyStateChange(state: AtkState, value: Bool)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onactivedescendantchanged(flags:handler:)","title":"func onActiveDescendantChanged(flags: ConnectFlags, handler: (ObjectRef, ObjectRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onannouncement(flags:handler:)","title":"func onAnnouncement(flags: ConnectFlags, handler: (ObjectRef, String) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onchildrenchanged(flags:handler:)","title":"func onChildrenChanged(flags: ConnectFlags, handler: (ObjectRef, UInt, ObjectRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onfocusevent(flags:handler:)","title":"func onFocusEvent(flags: ConnectFlags, handler: (ObjectRef, Bool) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onnotification(flags:handler:)","title":"func onNotification(flags: ConnectFlags, handler: (ObjectRef, String, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onnotifyaccessiblecomponentlayer(flags:handler:)","title":"func onNotifyAccessibleComponentLayer(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onnotifyaccessiblecomponentmdizorder(flags:handler:)","title":"func onNotifyAccessibleComponentMdiZorder(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onnotifyaccessibledescription(flags:handler:)","title":"func onNotifyAccessibleDescription(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onnotifyaccessiblehypertextnlinks(flags:handler:)","title":"func onNotifyAccessibleHypertextNlinks(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onnotifyaccessiblename(flags:handler:)","title":"func onNotifyAccessibleName(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onnotifyaccessibleparent(flags:handler:)","title":"func onNotifyAccessibleParent(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onnotifyaccessiblerole(flags:handler:)","title":"func onNotifyAccessibleRole(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onnotifyaccessibletablecaption(flags:handler:)","title":"func onNotifyAccessibleTableCaption(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onnotifyaccessibletablecaptionobject(flags:handler:)","title":"func onNotifyAccessibleTableCaptionObject(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onnotifyaccessibletablecolumndescription(flags:handler:)","title":"func onNotifyAccessibleTableColumnDescription(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onnotifyaccessibletablecolumnheader(flags:handler:)","title":"func onNotifyAccessibleTableColumnHeader(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onnotifyaccessibletablerowdescription(flags:handler:)","title":"func onNotifyAccessibleTableRowDescription(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onnotifyaccessibletablerowheader(flags:handler:)","title":"func onNotifyAccessibleTableRowHeader(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onnotifyaccessibletablesummary(flags:handler:)","title":"func onNotifyAccessibleTableSummary(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onnotifyaccessiblevalue(flags:handler:)","title":"func onNotifyAccessibleValue(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onpropertychange(flags:handler:)","title":"func onPropertyChange(flags: ConnectFlags, handler: (ObjectRef, PropertyValuesRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onstatechange(flags:handler:)","title":"func onStateChange(flags: ConnectFlags, handler: (ObjectRef, String, Bool) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onvisibledatachanged(flags:handler:)","title":"func onVisibleDataChanged(flags: ConnectFlags, handler: (ObjectRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/peekparent()","title":"func peekParent() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/refaccessiblechild(i:)","title":"func refAccessibleChild(i: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/refrelationset()","title":"func refRelationSet() -> RelationSetRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/refstateset()","title":"func refStateSet() -> StateSetRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/remove(relationship:target:)","title":"func remove<ObjectT>(relationship: AtkRelationType, target: ObjectT) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/removepropertychangehandler(handlerid:)","title":"func removePropertyChangeHandler(handlerId: Int)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/set(description:)","title":"func set(description: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/set(name:)","title":"func set(name: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/set(parent:)","title":"func set<ObjectT>(parent: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/set(role:)","title":"func set(role: AtkRole)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/setaccessibleid(name:)","title":"func setAccessibleId(name: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/activedescendantchangedsignal","title":"static var activeDescendantChangedSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/announcementsignal","title":"static var announcementSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/childrenchangedsignal","title":"static var childrenChangedSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/focuseventsignal","title":"static var focusEventSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/notificationsignal","title":"static var notificationSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/notifyaccessiblecomponentlayersignal","title":"static var notifyAccessibleComponentLayerSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/notifyaccessiblecomponentmdizordersignal","title":"static var notifyAccessibleComponentMdiZorderSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/notifyaccessibledescriptionsignal","title":"static var notifyAccessibleDescriptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/notifyaccessiblehypertextnlinkssignal","title":"static var notifyAccessibleHypertextNlinksSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/notifyaccessiblenamesignal","title":"static var notifyAccessibleNameSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/notifyaccessibleparentsignal","title":"static var notifyAccessibleParentSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/notifyaccessiblerolesignal","title":"static var notifyAccessibleRoleSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/notifyaccessibletablecaptionobjectsignal","title":"static var notifyAccessibleTableCaptionObjectSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/notifyaccessibletablecaptionsignal","title":"static var notifyAccessibleTableCaptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/notifyaccessibletablecolumndescriptionsignal","title":"static var notifyAccessibleTableColumnDescriptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/notifyaccessibletablecolumnheadersignal","title":"static var notifyAccessibleTableColumnHeaderSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/notifyaccessibletablerowdescriptionsignal","title":"static var notifyAccessibleTableRowDescriptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/notifyaccessibletablerowheadersignal","title":"static var notifyAccessibleTableRowHeaderSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/notifyaccessibletablesummarysignal","title":"static var notifyAccessibleTableSummarySignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/notifyaccessiblevaluesignal","title":"static var notifyAccessibleValueSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/propertychangesignal","title":"static var propertyChangeSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/statechangesignal","title":"static var stateChangeSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/visibledatachangedsignal","title":"static var visibleDataChangedSignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/atk\/noopobjectref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/selectioncount","title":"var selectionCount: Int","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/selection_ptr","title":"var selection_ptr: UnsafeMutablePointer<AtkSelection>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/addselection(i:)","title":"func addSelection(i: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/clearselection()","title":"func clearSelection() -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/connect(signal:flags:data:destroydata:signalhandler:)-5v003","title":"func connect(signal: SelectionSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/connect(signal:flags:handler:)-6b92n","title":"func connect(signal: SelectionSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getselectioncount()","title":"func getSelectionCount() -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/ischildselected(i:)","title":"func isChildSelected(i: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onselectionchanged(flags:handler:)","title":"func onSelectionChanged(flags: ConnectFlags, handler: (SelectionRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/refselection(i:)","title":"func refSelection(i: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/removeselection(i:)","title":"func removeSelection(i: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/selectallselection()","title":"func selectAllSelection() -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/selectionchangedsignal","title":"static var selectionChangedSignal: SelectionSignalName","type":"property"}],"path":"\/documentation\/atk\/noopobjectref\/selectionprotocol-implementations","title":"SelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/columnheadercells","title":"var columnHeaderCells: RefArrayRef<ObjectRef>!","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/columnspan","title":"var columnSpan: Int","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/rowheadercells","title":"var rowHeaderCells: RefArrayRef<ObjectRef>!","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/rowspan","title":"var rowSpan: Int","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/table","title":"var table: ObjectRef!","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/table_cell_ptr","title":"var table_cell_ptr: UnsafeMutablePointer<AtkTableCell>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/bind(property:to:_:flags:transformfrom:transformto:)-6l3b9","title":"func bind<Q, T>(property: TableCellPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getcolumnheadercells()","title":"func getColumnHeaderCells() -> RefArrayRef<ObjectRef>!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getcolumnspan()","title":"func getColumnSpan() -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getposition(row:column:)","title":"func getPosition(row: UnsafeMutablePointer<gint>!, column: UnsafeMutablePointer<gint>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getrowcolumnspan(row:column:rowspan:columnspan:)","title":"func getRowColumnSpan(row: UnsafeMutablePointer<gint>!, column: UnsafeMutablePointer<gint>!, rowSpan: UnsafeMutablePointer<gint>!, columnSpan: UnsafeMutablePointer<gint>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getrowheadercells()","title":"func getRowHeaderCells() -> RefArrayRef<ObjectRef>!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getrowspan()","title":"func getRowSpan() -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/gettable()","title":"func getTable() -> ObjectRef!","type":"method"}],"path":"\/documentation\/atk\/noopobjectref\/tablecellprotocol-implementations","title":"TableCellProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/caption","title":"var caption: ObjectRef!","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/ncolumns","title":"var nColumns: Int","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/nrows","title":"var nRows: Int","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/summary","title":"var summary: ObjectRef!","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/table_ptr","title":"var table_ptr: UnsafeMutablePointer<AtkTable>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/addcolumnselection(column:)","title":"func addColumnSelection(column: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/addrowselection(row:)","title":"func addRowSelection(row: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/connect(signal:flags:data:destroydata:signalhandler:)-5e35q","title":"func connect(signal: TableSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/connect(signal:flags:handler:)-9ysrb","title":"func connect(signal: TableSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getcaption()","title":"func getCaption() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getcolumnat(index:)","title":"func getColumnAt(index: Int) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getcolumndescription(column:)","title":"func getColumnDescription(column: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getcolumnextentat(row:column:)","title":"func getColumnExtentAt(row: Int, column: Int) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getcolumnheader(column:)","title":"func getColumnHeader(column: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getindexat(row:column:)","title":"func getIndexAt(row: Int, column: Int) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getncolumns()","title":"func getNColumns() -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getnrows()","title":"func getNRows() -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getrowat(index:)","title":"func getRowAt(index: Int) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getrowdescription(row:)","title":"func getRowDescription(row: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getrowextentat(row:column:)","title":"func getRowExtentAt(row: Int, column: Int) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getrowheader(row:)","title":"func getRowHeader(row: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getselectedcolumns(selected:)","title":"func getSelectedColumns(selected: UnsafeMutablePointer<UnsafeMutablePointer<gint>?>!) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getselectedrows(selected:)","title":"func getSelectedRows(selected: UnsafeMutablePointer<UnsafeMutablePointer<gint>?>!) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getsummary()","title":"func getSummary() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/iscolumnselected(column:)","title":"func isColumnSelected(column: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/isrowselected(row:)","title":"func isRowSelected(row: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/isselected(row:column:)","title":"func isSelected(row: Int, column: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/oncolumndeleted(flags:handler:)","title":"func onColumnDeleted(flags: ConnectFlags, handler: (TableRef, Int, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/oncolumninserted(flags:handler:)","title":"func onColumnInserted(flags: ConnectFlags, handler: (TableRef, Int, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/oncolumnreordered(flags:handler:)","title":"func onColumnReordered(flags: ConnectFlags, handler: (TableRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onmodelchanged(flags:handler:)","title":"func onModelChanged(flags: ConnectFlags, handler: (TableRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onrowdeleted(flags:handler:)","title":"func onRowDeleted(flags: ConnectFlags, handler: (TableRef, Int, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onrowinserted(flags:handler:)","title":"func onRowInserted(flags: ConnectFlags, handler: (TableRef, Int, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onrowreordered(flags:handler:)","title":"func onRowReordered(flags: ConnectFlags, handler: (TableRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/refat(row:column:)","title":"func refAt(row: Int, column: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/removecolumnselection(column:)","title":"func removeColumnSelection(column: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/removerowselection(row:)","title":"func removeRowSelection(row: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/set(caption:)","title":"func set<ObjectT>(caption: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/setcolumndescription(column:description:)","title":"func setColumnDescription(column: Int, description: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/setcolumnheader(column:header:)","title":"func setColumnHeader<ObjectT>(column: Int, header: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/setrowdescription(row:description:)","title":"func setRowDescription(row: Int, description: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/setrowheader(row:header:)","title":"func setRowHeader<ObjectT>(row: Int, header: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/setsummary(accessible:)","title":"func setSummary<ObjectT>(accessible: ObjectT)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/columndeletedsignal","title":"static var columnDeletedSignal: TableSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/columninsertedsignal","title":"static var columnInsertedSignal: TableSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/columnreorderedsignal","title":"static var columnReorderedSignal: TableSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/modelchangedsignal","title":"static var modelChangedSignal: TableSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/rowdeletedsignal","title":"static var rowDeletedSignal: TableSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/rowinsertedsignal","title":"static var rowInsertedSignal: TableSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/rowreorderedsignal","title":"static var rowReorderedSignal: TableSignalName","type":"property"}],"path":"\/documentation\/atk\/noopobjectref\/tableprotocol-implementations","title":"TableProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/caretoffset","title":"var caretOffset: Int","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/charactercount","title":"var characterCount: Int","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/defaultattributes","title":"var defaultAttributes: UnsafeMutablePointer<AtkAttributeSet>!","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/nselections","title":"var nSelections: Int","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/text_ptr","title":"var text_ptr: UnsafeMutablePointer<AtkText>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/addselection(startoffset:endoffset:)","title":"func addSelection(startOffset: Int, endOffset: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/connect(signal:flags:data:destroydata:signalhandler:)-5864j","title":"func connect(signal: TextSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/connect(signal:flags:handler:)-5ezmq","title":"func connect(signal: TextSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getboundedranges(rect:coordtype:xcliptype:ycliptype:)","title":"func getBoundedRanges<TextRectangleT>(rect: TextRectangleT, coordType: AtkCoordType, xClipType: AtkTextClipType, yClipType: AtkTextClipType) -> UnsafeMutablePointer<UnsafeMutablePointer<AtkTextRange>?>!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getcaretoffset()","title":"func getCaretOffset() -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getcharacterat(offset:)","title":"func getCharacterAt(offset: Int) -> gunichar","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getcharactercount()","title":"func getCharacterCount() -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getcharacterextents(offset:x:y:width:height:coords:)","title":"func getCharacterExtents(offset: Int, x: UnsafeMutablePointer<gint>!, y: UnsafeMutablePointer<gint>!, width: UnsafeMutablePointer<gint>!, height: UnsafeMutablePointer<gint>!, coords: AtkCoordType)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getdefaultattributes()","title":"func getDefaultAttributes() -> UnsafeMutablePointer<AtkAttributeSet>!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getnselections()","title":"func getNSelections() -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getoffsetatpoint(x:y:coords:)","title":"func getOffsetAtPoint(x: Int, y: Int, coords: AtkCoordType) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getrangeextents(startoffset:endoffset:coordtype:rect:)","title":"func getRangeExtents<TextRectangleT>(startOffset: Int, endOffset: Int, coordType: AtkCoordType, rect: TextRectangleT)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getrunattributes(offset:startoffset:endoffset:)","title":"func getRunAttributes(offset: Int, startOffset: UnsafeMutablePointer<gint>!, endOffset: UnsafeMutablePointer<gint>!) -> UnsafeMutablePointer<AtkAttributeSet>!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getselection(selectionnum:startoffset:endoffset:)","title":"func getSelection(selectionNum: Int, startOffset: UnsafeMutablePointer<gint>!, endOffset: UnsafeMutablePointer<gint>!) -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getstringat(offset:granularity:startoffset:endoffset:)","title":"func getStringAt(offset: Int, granularity: AtkTextGranularity, startOffset: UnsafeMutablePointer<gint>!, endOffset: UnsafeMutablePointer<gint>!) -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/gettext(startoffset:endoffset:)","title":"func getText(startOffset: Int, endOffset: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/gettextafter(offset:boundarytype:startoffset:endoffset:)","title":"func getTextAfter(offset: Int, boundaryType: AtkTextBoundary, startOffset: UnsafeMutablePointer<gint>!, endOffset: UnsafeMutablePointer<gint>!) -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/gettextat(offset:boundarytype:startoffset:endoffset:)","title":"func getTextAt(offset: Int, boundaryType: AtkTextBoundary, startOffset: UnsafeMutablePointer<gint>!, endOffset: UnsafeMutablePointer<gint>!) -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/gettextbefore(offset:boundarytype:startoffset:endoffset:)","title":"func getTextBefore(offset: Int, boundaryType: AtkTextBoundary, startOffset: UnsafeMutablePointer<gint>!, endOffset: UnsafeMutablePointer<gint>!) -> String!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/ontextattributeschanged(flags:handler:)","title":"func onTextAttributesChanged(flags: ConnectFlags, handler: (TextRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/ontextcaretmoved(flags:handler:)","title":"func onTextCaretMoved(flags: ConnectFlags, handler: (TextRef, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/ontextchanged(flags:handler:)","title":"func onTextChanged(flags: ConnectFlags, handler: (TextRef, Int, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/ontextinsert(flags:handler:)","title":"func onTextInsert(flags: ConnectFlags, handler: (TextRef, Int, Int, String) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/ontextremove(flags:handler:)","title":"func onTextRemove(flags: ConnectFlags, handler: (TextRef, Int, Int, String) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/ontextselectionchanged(flags:handler:)","title":"func onTextSelectionChanged(flags: ConnectFlags, handler: (TextRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/removeselection(selectionnum:)","title":"func removeSelection(selectionNum: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/scrollsubstringto(startoffset:endoffset:type:)","title":"func scrollSubstringTo(startOffset: Int, endOffset: Int, type: AtkScrollType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/scrollsubstringtopoint(startoffset:endoffset:coords:x:y:)","title":"func scrollSubstringToPoint(startOffset: Int, endOffset: Int, coords: AtkCoordType, x: Int, y: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/setcaret(offset:)","title":"func setCaret(offset: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/setselection(selectionnum:startoffset:endoffset:)","title":"func setSelection(selectionNum: Int, startOffset: Int, endOffset: Int) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/textattributeschangedsignal","title":"static var textAttributesChangedSignal: TextSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/textcaretmovedsignal","title":"static var textCaretMovedSignal: TextSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/textchangedsignal","title":"static var textChangedSignal: TextSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/textinsertsignal","title":"static var textInsertSignal: TextSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/textremovesignal","title":"static var textRemoveSignal: TextSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/textselectionchangedsignal","title":"static var textSelectionChangedSignal: TextSignalName","type":"property"}],"path":"\/documentation\/atk\/noopobjectref\/textprotocol-implementations","title":"TextProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/increment","title":"var increment: Double","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/range","title":"var range: RangeRef!","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/subranges","title":"var subRanges: RefSListRef<RangeRef>!","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/value_ptr","title":"var value_ptr: UnsafeMutablePointer<AtkValue>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/connect(signal:flags:data:destroydata:signalhandler:)-66tfc","title":"func connect(signal: ValueSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/connect(signal:flags:handler:)-35awo","title":"func connect(signal: ValueSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getcurrent(value:)","title":"func getCurrent<GObjectValueT>(value: GObjectValueT)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getincrement()","title":"func getIncrement() -> Double","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getmaximum(value:)","title":"func getMaximum<GObjectValueT>(value: GObjectValueT)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getminimum(value:)","title":"func getMinimum<GObjectValueT>(value: GObjectValueT)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getminimumincrement(value:)","title":"func getMinimumIncrement<GObjectValueT>(value: GObjectValueT)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getrange()","title":"func getRange() -> RangeRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getsubranges()","title":"func getSubRanges() -> RefSListRef<RangeRef>!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/getvalueandtext(value:text:)","title":"func getValueAndText(value: UnsafeMutablePointer<gdouble>!, text: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!)","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onvaluechanged(flags:handler:)","title":"func onValueChanged(flags: ConnectFlags, handler: (ValueRef, Double, String) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/setcurrent(value:)","title":"func setCurrent<GObjectValueT>(value: GObjectValueT) -> Bool","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/setvalue(newvalue:)","title":"func setValue(newValue: Double)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/valuechangedsignal","title":"static var valueChangedSignal: ValueSignalName","type":"property"}],"path":"\/documentation\/atk\/noopobjectref\/valueprotocol-implementations","title":"ValueProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/window_ptr","title":"var window_ptr: UnsafeMutablePointer<AtkWindow>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/bind(property:to:_:flags:transformfrom:transformto:)-8lc9j","title":"func bind<Q, T>(property: WindowPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/connect(signal:flags:data:destroydata:signalhandler:)-fpx7","title":"func connect(signal: WindowSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/connect(signal:flags:handler:)-9yfgi","title":"func connect(signal: WindowSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onactivate(flags:handler:)","title":"func onActivate(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/oncreate(flags:handler:)","title":"func onCreate(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/ondeactivate(flags:handler:)","title":"func onDeactivate(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/ondestroy(flags:handler:)","title":"func onDestroy(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onmaximize(flags:handler:)","title":"func onMaximize(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onminimize(flags:handler:)","title":"func onMinimize(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onmove(flags:handler:)","title":"func onMove(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onresize(flags:handler:)","title":"func onResize(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/noopobjectref\/onrestore(flags:handler:)","title":"func onRestore(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectref\/activatesignal","title":"static var activateSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/createsignal","title":"static var createSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/deactivatesignal","title":"static var deactivateSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/destroysignal","title":"static var destroySignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/maximizesignal","title":"static var maximizeSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/minimizesignal","title":"static var minimizeSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/movesignal","title":"static var moveSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/resizesignal","title":"static var resizeSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/noopobjectref\/restoresignal","title":"static var restoreSignal: WindowSignalName","type":"property"}],"path":"\/documentation\/atk\/noopobjectref\/windowprotocol-implementations","title":"WindowProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/noopobjectref","title":"NoOpObjectRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/objectclassref\/init(_:)-48vuj","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/objectclassref\/init(_:)-70eu5","title":"init!(UnsafeMutablePointer<AtkObjectClass>?)","type":"init"},{"path":"\/documentation\/atk\/objectclassref\/init(_:)-7pi8e","title":"init(UnsafePointer<AtkObjectClass>)","type":"init"},{"path":"\/documentation\/atk\/objectclassref\/init(_:)-7rgx6","title":"init!(UnsafePointer<AtkObjectClass>?)","type":"init"},{"path":"\/documentation\/atk\/objectclassref\/init(_:)-jqth","title":"init(UnsafeMutablePointer<AtkObjectClass>)","type":"init"},{"path":"\/documentation\/atk\/objectclassref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/objectclassref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/objectclassref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/objectclassref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/objectclassref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/objectclassref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/objectclassref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/objectclassref\/metatype","title":"static var metatype: AtkObjectClass?","type":"property"},{"path":"\/documentation\/atk\/objectclassref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/atk\/objectclassref\/wrapper","title":"static var wrapper: ObjectClassRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/objectclassref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> Object!","type":"method"},{"path":"\/documentation\/atk\/objectclassref\/newobject(properties:nproperties:names:values:)","title":"static func newObject(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> Object!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/objectclassref\/pad1","title":"var pad1: AtkFunction!","type":"property"},{"path":"\/documentation\/atk\/objectclassref\/parent","title":"var parent: GObjectClass","type":"property"}],"path":"\/documentation\/atk\/objectclassref\/objectclassprotocol-implementations","title":"ObjectClassProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/objectclassref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/objectclassref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/atk\/objectclassref","title":"ObjectClassRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/objectfactoryclassref\/init(_:)-1oiga","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/objectfactoryclassref\/init(_:)-2rutc","title":"init(UnsafeMutablePointer<AtkObjectFactoryClass>)","type":"init"},{"path":"\/documentation\/atk\/objectfactoryclassref\/init(_:)-6fu3t","title":"init!(UnsafePointer<AtkObjectFactoryClass>?)","type":"init"},{"path":"\/documentation\/atk\/objectfactoryclassref\/init(_:)-8zco3","title":"init!(UnsafeMutablePointer<AtkObjectFactoryClass>?)","type":"init"},{"path":"\/documentation\/atk\/objectfactoryclassref\/init(_:)-9w5h","title":"init(UnsafePointer<AtkObjectFactoryClass>)","type":"init"},{"path":"\/documentation\/atk\/objectfactoryclassref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/objectfactoryclassref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/objectfactoryclassref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/objectfactoryclassref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/objectfactoryclassref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/objectfactoryclassref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/objectfactoryclassref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/objectfactoryclassref\/metatype","title":"static var metatype: AtkObjectFactoryClass?","type":"property"},{"path":"\/documentation\/atk\/objectfactoryclassref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/atk\/objectfactoryclassref\/wrapper","title":"static var wrapper: ObjectFactoryClassRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/objectfactoryclassref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> ObjectFactory!","type":"method"},{"path":"\/documentation\/atk\/objectfactoryclassref\/newobjectfactory(properties:nproperties:names:values:)","title":"static func newObjectFactory(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> ObjectFactory!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/objectfactoryclassref\/pad1","title":"var pad1: AtkFunction!","type":"property"},{"path":"\/documentation\/atk\/objectfactoryclassref\/pad2","title":"var pad2: AtkFunction!","type":"property"},{"path":"\/documentation\/atk\/objectfactoryclassref\/parentclass","title":"var parentClass: GObjectClass","type":"property"}],"path":"\/documentation\/atk\/objectfactoryclassref\/objectfactoryclassprotocol-implementations","title":"ObjectFactoryClassProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/objectfactoryclassref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/objectfactoryclassref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/atk\/objectfactoryclassref","title":"ObjectFactoryClassRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/objectfactoryref\/init(_:)-23uv6","title":"init(UnsafeMutablePointer<AtkObjectFactory>)","type":"init"},{"path":"\/documentation\/atk\/objectfactoryref\/init(_:)-4ea5b","title":"init!(UnsafeMutablePointer<AtkObjectFactory>?)","type":"init"},{"path":"\/documentation\/atk\/objectfactoryref\/init(_:)-4q7o2","title":"init!(UnsafePointer<AtkObjectFactory>?)","type":"init"},{"path":"\/documentation\/atk\/objectfactoryref\/init(_:)-6je00","title":"init(UnsafePointer<AtkObjectFactory>)","type":"init"},{"path":"\/documentation\/atk\/objectfactoryref\/init(_:)-7haco","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/objectfactoryref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/objectfactoryref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/objectfactoryref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/objectfactoryref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/objectfactoryref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/objectfactoryref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/objectfactoryref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/objectfactoryref\/unowned(_:)","title":"static func unowned<T>(T) -> ObjectFactoryRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/objectfactoryref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/objectfactoryref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/objectfactoryref\/accessibletype","title":"var accessibleType: GType","type":"property"},{"path":"\/documentation\/atk\/objectfactoryref\/object_factory_ptr","title":"var object_factory_ptr: UnsafeMutablePointer<AtkObjectFactory>!","type":"property"},{"path":"\/documentation\/atk\/objectfactoryref\/parent","title":"var parent: GObject","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/objectfactoryref\/createaccessible(obj:)","title":"func createAccessible<GObjectObjectT>(obj: GObjectObjectT) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/getaccessibletype()","title":"func getAccessibleType() -> GType","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/invalidate()","title":"func invalidate()","type":"method"}],"path":"\/documentation\/atk\/objectfactoryref\/objectfactoryprotocol-implementations","title":"ObjectFactoryProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/objectfactoryref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/atk\/objectfactoryref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/atk\/objectfactoryref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/atk\/objectfactoryref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/atk\/objectfactoryref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/atk\/objectfactoryref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/objectfactoryref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/bind(_:to:property:flags:convertfrom:convertto:)-1e0rg","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/bind(_:to:property:flags:convertfrom:convertto:)-97h2i","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/connect(signal:flags:handler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/objectfactoryref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/objectfactoryref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/atk\/objectfactoryref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/atk\/objectfactoryref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/objectfactoryref","title":"ObjectFactoryRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/objectref\/init(_:)-3mvq0","title":"init(UnsafePointer<AtkObject>)","type":"init"},{"path":"\/documentation\/atk\/objectref\/init(_:)-406tp","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/objectref\/init(_:)-7ze5l","title":"init(UnsafeMutablePointer<AtkObject>)","type":"init"},{"path":"\/documentation\/atk\/objectref\/init(_:)-8j7d3","title":"init!(UnsafePointer<AtkObject>?)","type":"init"},{"path":"\/documentation\/atk\/objectref\/init(_:)-9wyer","title":"init!(UnsafeMutablePointer<AtkObject>?)","type":"init"},{"path":"\/documentation\/atk\/objectref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/objectref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/objectref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/objectref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/objectref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/objectref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/objectref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/objectref\/unowned(_:)","title":"static func unowned<T>(T) -> ObjectRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/objectref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/objectref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/objectref\/accessibleid","title":"var accessibleId: String!","type":"property"},{"path":"\/documentation\/atk\/objectref\/accessibleparent","title":"var accessibleParent: ObjectRef!","type":"property"},{"path":"\/documentation\/atk\/objectref\/attributes","title":"var attributes: UnsafeMutablePointer<AtkAttributeSet>!","type":"property"},{"path":"\/documentation\/atk\/objectref\/description","title":"var description: String!","type":"property"},{"path":"\/documentation\/atk\/objectref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/atk\/objectref\/indexinparent","title":"var indexInParent: Int","type":"property"},{"path":"\/documentation\/atk\/objectref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/atk\/objectref\/layer","title":"var layer: AtkLayer","type":"property"},{"path":"\/documentation\/atk\/objectref\/mdizorder","title":"var mdiZorder: Int","type":"property"},{"path":"\/documentation\/atk\/objectref\/naccessiblechildren","title":"var nAccessibleChildren: Int","type":"property"},{"path":"\/documentation\/atk\/objectref\/name","title":"var name: String!","type":"property"},{"path":"\/documentation\/atk\/objectref\/objectlocale","title":"var objectLocale: String!","type":"property"},{"path":"\/documentation\/atk\/objectref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<AtkObject>!","type":"property"},{"path":"\/documentation\/atk\/objectref\/parent","title":"var parent: ObjectRef!","type":"property"},{"path":"\/documentation\/atk\/objectref\/relationset","title":"var relationSet: RelationSetRef!","type":"property"},{"path":"\/documentation\/atk\/objectref\/role","title":"var role: AtkRole","type":"property"},{"path":"\/documentation\/atk\/objectref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/atk\/objectref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/atk\/objectref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/objectref\/add(relationship:target:)","title":"func add<ObjectT>(relationship: AtkRelationType, target: ObjectT) -> Bool","type":"method"},{"path":"\/documentation\/atk\/objectref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/objectref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/atk\/objectref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/objectref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/objectref\/bind(_:to:property:flags:convertfrom:convertto:)-22oj3","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/objectref\/bind(_:to:property:flags:convertfrom:convertto:)-5shvu","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/objectref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/objectref\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: ObjectPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/objectref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/objectref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/objectref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/objectref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/objectref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/objectref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/atk\/objectref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/connect(signal:flags:handler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/connectpropertychange(handler:)","title":"func connectPropertyChange(handler: UnsafeMutablePointer<AtkPropertyChangeHandler?>!) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/objectref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/objectref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/objectref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/objectref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/objectref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/objectref\/focustrackernotify()","title":"func focusTrackerNotify()","type":"method"},{"path":"\/documentation\/atk\/objectref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/atk\/objectref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/atk\/objectref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/atk\/objectref\/get(property:)","title":"func get(property: ObjectPropertyName) -> Value","type":"method"},{"path":"\/documentation\/atk\/objectref\/getaccessibleid()","title":"func getAccessibleId() -> String!","type":"method"},{"path":"\/documentation\/atk\/objectref\/getattributes()","title":"func getAttributes() -> UnsafeMutablePointer<AtkAttributeSet>!","type":"method"},{"path":"\/documentation\/atk\/objectref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/objectref\/getdescription()","title":"func getDescription() -> String!","type":"method"},{"path":"\/documentation\/atk\/objectref\/getindexinparent()","title":"func getIndexInParent() -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/getlayer()","title":"func getLayer() -> AtkLayer","type":"method"},{"path":"\/documentation\/atk\/objectref\/getmdizorder()","title":"func getMdiZorder() -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/getnaccessiblechildren()","title":"func getNAccessibleChildren() -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/getname()","title":"func getName() -> String!","type":"method"},{"path":"\/documentation\/atk\/objectref\/getobjectlocale()","title":"func getObjectLocale() -> String!","type":"method"},{"path":"\/documentation\/atk\/objectref\/getparent()","title":"func getParent() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/objectref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/objectref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/objectref\/getrole()","title":"func getRole() -> AtkRole","type":"method"},{"path":"\/documentation\/atk\/objectref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/objectref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/objectref\/initialize(data:)","title":"func initialize(data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/objectref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/objectref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/atk\/objectref\/notifystatechange(state:value:)","title":"func notifyStateChange(state: AtkState, value: Bool)","type":"method"},{"path":"\/documentation\/atk\/objectref\/onactivedescendantchanged(flags:handler:)","title":"func onActiveDescendantChanged(flags: ConnectFlags, handler: (ObjectRef, ObjectRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/onannouncement(flags:handler:)","title":"func onAnnouncement(flags: ConnectFlags, handler: (ObjectRef, String) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/onchildrenchanged(flags:handler:)","title":"func onChildrenChanged(flags: ConnectFlags, handler: (ObjectRef, UInt, ObjectRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/onfocusevent(flags:handler:)","title":"func onFocusEvent(flags: ConnectFlags, handler: (ObjectRef, Bool) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/onnotification(flags:handler:)","title":"func onNotification(flags: ConnectFlags, handler: (ObjectRef, String, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/onnotifyaccessiblecomponentlayer(flags:handler:)","title":"func onNotifyAccessibleComponentLayer(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/onnotifyaccessiblecomponentmdizorder(flags:handler:)","title":"func onNotifyAccessibleComponentMdiZorder(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/onnotifyaccessibledescription(flags:handler:)","title":"func onNotifyAccessibleDescription(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/onnotifyaccessiblehypertextnlinks(flags:handler:)","title":"func onNotifyAccessibleHypertextNlinks(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/onnotifyaccessiblename(flags:handler:)","title":"func onNotifyAccessibleName(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/onnotifyaccessibleparent(flags:handler:)","title":"func onNotifyAccessibleParent(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/onnotifyaccessiblerole(flags:handler:)","title":"func onNotifyAccessibleRole(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/onnotifyaccessibletablecaption(flags:handler:)","title":"func onNotifyAccessibleTableCaption(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/onnotifyaccessibletablecaptionobject(flags:handler:)","title":"func onNotifyAccessibleTableCaptionObject(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/onnotifyaccessibletablecolumndescription(flags:handler:)","title":"func onNotifyAccessibleTableColumnDescription(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/onnotifyaccessibletablecolumnheader(flags:handler:)","title":"func onNotifyAccessibleTableColumnHeader(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/onnotifyaccessibletablerowdescription(flags:handler:)","title":"func onNotifyAccessibleTableRowDescription(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/onnotifyaccessibletablerowheader(flags:handler:)","title":"func onNotifyAccessibleTableRowHeader(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/onnotifyaccessibletablesummary(flags:handler:)","title":"func onNotifyAccessibleTableSummary(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/onnotifyaccessiblevalue(flags:handler:)","title":"func onNotifyAccessibleValue(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/onpropertychange(flags:handler:)","title":"func onPropertyChange(flags: ConnectFlags, handler: (ObjectRef, PropertyValuesRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/onstatechange(flags:handler:)","title":"func onStateChange(flags: ConnectFlags, handler: (ObjectRef, String, Bool) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/onvisibledatachanged(flags:handler:)","title":"func onVisibleDataChanged(flags: ConnectFlags, handler: (ObjectRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/peekparent()","title":"func peekParent() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/objectref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/objectref\/refaccessiblechild(i:)","title":"func refAccessibleChild(i: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/objectref\/refrelationset()","title":"func refRelationSet() -> RelationSetRef!","type":"method"},{"path":"\/documentation\/atk\/objectref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/objectref\/refstateset()","title":"func refStateSet() -> StateSetRef!","type":"method"},{"path":"\/documentation\/atk\/objectref\/remove(relationship:target:)","title":"func remove<ObjectT>(relationship: AtkRelationType, target: ObjectT) -> Bool","type":"method"},{"path":"\/documentation\/atk\/objectref\/removepropertychangehandler(handlerid:)","title":"func removePropertyChangeHandler(handlerId: Int)","type":"method"},{"path":"\/documentation\/atk\/objectref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/objectref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/objectref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/objectref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/objectref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/atk\/objectref\/set(description:)","title":"func set(description: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/objectref\/set(name:)","title":"func set(name: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/objectref\/set(parent:)","title":"func set<ObjectT>(parent: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/objectref\/set(property:value:)","title":"func set(property: ObjectPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/atk\/objectref\/set(role:)","title":"func set(role: AtkRole)","type":"method"},{"path":"\/documentation\/atk\/objectref\/setaccessibleid(name:)","title":"func setAccessibleId(name: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/objectref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/objectref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/objectref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/objectref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/objectref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/objectref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/objectref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/objectref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/atk\/objectref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/objectref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/objectref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/objectref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/objectref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/atk\/objectref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/objectref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/atk\/objectref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/atk\/objectref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/objectref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/objectref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/objectref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/objectref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/atk\/objectref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/atk\/objectref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/atk\/objectref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/atk\/objectref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/objectref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/objectref\/activedescendantchangedsignal","title":"static var activeDescendantChangedSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectref\/announcementsignal","title":"static var announcementSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectref\/childrenchangedsignal","title":"static var childrenChangedSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectref\/focuseventsignal","title":"static var focusEventSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectref\/notificationsignal","title":"static var notificationSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectref\/notifyaccessiblecomponentlayersignal","title":"static var notifyAccessibleComponentLayerSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectref\/notifyaccessiblecomponentmdizordersignal","title":"static var notifyAccessibleComponentMdiZorderSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectref\/notifyaccessibledescriptionsignal","title":"static var notifyAccessibleDescriptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectref\/notifyaccessiblehypertextnlinkssignal","title":"static var notifyAccessibleHypertextNlinksSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectref\/notifyaccessiblenamesignal","title":"static var notifyAccessibleNameSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectref\/notifyaccessibleparentsignal","title":"static var notifyAccessibleParentSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectref\/notifyaccessiblerolesignal","title":"static var notifyAccessibleRoleSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectref\/notifyaccessibletablecaptionobjectsignal","title":"static var notifyAccessibleTableCaptionObjectSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectref\/notifyaccessibletablecaptionsignal","title":"static var notifyAccessibleTableCaptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectref\/notifyaccessibletablecolumndescriptionsignal","title":"static var notifyAccessibleTableColumnDescriptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectref\/notifyaccessibletablecolumnheadersignal","title":"static var notifyAccessibleTableColumnHeaderSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectref\/notifyaccessibletablerowdescriptionsignal","title":"static var notifyAccessibleTableRowDescriptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectref\/notifyaccessibletablerowheadersignal","title":"static var notifyAccessibleTableRowHeaderSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectref\/notifyaccessibletablesummarysignal","title":"static var notifyAccessibleTableSummarySignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectref\/notifyaccessiblevaluesignal","title":"static var notifyAccessibleValueSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectref\/propertychangesignal","title":"static var propertyChangeSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectref\/statechangesignal","title":"static var stateChangeSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/objectref\/visibledatachangedsignal","title":"static var visibleDataChangedSignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/objectref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/atk\/objectref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/atk\/objectref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/atk\/objectref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/objectref","title":"ObjectRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/plugclassref\/init(_:)-2f91o","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/plugclassref\/init(_:)-7hlzi","title":"init(UnsafeMutablePointer<AtkPlugClass>)","type":"init"},{"path":"\/documentation\/atk\/plugclassref\/init(_:)-7nyw4","title":"init!(UnsafeMutablePointer<AtkPlugClass>?)","type":"init"},{"path":"\/documentation\/atk\/plugclassref\/init(_:)-8q7ht","title":"init!(UnsafePointer<AtkPlugClass>?)","type":"init"},{"path":"\/documentation\/atk\/plugclassref\/init(_:)-9v02t","title":"init(UnsafePointer<AtkPlugClass>)","type":"init"},{"path":"\/documentation\/atk\/plugclassref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/plugclassref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/plugclassref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/plugclassref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/plugclassref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/plugclassref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/plugclassref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/plugclassref\/metatype","title":"static var metatype: AtkPlugClass?","type":"property"},{"path":"\/documentation\/atk\/plugclassref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/atk\/plugclassref\/wrapper","title":"static var wrapper: PlugClassRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/plugclassref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> Plug!","type":"method"},{"path":"\/documentation\/atk\/plugclassref\/newplug(properties:nproperties:names:values:)","title":"static func newPlug(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> Plug!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/plugclassref\/parentclass","title":"var parentClass: AtkObjectClass","type":"property"}],"path":"\/documentation\/atk\/plugclassref\/plugclassprotocol-implementations","title":"PlugClassProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/plugclassref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/plugclassref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/atk\/plugclassref","title":"PlugClassRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/plugref\/init()","title":"init()","type":"init"},{"path":"\/documentation\/atk\/plugref\/init(_:)-1n38x","title":"init(UnsafePointer<AtkPlug>)","type":"init"},{"path":"\/documentation\/atk\/plugref\/init(_:)-22qa4","title":"init(UnsafeMutablePointer<AtkPlug>)","type":"init"},{"path":"\/documentation\/atk\/plugref\/init(_:)-5a7qn","title":"init!(UnsafePointer<AtkPlug>?)","type":"init"},{"path":"\/documentation\/atk\/plugref\/init(_:)-84kr9","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/plugref\/init(_:)-cng9","title":"init!(UnsafeMutablePointer<AtkPlug>?)","type":"init"},{"path":"\/documentation\/atk\/plugref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/plugref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/plugref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/plugref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/plugref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/plugref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/plugref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/plugref\/unowned(_:)","title":"static func unowned<T>(T) -> PlugRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/plugref\/alpha","title":"var alpha: Double","type":"property"},{"path":"\/documentation\/atk\/plugref\/component_ptr","title":"var component_ptr: UnsafeMutablePointer<AtkComponent>!","type":"property"},{"path":"\/documentation\/atk\/plugref\/layer-6biop","title":"var layer: AtkLayer","type":"property"},{"path":"\/documentation\/atk\/plugref\/mdizorder-5bc75","title":"var mdiZorder: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/plugref\/addfocus(handler:)","title":"func addFocus(handler: AtkFocusHandler?) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/connect(signal:flags:data:destroydata:signalhandler:)-585vx","title":"func connect(signal: ComponentSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/connect(signal:flags:handler:)-91qfe","title":"func connect(signal: ComponentSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/contains(x:y:coordtype:)","title":"func contains(x: Int, y: Int, coordType: AtkCoordType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/plugref\/getalpha()","title":"func getAlpha() -> Double","type":"method"},{"path":"\/documentation\/atk\/plugref\/getextents(x:y:width:height:coordtype:)","title":"func getExtents(x: UnsafeMutablePointer<gint>!, y: UnsafeMutablePointer<gint>!, width: UnsafeMutablePointer<gint>!, height: UnsafeMutablePointer<gint>!, coordType: AtkCoordType)","type":"method"},{"path":"\/documentation\/atk\/plugref\/getlayer()-5kkva","title":"func getLayer() -> AtkLayer","type":"method"},{"path":"\/documentation\/atk\/plugref\/getmdizorder()-8exgu","title":"func getMdiZorder() -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/getposition(x:y:coordtype:)","title":"func getPosition(x: UnsafeMutablePointer<gint>!, y: UnsafeMutablePointer<gint>!, coordType: AtkCoordType)","type":"method"},{"path":"\/documentation\/atk\/plugref\/getsize(width:height:)","title":"func getSize(width: UnsafeMutablePointer<gint>!, height: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/atk\/plugref\/grabfocus()","title":"func grabFocus() -> Bool","type":"method"},{"path":"\/documentation\/atk\/plugref\/onboundschanged(flags:handler:)","title":"func onBoundsChanged(flags: ConnectFlags, handler: (ComponentRef, RectangleRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/refaccessibleatpoint(x:y:coordtype:)","title":"func refAccessibleAtPoint(x: Int, y: Int, coordType: AtkCoordType) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/plugref\/removefocushandler(handlerid:)","title":"func removeFocusHandler(handlerId: Int)","type":"method"},{"path":"\/documentation\/atk\/plugref\/scrollto(type:)","title":"func scrollTo(type: AtkScrollType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/plugref\/scrolltopoint(coords:x:y:)","title":"func scrollToPoint(coords: AtkCoordType, x: Int, y: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/plugref\/setextents(x:y:width:height:coordtype:)","title":"func setExtents(x: Int, y: Int, width: Int, height: Int, coordType: AtkCoordType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/plugref\/setposition(x:y:coordtype:)","title":"func setPosition(x: Int, y: Int, coordType: AtkCoordType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/plugref\/setsize(width:height:)","title":"func setSize(width: Int, height: Int) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/plugref\/boundschangedsignal","title":"static var boundsChangedSignal: ComponentSignalName","type":"property"}],"path":"\/documentation\/atk\/plugref\/componentprotocol-implementations","title":"ComponentProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/plugref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/plugref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/plugref\/accessibleid","title":"var accessibleId: String!","type":"property"},{"path":"\/documentation\/atk\/plugref\/accessibleparent","title":"var accessibleParent: ObjectRef!","type":"property"},{"path":"\/documentation\/atk\/plugref\/attributes","title":"var attributes: UnsafeMutablePointer<AtkAttributeSet>!","type":"property"},{"path":"\/documentation\/atk\/plugref\/description","title":"var description: String!","type":"property"},{"path":"\/documentation\/atk\/plugref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/atk\/plugref\/indexinparent","title":"var indexInParent: Int","type":"property"},{"path":"\/documentation\/atk\/plugref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/atk\/plugref\/layer-1vbb4","title":"var layer: AtkLayer","type":"property"},{"path":"\/documentation\/atk\/plugref\/mdizorder-6bxys","title":"var mdiZorder: Int","type":"property"},{"path":"\/documentation\/atk\/plugref\/naccessiblechildren","title":"var nAccessibleChildren: Int","type":"property"},{"path":"\/documentation\/atk\/plugref\/name","title":"var name: String!","type":"property"},{"path":"\/documentation\/atk\/plugref\/objectlocale","title":"var objectLocale: String!","type":"property"},{"path":"\/documentation\/atk\/plugref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<AtkObject>!","type":"property"},{"path":"\/documentation\/atk\/plugref\/relationset","title":"var relationSet: RelationSetRef!","type":"property"},{"path":"\/documentation\/atk\/plugref\/role","title":"var role: AtkRole","type":"property"},{"path":"\/documentation\/atk\/plugref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/atk\/plugref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/atk\/plugref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/plugref\/add(relationship:target:)","title":"func add<ObjectT>(relationship: AtkRelationType, target: ObjectT) -> Bool","type":"method"},{"path":"\/documentation\/atk\/plugref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/plugref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/atk\/plugref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/plugref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/plugref\/bind(_:to:property:flags:convertfrom:convertto:)-4t227","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/plugref\/bind(_:to:property:flags:convertfrom:convertto:)-9fa31","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/plugref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/plugref\/bind(property:to:_:flags:transformfrom:transformto:)-v4o3","title":"func bind<Q, T>(property: ObjectPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/plugref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/plugref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/plugref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/plugref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/plugref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/plugref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/atk\/plugref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/connect(signal:flags:data:destroydata:signalhandler:)-8ttjh","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/connect(signal:flags:data:destroydata:signalhandler:)-nmn1","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/connect(signal:flags:handler:)-6a86e","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/connect(signal:flags:handler:)-8j2d","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/connectpropertychange(handler:)","title":"func connectPropertyChange(handler: UnsafeMutablePointer<AtkPropertyChangeHandler?>!) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/plugref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/plugref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/plugref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/plugref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/plugref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/plugref\/focustrackernotify()","title":"func focusTrackerNotify()","type":"method"},{"path":"\/documentation\/atk\/plugref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/atk\/plugref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/atk\/plugref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/atk\/plugref\/getaccessibleid()","title":"func getAccessibleId() -> String!","type":"method"},{"path":"\/documentation\/atk\/plugref\/getattributes()","title":"func getAttributes() -> UnsafeMutablePointer<AtkAttributeSet>!","type":"method"},{"path":"\/documentation\/atk\/plugref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/plugref\/getdescription()","title":"func getDescription() -> String!","type":"method"},{"path":"\/documentation\/atk\/plugref\/getindexinparent()","title":"func getIndexInParent() -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/getlayer()-109tg","title":"func getLayer() -> AtkLayer","type":"method"},{"path":"\/documentation\/atk\/plugref\/getmdizorder()-68vb9","title":"func getMdiZorder() -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/getnaccessiblechildren()","title":"func getNAccessibleChildren() -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/getname()","title":"func getName() -> String!","type":"method"},{"path":"\/documentation\/atk\/plugref\/getobjectlocale()","title":"func getObjectLocale() -> String!","type":"method"},{"path":"\/documentation\/atk\/plugref\/getparent()","title":"func getParent() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/plugref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/plugref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/plugref\/getrole()","title":"func getRole() -> AtkRole","type":"method"},{"path":"\/documentation\/atk\/plugref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/plugref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/plugref\/initialize(data:)","title":"func initialize(data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/plugref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/plugref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/atk\/plugref\/notifystatechange(state:value:)","title":"func notifyStateChange(state: AtkState, value: Bool)","type":"method"},{"path":"\/documentation\/atk\/plugref\/onactivedescendantchanged(flags:handler:)","title":"func onActiveDescendantChanged(flags: ConnectFlags, handler: (ObjectRef, ObjectRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/onannouncement(flags:handler:)","title":"func onAnnouncement(flags: ConnectFlags, handler: (ObjectRef, String) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/onchildrenchanged(flags:handler:)","title":"func onChildrenChanged(flags: ConnectFlags, handler: (ObjectRef, UInt, ObjectRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/onfocusevent(flags:handler:)","title":"func onFocusEvent(flags: ConnectFlags, handler: (ObjectRef, Bool) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/onnotification(flags:handler:)","title":"func onNotification(flags: ConnectFlags, handler: (ObjectRef, String, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/onnotifyaccessiblecomponentlayer(flags:handler:)","title":"func onNotifyAccessibleComponentLayer(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/onnotifyaccessiblecomponentmdizorder(flags:handler:)","title":"func onNotifyAccessibleComponentMdiZorder(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/onnotifyaccessibledescription(flags:handler:)","title":"func onNotifyAccessibleDescription(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/onnotifyaccessiblehypertextnlinks(flags:handler:)","title":"func onNotifyAccessibleHypertextNlinks(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/onnotifyaccessiblename(flags:handler:)","title":"func onNotifyAccessibleName(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/onnotifyaccessibleparent(flags:handler:)","title":"func onNotifyAccessibleParent(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/onnotifyaccessiblerole(flags:handler:)","title":"func onNotifyAccessibleRole(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/onnotifyaccessibletablecaption(flags:handler:)","title":"func onNotifyAccessibleTableCaption(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/onnotifyaccessibletablecaptionobject(flags:handler:)","title":"func onNotifyAccessibleTableCaptionObject(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/onnotifyaccessibletablecolumndescription(flags:handler:)","title":"func onNotifyAccessibleTableColumnDescription(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/onnotifyaccessibletablecolumnheader(flags:handler:)","title":"func onNotifyAccessibleTableColumnHeader(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/onnotifyaccessibletablerowdescription(flags:handler:)","title":"func onNotifyAccessibleTableRowDescription(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/onnotifyaccessibletablerowheader(flags:handler:)","title":"func onNotifyAccessibleTableRowHeader(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/onnotifyaccessibletablesummary(flags:handler:)","title":"func onNotifyAccessibleTableSummary(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/onnotifyaccessiblevalue(flags:handler:)","title":"func onNotifyAccessibleValue(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/onpropertychange(flags:handler:)","title":"func onPropertyChange(flags: ConnectFlags, handler: (ObjectRef, PropertyValuesRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/onstatechange(flags:handler:)","title":"func onStateChange(flags: ConnectFlags, handler: (ObjectRef, String, Bool) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/onvisibledatachanged(flags:handler:)","title":"func onVisibleDataChanged(flags: ConnectFlags, handler: (ObjectRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/peekparent()","title":"func peekParent() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/plugref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/plugref\/refaccessiblechild(i:)","title":"func refAccessibleChild(i: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/plugref\/refrelationset()","title":"func refRelationSet() -> RelationSetRef!","type":"method"},{"path":"\/documentation\/atk\/plugref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/plugref\/refstateset()","title":"func refStateSet() -> StateSetRef!","type":"method"},{"path":"\/documentation\/atk\/plugref\/remove(relationship:target:)","title":"func remove<ObjectT>(relationship: AtkRelationType, target: ObjectT) -> Bool","type":"method"},{"path":"\/documentation\/atk\/plugref\/removepropertychangehandler(handlerid:)","title":"func removePropertyChangeHandler(handlerId: Int)","type":"method"},{"path":"\/documentation\/atk\/plugref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/plugref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/plugref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/plugref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/plugref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/atk\/plugref\/set(description:)","title":"func set(description: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/plugref\/set(name:)","title":"func set(name: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/plugref\/set(parent:)","title":"func set<ObjectT>(parent: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/plugref\/set(role:)","title":"func set(role: AtkRole)","type":"method"},{"path":"\/documentation\/atk\/plugref\/setaccessibleid(name:)","title":"func setAccessibleId(name: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/plugref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/plugref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/plugref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/plugref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/plugref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/plugref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/plugref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/plugref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/atk\/plugref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/plugref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/plugref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/plugref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/plugref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/atk\/plugref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/plugref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/atk\/plugref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/atk\/plugref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/plugref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/plugref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/plugref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/plugref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/atk\/plugref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/atk\/plugref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/atk\/plugref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/atk\/plugref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/plugref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/plugref\/activedescendantchangedsignal","title":"static var activeDescendantChangedSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/plugref\/announcementsignal","title":"static var announcementSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/plugref\/childrenchangedsignal","title":"static var childrenChangedSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/plugref\/focuseventsignal","title":"static var focusEventSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/plugref\/notificationsignal","title":"static var notificationSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/plugref\/notifyaccessiblecomponentlayersignal","title":"static var notifyAccessibleComponentLayerSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/plugref\/notifyaccessiblecomponentmdizordersignal","title":"static var notifyAccessibleComponentMdiZorderSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/plugref\/notifyaccessibledescriptionsignal","title":"static var notifyAccessibleDescriptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/plugref\/notifyaccessiblehypertextnlinkssignal","title":"static var notifyAccessibleHypertextNlinksSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/plugref\/notifyaccessiblenamesignal","title":"static var notifyAccessibleNameSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/plugref\/notifyaccessibleparentsignal","title":"static var notifyAccessibleParentSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/plugref\/notifyaccessiblerolesignal","title":"static var notifyAccessibleRoleSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/plugref\/notifyaccessibletablecaptionobjectsignal","title":"static var notifyAccessibleTableCaptionObjectSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/plugref\/notifyaccessibletablecaptionsignal","title":"static var notifyAccessibleTableCaptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/plugref\/notifyaccessibletablecolumndescriptionsignal","title":"static var notifyAccessibleTableColumnDescriptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/plugref\/notifyaccessibletablecolumnheadersignal","title":"static var notifyAccessibleTableColumnHeaderSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/plugref\/notifyaccessibletablerowdescriptionsignal","title":"static var notifyAccessibleTableRowDescriptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/plugref\/notifyaccessibletablerowheadersignal","title":"static var notifyAccessibleTableRowHeaderSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/plugref\/notifyaccessibletablesummarysignal","title":"static var notifyAccessibleTableSummarySignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/plugref\/notifyaccessiblevaluesignal","title":"static var notifyAccessibleValueSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/plugref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/plugref\/propertychangesignal","title":"static var propertyChangeSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/plugref\/statechangesignal","title":"static var stateChangeSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/plugref\/visibledatachangedsignal","title":"static var visibleDataChangedSignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/plugref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/atk\/plugref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/atk\/plugref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/atk\/plugref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/plugref\/id","title":"var id: String!","type":"property"},{"path":"\/documentation\/atk\/plugref\/parent","title":"var parent: AtkObject","type":"property"},{"path":"\/documentation\/atk\/plugref\/plug_ptr","title":"var plug_ptr: UnsafeMutablePointer<AtkPlug>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/plugref\/bind(property:to:_:flags:transformfrom:transformto:)-4fvb1","title":"func bind<Q, T>(property: PlugPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/plugref\/get(property:)","title":"func get(property: PlugPropertyName) -> Value","type":"method"},{"path":"\/documentation\/atk\/plugref\/getid()","title":"func getId() -> String!","type":"method"},{"path":"\/documentation\/atk\/plugref\/set(child:)","title":"func set<ObjectT>(child: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/plugref\/set(property:value:)","title":"func set(property: PlugPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/atk\/plugref\/plugprotocol-implementations","title":"PlugProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/plugref","title":"PlugRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/propertyvaluesref\/init(_:)-1sc6m","title":"init!(UnsafePointer<AtkPropertyValues>?)","type":"init"},{"path":"\/documentation\/atk\/propertyvaluesref\/init(_:)-2ul39","title":"init!(UnsafeMutablePointer<AtkPropertyValues>?)","type":"init"},{"path":"\/documentation\/atk\/propertyvaluesref\/init(_:)-64odn","title":"init(UnsafePointer<AtkPropertyValues>)","type":"init"},{"path":"\/documentation\/atk\/propertyvaluesref\/init(_:)-69ldp","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/propertyvaluesref\/init(_:)-9x9st","title":"init(UnsafeMutablePointer<AtkPropertyValues>)","type":"init"},{"path":"\/documentation\/atk\/propertyvaluesref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/propertyvaluesref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/propertyvaluesref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/propertyvaluesref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/propertyvaluesref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/propertyvaluesref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/propertyvaluesref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/propertyvaluesref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/propertyvaluesref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/propertyvaluesref\/newvalue","title":"var newValue: GValue","type":"property"},{"path":"\/documentation\/atk\/propertyvaluesref\/oldvalue","title":"var oldValue: GValue","type":"property"},{"path":"\/documentation\/atk\/propertyvaluesref\/propertyname","title":"var propertyName: UnsafePointer<gchar>!","type":"property"}],"path":"\/documentation\/atk\/propertyvaluesref\/propertyvaluesprotocol-implementations","title":"PropertyValuesProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/propertyvaluesref","title":"PropertyValuesRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/rangeref\/init(_:)-1qpt3","title":"init(UnsafeMutablePointer<AtkRange>)","type":"init"},{"path":"\/documentation\/atk\/rangeref\/init(_:)-8t7kv","title":"init!(UnsafePointer<AtkRange>?)","type":"init"},{"path":"\/documentation\/atk\/rangeref\/init(_:)-8w7f","title":"init(UnsafePointer<AtkRange>)","type":"init"},{"path":"\/documentation\/atk\/rangeref\/init(_:)-9iue","title":"init!(UnsafeMutablePointer<AtkRange>?)","type":"init"},{"path":"\/documentation\/atk\/rangeref\/init(_:)-wbmf","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/rangeref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/rangeref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/rangeref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/rangeref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/rangeref\/init(lowerlimit:upperlimit:description:)","title":"init(lowerLimit: Double, upperLimit: Double, description: UnsafePointer<gchar>!)","type":"init"},{"path":"\/documentation\/atk\/rangeref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/rangeref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/rangeref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/rangeref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/rangeref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/rangeref\/description","title":"var description: String!","type":"property"},{"path":"\/documentation\/atk\/rangeref\/lowerlimit","title":"var lowerLimit: Double","type":"property"},{"path":"\/documentation\/atk\/rangeref\/range_ptr","title":"var range_ptr: UnsafeMutablePointer<AtkRange>!","type":"property"},{"path":"\/documentation\/atk\/rangeref\/upperlimit","title":"var upperLimit: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/rangeref\/copy()","title":"func copy() -> RangeRef!","type":"method"},{"path":"\/documentation\/atk\/rangeref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/atk\/rangeref\/getdescription()","title":"func getDescription() -> String!","type":"method"},{"path":"\/documentation\/atk\/rangeref\/getlowerlimit()","title":"func getLowerLimit() -> Double","type":"method"},{"path":"\/documentation\/atk\/rangeref\/getupperlimit()","title":"func getUpperLimit() -> Double","type":"method"}],"path":"\/documentation\/atk\/rangeref\/rangeprotocol-implementations","title":"RangeProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/rangeref","title":"RangeRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/rectangleref\/init(_:)-13al5","title":"init!(UnsafeMutablePointer<AtkRectangle>?)","type":"init"},{"path":"\/documentation\/atk\/rectangleref\/init(_:)-2zm74","title":"init(UnsafePointer<AtkRectangle>)","type":"init"},{"path":"\/documentation\/atk\/rectangleref\/init(_:)-6whoz","title":"init!(UnsafePointer<AtkRectangle>?)","type":"init"},{"path":"\/documentation\/atk\/rectangleref\/init(_:)-8mf4j","title":"init(UnsafeMutablePointer<AtkRectangle>)","type":"init"},{"path":"\/documentation\/atk\/rectangleref\/init(_:)-srmv","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/rectangleref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/rectangleref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/rectangleref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/rectangleref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/rectangleref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/rectangleref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/rectangleref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/rectangleref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/rectangleref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/rectangleref\/height","title":"var height: gint","type":"property"},{"path":"\/documentation\/atk\/rectangleref\/rectangle_ptr","title":"var rectangle_ptr: UnsafeMutablePointer<AtkRectangle>!","type":"property"},{"path":"\/documentation\/atk\/rectangleref\/width","title":"var width: gint","type":"property"},{"path":"\/documentation\/atk\/rectangleref\/x","title":"var x: gint","type":"property"},{"path":"\/documentation\/atk\/rectangleref\/y","title":"var y: gint","type":"property"}],"path":"\/documentation\/atk\/rectangleref\/rectangleprotocol-implementations","title":"RectangleProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/rectangleref","title":"RectangleRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/registryclassref\/init(_:)-1hj5r","title":"init!(UnsafeMutablePointer<AtkRegistryClass>?)","type":"init"},{"path":"\/documentation\/atk\/registryclassref\/init(_:)-1tynr","title":"init(UnsafeMutablePointer<AtkRegistryClass>)","type":"init"},{"path":"\/documentation\/atk\/registryclassref\/init(_:)-4xut9","title":"init(UnsafePointer<AtkRegistryClass>)","type":"init"},{"path":"\/documentation\/atk\/registryclassref\/init(_:)-6p8v4","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/registryclassref\/init(_:)-7quol","title":"init!(UnsafePointer<AtkRegistryClass>?)","type":"init"},{"path":"\/documentation\/atk\/registryclassref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/registryclassref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/registryclassref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/registryclassref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/registryclassref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/registryclassref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/registryclassref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/registryclassref\/metatype","title":"static var metatype: AtkRegistryClass?","type":"property"},{"path":"\/documentation\/atk\/registryclassref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/atk\/registryclassref\/wrapper","title":"static var wrapper: RegistryClassRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/registryclassref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> Registry!","type":"method"},{"path":"\/documentation\/atk\/registryclassref\/newregistry(properties:nproperties:names:values:)","title":"static func newRegistry(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> Registry!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/registryclassref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/registryclassref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/registryclassref\/parentclass","title":"var parentClass: GObjectClass","type":"property"}],"path":"\/documentation\/atk\/registryclassref\/registryclassprotocol-implementations","title":"RegistryClassProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/registryclassref","title":"RegistryClassRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/registryref\/init(_:)-4uylf","title":"init(UnsafeMutablePointer<AtkRegistry>)","type":"init"},{"path":"\/documentation\/atk\/registryref\/init(_:)-5gyr6","title":"init!(UnsafeMutablePointer<AtkRegistry>?)","type":"init"},{"path":"\/documentation\/atk\/registryref\/init(_:)-6cs67","title":"init(UnsafePointer<AtkRegistry>)","type":"init"},{"path":"\/documentation\/atk\/registryref\/init(_:)-6wvh0","title":"init!(UnsafePointer<AtkRegistry>?)","type":"init"},{"path":"\/documentation\/atk\/registryref\/init(_:)-8jxaz","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/registryref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/registryref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/registryref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/registryref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/registryref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/registryref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/registryref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/registryref\/unowned(_:)","title":"static func unowned<T>(T) -> RegistryRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/registryref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/registryref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/registryref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/atk\/registryref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/atk\/registryref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/atk\/registryref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/atk\/registryref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/atk\/registryref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/registryref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/registryref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/atk\/registryref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/registryref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/registryref\/bind(_:to:property:flags:convertfrom:convertto:)-4nmfh","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/registryref\/bind(_:to:property:flags:convertfrom:convertto:)-6d2y3","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/registryref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/registryref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/registryref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/registryref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/registryref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/registryref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/registryref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/atk\/registryref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/registryref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/registryref\/connect(signal:flags:handler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/registryref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/registryref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/registryref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/registryref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/registryref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/registryref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/registryref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/registryref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/atk\/registryref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/atk\/registryref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/atk\/registryref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/registryref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/registryref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/registryref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/registryref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/registryref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/registryref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/atk\/registryref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/registryref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/registryref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/registryref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/registryref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/registryref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/registryref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/registryref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/atk\/registryref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/registryref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/registryref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/registryref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/registryref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/registryref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/registryref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/registryref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/registryref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/registryref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/registryref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/registryref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/atk\/registryref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/registryref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/registryref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/registryref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/registryref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/registryref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/registryref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/atk\/registryref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/registryref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/registryref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/atk\/registryref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/atk\/registryref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/registryref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/registryref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/registryref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/registryref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/atk\/registryref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/atk\/registryref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/atk\/registryref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/atk\/registryref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/registryref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/registryref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/registryref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/atk\/registryref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/atk\/registryref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/atk\/registryref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/registryref\/factorysingletoncache","title":"var factorySingletonCache: HashTableRef!","type":"property"},{"path":"\/documentation\/atk\/registryref\/factorytyperegistry","title":"var factoryTypeRegistry: HashTableRef!","type":"property"},{"path":"\/documentation\/atk\/registryref\/parent","title":"var parent: GObject","type":"property"},{"path":"\/documentation\/atk\/registryref\/registry_ptr","title":"var registry_ptr: UnsafeMutablePointer<AtkRegistry>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/registryref\/getfactory(type:)-31z2w","title":"func getFactory(type: GType) -> GType","type":"method"},{"path":"\/documentation\/atk\/registryref\/getfactory(type:)-7luyu","title":"func getFactory(type: GType) -> ObjectFactoryRef!","type":"method"},{"path":"\/documentation\/atk\/registryref\/setfactory(type:factorytype:)","title":"func setFactory(type: GType, factoryType: GType)","type":"method"}],"path":"\/documentation\/atk\/registryref\/registryprotocol-implementations","title":"RegistryProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/registryref","title":"RegistryRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/relationclassref\/init(_:)-1eu9m","title":"init!(UnsafePointer<AtkRelationClass>?)","type":"init"},{"path":"\/documentation\/atk\/relationclassref\/init(_:)-2ha6n","title":"init(UnsafePointer<AtkRelationClass>)","type":"init"},{"path":"\/documentation\/atk\/relationclassref\/init(_:)-6pv2c","title":"init(UnsafeMutablePointer<AtkRelationClass>)","type":"init"},{"path":"\/documentation\/atk\/relationclassref\/init(_:)-7wjgc","title":"init!(UnsafeMutablePointer<AtkRelationClass>?)","type":"init"},{"path":"\/documentation\/atk\/relationclassref\/init(_:)-8p7bj","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/relationclassref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/relationclassref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/relationclassref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/relationclassref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/relationclassref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/relationclassref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/relationclassref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/relationclassref\/metatype","title":"static var metatype: AtkRelationClass?","type":"property"},{"path":"\/documentation\/atk\/relationclassref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/atk\/relationclassref\/wrapper","title":"static var wrapper: RelationClassRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/relationclassref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> Relation!","type":"method"},{"path":"\/documentation\/atk\/relationclassref\/newrelation(properties:nproperties:names:values:)","title":"static func newRelation(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> Relation!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/relationclassref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/relationclassref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/relationclassref\/parent","title":"var parent: GObjectClass","type":"property"}],"path":"\/documentation\/atk\/relationclassref\/relationclassprotocol-implementations","title":"RelationClassProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/relationclassref","title":"RelationClassRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/relationref\/init(_:)-23xtm","title":"init!(UnsafeMutablePointer<AtkRelation>?)","type":"init"},{"path":"\/documentation\/atk\/relationref\/init(_:)-3akrn","title":"init(UnsafeMutablePointer<AtkRelation>)","type":"init"},{"path":"\/documentation\/atk\/relationref\/init(_:)-5cemz","title":"init(UnsafePointer<AtkRelation>)","type":"init"},{"path":"\/documentation\/atk\/relationref\/init(_:)-8kvam","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/relationref\/init(_:)-9hcat","title":"init!(UnsafePointer<AtkRelation>?)","type":"init"},{"path":"\/documentation\/atk\/relationref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/relationref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/relationref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/relationref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/relationref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/relationref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/atk\/relationref\/init(targets:ntargets:relationship:)","title":"init(targets: UnsafeMutablePointer<UnsafeMutablePointer<AtkObject>?>!, nTargets: Int, relationship: AtkRelationType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/relationref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/relationref\/unowned(_:)","title":"static func unowned<T>(T) -> RelationRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/relationref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/relationref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/relationref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/atk\/relationref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/atk\/relationref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/atk\/relationref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/atk\/relationref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/atk\/relationref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/relationref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/relationref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/atk\/relationref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/relationref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/relationref\/bind(_:to:property:flags:convertfrom:convertto:)-8jzid","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/relationref\/bind(_:to:property:flags:convertfrom:convertto:)-8ptmu","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/relationref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/relationref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/relationref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/relationref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/relationref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/relationref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/relationref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/atk\/relationref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/relationref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/relationref\/connect(signal:flags:handler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/relationref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/relationref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/relationref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/relationref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/relationref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/relationref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/relationref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/relationref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/atk\/relationref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/atk\/relationref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/atk\/relationref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/relationref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/relationref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/relationref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/relationref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/relationref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/relationref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/atk\/relationref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/relationref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/relationref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/relationref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/relationref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/relationref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/relationref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/relationref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/atk\/relationref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/relationref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/relationref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/relationref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/relationref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/relationref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/relationref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/relationref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/relationref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/relationref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/relationref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/relationref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/atk\/relationref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/relationref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/relationref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/relationref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/relationref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/relationref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/relationref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/atk\/relationref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/relationref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/relationref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/atk\/relationref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/atk\/relationref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/relationref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/relationref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/relationref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/relationref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/atk\/relationref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/atk\/relationref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/atk\/relationref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/atk\/relationref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/relationref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/relationref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/relationref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/atk\/relationref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/atk\/relationref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/atk\/relationref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/relationref\/parent","title":"var parent: GObject","type":"property"},{"path":"\/documentation\/atk\/relationref\/relationtype","title":"var relationType: AtkRelationType","type":"property"},{"path":"\/documentation\/atk\/relationref\/relation_ptr","title":"var relation_ptr: UnsafeMutablePointer<AtkRelation>!","type":"property"},{"path":"\/documentation\/atk\/relationref\/relationship","title":"var relationship: AtkRelationType","type":"property"},{"path":"\/documentation\/atk\/relationref\/target","title":"var target: RefArrayRef<ObjectRef>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/relationref\/add(target:)","title":"func add<ObjectT>(target: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/relationref\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: RelationPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/relationref\/get(property:)","title":"func get(property: RelationPropertyName) -> Value","type":"method"},{"path":"\/documentation\/atk\/relationref\/getrelationtype()","title":"func getRelationType() -> AtkRelationType","type":"method"},{"path":"\/documentation\/atk\/relationref\/gettarget()","title":"func getTarget() -> RefArrayRef<ObjectRef>!","type":"method"},{"path":"\/documentation\/atk\/relationref\/remove(target:)","title":"func remove<ObjectT>(target: ObjectT) -> Bool","type":"method"},{"path":"\/documentation\/atk\/relationref\/set(property:value:)","title":"func set(property: RelationPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/atk\/relationref\/relationprotocol-implementations","title":"RelationProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/relationref","title":"RelationRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/relationsetclassref\/init(_:)-3qkqz","title":"init!(UnsafeMutablePointer<AtkRelationSetClass>?)","type":"init"},{"path":"\/documentation\/atk\/relationsetclassref\/init(_:)-4bqvy","title":"init(UnsafeMutablePointer<AtkRelationSetClass>)","type":"init"},{"path":"\/documentation\/atk\/relationsetclassref\/init(_:)-7wkxu","title":"init(UnsafePointer<AtkRelationSetClass>)","type":"init"},{"path":"\/documentation\/atk\/relationsetclassref\/init(_:)-9220j","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/relationsetclassref\/init(_:)-qusp","title":"init!(UnsafePointer<AtkRelationSetClass>?)","type":"init"},{"path":"\/documentation\/atk\/relationsetclassref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/relationsetclassref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/relationsetclassref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/relationsetclassref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/relationsetclassref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/relationsetclassref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/relationsetclassref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/relationsetclassref\/metatype","title":"static var metatype: AtkRelationSetClass?","type":"property"},{"path":"\/documentation\/atk\/relationsetclassref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/atk\/relationsetclassref\/wrapper","title":"static var wrapper: RelationSetClassRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/relationsetclassref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> RelationSet!","type":"method"},{"path":"\/documentation\/atk\/relationsetclassref\/newrelationset(properties:nproperties:names:values:)","title":"static func newRelationSet(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> RelationSet!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/relationsetclassref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/relationsetclassref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/relationsetclassref\/pad1","title":"var pad1: AtkFunction!","type":"property"},{"path":"\/documentation\/atk\/relationsetclassref\/pad2","title":"var pad2: AtkFunction!","type":"property"},{"path":"\/documentation\/atk\/relationsetclassref\/parent","title":"var parent: GObjectClass","type":"property"}],"path":"\/documentation\/atk\/relationsetclassref\/relationsetclassprotocol-implementations","title":"RelationSetClassProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/relationsetclassref","title":"RelationSetClassRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/relationsetref\/init()","title":"init()","type":"init"},{"path":"\/documentation\/atk\/relationsetref\/init(_:)-13fd8","title":"init!(UnsafeMutablePointer<AtkRelationSet>?)","type":"init"},{"path":"\/documentation\/atk\/relationsetref\/init(_:)-22ffq","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/relationsetref\/init(_:)-3smpm","title":"init(UnsafeMutablePointer<AtkRelationSet>)","type":"init"},{"path":"\/documentation\/atk\/relationsetref\/init(_:)-3ybes","title":"init(UnsafePointer<AtkRelationSet>)","type":"init"},{"path":"\/documentation\/atk\/relationsetref\/init(_:)-6cy72","title":"init!(UnsafePointer<AtkRelationSet>?)","type":"init"},{"path":"\/documentation\/atk\/relationsetref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/relationsetref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/relationsetref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/relationsetref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/relationsetref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/relationsetref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/relationsetref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/relationsetref\/unowned(_:)","title":"static func unowned<T>(T) -> RelationSetRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/relationsetref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/relationsetref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/relationsetref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/atk\/relationsetref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/atk\/relationsetref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/atk\/relationsetref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/atk\/relationsetref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/atk\/relationsetref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/relationsetref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/bind(_:to:property:flags:convertfrom:convertto:)-3nfuy","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/bind(_:to:property:flags:convertfrom:convertto:)-ad2b","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/connect(signal:flags:handler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/relationsetref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/relationsetref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/atk\/relationsetref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/relationsetref\/nrelations","title":"var nRelations: Int","type":"property"},{"path":"\/documentation\/atk\/relationsetref\/parent","title":"var parent: GObject","type":"property"},{"path":"\/documentation\/atk\/relationsetref\/relation_set_ptr","title":"var relation_set_ptr: UnsafeMutablePointer<AtkRelationSet>!","type":"property"},{"path":"\/documentation\/atk\/relationsetref\/relations","title":"var relations: PtrArrayRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/relationsetref\/add(relation:)","title":"func add<RelationT>(relation: RelationT)","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/addrelationbytype(relationship:target:)","title":"func addRelationByType<ObjectT>(relationship: AtkRelationType, target: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/contains(relationship:)","title":"func contains(relationship: AtkRelationType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/containstarget(relationship:target:)","title":"func containsTarget<ObjectT>(relationship: AtkRelationType, target: ObjectT) -> Bool","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/getnrelations()","title":"func getNRelations() -> Int","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/getrelation(i:)","title":"func getRelation(i: Int) -> RelationRef!","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/getrelationbytype(relationship:)","title":"func getRelationByType(relationship: AtkRelationType) -> RelationRef!","type":"method"},{"path":"\/documentation\/atk\/relationsetref\/remove(relation:)","title":"func remove<RelationT>(relation: RelationT)","type":"method"}],"path":"\/documentation\/atk\/relationsetref\/relationsetprotocol-implementations","title":"RelationSetProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/relationsetref","title":"RelationSetRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/selectionifaceref\/init(_:)-53lge","title":"init!(UnsafePointer<AtkSelectionIface>?)","type":"init"},{"path":"\/documentation\/atk\/selectionifaceref\/init(_:)-5v7bc","title":"init!(UnsafeMutablePointer<AtkSelectionIface>?)","type":"init"},{"path":"\/documentation\/atk\/selectionifaceref\/init(_:)-68l7y","title":"init(UnsafePointer<AtkSelectionIface>)","type":"init"},{"path":"\/documentation\/atk\/selectionifaceref\/init(_:)-98ej2","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/selectionifaceref\/init(_:)-lmic","title":"init(UnsafeMutablePointer<AtkSelectionIface>)","type":"init"},{"path":"\/documentation\/atk\/selectionifaceref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/selectionifaceref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/selectionifaceref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/selectionifaceref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/selectionifaceref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/selectionifaceref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/selectionifaceref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/selectionifaceref\/metatype","title":"static var metatype: AtkSelectionIface?","type":"property"},{"path":"\/documentation\/atk\/selectionifaceref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/atk\/selectionifaceref\/wrapper","title":"static var wrapper: SelectionIfaceRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/selectionifaceref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> Selection!","type":"method"},{"path":"\/documentation\/atk\/selectionifaceref\/newselection(properties:nproperties:names:values:)","title":"static func newSelection(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> Selection!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/selectionifaceref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/selectionifaceref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/selectionifaceref\/parent","title":"var parent: GTypeInterface","type":"property"}],"path":"\/documentation\/atk\/selectionifaceref\/selectionifaceprotocol-implementations","title":"SelectionIfaceProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/selectionifaceref","title":"SelectionIfaceRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/selectionref\/init(_:)-3nu21","title":"init(UnsafeMutablePointer<AtkSelection>)","type":"init"},{"path":"\/documentation\/atk\/selectionref\/init(_:)-48acv","title":"init!(UnsafePointer<AtkSelection>?)","type":"init"},{"path":"\/documentation\/atk\/selectionref\/init(_:)-5pfub","title":"init!(UnsafeMutablePointer<AtkSelection>?)","type":"init"},{"path":"\/documentation\/atk\/selectionref\/init(_:)-6sbnx","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/selectionref\/init(_:)-8w701","title":"init(UnsafePointer<AtkSelection>)","type":"init"},{"path":"\/documentation\/atk\/selectionref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/selectionref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/selectionref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/selectionref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/selectionref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/selectionref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/selectionref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/selectionref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/selectionref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/selectionref\/selectioncount","title":"var selectionCount: Int","type":"property"},{"path":"\/documentation\/atk\/selectionref\/selection_ptr","title":"var selection_ptr: UnsafeMutablePointer<AtkSelection>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/selectionref\/addselection(i:)","title":"func addSelection(i: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/selectionref\/clearselection()","title":"func clearSelection() -> Bool","type":"method"},{"path":"\/documentation\/atk\/selectionref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: SelectionSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/selectionref\/connect(signal:flags:handler:)","title":"func connect(signal: SelectionSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/selectionref\/getselectioncount()","title":"func getSelectionCount() -> Int","type":"method"},{"path":"\/documentation\/atk\/selectionref\/ischildselected(i:)","title":"func isChildSelected(i: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/selectionref\/onselectionchanged(flags:handler:)","title":"func onSelectionChanged(flags: ConnectFlags, handler: (SelectionRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/selectionref\/refselection(i:)","title":"func refSelection(i: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/selectionref\/removeselection(i:)","title":"func removeSelection(i: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/selectionref\/selectallselection()","title":"func selectAllSelection() -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/selectionref\/selectionchangedsignal","title":"static var selectionChangedSignal: SelectionSignalName","type":"property"}],"path":"\/documentation\/atk\/selectionref\/selectionprotocol-implementations","title":"SelectionProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/selectionref","title":"SelectionRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/socketclassref\/init(_:)-25cpu","title":"init(UnsafeMutablePointer<AtkSocketClass>)","type":"init"},{"path":"\/documentation\/atk\/socketclassref\/init(_:)-2v8kv","title":"init(UnsafePointer<AtkSocketClass>)","type":"init"},{"path":"\/documentation\/atk\/socketclassref\/init(_:)-3oeku","title":"init!(UnsafeMutablePointer<AtkSocketClass>?)","type":"init"},{"path":"\/documentation\/atk\/socketclassref\/init(_:)-6su2s","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/socketclassref\/init(_:)-7eofn","title":"init!(UnsafePointer<AtkSocketClass>?)","type":"init"},{"path":"\/documentation\/atk\/socketclassref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/socketclassref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/socketclassref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/socketclassref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/socketclassref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/socketclassref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/socketclassref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/socketclassref\/metatype","title":"static var metatype: AtkSocketClass?","type":"property"},{"path":"\/documentation\/atk\/socketclassref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/atk\/socketclassref\/wrapper","title":"static var wrapper: SocketClassRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/socketclassref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> Socket!","type":"method"},{"path":"\/documentation\/atk\/socketclassref\/newsocket(properties:nproperties:names:values:)","title":"static func newSocket(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> Socket!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/socketclassref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/socketclassref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/socketclassref\/parentclass","title":"var parentClass: AtkObjectClass","type":"property"}],"path":"\/documentation\/atk\/socketclassref\/socketclassprotocol-implementations","title":"SocketClassProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/socketclassref","title":"SocketClassRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/socketref\/init()","title":"init()","type":"init"},{"path":"\/documentation\/atk\/socketref\/init(_:)-1ptvd","title":"init!(UnsafePointer<AtkSocket>?)","type":"init"},{"path":"\/documentation\/atk\/socketref\/init(_:)-4hto6","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/socketref\/init(_:)-7dral","title":"init(UnsafePointer<AtkSocket>)","type":"init"},{"path":"\/documentation\/atk\/socketref\/init(_:)-8bwqi","title":"init!(UnsafeMutablePointer<AtkSocket>?)","type":"init"},{"path":"\/documentation\/atk\/socketref\/init(_:)-t3ya","title":"init(UnsafeMutablePointer<AtkSocket>)","type":"init"},{"path":"\/documentation\/atk\/socketref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/socketref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/socketref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/socketref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/socketref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/socketref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/socketref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/socketref\/unowned(_:)","title":"static func unowned<T>(T) -> SocketRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/socketref\/alpha","title":"var alpha: Double","type":"property"},{"path":"\/documentation\/atk\/socketref\/component_ptr","title":"var component_ptr: UnsafeMutablePointer<AtkComponent>!","type":"property"},{"path":"\/documentation\/atk\/socketref\/layer-67011","title":"var layer: AtkLayer","type":"property"},{"path":"\/documentation\/atk\/socketref\/mdizorder-5lq0k","title":"var mdiZorder: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/socketref\/addfocus(handler:)","title":"func addFocus(handler: AtkFocusHandler?) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/connect(signal:flags:data:destroydata:signalhandler:)-3i238","title":"func connect(signal: ComponentSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/connect(signal:flags:handler:)-4mvls","title":"func connect(signal: ComponentSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/contains(x:y:coordtype:)","title":"func contains(x: Int, y: Int, coordType: AtkCoordType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/socketref\/getalpha()","title":"func getAlpha() -> Double","type":"method"},{"path":"\/documentation\/atk\/socketref\/getextents(x:y:width:height:coordtype:)","title":"func getExtents(x: UnsafeMutablePointer<gint>!, y: UnsafeMutablePointer<gint>!, width: UnsafeMutablePointer<gint>!, height: UnsafeMutablePointer<gint>!, coordType: AtkCoordType)","type":"method"},{"path":"\/documentation\/atk\/socketref\/getlayer()-6pyvx","title":"func getLayer() -> AtkLayer","type":"method"},{"path":"\/documentation\/atk\/socketref\/getmdizorder()-4ucjb","title":"func getMdiZorder() -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/getposition(x:y:coordtype:)","title":"func getPosition(x: UnsafeMutablePointer<gint>!, y: UnsafeMutablePointer<gint>!, coordType: AtkCoordType)","type":"method"},{"path":"\/documentation\/atk\/socketref\/getsize(width:height:)","title":"func getSize(width: UnsafeMutablePointer<gint>!, height: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/atk\/socketref\/grabfocus()","title":"func grabFocus() -> Bool","type":"method"},{"path":"\/documentation\/atk\/socketref\/onboundschanged(flags:handler:)","title":"func onBoundsChanged(flags: ConnectFlags, handler: (ComponentRef, RectangleRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/refaccessibleatpoint(x:y:coordtype:)","title":"func refAccessibleAtPoint(x: Int, y: Int, coordType: AtkCoordType) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/socketref\/removefocushandler(handlerid:)","title":"func removeFocusHandler(handlerId: Int)","type":"method"},{"path":"\/documentation\/atk\/socketref\/scrollto(type:)","title":"func scrollTo(type: AtkScrollType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/socketref\/scrolltopoint(coords:x:y:)","title":"func scrollToPoint(coords: AtkCoordType, x: Int, y: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/socketref\/setextents(x:y:width:height:coordtype:)","title":"func setExtents(x: Int, y: Int, width: Int, height: Int, coordType: AtkCoordType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/socketref\/setposition(x:y:coordtype:)","title":"func setPosition(x: Int, y: Int, coordType: AtkCoordType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/socketref\/setsize(width:height:)","title":"func setSize(width: Int, height: Int) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/socketref\/boundschangedsignal","title":"static var boundsChangedSignal: ComponentSignalName","type":"property"}],"path":"\/documentation\/atk\/socketref\/componentprotocol-implementations","title":"ComponentProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/socketref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/socketref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/socketref\/accessibleid","title":"var accessibleId: String!","type":"property"},{"path":"\/documentation\/atk\/socketref\/accessibleparent","title":"var accessibleParent: ObjectRef!","type":"property"},{"path":"\/documentation\/atk\/socketref\/attributes","title":"var attributes: UnsafeMutablePointer<AtkAttributeSet>!","type":"property"},{"path":"\/documentation\/atk\/socketref\/description","title":"var description: String!","type":"property"},{"path":"\/documentation\/atk\/socketref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/atk\/socketref\/indexinparent","title":"var indexInParent: Int","type":"property"},{"path":"\/documentation\/atk\/socketref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/atk\/socketref\/layer-9ee3r","title":"var layer: AtkLayer","type":"property"},{"path":"\/documentation\/atk\/socketref\/mdizorder-2ux1m","title":"var mdiZorder: Int","type":"property"},{"path":"\/documentation\/atk\/socketref\/naccessiblechildren","title":"var nAccessibleChildren: Int","type":"property"},{"path":"\/documentation\/atk\/socketref\/name","title":"var name: String!","type":"property"},{"path":"\/documentation\/atk\/socketref\/objectlocale","title":"var objectLocale: String!","type":"property"},{"path":"\/documentation\/atk\/socketref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<AtkObject>!","type":"property"},{"path":"\/documentation\/atk\/socketref\/relationset","title":"var relationSet: RelationSetRef!","type":"property"},{"path":"\/documentation\/atk\/socketref\/role","title":"var role: AtkRole","type":"property"},{"path":"\/documentation\/atk\/socketref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/atk\/socketref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/atk\/socketref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/socketref\/add(relationship:target:)","title":"func add<ObjectT>(relationship: AtkRelationType, target: ObjectT) -> Bool","type":"method"},{"path":"\/documentation\/atk\/socketref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/socketref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/atk\/socketref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/socketref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/socketref\/bind(_:to:property:flags:convertfrom:convertto:)-1v0tb","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/socketref\/bind(_:to:property:flags:convertfrom:convertto:)-9enzp","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/socketref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/socketref\/bind(property:to:_:flags:transformfrom:transformto:)-95tah","title":"func bind<Q, T>(property: ObjectPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/socketref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/socketref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/socketref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/socketref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/socketref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/socketref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/atk\/socketref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/connect(signal:flags:data:destroydata:signalhandler:)-31zp0","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/connect(signal:flags:data:destroydata:signalhandler:)-835pm","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/connect(signal:flags:handler:)-5w48v","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/connect(signal:flags:handler:)-8qb5t","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/connectpropertychange(handler:)","title":"func connectPropertyChange(handler: UnsafeMutablePointer<AtkPropertyChangeHandler?>!) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/socketref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/socketref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/socketref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/socketref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/socketref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/socketref\/focustrackernotify()","title":"func focusTrackerNotify()","type":"method"},{"path":"\/documentation\/atk\/socketref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/atk\/socketref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/atk\/socketref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/atk\/socketref\/getaccessibleid()","title":"func getAccessibleId() -> String!","type":"method"},{"path":"\/documentation\/atk\/socketref\/getattributes()","title":"func getAttributes() -> UnsafeMutablePointer<AtkAttributeSet>!","type":"method"},{"path":"\/documentation\/atk\/socketref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/socketref\/getdescription()","title":"func getDescription() -> String!","type":"method"},{"path":"\/documentation\/atk\/socketref\/getindexinparent()","title":"func getIndexInParent() -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/getlayer()-5vr14","title":"func getLayer() -> AtkLayer","type":"method"},{"path":"\/documentation\/atk\/socketref\/getmdizorder()-6yw80","title":"func getMdiZorder() -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/getnaccessiblechildren()","title":"func getNAccessibleChildren() -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/getname()","title":"func getName() -> String!","type":"method"},{"path":"\/documentation\/atk\/socketref\/getobjectlocale()","title":"func getObjectLocale() -> String!","type":"method"},{"path":"\/documentation\/atk\/socketref\/getparent()","title":"func getParent() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/socketref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/socketref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/socketref\/getrole()","title":"func getRole() -> AtkRole","type":"method"},{"path":"\/documentation\/atk\/socketref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/socketref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/socketref\/initialize(data:)","title":"func initialize(data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/socketref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/socketref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/atk\/socketref\/notifystatechange(state:value:)","title":"func notifyStateChange(state: AtkState, value: Bool)","type":"method"},{"path":"\/documentation\/atk\/socketref\/onactivedescendantchanged(flags:handler:)","title":"func onActiveDescendantChanged(flags: ConnectFlags, handler: (ObjectRef, ObjectRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/onannouncement(flags:handler:)","title":"func onAnnouncement(flags: ConnectFlags, handler: (ObjectRef, String) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/onchildrenchanged(flags:handler:)","title":"func onChildrenChanged(flags: ConnectFlags, handler: (ObjectRef, UInt, ObjectRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/onfocusevent(flags:handler:)","title":"func onFocusEvent(flags: ConnectFlags, handler: (ObjectRef, Bool) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/onnotification(flags:handler:)","title":"func onNotification(flags: ConnectFlags, handler: (ObjectRef, String, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/onnotifyaccessiblecomponentlayer(flags:handler:)","title":"func onNotifyAccessibleComponentLayer(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/onnotifyaccessiblecomponentmdizorder(flags:handler:)","title":"func onNotifyAccessibleComponentMdiZorder(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/onnotifyaccessibledescription(flags:handler:)","title":"func onNotifyAccessibleDescription(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/onnotifyaccessiblehypertextnlinks(flags:handler:)","title":"func onNotifyAccessibleHypertextNlinks(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/onnotifyaccessiblename(flags:handler:)","title":"func onNotifyAccessibleName(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/onnotifyaccessibleparent(flags:handler:)","title":"func onNotifyAccessibleParent(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/onnotifyaccessiblerole(flags:handler:)","title":"func onNotifyAccessibleRole(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/onnotifyaccessibletablecaption(flags:handler:)","title":"func onNotifyAccessibleTableCaption(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/onnotifyaccessibletablecaptionobject(flags:handler:)","title":"func onNotifyAccessibleTableCaptionObject(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/onnotifyaccessibletablecolumndescription(flags:handler:)","title":"func onNotifyAccessibleTableColumnDescription(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/onnotifyaccessibletablecolumnheader(flags:handler:)","title":"func onNotifyAccessibleTableColumnHeader(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/onnotifyaccessibletablerowdescription(flags:handler:)","title":"func onNotifyAccessibleTableRowDescription(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/onnotifyaccessibletablerowheader(flags:handler:)","title":"func onNotifyAccessibleTableRowHeader(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/onnotifyaccessibletablesummary(flags:handler:)","title":"func onNotifyAccessibleTableSummary(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/onnotifyaccessiblevalue(flags:handler:)","title":"func onNotifyAccessibleValue(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/onpropertychange(flags:handler:)","title":"func onPropertyChange(flags: ConnectFlags, handler: (ObjectRef, PropertyValuesRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/onstatechange(flags:handler:)","title":"func onStateChange(flags: ConnectFlags, handler: (ObjectRef, String, Bool) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/onvisibledatachanged(flags:handler:)","title":"func onVisibleDataChanged(flags: ConnectFlags, handler: (ObjectRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/peekparent()","title":"func peekParent() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/socketref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/socketref\/refaccessiblechild(i:)","title":"func refAccessibleChild(i: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/socketref\/refrelationset()","title":"func refRelationSet() -> RelationSetRef!","type":"method"},{"path":"\/documentation\/atk\/socketref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/socketref\/refstateset()","title":"func refStateSet() -> StateSetRef!","type":"method"},{"path":"\/documentation\/atk\/socketref\/remove(relationship:target:)","title":"func remove<ObjectT>(relationship: AtkRelationType, target: ObjectT) -> Bool","type":"method"},{"path":"\/documentation\/atk\/socketref\/removepropertychangehandler(handlerid:)","title":"func removePropertyChangeHandler(handlerId: Int)","type":"method"},{"path":"\/documentation\/atk\/socketref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/socketref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/socketref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/socketref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/socketref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/atk\/socketref\/set(description:)","title":"func set(description: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/socketref\/set(name:)","title":"func set(name: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/socketref\/set(parent:)","title":"func set<ObjectT>(parent: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/socketref\/set(role:)","title":"func set(role: AtkRole)","type":"method"},{"path":"\/documentation\/atk\/socketref\/setaccessibleid(name:)","title":"func setAccessibleId(name: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/socketref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/socketref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/socketref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/socketref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/socketref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/socketref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/socketref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/socketref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/atk\/socketref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/socketref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/socketref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/socketref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/socketref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/atk\/socketref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/socketref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/atk\/socketref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/atk\/socketref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/socketref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/socketref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/socketref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/socketref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/atk\/socketref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/atk\/socketref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/atk\/socketref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/atk\/socketref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/socketref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/socketref\/activedescendantchangedsignal","title":"static var activeDescendantChangedSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/socketref\/announcementsignal","title":"static var announcementSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/socketref\/childrenchangedsignal","title":"static var childrenChangedSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/socketref\/focuseventsignal","title":"static var focusEventSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/socketref\/notificationsignal","title":"static var notificationSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/socketref\/notifyaccessiblecomponentlayersignal","title":"static var notifyAccessibleComponentLayerSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/socketref\/notifyaccessiblecomponentmdizordersignal","title":"static var notifyAccessibleComponentMdiZorderSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/socketref\/notifyaccessibledescriptionsignal","title":"static var notifyAccessibleDescriptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/socketref\/notifyaccessiblehypertextnlinkssignal","title":"static var notifyAccessibleHypertextNlinksSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/socketref\/notifyaccessiblenamesignal","title":"static var notifyAccessibleNameSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/socketref\/notifyaccessibleparentsignal","title":"static var notifyAccessibleParentSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/socketref\/notifyaccessiblerolesignal","title":"static var notifyAccessibleRoleSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/socketref\/notifyaccessibletablecaptionobjectsignal","title":"static var notifyAccessibleTableCaptionObjectSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/socketref\/notifyaccessibletablecaptionsignal","title":"static var notifyAccessibleTableCaptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/socketref\/notifyaccessibletablecolumndescriptionsignal","title":"static var notifyAccessibleTableColumnDescriptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/socketref\/notifyaccessibletablecolumnheadersignal","title":"static var notifyAccessibleTableColumnHeaderSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/socketref\/notifyaccessibletablerowdescriptionsignal","title":"static var notifyAccessibleTableRowDescriptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/socketref\/notifyaccessibletablerowheadersignal","title":"static var notifyAccessibleTableRowHeaderSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/socketref\/notifyaccessibletablesummarysignal","title":"static var notifyAccessibleTableSummarySignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/socketref\/notifyaccessiblevaluesignal","title":"static var notifyAccessibleValueSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/socketref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/socketref\/propertychangesignal","title":"static var propertyChangeSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/socketref\/statechangesignal","title":"static var stateChangeSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/socketref\/visibledatachangedsignal","title":"static var visibleDataChangedSignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/socketref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/atk\/socketref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/atk\/socketref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/atk\/socketref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/socketref\/isoccupied","title":"var isOccupied: Bool","type":"property"},{"path":"\/documentation\/atk\/socketref\/parent","title":"var parent: AtkObject","type":"property"},{"path":"\/documentation\/atk\/socketref\/socket_ptr","title":"var socket_ptr: UnsafeMutablePointer<AtkSocket>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/socketref\/bind(property:to:_:flags:transformfrom:transformto:)-xax8","title":"func bind<Q, T>(property: SocketPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/socketref\/embed(plugid:)","title":"func embed(plugId: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/socketref\/get(property:)","title":"func get(property: SocketPropertyName) -> Value","type":"method"},{"path":"\/documentation\/atk\/socketref\/set(property:value:)","title":"func set(property: SocketPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/atk\/socketref\/socketprotocol-implementations","title":"SocketProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/socketref","title":"SocketRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/statesetclassref\/init(_:)-2ivin","title":"init!(UnsafePointer<AtkStateSetClass>?)","type":"init"},{"path":"\/documentation\/atk\/statesetclassref\/init(_:)-4810","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/statesetclassref\/init(_:)-4bf27","title":"init!(UnsafeMutablePointer<AtkStateSetClass>?)","type":"init"},{"path":"\/documentation\/atk\/statesetclassref\/init(_:)-6n1at","title":"init(UnsafeMutablePointer<AtkStateSetClass>)","type":"init"},{"path":"\/documentation\/atk\/statesetclassref\/init(_:)-8mlay","title":"init(UnsafePointer<AtkStateSetClass>)","type":"init"},{"path":"\/documentation\/atk\/statesetclassref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/statesetclassref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/statesetclassref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/statesetclassref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/statesetclassref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/statesetclassref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/statesetclassref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/statesetclassref\/metatype","title":"static var metatype: AtkStateSetClass?","type":"property"},{"path":"\/documentation\/atk\/statesetclassref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/atk\/statesetclassref\/wrapper","title":"static var wrapper: StateSetClassRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/statesetclassref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> StateSet!","type":"method"},{"path":"\/documentation\/atk\/statesetclassref\/newstateset(properties:nproperties:names:values:)","title":"static func newStateSet(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> StateSet!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/statesetclassref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/statesetclassref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/statesetclassref\/parent","title":"var parent: GObjectClass","type":"property"}],"path":"\/documentation\/atk\/statesetclassref\/statesetclassprotocol-implementations","title":"StateSetClassProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/statesetclassref","title":"StateSetClassRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/statesetref\/init()","title":"init()","type":"init"},{"path":"\/documentation\/atk\/statesetref\/init(_:)-3j4cb","title":"init!(UnsafeMutablePointer<AtkStateSet>?)","type":"init"},{"path":"\/documentation\/atk\/statesetref\/init(_:)-4x16","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/statesetref\/init(_:)-78cki","title":"init(UnsafePointer<AtkStateSet>)","type":"init"},{"path":"\/documentation\/atk\/statesetref\/init(_:)-8qeid","title":"init!(UnsafePointer<AtkStateSet>?)","type":"init"},{"path":"\/documentation\/atk\/statesetref\/init(_:)-8tfxy","title":"init(UnsafeMutablePointer<AtkStateSet>)","type":"init"},{"path":"\/documentation\/atk\/statesetref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/statesetref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/statesetref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/statesetref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/statesetref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/statesetref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/statesetref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/statesetref\/unowned(_:)","title":"static func unowned<T>(T) -> StateSetRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/statesetref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/statesetref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/statesetref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/atk\/statesetref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/atk\/statesetref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/atk\/statesetref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/atk\/statesetref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/atk\/statesetref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/statesetref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/statesetref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/atk\/statesetref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/statesetref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/statesetref\/bind(_:to:property:flags:convertfrom:convertto:)-5oryv","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/statesetref\/bind(_:to:property:flags:convertfrom:convertto:)-974kh","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/statesetref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/statesetref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/statesetref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/statesetref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/statesetref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/statesetref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/statesetref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/atk\/statesetref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/statesetref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/statesetref\/connect(signal:flags:handler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/statesetref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/statesetref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/statesetref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/statesetref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/statesetref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/statesetref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/statesetref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/statesetref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/atk\/statesetref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/atk\/statesetref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/atk\/statesetref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/statesetref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/statesetref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/statesetref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/statesetref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/statesetref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/statesetref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/atk\/statesetref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/statesetref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/statesetref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/statesetref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/statesetref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/statesetref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/statesetref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/statesetref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/atk\/statesetref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/statesetref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/statesetref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/statesetref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/statesetref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/statesetref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/statesetref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/statesetref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/statesetref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/statesetref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/statesetref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/statesetref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/atk\/statesetref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/statesetref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/statesetref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/statesetref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/statesetref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/statesetref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/statesetref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/atk\/statesetref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/statesetref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/statesetref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/atk\/statesetref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/atk\/statesetref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/statesetref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/statesetref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/statesetref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/statesetref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/atk\/statesetref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/atk\/statesetref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/atk\/statesetref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/atk\/statesetref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/statesetref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/statesetref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/statesetref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/atk\/statesetref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/atk\/statesetref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/atk\/statesetref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/statesetref\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/atk\/statesetref\/parent","title":"var parent: GObject","type":"property"},{"path":"\/documentation\/atk\/statesetref\/state_set_ptr","title":"var state_set_ptr: UnsafeMutablePointer<AtkStateSet>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/statesetref\/addstate(type:)","title":"func addState(type: AtkStateType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/statesetref\/addstates(types:ntypes:)","title":"func addStates(types: UnsafeMutablePointer<AtkStateType>!, nTypes: Int)","type":"method"},{"path":"\/documentation\/atk\/statesetref\/andsets(compareset:)","title":"func andSets<StateSetT>(compareSet: StateSetT) -> StateSetRef!","type":"method"},{"path":"\/documentation\/atk\/statesetref\/clearstates()","title":"func clearStates()","type":"method"},{"path":"\/documentation\/atk\/statesetref\/containsstate(type:)","title":"func containsState(type: AtkStateType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/statesetref\/containsstates(types:ntypes:)","title":"func containsStates(types: UnsafeMutablePointer<AtkStateType>!, nTypes: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/statesetref\/orsets(compareset:)","title":"func orSets<StateSetT>(compareSet: StateSetT) -> StateSetRef!","type":"method"},{"path":"\/documentation\/atk\/statesetref\/removestate(type:)","title":"func removeState(type: AtkStateType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/statesetref\/xorsets(compareset:)","title":"func xorSets<StateSetT>(compareSet: StateSetT) -> StateSetRef!","type":"method"}],"path":"\/documentation\/atk\/statesetref\/statesetprotocol-implementations","title":"StateSetProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/statesetref","title":"StateSetRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/streamablecontentifaceref\/init(_:)-40yos","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/streamablecontentifaceref\/init(_:)-7a3je","title":"init(UnsafeMutablePointer<AtkStreamableContentIface>)","type":"init"},{"path":"\/documentation\/atk\/streamablecontentifaceref\/init(_:)-7dui5","title":"init!(UnsafeMutablePointer<AtkStreamableContentIface>?)","type":"init"},{"path":"\/documentation\/atk\/streamablecontentifaceref\/init(_:)-7fbts","title":"init!(UnsafePointer<AtkStreamableContentIface>?)","type":"init"},{"path":"\/documentation\/atk\/streamablecontentifaceref\/init(_:)-9awg5","title":"init(UnsafePointer<AtkStreamableContentIface>)","type":"init"},{"path":"\/documentation\/atk\/streamablecontentifaceref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/streamablecontentifaceref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/streamablecontentifaceref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/streamablecontentifaceref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/streamablecontentifaceref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/streamablecontentifaceref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/streamablecontentifaceref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/streamablecontentifaceref\/metatype","title":"static var metatype: AtkStreamableContentIface?","type":"property"},{"path":"\/documentation\/atk\/streamablecontentifaceref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/atk\/streamablecontentifaceref\/wrapper","title":"static var wrapper: StreamableContentIfaceRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/streamablecontentifaceref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> StreamableContent!","type":"method"},{"path":"\/documentation\/atk\/streamablecontentifaceref\/newstreamablecontent(properties:nproperties:names:values:)","title":"static func newStreamableContent(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> StreamableContent!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/streamablecontentifaceref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/streamablecontentifaceref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/streamablecontentifaceref\/pad1","title":"var pad1: AtkFunction!","type":"property"},{"path":"\/documentation\/atk\/streamablecontentifaceref\/pad2","title":"var pad2: AtkFunction!","type":"property"},{"path":"\/documentation\/atk\/streamablecontentifaceref\/pad3","title":"var pad3: AtkFunction!","type":"property"},{"path":"\/documentation\/atk\/streamablecontentifaceref\/parent","title":"var parent: GTypeInterface","type":"property"}],"path":"\/documentation\/atk\/streamablecontentifaceref\/streamablecontentifaceprotocol-implementations","title":"StreamableContentIfaceProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/streamablecontentifaceref","title":"StreamableContentIfaceRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/streamablecontentref\/init(_:)-4a7bt","title":"init!(UnsafeMutablePointer<AtkStreamableContent>?)","type":"init"},{"path":"\/documentation\/atk\/streamablecontentref\/init(_:)-5inaw","title":"init!(UnsafePointer<AtkStreamableContent>?)","type":"init"},{"path":"\/documentation\/atk\/streamablecontentref\/init(_:)-6dflv","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/streamablecontentref\/init(_:)-9wls","title":"init(UnsafeMutablePointer<AtkStreamableContent>)","type":"init"},{"path":"\/documentation\/atk\/streamablecontentref\/init(_:)-cmut","title":"init(UnsafePointer<AtkStreamableContent>)","type":"init"},{"path":"\/documentation\/atk\/streamablecontentref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/streamablecontentref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/streamablecontentref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/streamablecontentref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/streamablecontentref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/streamablecontentref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/streamablecontentref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/streamablecontentref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/streamablecontentref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/streamablecontentref\/nmimetypes","title":"var nMimeTypes: Int","type":"property"},{"path":"\/documentation\/atk\/streamablecontentref\/streamable_content_ptr","title":"var streamable_content_ptr: UnsafeMutablePointer<AtkStreamableContent>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/streamablecontentref\/getmimetype(i:)","title":"func getMimeType(i: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/streamablecontentref\/getnmimetypes()","title":"func getNMimeTypes() -> Int","type":"method"},{"path":"\/documentation\/atk\/streamablecontentref\/getstream(mimetype:)","title":"func getStream(mimeType: UnsafePointer<gchar>!) -> IOChannelRef!","type":"method"},{"path":"\/documentation\/atk\/streamablecontentref\/geturi(mimetype:)","title":"func getUri(mimeType: UnsafePointer<gchar>!) -> String!","type":"method"}],"path":"\/documentation\/atk\/streamablecontentref\/streamablecontentprotocol-implementations","title":"StreamableContentProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/streamablecontentref","title":"StreamableContentRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecellifaceref\/init(_:)-3glce","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/tablecellifaceref\/init(_:)-3k0dy","title":"init!(UnsafeMutablePointer<AtkTableCellIface>?)","type":"init"},{"path":"\/documentation\/atk\/tablecellifaceref\/init(_:)-549hr","title":"init!(UnsafePointer<AtkTableCellIface>?)","type":"init"},{"path":"\/documentation\/atk\/tablecellifaceref\/init(_:)-745n9","title":"init(UnsafePointer<AtkTableCellIface>)","type":"init"},{"path":"\/documentation\/atk\/tablecellifaceref\/init(_:)-99ust","title":"init(UnsafeMutablePointer<AtkTableCellIface>)","type":"init"},{"path":"\/documentation\/atk\/tablecellifaceref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/tablecellifaceref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/tablecellifaceref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/tablecellifaceref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/tablecellifaceref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/tablecellifaceref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecellifaceref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecellifaceref\/metatype","title":"static var metatype: AtkTableCellIface?","type":"property"},{"path":"\/documentation\/atk\/tablecellifaceref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/atk\/tablecellifaceref\/wrapper","title":"static var wrapper: TableCellIfaceRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecellifaceref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> TableCell!","type":"method"},{"path":"\/documentation\/atk\/tablecellifaceref\/newtablecell(properties:nproperties:names:values:)","title":"static func newTableCell(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> TableCell!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecellifaceref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/tablecellifaceref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/atk\/tablecellifaceref","title":"TableCellIfaceRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecellref\/init(_:)-15fsy","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/tablecellref\/init(_:)-18alg","title":"init!(UnsafePointer<AtkTableCell>?)","type":"init"},{"path":"\/documentation\/atk\/tablecellref\/init(_:)-2ae1w","title":"init!(UnsafeMutablePointer<AtkTableCell>?)","type":"init"},{"path":"\/documentation\/atk\/tablecellref\/init(_:)-64ui","title":"init(UnsafeMutablePointer<AtkTableCell>)","type":"init"},{"path":"\/documentation\/atk\/tablecellref\/init(_:)-9hna","title":"init(UnsafePointer<AtkTableCell>)","type":"init"},{"path":"\/documentation\/atk\/tablecellref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/tablecellref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/tablecellref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/tablecellref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/tablecellref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/tablecellref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecellref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecellref\/unowned(_:)","title":"static func unowned<T>(T) -> TableCellRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecellref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/tablecellref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecellref\/accessibleid","title":"var accessibleId: String!","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/accessibleparent","title":"var accessibleParent: ObjectRef!","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/attributes","title":"var attributes: UnsafeMutablePointer<AtkAttributeSet>!","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/description","title":"var description: String!","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/indexinparent","title":"var indexInParent: Int","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/layer","title":"var layer: AtkLayer","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/mdizorder","title":"var mdiZorder: Int","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/naccessiblechildren","title":"var nAccessibleChildren: Int","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/name","title":"var name: String!","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/objectlocale","title":"var objectLocale: String!","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<AtkObject>!","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/parent","title":"var parent: ObjectRef!","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/relationset","title":"var relationSet: RelationSetRef!","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/role","title":"var role: AtkRole","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecellref\/add(relationship:target:)","title":"func add<ObjectT>(relationship: AtkRelationType, target: ObjectT) -> Bool","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/bind(_:to:property:flags:convertfrom:convertto:)-15kgu","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/bind(_:to:property:flags:convertfrom:convertto:)-55l2e","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/bind(property:to:_:flags:transformfrom:transformto:)-460x3","title":"func bind<Q, T>(property: ObjectPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/connect(signal:flags:handler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/connectpropertychange(handler:)","title":"func connectPropertyChange(handler: UnsafeMutablePointer<AtkPropertyChangeHandler?>!) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/focustrackernotify()","title":"func focusTrackerNotify()","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/getaccessibleid()","title":"func getAccessibleId() -> String!","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/getattributes()","title":"func getAttributes() -> UnsafeMutablePointer<AtkAttributeSet>!","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/getdescription()","title":"func getDescription() -> String!","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/getindexinparent()","title":"func getIndexInParent() -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/getlayer()","title":"func getLayer() -> AtkLayer","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/getmdizorder()","title":"func getMdiZorder() -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/getnaccessiblechildren()","title":"func getNAccessibleChildren() -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/getname()","title":"func getName() -> String!","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/getobjectlocale()","title":"func getObjectLocale() -> String!","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/getparent()","title":"func getParent() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/getrole()","title":"func getRole() -> AtkRole","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/initialize(data:)","title":"func initialize(data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/notifystatechange(state:value:)","title":"func notifyStateChange(state: AtkState, value: Bool)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/onactivedescendantchanged(flags:handler:)","title":"func onActiveDescendantChanged(flags: ConnectFlags, handler: (ObjectRef, ObjectRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/onannouncement(flags:handler:)","title":"func onAnnouncement(flags: ConnectFlags, handler: (ObjectRef, String) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/onchildrenchanged(flags:handler:)","title":"func onChildrenChanged(flags: ConnectFlags, handler: (ObjectRef, UInt, ObjectRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/onfocusevent(flags:handler:)","title":"func onFocusEvent(flags: ConnectFlags, handler: (ObjectRef, Bool) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/onnotification(flags:handler:)","title":"func onNotification(flags: ConnectFlags, handler: (ObjectRef, String, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/onnotifyaccessiblecomponentlayer(flags:handler:)","title":"func onNotifyAccessibleComponentLayer(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/onnotifyaccessiblecomponentmdizorder(flags:handler:)","title":"func onNotifyAccessibleComponentMdiZorder(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/onnotifyaccessibledescription(flags:handler:)","title":"func onNotifyAccessibleDescription(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/onnotifyaccessiblehypertextnlinks(flags:handler:)","title":"func onNotifyAccessibleHypertextNlinks(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/onnotifyaccessiblename(flags:handler:)","title":"func onNotifyAccessibleName(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/onnotifyaccessibleparent(flags:handler:)","title":"func onNotifyAccessibleParent(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/onnotifyaccessiblerole(flags:handler:)","title":"func onNotifyAccessibleRole(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/onnotifyaccessibletablecaption(flags:handler:)","title":"func onNotifyAccessibleTableCaption(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/onnotifyaccessibletablecaptionobject(flags:handler:)","title":"func onNotifyAccessibleTableCaptionObject(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/onnotifyaccessibletablecolumndescription(flags:handler:)","title":"func onNotifyAccessibleTableColumnDescription(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/onnotifyaccessibletablecolumnheader(flags:handler:)","title":"func onNotifyAccessibleTableColumnHeader(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/onnotifyaccessibletablerowdescription(flags:handler:)","title":"func onNotifyAccessibleTableRowDescription(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/onnotifyaccessibletablerowheader(flags:handler:)","title":"func onNotifyAccessibleTableRowHeader(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/onnotifyaccessibletablesummary(flags:handler:)","title":"func onNotifyAccessibleTableSummary(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/onnotifyaccessiblevalue(flags:handler:)","title":"func onNotifyAccessibleValue(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/onpropertychange(flags:handler:)","title":"func onPropertyChange(flags: ConnectFlags, handler: (ObjectRef, PropertyValuesRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/onstatechange(flags:handler:)","title":"func onStateChange(flags: ConnectFlags, handler: (ObjectRef, String, Bool) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/onvisibledatachanged(flags:handler:)","title":"func onVisibleDataChanged(flags: ConnectFlags, handler: (ObjectRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/peekparent()","title":"func peekParent() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/refaccessiblechild(i:)","title":"func refAccessibleChild(i: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/refrelationset()","title":"func refRelationSet() -> RelationSetRef!","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/refstateset()","title":"func refStateSet() -> StateSetRef!","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/remove(relationship:target:)","title":"func remove<ObjectT>(relationship: AtkRelationType, target: ObjectT) -> Bool","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/removepropertychangehandler(handlerid:)","title":"func removePropertyChangeHandler(handlerId: Int)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/set(description:)","title":"func set(description: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/set(name:)","title":"func set(name: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/set(parent:)","title":"func set<ObjectT>(parent: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/set(role:)","title":"func set(role: AtkRole)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/setaccessibleid(name:)","title":"func setAccessibleId(name: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecellref\/activedescendantchangedsignal","title":"static var activeDescendantChangedSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/announcementsignal","title":"static var announcementSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/childrenchangedsignal","title":"static var childrenChangedSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/focuseventsignal","title":"static var focusEventSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/notificationsignal","title":"static var notificationSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/notifyaccessiblecomponentlayersignal","title":"static var notifyAccessibleComponentLayerSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/notifyaccessiblecomponentmdizordersignal","title":"static var notifyAccessibleComponentMdiZorderSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/notifyaccessibledescriptionsignal","title":"static var notifyAccessibleDescriptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/notifyaccessiblehypertextnlinkssignal","title":"static var notifyAccessibleHypertextNlinksSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/notifyaccessiblenamesignal","title":"static var notifyAccessibleNameSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/notifyaccessibleparentsignal","title":"static var notifyAccessibleParentSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/notifyaccessiblerolesignal","title":"static var notifyAccessibleRoleSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/notifyaccessibletablecaptionobjectsignal","title":"static var notifyAccessibleTableCaptionObjectSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/notifyaccessibletablecaptionsignal","title":"static var notifyAccessibleTableCaptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/notifyaccessibletablecolumndescriptionsignal","title":"static var notifyAccessibleTableColumnDescriptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/notifyaccessibletablecolumnheadersignal","title":"static var notifyAccessibleTableColumnHeaderSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/notifyaccessibletablerowdescriptionsignal","title":"static var notifyAccessibleTableRowDescriptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/notifyaccessibletablerowheadersignal","title":"static var notifyAccessibleTableRowHeaderSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/notifyaccessibletablesummarysignal","title":"static var notifyAccessibleTableSummarySignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/notifyaccessiblevaluesignal","title":"static var notifyAccessibleValueSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/propertychangesignal","title":"static var propertyChangeSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/statechangesignal","title":"static var stateChangeSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/visibledatachangedsignal","title":"static var visibleDataChangedSignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecellref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/atk\/tablecellref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecellref\/columnheadercells","title":"var columnHeaderCells: RefArrayRef<ObjectRef>!","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/columnspan","title":"var columnSpan: Int","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/rowheadercells","title":"var rowHeaderCells: RefArrayRef<ObjectRef>!","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/rowspan","title":"var rowSpan: Int","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/table","title":"var table: ObjectRef!","type":"property"},{"path":"\/documentation\/atk\/tablecellref\/table_cell_ptr","title":"var table_cell_ptr: UnsafeMutablePointer<AtkTableCell>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecellref\/bind(property:to:_:flags:transformfrom:transformto:)-5uc4s","title":"func bind<Q, T>(property: TableCellPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/get(property:)","title":"func get(property: TableCellPropertyName) -> Value","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/getcolumnheadercells()","title":"func getColumnHeaderCells() -> RefArrayRef<ObjectRef>!","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/getcolumnspan()","title":"func getColumnSpan() -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/getposition(row:column:)","title":"func getPosition(row: UnsafeMutablePointer<gint>!, column: UnsafeMutablePointer<gint>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/getrowcolumnspan(row:column:rowspan:columnspan:)","title":"func getRowColumnSpan(row: UnsafeMutablePointer<gint>!, column: UnsafeMutablePointer<gint>!, rowSpan: UnsafeMutablePointer<gint>!, columnSpan: UnsafeMutablePointer<gint>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/getrowheadercells()","title":"func getRowHeaderCells() -> RefArrayRef<ObjectRef>!","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/getrowspan()","title":"func getRowSpan() -> Int","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/gettable()","title":"func getTable() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/tablecellref\/set(property:value:)","title":"func set(property: TableCellPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/atk\/tablecellref\/tablecellprotocol-implementations","title":"TableCellProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/tablecellref","title":"TableCellRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/tableifaceref\/init(_:)-2ahs9","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/tableifaceref\/init(_:)-3e86t","title":"init(UnsafeMutablePointer<AtkTableIface>)","type":"init"},{"path":"\/documentation\/atk\/tableifaceref\/init(_:)-6797u","title":"init!(UnsafePointer<AtkTableIface>?)","type":"init"},{"path":"\/documentation\/atk\/tableifaceref\/init(_:)-74akx","title":"init!(UnsafeMutablePointer<AtkTableIface>?)","type":"init"},{"path":"\/documentation\/atk\/tableifaceref\/init(_:)-8yav8","title":"init(UnsafePointer<AtkTableIface>)","type":"init"},{"path":"\/documentation\/atk\/tableifaceref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/tableifaceref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/tableifaceref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/tableifaceref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/tableifaceref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/tableifaceref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/tableifaceref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/tableifaceref\/metatype","title":"static var metatype: AtkTableIface?","type":"property"},{"path":"\/documentation\/atk\/tableifaceref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/atk\/tableifaceref\/wrapper","title":"static var wrapper: TableIfaceRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/tableifaceref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> Table!","type":"method"},{"path":"\/documentation\/atk\/tableifaceref\/newtable(properties:nproperties:names:values:)","title":"static func newTable(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> Table!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/tableifaceref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/tableifaceref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/tableifaceref\/parent","title":"var parent: GTypeInterface","type":"property"}],"path":"\/documentation\/atk\/tableifaceref\/tableifaceprotocol-implementations","title":"TableIfaceProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/tableifaceref","title":"TableIfaceRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/tableref\/init(_:)-1ngc8","title":"init(UnsafePointer<AtkTable>)","type":"init"},{"path":"\/documentation\/atk\/tableref\/init(_:)-25neq","title":"init!(UnsafePointer<AtkTable>?)","type":"init"},{"path":"\/documentation\/atk\/tableref\/init(_:)-491zo","title":"init(UnsafeMutablePointer<AtkTable>)","type":"init"},{"path":"\/documentation\/atk\/tableref\/init(_:)-4cp6e","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/tableref\/init(_:)-9cnxa","title":"init!(UnsafeMutablePointer<AtkTable>?)","type":"init"},{"path":"\/documentation\/atk\/tableref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/tableref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/tableref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/tableref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/tableref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/tableref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/tableref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/tableref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/tableref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/tableref\/caption","title":"var caption: ObjectRef!","type":"property"},{"path":"\/documentation\/atk\/tableref\/ncolumns","title":"var nColumns: Int","type":"property"},{"path":"\/documentation\/atk\/tableref\/nrows","title":"var nRows: Int","type":"property"},{"path":"\/documentation\/atk\/tableref\/summary","title":"var summary: ObjectRef!","type":"property"},{"path":"\/documentation\/atk\/tableref\/table_ptr","title":"var table_ptr: UnsafeMutablePointer<AtkTable>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/tableref\/addcolumnselection(column:)","title":"func addColumnSelection(column: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/tableref\/addrowselection(row:)","title":"func addRowSelection(row: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/tableref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: TableSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableref\/connect(signal:flags:handler:)","title":"func connect(signal: TableSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableref\/getcaption()","title":"func getCaption() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/tableref\/getcolumnat(index:)","title":"func getColumnAt(index: Int) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableref\/getcolumndescription(column:)","title":"func getColumnDescription(column: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/tableref\/getcolumnextentat(row:column:)","title":"func getColumnExtentAt(row: Int, column: Int) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableref\/getcolumnheader(column:)","title":"func getColumnHeader(column: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/tableref\/getindexat(row:column:)","title":"func getIndexAt(row: Int, column: Int) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableref\/getncolumns()","title":"func getNColumns() -> Int","type":"method"},{"path":"\/documentation\/atk\/tableref\/getnrows()","title":"func getNRows() -> Int","type":"method"},{"path":"\/documentation\/atk\/tableref\/getrowat(index:)","title":"func getRowAt(index: Int) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableref\/getrowdescription(row:)","title":"func getRowDescription(row: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/tableref\/getrowextentat(row:column:)","title":"func getRowExtentAt(row: Int, column: Int) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableref\/getrowheader(row:)","title":"func getRowHeader(row: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/tableref\/getselectedcolumns(selected:)","title":"func getSelectedColumns(selected: UnsafeMutablePointer<UnsafeMutablePointer<gint>?>!) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableref\/getselectedrows(selected:)","title":"func getSelectedRows(selected: UnsafeMutablePointer<UnsafeMutablePointer<gint>?>!) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableref\/getsummary()","title":"func getSummary() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/tableref\/iscolumnselected(column:)","title":"func isColumnSelected(column: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/tableref\/isrowselected(row:)","title":"func isRowSelected(row: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/tableref\/isselected(row:column:)","title":"func isSelected(row: Int, column: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/tableref\/oncolumndeleted(flags:handler:)","title":"func onColumnDeleted(flags: ConnectFlags, handler: (TableRef, Int, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableref\/oncolumninserted(flags:handler:)","title":"func onColumnInserted(flags: ConnectFlags, handler: (TableRef, Int, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableref\/oncolumnreordered(flags:handler:)","title":"func onColumnReordered(flags: ConnectFlags, handler: (TableRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableref\/onmodelchanged(flags:handler:)","title":"func onModelChanged(flags: ConnectFlags, handler: (TableRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableref\/onrowdeleted(flags:handler:)","title":"func onRowDeleted(flags: ConnectFlags, handler: (TableRef, Int, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableref\/onrowinserted(flags:handler:)","title":"func onRowInserted(flags: ConnectFlags, handler: (TableRef, Int, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableref\/onrowreordered(flags:handler:)","title":"func onRowReordered(flags: ConnectFlags, handler: (TableRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/tableref\/refat(row:column:)","title":"func refAt(row: Int, column: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/tableref\/removecolumnselection(column:)","title":"func removeColumnSelection(column: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/tableref\/removerowselection(row:)","title":"func removeRowSelection(row: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/tableref\/set(caption:)","title":"func set<ObjectT>(caption: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/tableref\/setcolumndescription(column:description:)","title":"func setColumnDescription(column: Int, description: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/tableref\/setcolumnheader(column:header:)","title":"func setColumnHeader<ObjectT>(column: Int, header: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/tableref\/setrowdescription(row:description:)","title":"func setRowDescription(row: Int, description: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/tableref\/setrowheader(row:header:)","title":"func setRowHeader<ObjectT>(row: Int, header: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/tableref\/setsummary(accessible:)","title":"func setSummary<ObjectT>(accessible: ObjectT)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/tableref\/columndeletedsignal","title":"static var columnDeletedSignal: TableSignalName","type":"property"},{"path":"\/documentation\/atk\/tableref\/columninsertedsignal","title":"static var columnInsertedSignal: TableSignalName","type":"property"},{"path":"\/documentation\/atk\/tableref\/columnreorderedsignal","title":"static var columnReorderedSignal: TableSignalName","type":"property"},{"path":"\/documentation\/atk\/tableref\/modelchangedsignal","title":"static var modelChangedSignal: TableSignalName","type":"property"},{"path":"\/documentation\/atk\/tableref\/rowdeletedsignal","title":"static var rowDeletedSignal: TableSignalName","type":"property"},{"path":"\/documentation\/atk\/tableref\/rowinsertedsignal","title":"static var rowInsertedSignal: TableSignalName","type":"property"},{"path":"\/documentation\/atk\/tableref\/rowreorderedsignal","title":"static var rowReorderedSignal: TableSignalName","type":"property"}],"path":"\/documentation\/atk\/tableref\/tableprotocol-implementations","title":"TableProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/tableref","title":"TableRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/textifaceref\/init(_:)-1n25u","title":"init!(UnsafePointer<AtkTextIface>?)","type":"init"},{"path":"\/documentation\/atk\/textifaceref\/init(_:)-4230k","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/textifaceref\/init(_:)-6t3m2","title":"init(UnsafePointer<AtkTextIface>)","type":"init"},{"path":"\/documentation\/atk\/textifaceref\/init(_:)-8hpb8","title":"init!(UnsafeMutablePointer<AtkTextIface>?)","type":"init"},{"path":"\/documentation\/atk\/textifaceref\/init(_:)-9ircd","title":"init(UnsafeMutablePointer<AtkTextIface>)","type":"init"},{"path":"\/documentation\/atk\/textifaceref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/textifaceref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/textifaceref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/textifaceref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/textifaceref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/textifaceref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/textifaceref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/textifaceref\/metatype","title":"static var metatype: AtkTextIface?","type":"property"},{"path":"\/documentation\/atk\/textifaceref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/atk\/textifaceref\/wrapper","title":"static var wrapper: TextIfaceRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/textifaceref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> Text!","type":"method"},{"path":"\/documentation\/atk\/textifaceref\/newtext(properties:nproperties:names:values:)","title":"static func newText(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> Text!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/textifaceref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/textifaceref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/textifaceref\/parent","title":"var parent: GTypeInterface","type":"property"}],"path":"\/documentation\/atk\/textifaceref\/textifaceprotocol-implementations","title":"TextIfaceProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/textifaceref","title":"TextIfaceRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/textrangeref\/init(_:)-1dnr9","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/textrangeref\/init(_:)-8d9is","title":"init(UnsafeMutablePointer<AtkTextRange>)","type":"init"},{"path":"\/documentation\/atk\/textrangeref\/init(_:)-8k7lm","title":"init!(UnsafePointer<AtkTextRange>?)","type":"init"},{"path":"\/documentation\/atk\/textrangeref\/init(_:)-8nxuv","title":"init!(UnsafeMutablePointer<AtkTextRange>?)","type":"init"},{"path":"\/documentation\/atk\/textrangeref\/init(_:)-8stgd","title":"init(UnsafePointer<AtkTextRange>)","type":"init"},{"path":"\/documentation\/atk\/textrangeref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/textrangeref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/textrangeref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/textrangeref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/textrangeref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/textrangeref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/textrangeref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/textrangeref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/textrangeref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/textrangeref\/bounds","title":"var bounds: AtkTextRectangle","type":"property"},{"path":"\/documentation\/atk\/textrangeref\/content","title":"var content: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/atk\/textrangeref\/endoffset","title":"var endOffset: gint","type":"property"},{"path":"\/documentation\/atk\/textrangeref\/startoffset","title":"var startOffset: gint","type":"property"},{"path":"\/documentation\/atk\/textrangeref\/text_range_ptr","title":"var text_range_ptr: UnsafeMutablePointer<AtkTextRange>!","type":"property"}],"path":"\/documentation\/atk\/textrangeref\/textrangeprotocol-implementations","title":"TextRangeProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/textrangeref","title":"TextRangeRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/textrectangleref\/init(_:)-29pnc","title":"init!(UnsafePointer<AtkTextRectangle>?)","type":"init"},{"path":"\/documentation\/atk\/textrectangleref\/init(_:)-3l3br","title":"init(UnsafeMutablePointer<AtkTextRectangle>)","type":"init"},{"path":"\/documentation\/atk\/textrectangleref\/init(_:)-5rlyf","title":"init!(UnsafeMutablePointer<AtkTextRectangle>?)","type":"init"},{"path":"\/documentation\/atk\/textrectangleref\/init(_:)-7to7g","title":"init(UnsafePointer<AtkTextRectangle>)","type":"init"},{"path":"\/documentation\/atk\/textrectangleref\/init(_:)-8jgt1","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/textrectangleref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/textrectangleref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/textrectangleref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/textrectangleref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/textrectangleref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/textrectangleref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/textrectangleref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/textrectangleref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/textrectangleref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/textrectangleref\/height","title":"var height: gint","type":"property"},{"path":"\/documentation\/atk\/textrectangleref\/width","title":"var width: gint","type":"property"},{"path":"\/documentation\/atk\/textrectangleref\/x","title":"var x: gint","type":"property"},{"path":"\/documentation\/atk\/textrectangleref\/y","title":"var y: gint","type":"property"}],"path":"\/documentation\/atk\/textrectangleref\/textrectangleprotocol-implementations","title":"TextRectangleProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/textrectangleref","title":"TextRectangleRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/textref\/init(_:)-1gxvz","title":"init(UnsafeMutablePointer<AtkText>)","type":"init"},{"path":"\/documentation\/atk\/textref\/init(_:)-8hakn","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/textref\/init(_:)-8hqh0","title":"init(UnsafePointer<AtkText>)","type":"init"},{"path":"\/documentation\/atk\/textref\/init(_:)-94n1a","title":"init!(UnsafeMutablePointer<AtkText>?)","type":"init"},{"path":"\/documentation\/atk\/textref\/init(_:)-a4je","title":"init!(UnsafePointer<AtkText>?)","type":"init"},{"path":"\/documentation\/atk\/textref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/textref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/textref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/textref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/textref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/textref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/textref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/textref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/textref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/textref\/caretoffset","title":"var caretOffset: Int","type":"property"},{"path":"\/documentation\/atk\/textref\/charactercount","title":"var characterCount: Int","type":"property"},{"path":"\/documentation\/atk\/textref\/defaultattributes","title":"var defaultAttributes: UnsafeMutablePointer<AtkAttributeSet>!","type":"property"},{"path":"\/documentation\/atk\/textref\/nselections","title":"var nSelections: Int","type":"property"},{"path":"\/documentation\/atk\/textref\/text_ptr","title":"var text_ptr: UnsafeMutablePointer<AtkText>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/textref\/addselection(startoffset:endoffset:)","title":"func addSelection(startOffset: Int, endOffset: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/textref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: TextSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/textref\/connect(signal:flags:handler:)","title":"func connect(signal: TextSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/textref\/getboundedranges(rect:coordtype:xcliptype:ycliptype:)","title":"func getBoundedRanges<TextRectangleT>(rect: TextRectangleT, coordType: AtkCoordType, xClipType: AtkTextClipType, yClipType: AtkTextClipType) -> UnsafeMutablePointer<UnsafeMutablePointer<AtkTextRange>?>!","type":"method"},{"path":"\/documentation\/atk\/textref\/getcaretoffset()","title":"func getCaretOffset() -> Int","type":"method"},{"path":"\/documentation\/atk\/textref\/getcharacterat(offset:)","title":"func getCharacterAt(offset: Int) -> gunichar","type":"method"},{"path":"\/documentation\/atk\/textref\/getcharactercount()","title":"func getCharacterCount() -> Int","type":"method"},{"path":"\/documentation\/atk\/textref\/getcharacterextents(offset:x:y:width:height:coords:)","title":"func getCharacterExtents(offset: Int, x: UnsafeMutablePointer<gint>!, y: UnsafeMutablePointer<gint>!, width: UnsafeMutablePointer<gint>!, height: UnsafeMutablePointer<gint>!, coords: AtkCoordType)","type":"method"},{"path":"\/documentation\/atk\/textref\/getdefaultattributes()","title":"func getDefaultAttributes() -> UnsafeMutablePointer<AtkAttributeSet>!","type":"method"},{"path":"\/documentation\/atk\/textref\/getnselections()","title":"func getNSelections() -> Int","type":"method"},{"path":"\/documentation\/atk\/textref\/getoffsetatpoint(x:y:coords:)","title":"func getOffsetAtPoint(x: Int, y: Int, coords: AtkCoordType) -> Int","type":"method"},{"path":"\/documentation\/atk\/textref\/getrangeextents(startoffset:endoffset:coordtype:rect:)","title":"func getRangeExtents<TextRectangleT>(startOffset: Int, endOffset: Int, coordType: AtkCoordType, rect: TextRectangleT)","type":"method"},{"path":"\/documentation\/atk\/textref\/getrunattributes(offset:startoffset:endoffset:)","title":"func getRunAttributes(offset: Int, startOffset: UnsafeMutablePointer<gint>!, endOffset: UnsafeMutablePointer<gint>!) -> UnsafeMutablePointer<AtkAttributeSet>!","type":"method"},{"path":"\/documentation\/atk\/textref\/getselection(selectionnum:startoffset:endoffset:)","title":"func getSelection(selectionNum: Int, startOffset: UnsafeMutablePointer<gint>!, endOffset: UnsafeMutablePointer<gint>!) -> String!","type":"method"},{"path":"\/documentation\/atk\/textref\/getstringat(offset:granularity:startoffset:endoffset:)","title":"func getStringAt(offset: Int, granularity: AtkTextGranularity, startOffset: UnsafeMutablePointer<gint>!, endOffset: UnsafeMutablePointer<gint>!) -> String!","type":"method"},{"path":"\/documentation\/atk\/textref\/gettext(startoffset:endoffset:)","title":"func getText(startOffset: Int, endOffset: Int) -> String!","type":"method"},{"path":"\/documentation\/atk\/textref\/gettextafter(offset:boundarytype:startoffset:endoffset:)","title":"func getTextAfter(offset: Int, boundaryType: AtkTextBoundary, startOffset: UnsafeMutablePointer<gint>!, endOffset: UnsafeMutablePointer<gint>!) -> String!","type":"method"},{"path":"\/documentation\/atk\/textref\/gettextat(offset:boundarytype:startoffset:endoffset:)","title":"func getTextAt(offset: Int, boundaryType: AtkTextBoundary, startOffset: UnsafeMutablePointer<gint>!, endOffset: UnsafeMutablePointer<gint>!) -> String!","type":"method"},{"path":"\/documentation\/atk\/textref\/gettextbefore(offset:boundarytype:startoffset:endoffset:)","title":"func getTextBefore(offset: Int, boundaryType: AtkTextBoundary, startOffset: UnsafeMutablePointer<gint>!, endOffset: UnsafeMutablePointer<gint>!) -> String!","type":"method"},{"path":"\/documentation\/atk\/textref\/ontextattributeschanged(flags:handler:)","title":"func onTextAttributesChanged(flags: ConnectFlags, handler: (TextRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/textref\/ontextcaretmoved(flags:handler:)","title":"func onTextCaretMoved(flags: ConnectFlags, handler: (TextRef, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/textref\/ontextchanged(flags:handler:)","title":"func onTextChanged(flags: ConnectFlags, handler: (TextRef, Int, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/textref\/ontextinsert(flags:handler:)","title":"func onTextInsert(flags: ConnectFlags, handler: (TextRef, Int, Int, String) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/textref\/ontextremove(flags:handler:)","title":"func onTextRemove(flags: ConnectFlags, handler: (TextRef, Int, Int, String) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/textref\/ontextselectionchanged(flags:handler:)","title":"func onTextSelectionChanged(flags: ConnectFlags, handler: (TextRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/textref\/removeselection(selectionnum:)","title":"func removeSelection(selectionNum: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/textref\/scrollsubstringto(startoffset:endoffset:type:)","title":"func scrollSubstringTo(startOffset: Int, endOffset: Int, type: AtkScrollType) -> Bool","type":"method"},{"path":"\/documentation\/atk\/textref\/scrollsubstringtopoint(startoffset:endoffset:coords:x:y:)","title":"func scrollSubstringToPoint(startOffset: Int, endOffset: Int, coords: AtkCoordType, x: Int, y: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/textref\/setcaret(offset:)","title":"func setCaret(offset: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/textref\/setselection(selectionnum:startoffset:endoffset:)","title":"func setSelection(selectionNum: Int, startOffset: Int, endOffset: Int) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/textref\/textattributeschangedsignal","title":"static var textAttributesChangedSignal: TextSignalName","type":"property"},{"path":"\/documentation\/atk\/textref\/textcaretmovedsignal","title":"static var textCaretMovedSignal: TextSignalName","type":"property"},{"path":"\/documentation\/atk\/textref\/textchangedsignal","title":"static var textChangedSignal: TextSignalName","type":"property"},{"path":"\/documentation\/atk\/textref\/textinsertsignal","title":"static var textInsertSignal: TextSignalName","type":"property"},{"path":"\/documentation\/atk\/textref\/textremovesignal","title":"static var textRemoveSignal: TextSignalName","type":"property"},{"path":"\/documentation\/atk\/textref\/textselectionchangedsignal","title":"static var textSelectionChangedSignal: TextSignalName","type":"property"}],"path":"\/documentation\/atk\/textref\/textprotocol-implementations","title":"TextProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/textref","title":"TextRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/utilclassref\/init(_:)-2hinh","title":"init(UnsafePointer<AtkUtilClass>)","type":"init"},{"path":"\/documentation\/atk\/utilclassref\/init(_:)-4fbf1","title":"init!(UnsafeMutablePointer<AtkUtilClass>?)","type":"init"},{"path":"\/documentation\/atk\/utilclassref\/init(_:)-4yfyd","title":"init(UnsafeMutablePointer<AtkUtilClass>)","type":"init"},{"path":"\/documentation\/atk\/utilclassref\/init(_:)-68q5h","title":"init!(UnsafePointer<AtkUtilClass>?)","type":"init"},{"path":"\/documentation\/atk\/utilclassref\/init(_:)-8t2k7","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/utilclassref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/utilclassref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/utilclassref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/utilclassref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/utilclassref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/utilclassref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/utilclassref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/utilclassref\/metatype","title":"static var metatype: AtkUtilClass?","type":"property"},{"path":"\/documentation\/atk\/utilclassref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/atk\/utilclassref\/wrapper","title":"static var wrapper: UtilClassRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/utilclassref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> Util!","type":"method"},{"path":"\/documentation\/atk\/utilclassref\/newutil(properties:nproperties:names:values:)","title":"static func newUtil(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> Util!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/utilclassref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/utilclassref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/utilclassref\/parent","title":"var parent: GObjectClass","type":"property"}],"path":"\/documentation\/atk\/utilclassref\/utilclassprotocol-implementations","title":"UtilClassProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/utilclassref","title":"UtilClassRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/utilref\/init(_:)-3af4a","title":"init!(UnsafeMutablePointer<AtkUtil>?)","type":"init"},{"path":"\/documentation\/atk\/utilref\/init(_:)-6a3gz","title":"init(UnsafeMutablePointer<AtkUtil>)","type":"init"},{"path":"\/documentation\/atk\/utilref\/init(_:)-6q4e3","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/utilref\/init(_:)-849x9","title":"init!(UnsafePointer<AtkUtil>?)","type":"init"},{"path":"\/documentation\/atk\/utilref\/init(_:)-90rta","title":"init(UnsafePointer<AtkUtil>)","type":"init"},{"path":"\/documentation\/atk\/utilref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/utilref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/utilref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/utilref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/utilref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/utilref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/utilref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/utilref\/unowned(_:)","title":"static func unowned<T>(T) -> UtilRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/utilref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/utilref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/utilref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/atk\/utilref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/atk\/utilref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/atk\/utilref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/atk\/utilref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/atk\/utilref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/utilref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/utilref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/atk\/utilref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/utilref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/utilref\/bind(_:to:property:flags:convertfrom:convertto:)-1mshp","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/utilref\/bind(_:to:property:flags:convertfrom:convertto:)-5zpn4","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/utilref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/utilref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/utilref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/utilref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/utilref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/utilref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/utilref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/atk\/utilref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/utilref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/utilref\/connect(signal:flags:handler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/utilref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/utilref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/utilref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/utilref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/utilref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/utilref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/utilref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/utilref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/atk\/utilref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/atk\/utilref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/atk\/utilref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/utilref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/utilref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/utilref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/utilref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/utilref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/utilref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/atk\/utilref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/utilref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/utilref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/utilref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/utilref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/utilref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/utilref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/utilref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/atk\/utilref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/utilref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/utilref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/utilref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/utilref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/utilref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/utilref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/utilref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/utilref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/utilref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/utilref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/utilref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/atk\/utilref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/utilref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/utilref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/utilref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/utilref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/utilref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/utilref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/atk\/utilref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/utilref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/utilref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/atk\/utilref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/atk\/utilref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/utilref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/utilref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/utilref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/utilref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/atk\/utilref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/atk\/utilref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/atk\/utilref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/atk\/utilref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/utilref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/utilref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/utilref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/atk\/utilref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/atk\/utilref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/atk\/utilref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/utilref\/parent","title":"var parent: GObject","type":"property"},{"path":"\/documentation\/atk\/utilref\/util_ptr","title":"var util_ptr: UnsafeMutablePointer<AtkUtil>!","type":"property"}],"path":"\/documentation\/atk\/utilref\/utilprotocol-implementations","title":"UtilProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/utilref","title":"UtilRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/valueifaceref\/init(_:)-16fxr","title":"init!(UnsafePointer<AtkValueIface>?)","type":"init"},{"path":"\/documentation\/atk\/valueifaceref\/init(_:)-1tnst","title":"init(UnsafePointer<AtkValueIface>)","type":"init"},{"path":"\/documentation\/atk\/valueifaceref\/init(_:)-1zcin","title":"init(UnsafeMutablePointer<AtkValueIface>)","type":"init"},{"path":"\/documentation\/atk\/valueifaceref\/init(_:)-4oawa","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/valueifaceref\/init(_:)-8ydm7","title":"init!(UnsafeMutablePointer<AtkValueIface>?)","type":"init"},{"path":"\/documentation\/atk\/valueifaceref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/valueifaceref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/valueifaceref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/valueifaceref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/valueifaceref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/valueifaceref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/valueifaceref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/valueifaceref\/metatype","title":"static var metatype: AtkValueIface?","type":"property"},{"path":"\/documentation\/atk\/valueifaceref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/atk\/valueifaceref\/wrapper","title":"static var wrapper: ValueIfaceRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/valueifaceref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> Value!","type":"method"},{"path":"\/documentation\/atk\/valueifaceref\/newvalue(properties:nproperties:names:values:)","title":"static func newValue(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> Value!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/valueifaceref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/valueifaceref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/valueifaceref\/parent","title":"var parent: GTypeInterface","type":"property"}],"path":"\/documentation\/atk\/valueifaceref\/valueifaceprotocol-implementations","title":"ValueIfaceProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/valueifaceref","title":"ValueIfaceRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/valueref\/init(_:)-1aks","title":"init!(UnsafeMutablePointer<AtkValue>?)","type":"init"},{"path":"\/documentation\/atk\/valueref\/init(_:)-1cg68","title":"init(UnsafeMutablePointer<AtkValue>)","type":"init"},{"path":"\/documentation\/atk\/valueref\/init(_:)-8r3td","title":"init(UnsafePointer<AtkValue>)","type":"init"},{"path":"\/documentation\/atk\/valueref\/init(_:)-8zxvo","title":"init!(UnsafePointer<AtkValue>?)","type":"init"},{"path":"\/documentation\/atk\/valueref\/init(_:)-9tupq","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/valueref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/valueref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/valueref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/valueref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/valueref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/valueref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/valueref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/valueref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/valueref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/valueref\/increment","title":"var increment: Double","type":"property"},{"path":"\/documentation\/atk\/valueref\/range","title":"var range: RangeRef!","type":"property"},{"path":"\/documentation\/atk\/valueref\/subranges","title":"var subRanges: RefSListRef<RangeRef>!","type":"property"},{"path":"\/documentation\/atk\/valueref\/value_ptr","title":"var value_ptr: UnsafeMutablePointer<AtkValue>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/valueref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ValueSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/valueref\/connect(signal:flags:handler:)","title":"func connect(signal: ValueSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/valueref\/getcurrent(value:)","title":"func getCurrent<GObjectValueT>(value: GObjectValueT)","type":"method"},{"path":"\/documentation\/atk\/valueref\/getincrement()","title":"func getIncrement() -> Double","type":"method"},{"path":"\/documentation\/atk\/valueref\/getmaximum(value:)","title":"func getMaximum<GObjectValueT>(value: GObjectValueT)","type":"method"},{"path":"\/documentation\/atk\/valueref\/getminimum(value:)","title":"func getMinimum<GObjectValueT>(value: GObjectValueT)","type":"method"},{"path":"\/documentation\/atk\/valueref\/getminimumincrement(value:)","title":"func getMinimumIncrement<GObjectValueT>(value: GObjectValueT)","type":"method"},{"path":"\/documentation\/atk\/valueref\/getrange()","title":"func getRange() -> RangeRef!","type":"method"},{"path":"\/documentation\/atk\/valueref\/getsubranges()","title":"func getSubRanges() -> RefSListRef<RangeRef>!","type":"method"},{"path":"\/documentation\/atk\/valueref\/getvalueandtext(value:text:)","title":"func getValueAndText(value: UnsafeMutablePointer<gdouble>!, text: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!)","type":"method"},{"path":"\/documentation\/atk\/valueref\/onvaluechanged(flags:handler:)","title":"func onValueChanged(flags: ConnectFlags, handler: (ValueRef, Double, String) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/valueref\/setcurrent(value:)","title":"func setCurrent<GObjectValueT>(value: GObjectValueT) -> Bool","type":"method"},{"path":"\/documentation\/atk\/valueref\/setvalue(newvalue:)","title":"func setValue(newValue: Double)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/valueref\/valuechangedsignal","title":"static var valueChangedSignal: ValueSignalName","type":"property"}],"path":"\/documentation\/atk\/valueref\/valueprotocol-implementations","title":"ValueProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/valueref","title":"ValueRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/windowifaceref\/init(_:)-44f54","title":"init(UnsafePointer<AtkWindowIface>)","type":"init"},{"path":"\/documentation\/atk\/windowifaceref\/init(_:)-4jz2p","title":"init(UnsafeMutablePointer<AtkWindowIface>)","type":"init"},{"path":"\/documentation\/atk\/windowifaceref\/init(_:)-4zh0s","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/windowifaceref\/init(_:)-7mplt","title":"init!(UnsafeMutablePointer<AtkWindowIface>?)","type":"init"},{"path":"\/documentation\/atk\/windowifaceref\/init(_:)-7qfze","title":"init!(UnsafePointer<AtkWindowIface>?)","type":"init"},{"path":"\/documentation\/atk\/windowifaceref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/windowifaceref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/windowifaceref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/windowifaceref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/windowifaceref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/windowifaceref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/windowifaceref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/windowifaceref\/metatype","title":"static var metatype: AtkWindowIface?","type":"property"},{"path":"\/documentation\/atk\/windowifaceref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/atk\/windowifaceref\/wrapper","title":"static var wrapper: WindowIfaceRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/windowifaceref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> Window!","type":"method"},{"path":"\/documentation\/atk\/windowifaceref\/newwindow(properties:nproperties:names:values:)","title":"static func newWindow(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> Window!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/windowifaceref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/windowifaceref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/windowifaceref\/parent","title":"var parent: GTypeInterface","type":"property"}],"path":"\/documentation\/atk\/windowifaceref\/windowifaceprotocol-implementations","title":"WindowIfaceProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/windowifaceref","title":"WindowIfaceRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/windowref\/init(_:)-322dw","title":"init(UnsafePointer<AtkWindow>)","type":"init"},{"path":"\/documentation\/atk\/windowref\/init(_:)-4m4k8","title":"init(UnsafeMutablePointer<AtkWindow>)","type":"init"},{"path":"\/documentation\/atk\/windowref\/init(_:)-5cobw","title":"init!(UnsafeMutablePointer<AtkWindow>?)","type":"init"},{"path":"\/documentation\/atk\/windowref\/init(_:)-9bl6s","title":"init!(UnsafePointer<AtkWindow>?)","type":"init"},{"path":"\/documentation\/atk\/windowref\/init(_:)-pi9l","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/atk\/windowref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/windowref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/atk\/windowref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/atk\/windowref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/atk\/windowref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/atk\/windowref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/windowref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/windowref\/unowned(_:)","title":"static func unowned<T>(T) -> WindowRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/windowref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/atk\/windowref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/windowref\/accessibleid","title":"var accessibleId: String!","type":"property"},{"path":"\/documentation\/atk\/windowref\/accessibleparent","title":"var accessibleParent: ObjectRef!","type":"property"},{"path":"\/documentation\/atk\/windowref\/attributes","title":"var attributes: UnsafeMutablePointer<AtkAttributeSet>!","type":"property"},{"path":"\/documentation\/atk\/windowref\/description","title":"var description: String!","type":"property"},{"path":"\/documentation\/atk\/windowref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/atk\/windowref\/indexinparent","title":"var indexInParent: Int","type":"property"},{"path":"\/documentation\/atk\/windowref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/atk\/windowref\/layer","title":"var layer: AtkLayer","type":"property"},{"path":"\/documentation\/atk\/windowref\/mdizorder","title":"var mdiZorder: Int","type":"property"},{"path":"\/documentation\/atk\/windowref\/naccessiblechildren","title":"var nAccessibleChildren: Int","type":"property"},{"path":"\/documentation\/atk\/windowref\/name","title":"var name: String!","type":"property"},{"path":"\/documentation\/atk\/windowref\/objectlocale","title":"var objectLocale: String!","type":"property"},{"path":"\/documentation\/atk\/windowref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<AtkObject>!","type":"property"},{"path":"\/documentation\/atk\/windowref\/parent","title":"var parent: ObjectRef!","type":"property"},{"path":"\/documentation\/atk\/windowref\/relationset","title":"var relationSet: RelationSetRef!","type":"property"},{"path":"\/documentation\/atk\/windowref\/role","title":"var role: AtkRole","type":"property"},{"path":"\/documentation\/atk\/windowref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/atk\/windowref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/atk\/windowref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/windowref\/add(relationship:target:)","title":"func add<ObjectT>(relationship: AtkRelationType, target: ObjectT) -> Bool","type":"method"},{"path":"\/documentation\/atk\/windowref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/windowref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/atk\/windowref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/windowref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/windowref\/bind(_:to:property:flags:convertfrom:convertto:)-638nd","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/windowref\/bind(_:to:property:flags:convertfrom:convertto:)-dfvf","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/windowref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/windowref\/bind(property:to:_:flags:transformfrom:transformto:)-8b9dp","title":"func bind<Q, T>(property: ObjectPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/windowref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/windowref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/windowref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/windowref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/windowref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/atk\/windowref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/atk\/windowref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/connectpropertychange(handler:)","title":"func connectPropertyChange(handler: UnsafeMutablePointer<AtkPropertyChangeHandler?>!) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/windowref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/windowref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/windowref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/windowref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/atk\/windowref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/atk\/windowref\/focustrackernotify()","title":"func focusTrackerNotify()","type":"method"},{"path":"\/documentation\/atk\/windowref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/atk\/windowref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/atk\/windowref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/atk\/windowref\/getaccessibleid()","title":"func getAccessibleId() -> String!","type":"method"},{"path":"\/documentation\/atk\/windowref\/getattributes()","title":"func getAttributes() -> UnsafeMutablePointer<AtkAttributeSet>!","type":"method"},{"path":"\/documentation\/atk\/windowref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/windowref\/getdescription()","title":"func getDescription() -> String!","type":"method"},{"path":"\/documentation\/atk\/windowref\/getindexinparent()","title":"func getIndexInParent() -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/getlayer()","title":"func getLayer() -> AtkLayer","type":"method"},{"path":"\/documentation\/atk\/windowref\/getmdizorder()","title":"func getMdiZorder() -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/getnaccessiblechildren()","title":"func getNAccessibleChildren() -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/getname()","title":"func getName() -> String!","type":"method"},{"path":"\/documentation\/atk\/windowref\/getobjectlocale()","title":"func getObjectLocale() -> String!","type":"method"},{"path":"\/documentation\/atk\/windowref\/getparent()","title":"func getParent() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/windowref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/windowref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/windowref\/getrole()","title":"func getRole() -> AtkRole","type":"method"},{"path":"\/documentation\/atk\/windowref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/windowref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/windowref\/initialize(data:)","title":"func initialize(data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/windowref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/windowref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/atk\/windowref\/notifystatechange(state:value:)","title":"func notifyStateChange(state: AtkState, value: Bool)","type":"method"},{"path":"\/documentation\/atk\/windowref\/onactivedescendantchanged(flags:handler:)","title":"func onActiveDescendantChanged(flags: ConnectFlags, handler: (ObjectRef, ObjectRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/onannouncement(flags:handler:)","title":"func onAnnouncement(flags: ConnectFlags, handler: (ObjectRef, String) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/onchildrenchanged(flags:handler:)","title":"func onChildrenChanged(flags: ConnectFlags, handler: (ObjectRef, UInt, ObjectRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/onfocusevent(flags:handler:)","title":"func onFocusEvent(flags: ConnectFlags, handler: (ObjectRef, Bool) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/onnotification(flags:handler:)","title":"func onNotification(flags: ConnectFlags, handler: (ObjectRef, String, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/onnotifyaccessiblecomponentlayer(flags:handler:)","title":"func onNotifyAccessibleComponentLayer(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/onnotifyaccessiblecomponentmdizorder(flags:handler:)","title":"func onNotifyAccessibleComponentMdiZorder(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/onnotifyaccessibledescription(flags:handler:)","title":"func onNotifyAccessibleDescription(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/onnotifyaccessiblehypertextnlinks(flags:handler:)","title":"func onNotifyAccessibleHypertextNlinks(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/onnotifyaccessiblename(flags:handler:)","title":"func onNotifyAccessibleName(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/onnotifyaccessibleparent(flags:handler:)","title":"func onNotifyAccessibleParent(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/onnotifyaccessiblerole(flags:handler:)","title":"func onNotifyAccessibleRole(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/onnotifyaccessibletablecaption(flags:handler:)","title":"func onNotifyAccessibleTableCaption(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/onnotifyaccessibletablecaptionobject(flags:handler:)","title":"func onNotifyAccessibleTableCaptionObject(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/onnotifyaccessibletablecolumndescription(flags:handler:)","title":"func onNotifyAccessibleTableColumnDescription(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/onnotifyaccessibletablecolumnheader(flags:handler:)","title":"func onNotifyAccessibleTableColumnHeader(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/onnotifyaccessibletablerowdescription(flags:handler:)","title":"func onNotifyAccessibleTableRowDescription(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/onnotifyaccessibletablerowheader(flags:handler:)","title":"func onNotifyAccessibleTableRowHeader(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/onnotifyaccessibletablesummary(flags:handler:)","title":"func onNotifyAccessibleTableSummary(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/onnotifyaccessiblevalue(flags:handler:)","title":"func onNotifyAccessibleValue(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/onpropertychange(flags:handler:)","title":"func onPropertyChange(flags: ConnectFlags, handler: (ObjectRef, PropertyValuesRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/onstatechange(flags:handler:)","title":"func onStateChange(flags: ConnectFlags, handler: (ObjectRef, String, Bool) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/onvisibledatachanged(flags:handler:)","title":"func onVisibleDataChanged(flags: ConnectFlags, handler: (ObjectRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/peekparent()","title":"func peekParent() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/windowref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/windowref\/refaccessiblechild(i:)","title":"func refAccessibleChild(i: Int) -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/windowref\/refrelationset()","title":"func refRelationSet() -> RelationSetRef!","type":"method"},{"path":"\/documentation\/atk\/windowref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/windowref\/refstateset()","title":"func refStateSet() -> StateSetRef!","type":"method"},{"path":"\/documentation\/atk\/windowref\/remove(relationship:target:)","title":"func remove<ObjectT>(relationship: AtkRelationType, target: ObjectT) -> Bool","type":"method"},{"path":"\/documentation\/atk\/windowref\/removepropertychangehandler(handlerid:)","title":"func removePropertyChangeHandler(handlerId: Int)","type":"method"},{"path":"\/documentation\/atk\/windowref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/windowref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/atk\/windowref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/windowref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/atk\/windowref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/atk\/windowref\/set(description:)","title":"func set(description: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/windowref\/set(name:)","title":"func set(name: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/windowref\/set(parent:)","title":"func set<ObjectT>(parent: ObjectT)","type":"method"},{"path":"\/documentation\/atk\/windowref\/set(role:)","title":"func set(role: AtkRole)","type":"method"},{"path":"\/documentation\/atk\/windowref\/setaccessibleid(name:)","title":"func setAccessibleId(name: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/windowref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/windowref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/windowref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/atk\/windowref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/windowref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/atk\/windowref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/atk\/windowref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/atk\/windowref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/atk\/windowref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/windowref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/windowref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/atk\/windowref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/atk\/windowref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/atk\/windowref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/atk\/windowref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/atk\/windowref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/atk\/windowref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/windowref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/atk\/windowref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/atk\/windowref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/atk\/windowref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/atk\/windowref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/atk\/windowref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/atk\/windowref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/atk\/windowref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/windowref\/activedescendantchangedsignal","title":"static var activeDescendantChangedSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/windowref\/announcementsignal","title":"static var announcementSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/windowref\/childrenchangedsignal","title":"static var childrenChangedSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/windowref\/focuseventsignal","title":"static var focusEventSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/windowref\/notificationsignal","title":"static var notificationSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/windowref\/notifyaccessiblecomponentlayersignal","title":"static var notifyAccessibleComponentLayerSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/windowref\/notifyaccessiblecomponentmdizordersignal","title":"static var notifyAccessibleComponentMdiZorderSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/windowref\/notifyaccessibledescriptionsignal","title":"static var notifyAccessibleDescriptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/windowref\/notifyaccessiblehypertextnlinkssignal","title":"static var notifyAccessibleHypertextNlinksSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/windowref\/notifyaccessiblenamesignal","title":"static var notifyAccessibleNameSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/windowref\/notifyaccessibleparentsignal","title":"static var notifyAccessibleParentSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/windowref\/notifyaccessiblerolesignal","title":"static var notifyAccessibleRoleSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/windowref\/notifyaccessibletablecaptionobjectsignal","title":"static var notifyAccessibleTableCaptionObjectSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/windowref\/notifyaccessibletablecaptionsignal","title":"static var notifyAccessibleTableCaptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/windowref\/notifyaccessibletablecolumndescriptionsignal","title":"static var notifyAccessibleTableColumnDescriptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/windowref\/notifyaccessibletablecolumnheadersignal","title":"static var notifyAccessibleTableColumnHeaderSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/windowref\/notifyaccessibletablerowdescriptionsignal","title":"static var notifyAccessibleTableRowDescriptionSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/windowref\/notifyaccessibletablerowheadersignal","title":"static var notifyAccessibleTableRowHeaderSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/windowref\/notifyaccessibletablesummarysignal","title":"static var notifyAccessibleTableSummarySignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/windowref\/notifyaccessiblevaluesignal","title":"static var notifyAccessibleValueSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/windowref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/windowref\/propertychangesignal","title":"static var propertyChangeSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/windowref\/statechangesignal","title":"static var stateChangeSignal: ObjectSignalName","type":"property"},{"path":"\/documentation\/atk\/windowref\/visibledatachangedsignal","title":"static var visibleDataChangedSignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/windowref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/atk\/windowref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/atk\/windowref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/atk\/windowref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/windowref\/window_ptr","title":"var window_ptr: UnsafeMutablePointer<AtkWindow>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atk\/windowref\/bind(property:to:_:flags:transformfrom:transformto:)-9f8vy","title":"func bind<Q, T>(property: WindowPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/atk\/windowref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: WindowSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/connect(signal:flags:handler:)","title":"func connect(signal: WindowSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/get(property:)","title":"func get(property: WindowPropertyName) -> Value","type":"method"},{"path":"\/documentation\/atk\/windowref\/onactivate(flags:handler:)","title":"func onActivate(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/oncreate(flags:handler:)","title":"func onCreate(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/ondeactivate(flags:handler:)","title":"func onDeactivate(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/ondestroy(flags:handler:)","title":"func onDestroy(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/onmaximize(flags:handler:)","title":"func onMaximize(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/onminimize(flags:handler:)","title":"func onMinimize(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/onmove(flags:handler:)","title":"func onMove(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/onresize(flags:handler:)","title":"func onResize(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/onrestore(flags:handler:)","title":"func onRestore(flags: ConnectFlags, handler: (WindowRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/atk\/windowref\/set(property:value:)","title":"func set(property: WindowPropertyName, value: Value)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/windowref\/activatesignal","title":"static var activateSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/windowref\/createsignal","title":"static var createSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/windowref\/deactivatesignal","title":"static var deactivateSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/windowref\/destroysignal","title":"static var destroySignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/windowref\/maximizesignal","title":"static var maximizeSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/windowref\/minimizesignal","title":"static var minimizeSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/windowref\/movesignal","title":"static var moveSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/windowref\/resizesignal","title":"static var resizeSignal: WindowSignalName","type":"property"},{"path":"\/documentation\/atk\/windowref\/restoresignal","title":"static var restoreSignal: WindowSignalName","type":"property"}],"path":"\/documentation\/atk\/windowref\/windowprotocol-implementations","title":"WindowProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/windowref","title":"WindowRef","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/atk\/binary_age","title":"let BINARY_AGE: Int32","type":"var"},{"path":"\/documentation\/atk\/interface_age","title":"let INTERFACE_AGE: Int32","type":"var"},{"path":"\/documentation\/atk\/major_version","title":"let MAJOR_VERSION: Int32","type":"var"},{"path":"\/documentation\/atk\/micro_version","title":"let MICRO_VERSION: Int32","type":"var"},{"path":"\/documentation\/atk\/minor_version","title":"let MINOR_VERSION: Int32","type":"var"},{"path":"\/documentation\/atk\/version_min_required","title":"let VERSION_MIN_REQUIRED: Int","type":"var"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/atk\/add(focustracker:)","title":"func add(focusTracker: AtkEventListener) -> Int","type":"func"},{"path":"\/documentation\/atk\/addglobalevent(listener:eventtype:)","title":"func addGlobalEvent(listener: GSignalEmissionHook, eventType: UnsafePointer<gchar>!) -> Int","type":"func"},{"path":"\/documentation\/atk\/addkeyevent(listener:data:)","title":"func addKeyEvent(listener: AtkKeySnoopFunc?, data: gpointer?) -> Int","type":"func"},{"path":"\/documentation\/atk\/attributesetfree(attribset:)","title":"func attributeSetFree(attribSet: UnsafeMutablePointer<AtkAttributeSet>!)","type":"func"},{"path":"\/documentation\/atk\/focustrackerinit(init:)","title":"func focusTrackerInit(init: AtkEventListenerInit)","type":"func"},{"path":"\/documentation\/atk\/focustrackernotify(object:)","title":"func focusTrackerNotify<ObjectT>(object: ObjectT)","type":"func"},{"path":"\/documentation\/atk\/getbinaryage()","title":"func getBinaryAge() -> Int","type":"func"},{"path":"\/documentation\/atk\/getdefaultregistry()","title":"func getDefaultRegistry() -> RegistryRef!","type":"func"},{"path":"\/documentation\/atk\/getfocusobject()","title":"func getFocusObject() -> ObjectRef!","type":"func"},{"path":"\/documentation\/atk\/getinterfaceage()","title":"func getInterfaceAge() -> Int","type":"func"},{"path":"\/documentation\/atk\/getmajorversion()","title":"func getMajorVersion() -> Int","type":"func"},{"path":"\/documentation\/atk\/getmicroversion()","title":"func getMicroVersion() -> Int","type":"func"},{"path":"\/documentation\/atk\/getminorversion()","title":"func getMinorVersion() -> Int","type":"func"},{"path":"\/documentation\/atk\/getroot()","title":"func getRoot() -> ObjectRef!","type":"func"},{"path":"\/documentation\/atk\/gettoolkitname()","title":"func getToolkitName() -> String!","type":"func"},{"path":"\/documentation\/atk\/gettoolkitversion()","title":"func getToolkitVersion() -> String!","type":"func"},{"path":"\/documentation\/atk\/getversion()","title":"func getVersion() -> String!","type":"func"},{"path":"\/documentation\/atk\/relationtypefor(name:)","title":"func relationTypeFor(name: UnsafePointer<gchar>!) -> AtkRelationType","type":"func"},{"path":"\/documentation\/atk\/relationtypegetname(type:)","title":"func relationTypeGetName(type: AtkRelationType) -> String!","type":"func"},{"path":"\/documentation\/atk\/relationtyperegister(name:)","title":"func relationTypeRegister(name: UnsafePointer<gchar>!) -> AtkRelationType","type":"func"},{"path":"\/documentation\/atk\/removefocustracker(trackerid:)","title":"func removeFocusTracker(trackerId: Int)","type":"func"},{"path":"\/documentation\/atk\/removeglobaleventlistener(listenerid:)","title":"func removeGlobalEventListener(listenerId: Int)","type":"func"},{"path":"\/documentation\/atk\/removekeyeventlistener(listenerid:)","title":"func removeKeyEventListener(listenerId: Int)","type":"func"},{"path":"\/documentation\/atk\/rolefor(name:)","title":"func roleFor(name: UnsafePointer<gchar>!) -> AtkRole","type":"func"},{"path":"\/documentation\/atk\/rolegetlocalizedname(role:)","title":"func roleGetLocalizedName(role: AtkRole) -> String!","type":"func"},{"path":"\/documentation\/atk\/rolegetname(role:)","title":"func roleGetName(role: AtkRole) -> String!","type":"func"},{"path":"\/documentation\/atk\/roleregister(name:)","title":"func roleRegister(name: UnsafePointer<gchar>!) -> AtkRole","type":"func"},{"path":"\/documentation\/atk\/statetypefor(name:)","title":"func stateTypeFor(name: UnsafePointer<gchar>!) -> AtkStateType","type":"func"},{"path":"\/documentation\/atk\/statetypegetname(type:)","title":"func stateTypeGetName(type: AtkStateType) -> String!","type":"func"},{"path":"\/documentation\/atk\/statetyperegister(name:)","title":"func stateTypeRegister(name: UnsafePointer<gchar>!) -> AtkStateType","type":"func"},{"path":"\/documentation\/atk\/textattributefor(name:)","title":"func textAttributeFor(name: UnsafePointer<gchar>!) -> AtkTextAttribute","type":"func"},{"path":"\/documentation\/atk\/textattributegetname(attr:)","title":"func textAttributeGetName(attr: AtkTextAttribute) -> String!","type":"func"},{"path":"\/documentation\/atk\/textattributegetvalue(attr:index:)","title":"func textAttributeGetValue(attr: AtkTextAttribute, index: Int) -> String!","type":"func"},{"path":"\/documentation\/atk\/textattributeregister(name:)","title":"func textAttributeRegister(name: UnsafePointer<gchar>!) -> AtkTextAttribute","type":"func"},{"path":"\/documentation\/atk\/textfree(ranges:)","title":"func textFree(ranges: UnsafeMutablePointer<UnsafeMutablePointer<AtkTextRange>?>!)","type":"func"},{"path":"\/documentation\/atk\/valuetypegetlocalizedname(valuetype:)","title":"func valueTypeGetLocalizedName(valueType: AtkValueType) -> String!","type":"func"},{"path":"\/documentation\/atk\/valuetypegetname(valuetype:)","title":"func valueTypeGetName(valueType: AtkValueType) -> String!","type":"func"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atk\/attributeset","title":"AttributeSet","type":"typealias"},{"path":"\/documentation\/atk\/coordtype","title":"CoordType","type":"typealias"},{"path":"\/documentation\/atk\/eventlistener","title":"EventListener","type":"typealias"},{"path":"\/documentation\/atk\/eventlistenerinit","title":"EventListenerInit","type":"typealias"},{"path":"\/documentation\/atk\/focushandler","title":"FocusHandler","type":"typealias"},{"path":"\/documentation\/atk\/function","title":"Function","type":"typealias"},{"path":"\/documentation\/atk\/keyeventtype","title":"KeyEventType","type":"typealias"},{"path":"\/documentation\/atk\/keysnoopfunc","title":"KeySnoopFunc","type":"typealias"},{"path":"\/documentation\/atk\/layer","title":"Layer","type":"typealias"},{"path":"\/documentation\/atk\/live","title":"Live","type":"typealias"},{"path":"\/documentation\/atk\/propertychangehandler","title":"PropertyChangeHandler","type":"typealias"},{"path":"\/documentation\/atk\/relationtype","title":"RelationType","type":"typealias"},{"path":"\/documentation\/atk\/role","title":"Role","type":"typealias"},{"path":"\/documentation\/atk\/scrolltype","title":"ScrollType","type":"typealias"},{"path":"\/documentation\/atk\/state","title":"State","type":"typealias"},{"path":"\/documentation\/atk\/statetype","title":"StateType","type":"typealias"},{"path":"\/documentation\/atk\/textattribute","title":"TextAttribute","type":"typealias"},{"path":"\/documentation\/atk\/textboundary","title":"TextBoundary","type":"typealias"},{"path":"\/documentation\/atk\/textcliptype","title":"TextClipType","type":"typealias"},{"path":"\/documentation\/atk\/textgranularity","title":"TextGranularity","type":"typealias"},{"path":"\/documentation\/atk\/valuetype","title":"ValueType","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/componentsignalname\/boundschanged","title":"case boundsChanged","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/componentsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/componentsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/componentsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/componentsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/componentsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/componentsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/componentsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/componentsignalname","title":"ComponentSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/documentsignalname\/loadcomplete","title":"case loadComplete","type":"case"},{"path":"\/documentation\/atk\/documentsignalname\/loadstopped","title":"case loadStopped","type":"case"},{"path":"\/documentation\/atk\/documentsignalname\/pagechanged","title":"case pageChanged","type":"case"},{"path":"\/documentation\/atk\/documentsignalname\/reload","title":"case reload","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/documentsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/documentsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/documentsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/documentsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/documentsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/documentsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/documentsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/documentsignalname","title":"DocumentSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessiblepropertyname\/accessiblecomponentlayer","title":"case accessibleComponentLayer","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblepropertyname\/accessiblecomponentmdizorder","title":"case accessibleComponentMdiZorder","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblepropertyname\/accessibledescription","title":"case accessibleDescription","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblepropertyname\/accessiblehypertextnlinks","title":"case accessibleHypertextNlinks","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblepropertyname\/accessiblename","title":"case accessibleName","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblepropertyname\/accessibleparent","title":"case accessibleParent","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblepropertyname\/accessiblerole","title":"case accessibleRole","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblepropertyname\/accessibletablecaption","title":"case accessibleTableCaption","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblepropertyname\/accessibletablecaptionobject","title":"case accessibleTableCaptionObject","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblepropertyname\/accessibletablecolumndescription","title":"case accessibleTableColumnDescription","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblepropertyname\/accessibletablecolumnheader","title":"case accessibleTableColumnHeader","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblepropertyname\/accessibletablerowdescription","title":"case accessibleTableRowDescription","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblepropertyname\/accessibletablerowheader","title":"case accessibleTableRowHeader","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblepropertyname\/accessibletablesummary","title":"case accessibleTableSummary","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblepropertyname\/accessiblevalue","title":"case accessibleValue","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessiblepropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessiblepropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/gobjectaccessiblepropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessiblepropertyname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/gobjectaccessiblepropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessiblepropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/gobjectaccessiblepropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atk\/gobjectaccessiblepropertyname","title":"GObjectAccessiblePropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessiblesignalname\/activedescendantchanged","title":"case activeDescendantChanged","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblesignalname\/announcement","title":"case announcement","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblesignalname\/childrenchanged","title":"case childrenChanged","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblesignalname\/focusevent","title":"case focusEvent","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblesignalname\/notification","title":"case notification","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblesignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblesignalname\/notifyaccessiblecomponentlayer","title":"case notifyAccessibleComponentLayer","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblesignalname\/notifyaccessiblecomponentmdizorder","title":"case notifyAccessibleComponentMdiZorder","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblesignalname\/notifyaccessibledescription","title":"case notifyAccessibleDescription","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblesignalname\/notifyaccessiblehypertextnlinks","title":"case notifyAccessibleHypertextNlinks","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblesignalname\/notifyaccessiblename","title":"case notifyAccessibleName","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblesignalname\/notifyaccessibleparent","title":"case notifyAccessibleParent","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblesignalname\/notifyaccessiblerole","title":"case notifyAccessibleRole","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblesignalname\/notifyaccessibletablecaption","title":"case notifyAccessibleTableCaption","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblesignalname\/notifyaccessibletablecaptionobject","title":"case notifyAccessibleTableCaptionObject","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblesignalname\/notifyaccessibletablecolumndescription","title":"case notifyAccessibleTableColumnDescription","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblesignalname\/notifyaccessibletablecolumnheader","title":"case notifyAccessibleTableColumnHeader","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblesignalname\/notifyaccessibletablerowdescription","title":"case notifyAccessibleTableRowDescription","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblesignalname\/notifyaccessibletablerowheader","title":"case notifyAccessibleTableRowHeader","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblesignalname\/notifyaccessibletablesummary","title":"case notifyAccessibleTableSummary","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblesignalname\/notifyaccessiblevalue","title":"case notifyAccessibleValue","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblesignalname\/propertychange","title":"case propertyChange","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblesignalname\/statechange","title":"case stateChange","type":"case"},{"path":"\/documentation\/atk\/gobjectaccessiblesignalname\/visibledatachanged","title":"case visibleDataChanged","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessiblesignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessiblesignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/gobjectaccessiblesignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessiblesignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/gobjectaccessiblesignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/gobjectaccessiblesignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/gobjectaccessiblesignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/gobjectaccessiblesignalname","title":"GObjectAccessibleSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkpropertyname\/endindex","title":"case endIndex","type":"case"},{"path":"\/documentation\/atk\/hyperlinkpropertyname\/numberofanchors","title":"case numberOfAnchors","type":"case"},{"path":"\/documentation\/atk\/hyperlinkpropertyname\/selectedlink","title":"case selectedLink","type":"case"},{"path":"\/documentation\/atk\/hyperlinkpropertyname\/startindex","title":"case startIndex","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkpropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkpropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/hyperlinkpropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkpropertyname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/hyperlinkpropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinkpropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/hyperlinkpropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atk\/hyperlinkpropertyname","title":"HyperlinkPropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinksignalname\/linkactivated","title":"case linkActivated","type":"case"},{"path":"\/documentation\/atk\/hyperlinksignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/atk\/hyperlinksignalname\/notifyendindex","title":"case notifyEndIndex","type":"case"},{"path":"\/documentation\/atk\/hyperlinksignalname\/notifynumberofanchors","title":"case notifyNumberOfAnchors","type":"case"},{"path":"\/documentation\/atk\/hyperlinksignalname\/notifyselectedlink","title":"case notifySelectedLink","type":"case"},{"path":"\/documentation\/atk\/hyperlinksignalname\/notifystartindex","title":"case notifyStartIndex","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinksignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinksignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/hyperlinksignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinksignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/hyperlinksignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hyperlinksignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/hyperlinksignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/hyperlinksignalname","title":"HyperlinkSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/hypertextsignalname\/linkselected","title":"case linkSelected","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/hypertextsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/hypertextsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/hypertextsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hypertextsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/hypertextsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/hypertextsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/hypertextsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/hypertextsignalname","title":"HypertextSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/miscsignalname\/notify","title":"case notify","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/miscsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/miscsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/miscsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/miscsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/miscsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/miscsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/miscsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/miscsignalname","title":"MiscSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectfactorysignalname\/notify","title":"case notify","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectfactorysignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectfactorysignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/noopobjectfactorysignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectfactorysignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/noopobjectfactorysignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectfactorysignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/noopobjectfactorysignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/noopobjectfactorysignalname","title":"NoOpObjectFactorySignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectpropertyname\/accessiblecomponentlayer","title":"case accessibleComponentLayer","type":"case"},{"path":"\/documentation\/atk\/noopobjectpropertyname\/accessiblecomponentmdizorder","title":"case accessibleComponentMdiZorder","type":"case"},{"path":"\/documentation\/atk\/noopobjectpropertyname\/accessibledescription","title":"case accessibleDescription","type":"case"},{"path":"\/documentation\/atk\/noopobjectpropertyname\/accessiblehypertextnlinks","title":"case accessibleHypertextNlinks","type":"case"},{"path":"\/documentation\/atk\/noopobjectpropertyname\/accessiblename","title":"case accessibleName","type":"case"},{"path":"\/documentation\/atk\/noopobjectpropertyname\/accessibleparent","title":"case accessibleParent","type":"case"},{"path":"\/documentation\/atk\/noopobjectpropertyname\/accessiblerole","title":"case accessibleRole","type":"case"},{"path":"\/documentation\/atk\/noopobjectpropertyname\/accessibletablecaption","title":"case accessibleTableCaption","type":"case"},{"path":"\/documentation\/atk\/noopobjectpropertyname\/accessibletablecaptionobject","title":"case accessibleTableCaptionObject","type":"case"},{"path":"\/documentation\/atk\/noopobjectpropertyname\/accessibletablecolumndescription","title":"case accessibleTableColumnDescription","type":"case"},{"path":"\/documentation\/atk\/noopobjectpropertyname\/accessibletablecolumnheader","title":"case accessibleTableColumnHeader","type":"case"},{"path":"\/documentation\/atk\/noopobjectpropertyname\/accessibletablerowdescription","title":"case accessibleTableRowDescription","type":"case"},{"path":"\/documentation\/atk\/noopobjectpropertyname\/accessibletablerowheader","title":"case accessibleTableRowHeader","type":"case"},{"path":"\/documentation\/atk\/noopobjectpropertyname\/accessibletablesummary","title":"case accessibleTableSummary","type":"case"},{"path":"\/documentation\/atk\/noopobjectpropertyname\/accessiblevalue","title":"case accessibleValue","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectpropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectpropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/noopobjectpropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectpropertyname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/noopobjectpropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectpropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/noopobjectpropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atk\/noopobjectpropertyname","title":"NoOpObjectPropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectsignalname\/activedescendantchanged","title":"case activeDescendantChanged","type":"case"},{"path":"\/documentation\/atk\/noopobjectsignalname\/announcement","title":"case announcement","type":"case"},{"path":"\/documentation\/atk\/noopobjectsignalname\/childrenchanged","title":"case childrenChanged","type":"case"},{"path":"\/documentation\/atk\/noopobjectsignalname\/focusevent","title":"case focusEvent","type":"case"},{"path":"\/documentation\/atk\/noopobjectsignalname\/notification","title":"case notification","type":"case"},{"path":"\/documentation\/atk\/noopobjectsignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/atk\/noopobjectsignalname\/notifyaccessiblecomponentlayer","title":"case notifyAccessibleComponentLayer","type":"case"},{"path":"\/documentation\/atk\/noopobjectsignalname\/notifyaccessiblecomponentmdizorder","title":"case notifyAccessibleComponentMdiZorder","type":"case"},{"path":"\/documentation\/atk\/noopobjectsignalname\/notifyaccessibledescription","title":"case notifyAccessibleDescription","type":"case"},{"path":"\/documentation\/atk\/noopobjectsignalname\/notifyaccessiblehypertextnlinks","title":"case notifyAccessibleHypertextNlinks","type":"case"},{"path":"\/documentation\/atk\/noopobjectsignalname\/notifyaccessiblename","title":"case notifyAccessibleName","type":"case"},{"path":"\/documentation\/atk\/noopobjectsignalname\/notifyaccessibleparent","title":"case notifyAccessibleParent","type":"case"},{"path":"\/documentation\/atk\/noopobjectsignalname\/notifyaccessiblerole","title":"case notifyAccessibleRole","type":"case"},{"path":"\/documentation\/atk\/noopobjectsignalname\/notifyaccessibletablecaption","title":"case notifyAccessibleTableCaption","type":"case"},{"path":"\/documentation\/atk\/noopobjectsignalname\/notifyaccessibletablecaptionobject","title":"case notifyAccessibleTableCaptionObject","type":"case"},{"path":"\/documentation\/atk\/noopobjectsignalname\/notifyaccessibletablecolumndescription","title":"case notifyAccessibleTableColumnDescription","type":"case"},{"path":"\/documentation\/atk\/noopobjectsignalname\/notifyaccessibletablecolumnheader","title":"case notifyAccessibleTableColumnHeader","type":"case"},{"path":"\/documentation\/atk\/noopobjectsignalname\/notifyaccessibletablerowdescription","title":"case notifyAccessibleTableRowDescription","type":"case"},{"path":"\/documentation\/atk\/noopobjectsignalname\/notifyaccessibletablerowheader","title":"case notifyAccessibleTableRowHeader","type":"case"},{"path":"\/documentation\/atk\/noopobjectsignalname\/notifyaccessibletablesummary","title":"case notifyAccessibleTableSummary","type":"case"},{"path":"\/documentation\/atk\/noopobjectsignalname\/notifyaccessiblevalue","title":"case notifyAccessibleValue","type":"case"},{"path":"\/documentation\/atk\/noopobjectsignalname\/propertychange","title":"case propertyChange","type":"case"},{"path":"\/documentation\/atk\/noopobjectsignalname\/statechange","title":"case stateChange","type":"case"},{"path":"\/documentation\/atk\/noopobjectsignalname\/visibledatachanged","title":"case visibleDataChanged","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/noopobjectsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/noopobjectsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/noopobjectsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/noopobjectsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/noopobjectsignalname","title":"NoOpObjectSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/objectfactorysignalname\/notify","title":"case notify","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/objectfactorysignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/objectfactorysignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/objectfactorysignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/objectfactorysignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/objectfactorysignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/objectfactorysignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/objectfactorysignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/objectfactorysignalname","title":"ObjectFactorySignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/objectpropertyname\/accessiblecomponentlayer","title":"case accessibleComponentLayer","type":"case"},{"path":"\/documentation\/atk\/objectpropertyname\/accessiblecomponentmdizorder","title":"case accessibleComponentMdiZorder","type":"case"},{"path":"\/documentation\/atk\/objectpropertyname\/accessibledescription","title":"case accessibleDescription","type":"case"},{"path":"\/documentation\/atk\/objectpropertyname\/accessiblehypertextnlinks","title":"case accessibleHypertextNlinks","type":"case"},{"path":"\/documentation\/atk\/objectpropertyname\/accessiblename","title":"case accessibleName","type":"case"},{"path":"\/documentation\/atk\/objectpropertyname\/accessibleparent","title":"case accessibleParent","type":"case"},{"path":"\/documentation\/atk\/objectpropertyname\/accessiblerole","title":"case accessibleRole","type":"case"},{"path":"\/documentation\/atk\/objectpropertyname\/accessibletablecaption","title":"case accessibleTableCaption","type":"case"},{"path":"\/documentation\/atk\/objectpropertyname\/accessibletablecaptionobject","title":"case accessibleTableCaptionObject","type":"case"},{"path":"\/documentation\/atk\/objectpropertyname\/accessibletablecolumndescription","title":"case accessibleTableColumnDescription","type":"case"},{"path":"\/documentation\/atk\/objectpropertyname\/accessibletablecolumnheader","title":"case accessibleTableColumnHeader","type":"case"},{"path":"\/documentation\/atk\/objectpropertyname\/accessibletablerowdescription","title":"case accessibleTableRowDescription","type":"case"},{"path":"\/documentation\/atk\/objectpropertyname\/accessibletablerowheader","title":"case accessibleTableRowHeader","type":"case"},{"path":"\/documentation\/atk\/objectpropertyname\/accessibletablesummary","title":"case accessibleTableSummary","type":"case"},{"path":"\/documentation\/atk\/objectpropertyname\/accessiblevalue","title":"case accessibleValue","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/objectpropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/objectpropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/objectpropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/objectpropertyname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/objectpropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/objectpropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/objectpropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atk\/objectpropertyname","title":"ObjectPropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/objectsignalname\/activedescendantchanged","title":"case activeDescendantChanged","type":"case"},{"path":"\/documentation\/atk\/objectsignalname\/announcement","title":"case announcement","type":"case"},{"path":"\/documentation\/atk\/objectsignalname\/childrenchanged","title":"case childrenChanged","type":"case"},{"path":"\/documentation\/atk\/objectsignalname\/focusevent","title":"case focusEvent","type":"case"},{"path":"\/documentation\/atk\/objectsignalname\/notification","title":"case notification","type":"case"},{"path":"\/documentation\/atk\/objectsignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/atk\/objectsignalname\/notifyaccessiblecomponentlayer","title":"case notifyAccessibleComponentLayer","type":"case"},{"path":"\/documentation\/atk\/objectsignalname\/notifyaccessiblecomponentmdizorder","title":"case notifyAccessibleComponentMdiZorder","type":"case"},{"path":"\/documentation\/atk\/objectsignalname\/notifyaccessibledescription","title":"case notifyAccessibleDescription","type":"case"},{"path":"\/documentation\/atk\/objectsignalname\/notifyaccessiblehypertextnlinks","title":"case notifyAccessibleHypertextNlinks","type":"case"},{"path":"\/documentation\/atk\/objectsignalname\/notifyaccessiblename","title":"case notifyAccessibleName","type":"case"},{"path":"\/documentation\/atk\/objectsignalname\/notifyaccessibleparent","title":"case notifyAccessibleParent","type":"case"},{"path":"\/documentation\/atk\/objectsignalname\/notifyaccessiblerole","title":"case notifyAccessibleRole","type":"case"},{"path":"\/documentation\/atk\/objectsignalname\/notifyaccessibletablecaption","title":"case notifyAccessibleTableCaption","type":"case"},{"path":"\/documentation\/atk\/objectsignalname\/notifyaccessibletablecaptionobject","title":"case notifyAccessibleTableCaptionObject","type":"case"},{"path":"\/documentation\/atk\/objectsignalname\/notifyaccessibletablecolumndescription","title":"case notifyAccessibleTableColumnDescription","type":"case"},{"path":"\/documentation\/atk\/objectsignalname\/notifyaccessibletablecolumnheader","title":"case notifyAccessibleTableColumnHeader","type":"case"},{"path":"\/documentation\/atk\/objectsignalname\/notifyaccessibletablerowdescription","title":"case notifyAccessibleTableRowDescription","type":"case"},{"path":"\/documentation\/atk\/objectsignalname\/notifyaccessibletablerowheader","title":"case notifyAccessibleTableRowHeader","type":"case"},{"path":"\/documentation\/atk\/objectsignalname\/notifyaccessibletablesummary","title":"case notifyAccessibleTableSummary","type":"case"},{"path":"\/documentation\/atk\/objectsignalname\/notifyaccessiblevalue","title":"case notifyAccessibleValue","type":"case"},{"path":"\/documentation\/atk\/objectsignalname\/propertychange","title":"case propertyChange","type":"case"},{"path":"\/documentation\/atk\/objectsignalname\/statechange","title":"case stateChange","type":"case"},{"path":"\/documentation\/atk\/objectsignalname\/visibledatachanged","title":"case visibleDataChanged","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/objectsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/objectsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/objectsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/objectsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/objectsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/objectsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/objectsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/objectsignalname","title":"ObjectSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/plugpropertyname\/accessiblecomponentlayer","title":"case accessibleComponentLayer","type":"case"},{"path":"\/documentation\/atk\/plugpropertyname\/accessiblecomponentmdizorder","title":"case accessibleComponentMdiZorder","type":"case"},{"path":"\/documentation\/atk\/plugpropertyname\/accessibledescription","title":"case accessibleDescription","type":"case"},{"path":"\/documentation\/atk\/plugpropertyname\/accessiblehypertextnlinks","title":"case accessibleHypertextNlinks","type":"case"},{"path":"\/documentation\/atk\/plugpropertyname\/accessiblename","title":"case accessibleName","type":"case"},{"path":"\/documentation\/atk\/plugpropertyname\/accessibleparent","title":"case accessibleParent","type":"case"},{"path":"\/documentation\/atk\/plugpropertyname\/accessiblerole","title":"case accessibleRole","type":"case"},{"path":"\/documentation\/atk\/plugpropertyname\/accessibletablecaption","title":"case accessibleTableCaption","type":"case"},{"path":"\/documentation\/atk\/plugpropertyname\/accessibletablecaptionobject","title":"case accessibleTableCaptionObject","type":"case"},{"path":"\/documentation\/atk\/plugpropertyname\/accessibletablecolumndescription","title":"case accessibleTableColumnDescription","type":"case"},{"path":"\/documentation\/atk\/plugpropertyname\/accessibletablecolumnheader","title":"case accessibleTableColumnHeader","type":"case"},{"path":"\/documentation\/atk\/plugpropertyname\/accessibletablerowdescription","title":"case accessibleTableRowDescription","type":"case"},{"path":"\/documentation\/atk\/plugpropertyname\/accessibletablerowheader","title":"case accessibleTableRowHeader","type":"case"},{"path":"\/documentation\/atk\/plugpropertyname\/accessibletablesummary","title":"case accessibleTableSummary","type":"case"},{"path":"\/documentation\/atk\/plugpropertyname\/accessiblevalue","title":"case accessibleValue","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/plugpropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/plugpropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/plugpropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/plugpropertyname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/plugpropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/plugpropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/plugpropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atk\/plugpropertyname","title":"PlugPropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/plugsignalname\/activedescendantchanged","title":"case activeDescendantChanged","type":"case"},{"path":"\/documentation\/atk\/plugsignalname\/announcement","title":"case announcement","type":"case"},{"path":"\/documentation\/atk\/plugsignalname\/childrenchanged","title":"case childrenChanged","type":"case"},{"path":"\/documentation\/atk\/plugsignalname\/focusevent","title":"case focusEvent","type":"case"},{"path":"\/documentation\/atk\/plugsignalname\/notification","title":"case notification","type":"case"},{"path":"\/documentation\/atk\/plugsignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/atk\/plugsignalname\/notifyaccessiblecomponentlayer","title":"case notifyAccessibleComponentLayer","type":"case"},{"path":"\/documentation\/atk\/plugsignalname\/notifyaccessiblecomponentmdizorder","title":"case notifyAccessibleComponentMdiZorder","type":"case"},{"path":"\/documentation\/atk\/plugsignalname\/notifyaccessibledescription","title":"case notifyAccessibleDescription","type":"case"},{"path":"\/documentation\/atk\/plugsignalname\/notifyaccessiblehypertextnlinks","title":"case notifyAccessibleHypertextNlinks","type":"case"},{"path":"\/documentation\/atk\/plugsignalname\/notifyaccessiblename","title":"case notifyAccessibleName","type":"case"},{"path":"\/documentation\/atk\/plugsignalname\/notifyaccessibleparent","title":"case notifyAccessibleParent","type":"case"},{"path":"\/documentation\/atk\/plugsignalname\/notifyaccessiblerole","title":"case notifyAccessibleRole","type":"case"},{"path":"\/documentation\/atk\/plugsignalname\/notifyaccessibletablecaption","title":"case notifyAccessibleTableCaption","type":"case"},{"path":"\/documentation\/atk\/plugsignalname\/notifyaccessibletablecaptionobject","title":"case notifyAccessibleTableCaptionObject","type":"case"},{"path":"\/documentation\/atk\/plugsignalname\/notifyaccessibletablecolumndescription","title":"case notifyAccessibleTableColumnDescription","type":"case"},{"path":"\/documentation\/atk\/plugsignalname\/notifyaccessibletablecolumnheader","title":"case notifyAccessibleTableColumnHeader","type":"case"},{"path":"\/documentation\/atk\/plugsignalname\/notifyaccessibletablerowdescription","title":"case notifyAccessibleTableRowDescription","type":"case"},{"path":"\/documentation\/atk\/plugsignalname\/notifyaccessibletablerowheader","title":"case notifyAccessibleTableRowHeader","type":"case"},{"path":"\/documentation\/atk\/plugsignalname\/notifyaccessibletablesummary","title":"case notifyAccessibleTableSummary","type":"case"},{"path":"\/documentation\/atk\/plugsignalname\/notifyaccessiblevalue","title":"case notifyAccessibleValue","type":"case"},{"path":"\/documentation\/atk\/plugsignalname\/propertychange","title":"case propertyChange","type":"case"},{"path":"\/documentation\/atk\/plugsignalname\/statechange","title":"case stateChange","type":"case"},{"path":"\/documentation\/atk\/plugsignalname\/visibledatachanged","title":"case visibleDataChanged","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/plugsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/plugsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/plugsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/plugsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/plugsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/plugsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/plugsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/plugsignalname","title":"PlugSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/registrysignalname\/notify","title":"case notify","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/registrysignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/registrysignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/registrysignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/registrysignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/registrysignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/registrysignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/registrysignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/registrysignalname","title":"RegistrySignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/relationpropertyname\/relationtype","title":"case relationType","type":"case"},{"path":"\/documentation\/atk\/relationpropertyname\/target","title":"case target","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/relationpropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/relationpropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/relationpropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/relationpropertyname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/relationpropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/relationpropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/relationpropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atk\/relationpropertyname","title":"RelationPropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/relationsetsignalname\/notify","title":"case notify","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/relationsetsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/relationsetsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/relationsetsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/relationsetsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/relationsetsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/relationsetsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/relationsetsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/relationsetsignalname","title":"RelationSetSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/relationsignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/atk\/relationsignalname\/notifyrelationtype","title":"case notifyRelationType","type":"case"},{"path":"\/documentation\/atk\/relationsignalname\/notifytarget","title":"case notifyTarget","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/relationsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/relationsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/relationsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/relationsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/relationsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/relationsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/relationsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/relationsignalname","title":"RelationSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/selectionsignalname\/selectionchanged","title":"case selectionChanged","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/selectionsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/selectionsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/selectionsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/selectionsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/selectionsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/selectionsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/selectionsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/selectionsignalname","title":"SelectionSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/socketpropertyname\/accessiblecomponentlayer","title":"case accessibleComponentLayer","type":"case"},{"path":"\/documentation\/atk\/socketpropertyname\/accessiblecomponentmdizorder","title":"case accessibleComponentMdiZorder","type":"case"},{"path":"\/documentation\/atk\/socketpropertyname\/accessibledescription","title":"case accessibleDescription","type":"case"},{"path":"\/documentation\/atk\/socketpropertyname\/accessiblehypertextnlinks","title":"case accessibleHypertextNlinks","type":"case"},{"path":"\/documentation\/atk\/socketpropertyname\/accessiblename","title":"case accessibleName","type":"case"},{"path":"\/documentation\/atk\/socketpropertyname\/accessibleparent","title":"case accessibleParent","type":"case"},{"path":"\/documentation\/atk\/socketpropertyname\/accessiblerole","title":"case accessibleRole","type":"case"},{"path":"\/documentation\/atk\/socketpropertyname\/accessibletablecaption","title":"case accessibleTableCaption","type":"case"},{"path":"\/documentation\/atk\/socketpropertyname\/accessibletablecaptionobject","title":"case accessibleTableCaptionObject","type":"case"},{"path":"\/documentation\/atk\/socketpropertyname\/accessibletablecolumndescription","title":"case accessibleTableColumnDescription","type":"case"},{"path":"\/documentation\/atk\/socketpropertyname\/accessibletablecolumnheader","title":"case accessibleTableColumnHeader","type":"case"},{"path":"\/documentation\/atk\/socketpropertyname\/accessibletablerowdescription","title":"case accessibleTableRowDescription","type":"case"},{"path":"\/documentation\/atk\/socketpropertyname\/accessibletablerowheader","title":"case accessibleTableRowHeader","type":"case"},{"path":"\/documentation\/atk\/socketpropertyname\/accessibletablesummary","title":"case accessibleTableSummary","type":"case"},{"path":"\/documentation\/atk\/socketpropertyname\/accessiblevalue","title":"case accessibleValue","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/socketpropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/socketpropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/socketpropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/socketpropertyname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/socketpropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/socketpropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/socketpropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atk\/socketpropertyname","title":"SocketPropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/socketsignalname\/activedescendantchanged","title":"case activeDescendantChanged","type":"case"},{"path":"\/documentation\/atk\/socketsignalname\/announcement","title":"case announcement","type":"case"},{"path":"\/documentation\/atk\/socketsignalname\/childrenchanged","title":"case childrenChanged","type":"case"},{"path":"\/documentation\/atk\/socketsignalname\/focusevent","title":"case focusEvent","type":"case"},{"path":"\/documentation\/atk\/socketsignalname\/notification","title":"case notification","type":"case"},{"path":"\/documentation\/atk\/socketsignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/atk\/socketsignalname\/notifyaccessiblecomponentlayer","title":"case notifyAccessibleComponentLayer","type":"case"},{"path":"\/documentation\/atk\/socketsignalname\/notifyaccessiblecomponentmdizorder","title":"case notifyAccessibleComponentMdiZorder","type":"case"},{"path":"\/documentation\/atk\/socketsignalname\/notifyaccessibledescription","title":"case notifyAccessibleDescription","type":"case"},{"path":"\/documentation\/atk\/socketsignalname\/notifyaccessiblehypertextnlinks","title":"case notifyAccessibleHypertextNlinks","type":"case"},{"path":"\/documentation\/atk\/socketsignalname\/notifyaccessiblename","title":"case notifyAccessibleName","type":"case"},{"path":"\/documentation\/atk\/socketsignalname\/notifyaccessibleparent","title":"case notifyAccessibleParent","type":"case"},{"path":"\/documentation\/atk\/socketsignalname\/notifyaccessiblerole","title":"case notifyAccessibleRole","type":"case"},{"path":"\/documentation\/atk\/socketsignalname\/notifyaccessibletablecaption","title":"case notifyAccessibleTableCaption","type":"case"},{"path":"\/documentation\/atk\/socketsignalname\/notifyaccessibletablecaptionobject","title":"case notifyAccessibleTableCaptionObject","type":"case"},{"path":"\/documentation\/atk\/socketsignalname\/notifyaccessibletablecolumndescription","title":"case notifyAccessibleTableColumnDescription","type":"case"},{"path":"\/documentation\/atk\/socketsignalname\/notifyaccessibletablecolumnheader","title":"case notifyAccessibleTableColumnHeader","type":"case"},{"path":"\/documentation\/atk\/socketsignalname\/notifyaccessibletablerowdescription","title":"case notifyAccessibleTableRowDescription","type":"case"},{"path":"\/documentation\/atk\/socketsignalname\/notifyaccessibletablerowheader","title":"case notifyAccessibleTableRowHeader","type":"case"},{"path":"\/documentation\/atk\/socketsignalname\/notifyaccessibletablesummary","title":"case notifyAccessibleTableSummary","type":"case"},{"path":"\/documentation\/atk\/socketsignalname\/notifyaccessiblevalue","title":"case notifyAccessibleValue","type":"case"},{"path":"\/documentation\/atk\/socketsignalname\/propertychange","title":"case propertyChange","type":"case"},{"path":"\/documentation\/atk\/socketsignalname\/statechange","title":"case stateChange","type":"case"},{"path":"\/documentation\/atk\/socketsignalname\/visibledatachanged","title":"case visibleDataChanged","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/socketsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/socketsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/socketsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/socketsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/socketsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/socketsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/socketsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/socketsignalname","title":"SocketSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/statesetsignalname\/notify","title":"case notify","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/statesetsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/statesetsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/statesetsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/statesetsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/statesetsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/statesetsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/statesetsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/statesetsignalname","title":"StateSetSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecellpropertyname\/accessiblecomponentlayer","title":"case accessibleComponentLayer","type":"case"},{"path":"\/documentation\/atk\/tablecellpropertyname\/accessiblecomponentmdizorder","title":"case accessibleComponentMdiZorder","type":"case"},{"path":"\/documentation\/atk\/tablecellpropertyname\/accessibledescription","title":"case accessibleDescription","type":"case"},{"path":"\/documentation\/atk\/tablecellpropertyname\/accessiblehypertextnlinks","title":"case accessibleHypertextNlinks","type":"case"},{"path":"\/documentation\/atk\/tablecellpropertyname\/accessiblename","title":"case accessibleName","type":"case"},{"path":"\/documentation\/atk\/tablecellpropertyname\/accessibleparent","title":"case accessibleParent","type":"case"},{"path":"\/documentation\/atk\/tablecellpropertyname\/accessiblerole","title":"case accessibleRole","type":"case"},{"path":"\/documentation\/atk\/tablecellpropertyname\/accessibletablecaption","title":"case accessibleTableCaption","type":"case"},{"path":"\/documentation\/atk\/tablecellpropertyname\/accessibletablecaptionobject","title":"case accessibleTableCaptionObject","type":"case"},{"path":"\/documentation\/atk\/tablecellpropertyname\/accessibletablecolumndescription","title":"case accessibleTableColumnDescription","type":"case"},{"path":"\/documentation\/atk\/tablecellpropertyname\/accessibletablecolumnheader","title":"case accessibleTableColumnHeader","type":"case"},{"path":"\/documentation\/atk\/tablecellpropertyname\/accessibletablerowdescription","title":"case accessibleTableRowDescription","type":"case"},{"path":"\/documentation\/atk\/tablecellpropertyname\/accessibletablerowheader","title":"case accessibleTableRowHeader","type":"case"},{"path":"\/documentation\/atk\/tablecellpropertyname\/accessibletablesummary","title":"case accessibleTableSummary","type":"case"},{"path":"\/documentation\/atk\/tablecellpropertyname\/accessiblevalue","title":"case accessibleValue","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecellpropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecellpropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/tablecellpropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecellpropertyname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/tablecellpropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecellpropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/tablecellpropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atk\/tablecellpropertyname","title":"TableCellPropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecellsignalname\/activedescendantchanged","title":"case activeDescendantChanged","type":"case"},{"path":"\/documentation\/atk\/tablecellsignalname\/announcement","title":"case announcement","type":"case"},{"path":"\/documentation\/atk\/tablecellsignalname\/childrenchanged","title":"case childrenChanged","type":"case"},{"path":"\/documentation\/atk\/tablecellsignalname\/focusevent","title":"case focusEvent","type":"case"},{"path":"\/documentation\/atk\/tablecellsignalname\/notification","title":"case notification","type":"case"},{"path":"\/documentation\/atk\/tablecellsignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/atk\/tablecellsignalname\/notifyaccessiblecomponentlayer","title":"case notifyAccessibleComponentLayer","type":"case"},{"path":"\/documentation\/atk\/tablecellsignalname\/notifyaccessiblecomponentmdizorder","title":"case notifyAccessibleComponentMdiZorder","type":"case"},{"path":"\/documentation\/atk\/tablecellsignalname\/notifyaccessibledescription","title":"case notifyAccessibleDescription","type":"case"},{"path":"\/documentation\/atk\/tablecellsignalname\/notifyaccessiblehypertextnlinks","title":"case notifyAccessibleHypertextNlinks","type":"case"},{"path":"\/documentation\/atk\/tablecellsignalname\/notifyaccessiblename","title":"case notifyAccessibleName","type":"case"},{"path":"\/documentation\/atk\/tablecellsignalname\/notifyaccessibleparent","title":"case notifyAccessibleParent","type":"case"},{"path":"\/documentation\/atk\/tablecellsignalname\/notifyaccessiblerole","title":"case notifyAccessibleRole","type":"case"},{"path":"\/documentation\/atk\/tablecellsignalname\/notifyaccessibletablecaption","title":"case notifyAccessibleTableCaption","type":"case"},{"path":"\/documentation\/atk\/tablecellsignalname\/notifyaccessibletablecaptionobject","title":"case notifyAccessibleTableCaptionObject","type":"case"},{"path":"\/documentation\/atk\/tablecellsignalname\/notifyaccessibletablecolumndescription","title":"case notifyAccessibleTableColumnDescription","type":"case"},{"path":"\/documentation\/atk\/tablecellsignalname\/notifyaccessibletablecolumnheader","title":"case notifyAccessibleTableColumnHeader","type":"case"},{"path":"\/documentation\/atk\/tablecellsignalname\/notifyaccessibletablerowdescription","title":"case notifyAccessibleTableRowDescription","type":"case"},{"path":"\/documentation\/atk\/tablecellsignalname\/notifyaccessibletablerowheader","title":"case notifyAccessibleTableRowHeader","type":"case"},{"path":"\/documentation\/atk\/tablecellsignalname\/notifyaccessibletablesummary","title":"case notifyAccessibleTableSummary","type":"case"},{"path":"\/documentation\/atk\/tablecellsignalname\/notifyaccessiblevalue","title":"case notifyAccessibleValue","type":"case"},{"path":"\/documentation\/atk\/tablecellsignalname\/propertychange","title":"case propertyChange","type":"case"},{"path":"\/documentation\/atk\/tablecellsignalname\/statechange","title":"case stateChange","type":"case"},{"path":"\/documentation\/atk\/tablecellsignalname\/visibledatachanged","title":"case visibleDataChanged","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecellsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecellsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/tablecellsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecellsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/tablecellsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/tablecellsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/tablecellsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/tablecellsignalname","title":"TableCellSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/tablesignalname\/columndeleted","title":"case columnDeleted","type":"case"},{"path":"\/documentation\/atk\/tablesignalname\/columninserted","title":"case columnInserted","type":"case"},{"path":"\/documentation\/atk\/tablesignalname\/columnreordered","title":"case columnReordered","type":"case"},{"path":"\/documentation\/atk\/tablesignalname\/modelchanged","title":"case modelChanged","type":"case"},{"path":"\/documentation\/atk\/tablesignalname\/rowdeleted","title":"case rowDeleted","type":"case"},{"path":"\/documentation\/atk\/tablesignalname\/rowinserted","title":"case rowInserted","type":"case"},{"path":"\/documentation\/atk\/tablesignalname\/rowreordered","title":"case rowReordered","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/tablesignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/tablesignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/tablesignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/tablesignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/tablesignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/tablesignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/tablesignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/tablesignalname","title":"TableSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/textsignalname\/textattributeschanged","title":"case textAttributesChanged","type":"case"},{"path":"\/documentation\/atk\/textsignalname\/textcaretmoved","title":"case textCaretMoved","type":"case"},{"path":"\/documentation\/atk\/textsignalname\/textchanged","title":"case textChanged","type":"case"},{"path":"\/documentation\/atk\/textsignalname\/textinsert","title":"case textInsert","type":"case"},{"path":"\/documentation\/atk\/textsignalname\/textremove","title":"case textRemove","type":"case"},{"path":"\/documentation\/atk\/textsignalname\/textselectionchanged","title":"case textSelectionChanged","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/textsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/textsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/textsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/textsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/textsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/textsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/textsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/textsignalname","title":"TextSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/utilsignalname\/notify","title":"case notify","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/utilsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/utilsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/utilsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/utilsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/utilsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/utilsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/utilsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/utilsignalname","title":"UtilSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/valuesignalname\/valuechanged","title":"case valueChanged","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/valuesignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/valuesignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/valuesignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/valuesignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/valuesignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/valuesignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/valuesignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/valuesignalname","title":"ValueSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/windowpropertyname\/accessiblecomponentlayer","title":"case accessibleComponentLayer","type":"case"},{"path":"\/documentation\/atk\/windowpropertyname\/accessiblecomponentmdizorder","title":"case accessibleComponentMdiZorder","type":"case"},{"path":"\/documentation\/atk\/windowpropertyname\/accessibledescription","title":"case accessibleDescription","type":"case"},{"path":"\/documentation\/atk\/windowpropertyname\/accessiblehypertextnlinks","title":"case accessibleHypertextNlinks","type":"case"},{"path":"\/documentation\/atk\/windowpropertyname\/accessiblename","title":"case accessibleName","type":"case"},{"path":"\/documentation\/atk\/windowpropertyname\/accessibleparent","title":"case accessibleParent","type":"case"},{"path":"\/documentation\/atk\/windowpropertyname\/accessiblerole","title":"case accessibleRole","type":"case"},{"path":"\/documentation\/atk\/windowpropertyname\/accessibletablecaption","title":"case accessibleTableCaption","type":"case"},{"path":"\/documentation\/atk\/windowpropertyname\/accessibletablecaptionobject","title":"case accessibleTableCaptionObject","type":"case"},{"path":"\/documentation\/atk\/windowpropertyname\/accessibletablecolumndescription","title":"case accessibleTableColumnDescription","type":"case"},{"path":"\/documentation\/atk\/windowpropertyname\/accessibletablecolumnheader","title":"case accessibleTableColumnHeader","type":"case"},{"path":"\/documentation\/atk\/windowpropertyname\/accessibletablerowdescription","title":"case accessibleTableRowDescription","type":"case"},{"path":"\/documentation\/atk\/windowpropertyname\/accessibletablerowheader","title":"case accessibleTableRowHeader","type":"case"},{"path":"\/documentation\/atk\/windowpropertyname\/accessibletablesummary","title":"case accessibleTableSummary","type":"case"},{"path":"\/documentation\/atk\/windowpropertyname\/accessiblevalue","title":"case accessibleValue","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/windowpropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/windowpropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/windowpropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/windowpropertyname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/windowpropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/windowpropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/windowpropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atk\/windowpropertyname","title":"WindowPropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atk\/windowsignalname\/activate","title":"case activate","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/activedescendantchanged","title":"case activeDescendantChanged","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/announcement","title":"case announcement","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/childrenchanged","title":"case childrenChanged","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/create","title":"case create","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/deactivate","title":"case deactivate","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/destroy","title":"case destroy","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/focusevent","title":"case focusEvent","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/maximize","title":"case maximize","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/minimize","title":"case minimize","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/move","title":"case move","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/notification","title":"case notification","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/notifyaccessiblecomponentlayer","title":"case notifyAccessibleComponentLayer","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/notifyaccessiblecomponentmdizorder","title":"case notifyAccessibleComponentMdiZorder","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/notifyaccessibledescription","title":"case notifyAccessibleDescription","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/notifyaccessiblehypertextnlinks","title":"case notifyAccessibleHypertextNlinks","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/notifyaccessiblename","title":"case notifyAccessibleName","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/notifyaccessibleparent","title":"case notifyAccessibleParent","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/notifyaccessiblerole","title":"case notifyAccessibleRole","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/notifyaccessibletablecaption","title":"case notifyAccessibleTableCaption","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/notifyaccessibletablecaptionobject","title":"case notifyAccessibleTableCaptionObject","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/notifyaccessibletablecolumndescription","title":"case notifyAccessibleTableColumnDescription","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/notifyaccessibletablecolumnheader","title":"case notifyAccessibleTableColumnHeader","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/notifyaccessibletablerowdescription","title":"case notifyAccessibleTableRowDescription","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/notifyaccessibletablerowheader","title":"case notifyAccessibleTableRowHeader","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/notifyaccessibletablesummary","title":"case notifyAccessibleTableSummary","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/notifyaccessiblevalue","title":"case notifyAccessibleValue","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/propertychange","title":"case propertyChange","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/resize","title":"case resize","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/restore","title":"case restore","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/statechange","title":"case stateChange","type":"case"},{"path":"\/documentation\/atk\/windowsignalname\/visibledatachanged","title":"case visibleDataChanged","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/windowsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atk\/windowsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atk\/windowsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/windowsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/atk\/windowsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/windowsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/atk\/windowsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/atk\/windowsignalname","title":"WindowSignalName","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/catk\/atkcoordtype\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/catk\/atkcoordtype\/parent","title":"static let parent: AtkCoordType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkcoordtype\/screen","title":"static let screen: AtkCoordType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkcoordtype\/window","title":"static let window: AtkCoordType","type":"property"}],"path":"\/documentation\/atk\/catk\/atkcoordtype","title":"AtkCoordType","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/catk\/atkkeyeventtype\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/catk\/atkkeyeventtype\/lastdefined","title":"static let lastDefined: AtkKeyEventType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkkeyeventtype\/press","title":"static let press: AtkKeyEventType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkkeyeventtype\/release","title":"static let release: AtkKeyEventType","type":"property"}],"path":"\/documentation\/atk\/catk\/atkkeyeventtype","title":"AtkKeyEventType","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/catk\/atklayer\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/catk\/atklayer\/background","title":"static let background: AtkLayer","type":"property"},{"path":"\/documentation\/atk\/catk\/atklayer\/canvas","title":"static let canvas: AtkLayer","type":"property"},{"path":"\/documentation\/atk\/catk\/atklayer\/invalid","title":"static let invalid: AtkLayer","type":"property"},{"path":"\/documentation\/atk\/catk\/atklayer\/mdi","title":"static let mdi: AtkLayer","type":"property"},{"path":"\/documentation\/atk\/catk\/atklayer\/overlay","title":"static let overlay: AtkLayer","type":"property"},{"path":"\/documentation\/atk\/catk\/atklayer\/popup","title":"static let popup: AtkLayer","type":"property"},{"path":"\/documentation\/atk\/catk\/atklayer\/widget","title":"static let widget: AtkLayer","type":"property"},{"path":"\/documentation\/atk\/catk\/atklayer\/window","title":"static let window: AtkLayer","type":"property"}],"path":"\/documentation\/atk\/catk\/atklayer","title":"AtkLayer","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/catk\/atklive\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/catk\/atklive\/assertive","title":"static let assertive: AtkLive","type":"property"},{"path":"\/documentation\/atk\/catk\/atklive\/none","title":"static let none: AtkLive","type":"property"},{"path":"\/documentation\/atk\/catk\/atklive\/polite","title":"static let polite: AtkLive","type":"property"}],"path":"\/documentation\/atk\/catk\/atklive","title":"AtkLive","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/catk\/atkrelationtype\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/catk\/atkrelationtype\/controlledby","title":"static let controlledBy: AtkRelationType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrelationtype\/controllerfor","title":"static let controllerFor: AtkRelationType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrelationtype\/describedby","title":"static let describedBy: AtkRelationType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrelationtype\/descriptionfor","title":"static let descriptionFor: AtkRelationType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrelationtype\/details","title":"static let details: AtkRelationType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrelationtype\/detailsfor","title":"static let detailsFor: AtkRelationType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrelationtype\/embeddedby","title":"static let embeddedBy: AtkRelationType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrelationtype\/embeds","title":"static let embeds: AtkRelationType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrelationtype\/errorfor","title":"static let errorFor: AtkRelationType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrelationtype\/errormessage","title":"static let errorMessage: AtkRelationType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrelationtype\/flowsfrom","title":"static let flowsFrom: AtkRelationType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrelationtype\/flowsto","title":"static let flowsTo: AtkRelationType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrelationtype\/labelfor","title":"static let labelFor: AtkRelationType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrelationtype\/labelledby","title":"static let labelledBy: AtkRelationType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrelationtype\/lastdefined","title":"static let lastDefined: AtkRelationType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrelationtype\/memberof","title":"static let memberOf: AtkRelationType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrelationtype\/nodechildof","title":"static let nodeChildOf: AtkRelationType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrelationtype\/nodeparentof","title":"static let nodeParentOf: AtkRelationType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrelationtype\/null","title":"static let null: AtkRelationType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrelationtype\/parentwindowof","title":"static let parentWindowOf: AtkRelationType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrelationtype\/popupfor","title":"static let popupFor: AtkRelationType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrelationtype\/subwindowof","title":"static let subwindowOf: AtkRelationType","type":"property"}],"path":"\/documentation\/atk\/catk\/atkrelationtype","title":"AtkRelationType","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/catk\/atkrole\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/catk\/atkrole\/acceleratorlabel","title":"static let acceleratorLabel: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/alert","title":"static let alert: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/animation","title":"static let animation: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/application","title":"static let application: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/arrow","title":"static let arrow: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/article","title":"static let article: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/audio","title":"static let audio: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/autocomplete","title":"static let autocomplete: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/blockquote","title":"static let blockQuote: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/calendar","title":"static let calendar: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/canvas","title":"static let canvas: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/caption","title":"static let caption: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/chart","title":"static let chart: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/checkbox","title":"static let checkBox: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/checkmenuitem","title":"static let checkMenuItem: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/colorchooser","title":"static let colorChooser: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/columnheader","title":"static let columnHeader: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/combobox","title":"static let comboBox: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/comment","title":"static let comment: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/contentdeletion","title":"static let contentDeletion: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/contentinsertion","title":"static let contentInsertion: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/dateeditor","title":"static let dateEditor: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/definition","title":"static let definition: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/descriptionlist","title":"static let descriptionList: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/descriptionterm","title":"static let descriptionTerm: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/descriptionvalue","title":"static let descriptionValue: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/desktopframe","title":"static let desktopFrame: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/desktopicon","title":"static let desktopIcon: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/dial","title":"static let dial: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/dialog","title":"static let dialog: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/directorypane","title":"static let directoryPane: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/documentemail","title":"static let documentEmail: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/documentframe","title":"static let documentFrame: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/documentpresentation","title":"static let documentPresentation: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/documentspreadsheet","title":"static let documentSpreadsheet: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/documenttext","title":"static let documentText: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/documentweb","title":"static let documentWeb: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/drawingarea","title":"static let drawingArea: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/editbar","title":"static let editBar: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/embedded","title":"static let embedded: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/entry","title":"static let entry: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/filechooser","title":"static let fileChooser: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/filler","title":"static let filler: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/fontchooser","title":"static let fontChooser: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/footer","title":"static let footer: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/footnote","title":"static let footnote: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/form","title":"static let form: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/frame","title":"static let frame: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/glasspane","title":"static let glassPane: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/grouping","title":"static let grouping: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/header","title":"static let header: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/heading","title":"static let heading: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/htmlcontainer","title":"static let htmlContainer: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/icon","title":"static let icon: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/image","title":"static let image: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/imagemap","title":"static let imageMap: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/infobar","title":"static let infoBar: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/inputmethodwindow","title":"static let inputMethodWindow: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/internalframe","title":"static let internalFrame: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/invalid","title":"static let invalid: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/label","title":"static let label: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/landmark","title":"static let landmark: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/lastdefined","title":"static let lastDefined: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/layeredpane","title":"static let layeredPane: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/levelbar","title":"static let levelBar: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/link","title":"static let link: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/list","title":"static let list: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/listbox","title":"static let listBox: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/listitem","title":"static let listItem: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/log","title":"static let log: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/mark","title":"static let mark: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/marquee","title":"static let marquee: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/math","title":"static let math: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/mathfraction","title":"static let mathFraction: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/mathroot","title":"static let mathRoot: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/menu","title":"static let menu: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/menubar","title":"static let menuBar: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/menuitem","title":"static let menuItem: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/notification","title":"static let notification: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/optionpane","title":"static let optionPane: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/page","title":"static let page: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/pagetab","title":"static let pageTab: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/pagetablist","title":"static let pageTabList: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/panel","title":"static let panel: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/paragraph","title":"static let paragraph: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/passwordtext","title":"static let passwordText: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/popupmenu","title":"static let popupMenu: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/progressbar","title":"static let progressBar: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/pushbutton","title":"static let pushButton: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/pushbuttonmenu","title":"static let pushButtonMenu: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/radiobutton","title":"static let radioButton: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/radiomenuitem","title":"static let radioMenuItem: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/rating","title":"static let rating: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/redundantobject","title":"static let redundantObject: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/rootpane","title":"static let rootPane: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/rowheader","title":"static let rowHeader: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/ruler","title":"static let ruler: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/scrollbar","title":"static let scrollBar: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/scrollpane","title":"static let scrollPane: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/section","title":"static let section: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/separator","title":"static let separator: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/slider","title":"static let slider: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/spinbutton","title":"static let spinButton: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/splitpane","title":"static let splitPane: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/static","title":"static let `static`: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/statusbar","title":"static let statusbar: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/subscript","title":"static let `subscript`: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/suggestion","title":"static let suggestion: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/superscript","title":"static let superscript: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/table","title":"static let table: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/tablecell","title":"static let tableCell: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/tablecolumnheader","title":"static let tableColumnHeader: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/tablerow","title":"static let tableRow: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/tablerowheader","title":"static let tableRowHeader: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/tearoffmenuitem","title":"static let tearOffMenuItem: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/terminal","title":"static let terminal: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/text","title":"static let text: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/timer","title":"static let timer: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/titlebar","title":"static let titleBar: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/togglebutton","title":"static let toggleButton: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/toolbar","title":"static let toolBar: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/tooltip","title":"static let toolTip: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/tree","title":"static let tree: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/treeitem","title":"static let treeItem: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/treetable","title":"static let treeTable: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/unknown","title":"static let unknown: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/video","title":"static let video: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/viewport","title":"static let viewport: AtkRole","type":"property"},{"path":"\/documentation\/atk\/catk\/atkrole\/window","title":"static let window: AtkRole","type":"property"}],"path":"\/documentation\/atk\/catk\/atkrole","title":"AtkRole","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/catk\/atkscrolltype\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/catk\/atkscrolltype\/anywhere","title":"static let anywhere: AtkScrollType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkscrolltype\/bottomedge","title":"static let bottomEdge: AtkScrollType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkscrolltype\/bottomright","title":"static let bottomRight: AtkScrollType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkscrolltype\/leftedge","title":"static let leftEdge: AtkScrollType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkscrolltype\/rightedge","title":"static let rightEdge: AtkScrollType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkscrolltype\/topedge","title":"static let topEdge: AtkScrollType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkscrolltype\/topleft","title":"static let topLeft: AtkScrollType","type":"property"}],"path":"\/documentation\/atk\/catk\/atkscrolltype","title":"AtkScrollType","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/active","title":"static let active: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/animated","title":"static let animated: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/armed","title":"static let armed: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/busy","title":"static let busy: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/checkable","title":"static let checkable: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/checked","title":"static let checked: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/collapsed","title":"static let collapsed: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/default","title":"static let `default`: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/defunct","title":"static let defunct: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/editable","title":"static let editable: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/enabled","title":"static let enabled: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/expandable","title":"static let expandable: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/expanded","title":"static let expanded: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/focusable","title":"static let focusable: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/focused","title":"static let focused: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/haspopup","title":"static let hasPopup: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/hastooltip","title":"static let hasTooltip: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/horizontal","title":"static let horizontal: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/iconified","title":"static let iconified: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/indeterminate","title":"static let indeterminate: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/invalid","title":"static let invalid: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/invalidentry","title":"static let invalidEntry: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/lastdefined","title":"static let lastDefined: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/managesdescendants","title":"static let managesDescendants: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/modal","title":"static let modal: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/multiline","title":"static let multiLine: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/multiselectable","title":"static let multiselectable: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/opaque","title":"static let opaque: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/pressed","title":"static let pressed: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/readonly","title":"static let readOnly: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/required","title":"static let required: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/resizable","title":"static let resizable: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/selectable","title":"static let selectable: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/selectabletext","title":"static let selectableText: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/selected","title":"static let selected: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/sensitive","title":"static let sensitive: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/showing","title":"static let showing: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/singleline","title":"static let singleLine: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/stale","title":"static let stale: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/supportsautocompletion","title":"static let supportsAutocompletion: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/transient","title":"static let transient: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/truncated","title":"static let truncated: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/vertical","title":"static let vertical: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/visible","title":"static let visible: AtkStateType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkstatetype\/visited","title":"static let visited: AtkStateType","type":"property"}],"path":"\/documentation\/atk\/catk\/atkstatetype","title":"AtkStateType","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/catk\/atktextattribute\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/catk\/atktextattribute\/bgcolor","title":"static let bgColor: AtkTextAttribute","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextattribute\/bgfullheight","title":"static let bgFullHeight: AtkTextAttribute","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextattribute\/bgstipple","title":"static let bgStipple: AtkTextAttribute","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextattribute\/direction","title":"static let direction: AtkTextAttribute","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextattribute\/editable","title":"static let editable: AtkTextAttribute","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextattribute\/familyname","title":"static let familyName: AtkTextAttribute","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextattribute\/fgcolor","title":"static let fgColor: AtkTextAttribute","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextattribute\/fgstipple","title":"static let fgStipple: AtkTextAttribute","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextattribute\/indent","title":"static let indent: AtkTextAttribute","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextattribute\/invalid","title":"static let invalid: AtkTextAttribute","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextattribute\/invisible","title":"static let invisible: AtkTextAttribute","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextattribute\/justification","title":"static let justification: AtkTextAttribute","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextattribute\/language","title":"static let language: AtkTextAttribute","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextattribute\/lastdefined","title":"static let lastDefined: AtkTextAttribute","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextattribute\/leftmargin","title":"static let leftMargin: AtkTextAttribute","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextattribute\/pixelsabovelines","title":"static let pixelsAboveLines: AtkTextAttribute","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextattribute\/pixelsbelowlines","title":"static let pixelsBelowLines: AtkTextAttribute","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextattribute\/pixelsinsidewrap","title":"static let pixelsInsideWrap: AtkTextAttribute","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextattribute\/rightmargin","title":"static let rightMargin: AtkTextAttribute","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextattribute\/rise","title":"static let rise: AtkTextAttribute","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextattribute\/scale","title":"static let scale: AtkTextAttribute","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextattribute\/size","title":"static let size: AtkTextAttribute","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextattribute\/stretch","title":"static let stretch: AtkTextAttribute","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextattribute\/strikethrough","title":"static let strikethrough: AtkTextAttribute","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextattribute\/style","title":"static let style: AtkTextAttribute","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextattribute\/textposition","title":"static let textPosition: AtkTextAttribute","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextattribute\/underline","title":"static let underline: AtkTextAttribute","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextattribute\/variant","title":"static let variant: AtkTextAttribute","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextattribute\/weight","title":"static let weight: AtkTextAttribute","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextattribute\/wrapmode","title":"static let wrapMode: AtkTextAttribute","type":"property"}],"path":"\/documentation\/atk\/catk\/atktextattribute","title":"AtkTextAttribute","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/catk\/atktextboundary\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/catk\/atktextboundary\/char","title":"static let char: AtkTextBoundary","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextboundary\/lineend","title":"static let lineEnd: AtkTextBoundary","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextboundary\/linestart","title":"static let lineStart: AtkTextBoundary","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextboundary\/sentenceend","title":"static let sentenceEnd: AtkTextBoundary","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextboundary\/sentencestart","title":"static let sentenceStart: AtkTextBoundary","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextboundary\/wordend","title":"static let wordEnd: AtkTextBoundary","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextboundary\/wordstart","title":"static let wordStart: AtkTextBoundary","type":"property"}],"path":"\/documentation\/atk\/catk\/atktextboundary","title":"AtkTextBoundary","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/catk\/atktextcliptype\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/catk\/atktextcliptype\/both","title":"static let both: AtkTextClipType","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextcliptype\/max","title":"static let max: AtkTextClipType","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextcliptype\/min","title":"static let min: AtkTextClipType","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextcliptype\/none","title":"static let none: AtkTextClipType","type":"property"}],"path":"\/documentation\/atk\/catk\/atktextcliptype","title":"AtkTextClipType","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/catk\/atktextgranularity\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/catk\/atktextgranularity\/char","title":"static let char: AtkTextGranularity","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextgranularity\/line","title":"static let line: AtkTextGranularity","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextgranularity\/paragraph","title":"static let paragraph: AtkTextGranularity","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextgranularity\/sentence","title":"static let sentence: AtkTextGranularity","type":"property"},{"path":"\/documentation\/atk\/catk\/atktextgranularity\/word","title":"static let word: AtkTextGranularity","type":"property"}],"path":"\/documentation\/atk\/catk\/atktextgranularity","title":"AtkTextGranularity","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atk\/catk\/atkvaluetype\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atk\/catk\/atkvaluetype\/acceptable","title":"static let acceptable: AtkValueType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkvaluetype\/bad","title":"static let bad: AtkValueType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkvaluetype\/best","title":"static let best: AtkValueType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkvaluetype\/good","title":"static let good: AtkValueType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkvaluetype\/high","title":"static let high: AtkValueType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkvaluetype\/lastdefined","title":"static let lastDefined: AtkValueType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkvaluetype\/low","title":"static let low: AtkValueType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkvaluetype\/medium","title":"static let medium: AtkValueType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkvaluetype\/strong","title":"static let strong: AtkValueType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkvaluetype\/verybad","title":"static let veryBad: AtkValueType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkvaluetype\/verygood","title":"static let veryGood: AtkValueType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkvaluetype\/veryhigh","title":"static let veryHigh: AtkValueType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkvaluetype\/verylow","title":"static let veryLow: AtkValueType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkvaluetype\/verystrong","title":"static let veryStrong: AtkValueType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkvaluetype\/veryweak","title":"static let veryWeak: AtkValueType","type":"property"},{"path":"\/documentation\/atk\/catk\/atkvaluetype\/weak","title":"static let weak: AtkValueType","type":"property"}],"path":"\/documentation\/atk\/catk\/atkvaluetype","title":"AtkValueType","type":"extension"}],"path":"\/documentation\/atk\/catk","title":"CAtk","type":"extension"}],"path":"\/documentation\/atk","title":"Atk","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}