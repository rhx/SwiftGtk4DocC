{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SocketRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Together with "},{"type":"codeVoice","code":"AtkPlug"},{"type":"text","text":", "},{"type":"codeVoice","code":"AtkSocket"},{"type":"text","text":" provides the ability to embed"},{"type":"text","text":" "},{"type":"text","text":"accessibles from one process into another in a fashion that is"},{"type":"text","text":" "},{"type":"text","text":"transparent to assistive technologies. "},{"type":"codeVoice","code":"AtkSocket"},{"type":"text","text":" works as the"},{"type":"text","text":" "},{"type":"text","text":"container of "},{"type":"codeVoice","code":"AtkPlug"},{"type":"text","text":", embedding it using the method"},{"type":"text","text":" "},{"type":"codeVoice","code":"atk_socket_embed()"},{"type":"text","text":". Any accessible contained in the "},{"type":"codeVoice","code":"AtkPlug"},{"type":"text","text":" will"},{"type":"text","text":" "},{"type":"text","text":"appear to the assistive technologies as being inside the"},{"type":"text","text":" "},{"type":"text","text":"application that created the "},{"type":"codeVoice","code":"AtkSocket"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The communication between a "},{"type":"codeVoice","code":"AtkSocket"},{"type":"text","text":" and a "},{"type":"codeVoice","code":"AtkPlug"},{"type":"text","text":" is done by"},{"type":"text","text":" "},{"type":"text","text":"the IPC layer of the accessibility framework, normally implemented"},{"type":"text","text":" "},{"type":"text","text":"by the D-Bus based implementation of AT-SPI (at-spi2). If that is"},{"type":"text","text":" "},{"type":"text","text":"the case, at-spi-atk2 is the responsible to implement the abstract"},{"type":"text","text":" "},{"type":"text","text":"methods "},{"type":"codeVoice","code":"atk_plug_get_id()"},{"type":"text","text":" and "},{"type":"codeVoice","code":"atk_socket_embed()"},{"type":"text","text":", so an ATK"},{"type":"text","text":" "},{"type":"text","text":"implementor shouldn’t reimplement them. The process that contains"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"AtkPlug"},{"type":"text","text":" is responsible to send the ID returned by"},{"type":"text","text":" "},{"type":"codeVoice","code":"atk_plug_id()"},{"type":"text","text":" to the process that contains the "},{"type":"codeVoice","code":"AtkSocket"},{"type":"text","text":", so it"},{"type":"text","text":" "},{"type":"text","text":"could call the method "},{"type":"codeVoice","code":"atk_socket_embed()"},{"type":"text","text":" in order to embed it."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For the same reasons, an implementor doesn’t need to implement"},{"type":"text","text":" "},{"type":"codeVoice","code":"atk_object_get_n_accessible_children()"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"codeVoice","code":"atk_object_ref_accessible_child()"},{"type":"text","text":". All the logic related to those"},{"type":"text","text":" "},{"type":"text","text":"functions will be implemented by the IPC layer."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"See [class"},{"type":"codeVoice","code":"AtkPlug"},{"type":"text","text":"]"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"SocketRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"AtkSocket"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"codeVoice","code":"SocketProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"codeVoice","code":"SocketRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"AtkSocket"},{"type":"text","text":" instance."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/atk\/socketref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Atk\/documentation\/Atk\/ComponentProtocol","doc:\/\/Atk\/4GLib14PointerWrapperP","doc:\/\/Atk\/10GLibObject14GWeakCapturingP","doc:\/\/Atk\/10GLibObject0B8ProtocolP","doc:\/\/Atk\/documentation\/Atk\/ObjectProtocol","doc:\/\/Atk\/documentation\/Atk\/SocketProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Atk\/documentation\/Atk\/SocketRef","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Container for AtkPlug objects from other processes"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SocketRef"}],"title":"SocketRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:3Atk9SocketRefV","modules":[{"name":"Atk"}],"navigatorTitle":[{"kind":"identifier","text":"SocketRef"}]},"hierarchy":{"paths":[["doc:\/\/Atk\/documentation\/Atk"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Atk\/documentation\/Atk\/SocketRef\/init()","doc:\/\/Atk\/documentation\/Atk\/SocketRef\/init(_:)-1ptvd","doc:\/\/Atk\/documentation\/Atk\/SocketRef\/init(_:)-4hto6","doc:\/\/Atk\/documentation\/Atk\/SocketRef\/init(_:)-7dral","doc:\/\/Atk\/documentation\/Atk\/SocketRef\/init(_:)-8bwqi","doc:\/\/Atk\/documentation\/Atk\/SocketRef\/init(_:)-t3ya","doc:\/\/Atk\/documentation\/Atk\/SocketRef\/init(cPointer:)","doc:\/\/Atk\/documentation\/Atk\/SocketRef\/init(constPointer:)","doc:\/\/Atk\/documentation\/Atk\/SocketRef\/init(gconstpointer:)","doc:\/\/Atk\/documentation\/Atk\/SocketRef\/init(gpointer:)","doc:\/\/Atk\/documentation\/Atk\/SocketRef\/init(mutating:)","doc:\/\/Atk\/documentation\/Atk\/SocketRef\/init(opaquePointer:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Atk\/documentation\/Atk\/SocketRef\/ptr"]},{"title":"Type Methods","identifiers":["doc:\/\/Atk\/documentation\/Atk\/SocketRef\/unowned(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/Atk\/documentation\/Atk\/SocketRef\/ComponentProtocol-Implementations","doc:\/\/Atk\/documentation\/Atk\/SocketRef\/GWeakCapturing-Implementations","doc:\/\/Atk\/documentation\/Atk\/SocketRef\/ObjectProtocol-Implementations","doc:\/\/Atk\/documentation\/Atk\/SocketRef\/SocketProtocol-Implementations"],"generated":true}],"references":{"doc://Atk/documentation/Atk/SocketRef/init(_:)-8bwqi":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"AtkSocket"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/SocketRef\/init(_:)-8bwqi","kind":"symbol","type":"topic","url":"\/documentation\/atk\/socketref\/init(_:)-8bwqi"},"doc://Atk/documentation/Atk/SocketProtocol":{"role":"symbol","title":"SocketProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SocketProtocol"}],"abstract":[{"type":"text","text":"Container for AtkPlug objects from other processes"}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/SocketProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SocketProtocol"}],"url":"\/documentation\/atk\/socketprotocol"},"doc://Atk/documentation/Atk/SocketRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:gtypes.h@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/SocketRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/atk\/socketref\/init(gconstpointer:)"},"doc://Atk/documentation/Atk/SocketRef/GWeakCapturing-Implementations":{"role":"collectionGroup","title":"GWeakCapturing Implementations","abstract":[],"identifier":"doc:\/\/Atk\/documentation\/Atk\/SocketRef\/GWeakCapturing-Implementations","kind":"article","type":"topic","url":"\/documentation\/atk\/socketref\/gweakcapturing-implementations"},"doc://Atk/documentation/Atk/SocketRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"SocketProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/SocketRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/atk\/socketref\/init(opaquepointer:)"},"doc://Atk/documentation/Atk/SocketRef/unowned(_:)":{"role":"symbol","title":"unowned(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unowned"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SocketRef","preciseIdentifier":"s:3Atk9SocketRefV"}],"abstract":[{"type":"text","text":"This factory is syntactic sugar for setting weak pointers wrapped in "},{"type":"codeVoice","code":"GWeak<T>"}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/SocketRef\/unowned(_:)","kind":"symbol","type":"topic","url":"\/documentation\/atk\/socketref\/unowned(_:)"},"doc://Atk/documentation/Atk/ComponentProtocol":{"role":"symbol","title":"ComponentProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ComponentProtocol"}],"abstract":[{"type":"text","text":"The ATK interface provided by UI components"},{"type":"text","text":" "},{"type":"text","text":"which occupy a physical area on the screen."},{"type":"text","text":" "},{"type":"text","text":"which the user can activate\/interact with."}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/ComponentProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ComponentProtocol"}],"url":"\/documentation\/atk\/componentprotocol"},"doc://Atk/documentation/Atk/SocketRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/SocketRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/atk\/socketref\/init(gpointer:)"},"doc://Atk/documentation/Atk/SocketRef/ComponentProtocol-Implementations":{"role":"collectionGroup","title":"ComponentProtocol Implementations","abstract":[],"identifier":"doc:\/\/Atk\/documentation\/Atk\/SocketRef\/ComponentProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/atk\/socketref\/componentprotocol-implementations"},"doc://Atk/documentation/Atk/SocketRef/init(_:)-t3ya":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"AtkSocket"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/SocketRef\/init(_:)-t3ya","kind":"symbol","type":"topic","url":"\/documentation\/atk\/socketref\/init(_:)-t3ya"},"doc://Atk/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/Atk\/4GLib14PointerWrapperP"},"doc://Atk/documentation/Atk/SocketRef/SocketProtocol-Implementations":{"role":"collectionGroup","title":"SocketProtocol Implementations","abstract":[],"identifier":"doc:\/\/Atk\/documentation\/Atk\/SocketRef\/SocketProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/atk\/socketref\/socketprotocol-implementations"},"doc://Atk/documentation/Atk/SocketRef/init(_:)-4hto6":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"codeVoice","code":"SocketProtocol"}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/SocketRef\/init(_:)-4hto6","kind":"symbol","type":"topic","url":"\/documentation\/atk\/socketref\/init(_:)-4hto6"},"doc://Atk/documentation/Atk":{"role":"collection","title":"Atk","abstract":[],"identifier":"doc:\/\/Atk\/documentation\/Atk","kind":"symbol","type":"topic","url":"\/documentation\/atk"},"doc://Atk/documentation/Atk/SocketRef/init()":{"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"AtkSocket"},{"type":"text","text":"."}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/SocketRef\/init()","kind":"symbol","type":"topic","url":"\/documentation\/atk\/socketref\/init()"},"doc://Atk/documentation/Atk/SocketRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"SocketProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/SocketRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/atk\/socketref\/init(mutating:)"},"doc://Atk/documentation/Atk/ObjectProtocol":{"role":"symbol","title":"ObjectProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObjectProtocol"}],"abstract":[{"type":"text","text":"The base object class for the Accessibility Toolkit API."}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/ObjectProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObjectProtocol"}],"url":"\/documentation\/atk\/objectprotocol"},"doc://Atk/documentation/Atk/SocketRef/init(_:)-7dral":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"AtkSocket"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/SocketRef\/init(_:)-7dral","kind":"symbol","type":"topic","url":"\/documentation\/atk\/socketref\/init(_:)-7dral"},"doc://Atk/documentation/Atk/SocketRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"AtkSocket"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"codeVoice","code":"socket_ptr"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/SocketRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/atk\/socketref\/ptr"},"doc://Atk/documentation/Atk/SocketRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"SocketProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/SocketRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/atk\/socketref\/init(constpointer:)"},"doc://Atk/documentation/Atk/SocketRef/init(_:)-1ptvd":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"AtkSocket"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/SocketRef\/init(_:)-1ptvd","kind":"symbol","type":"topic","url":"\/documentation\/atk\/socketref\/init(_:)-1ptvd"},"doc://Atk/10GLibObject0B8ProtocolP":{"type":"unresolvable","title":"GLibObject.ObjectProtocol","identifier":"doc:\/\/Atk\/10GLibObject0B8ProtocolP"},"doc://Atk/documentation/Atk/SocketRef/ObjectProtocol-Implementations":{"role":"collectionGroup","title":"ObjectProtocol Implementations","abstract":[],"identifier":"doc:\/\/Atk\/documentation\/Atk\/SocketRef\/ObjectProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/atk\/socketref\/objectprotocol-implementations"},"doc://Atk/documentation/Atk/SocketRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"SocketProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/SocketRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/atk\/socketref\/init(cpointer:)"},"doc://Atk/10GLibObject14GWeakCapturingP":{"type":"unresolvable","title":"GLibObject.GWeakCapturing","identifier":"doc:\/\/Atk\/10GLibObject14GWeakCapturingP"},"doc://Atk/documentation/Atk/SocketRef":{"role":"symbol","title":"SocketRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SocketRef"}],"abstract":[{"type":"text","text":"Container for AtkPlug objects from other processes"}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/SocketRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SocketRef"}],"url":"\/documentation\/atk\/socketref"}}}