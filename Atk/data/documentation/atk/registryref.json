{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RegistryRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The AtkRegistry is normally used to create appropriate ATK “peers”"},{"type":"text","text":" "},{"type":"text","text":"for user interface components.  Application developers usually need"},{"type":"text","text":" "},{"type":"text","text":"only interact with the AtkRegistry by associating appropriate ATK"},{"type":"text","text":" "},{"type":"text","text":"implementation classes with GObject classes via the"},{"type":"text","text":" "},{"type":"text","text":"atk_registry_set_factory_type call, passing the appropriate GType"},{"type":"text","text":" "},{"type":"text","text":"for application custom widget classes."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"RegistryRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"AtkRegistry"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"codeVoice","code":"RegistryProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"codeVoice","code":"RegistryRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"AtkRegistry"},{"type":"text","text":" instance."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/atk\/registryref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Atk\/4GLib14PointerWrapperP","doc:\/\/Atk\/10GLibObject14GWeakCapturingP","doc:\/\/Atk\/10GLibObject0B8ProtocolP","doc:\/\/Atk\/documentation\/Atk\/RegistryProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Atk\/documentation\/Atk\/RegistryRef","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"An object used to store the GType of the"},{"type":"text","text":" "},{"type":"text","text":"factories used to create an accessible object for an object of a"},{"type":"text","text":" "},{"type":"text","text":"particular GType."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RegistryRef"}],"title":"RegistryRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:3Atk11RegistryRefV","modules":[{"name":"Atk"}],"navigatorTitle":[{"kind":"identifier","text":"RegistryRef"}]},"hierarchy":{"paths":[["doc:\/\/Atk\/documentation\/Atk"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/init(_:)-4uylf","doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/init(_:)-5gyr6","doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/init(_:)-6cs67","doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/init(_:)-6wvh0","doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/init(_:)-8jxaz","doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/init(cPointer:)","doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/init(constPointer:)","doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/init(gconstpointer:)","doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/init(gpointer:)","doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/init(mutating:)","doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/init(opaquePointer:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/ptr"]},{"title":"Type Methods","identifiers":["doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/unowned(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/GWeakCapturing-Implementations","doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/ObjectProtocol-Implementations","doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/RegistryProtocol-Implementations"],"generated":true}],"references":{"doc://Atk/documentation/Atk/RegistryRef/init(_:)-6cs67":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"AtkRegistry"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/init(_:)-6cs67","kind":"symbol","type":"topic","url":"\/documentation\/atk\/registryref\/init(_:)-6cs67"},"doc://Atk/documentation/Atk/RegistryProtocol":{"role":"symbol","title":"RegistryProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RegistryProtocol"}],"abstract":[{"type":"text","text":"An object used to store the GType of the"},{"type":"text","text":" "},{"type":"text","text":"factories used to create an accessible object for an object of a"},{"type":"text","text":" "},{"type":"text","text":"particular GType."}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/RegistryProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RegistryProtocol"}],"url":"\/documentation\/atk\/registryprotocol"},"doc://Atk/documentation/Atk/RegistryRef/init(_:)-5gyr6":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"AtkRegistry"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/init(_:)-5gyr6","kind":"symbol","type":"topic","url":"\/documentation\/atk\/registryref\/init(_:)-5gyr6"},"doc://Atk/documentation/Atk":{"role":"collection","title":"Atk","abstract":[],"identifier":"doc:\/\/Atk\/documentation\/Atk","kind":"symbol","type":"topic","url":"\/documentation\/atk"},"doc://Atk/documentation/Atk/RegistryRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"RegistryProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/atk\/registryref\/init(cpointer:)"},"doc://Atk/documentation/Atk/RegistryRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"RegistryProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/atk\/registryref\/init(opaquepointer:)"},"doc://Atk/documentation/Atk/RegistryRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:gtypes.h@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/atk\/registryref\/init(gconstpointer:)"},"doc://Atk/documentation/Atk/RegistryRef/init(_:)-6wvh0":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"AtkRegistry"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/init(_:)-6wvh0","kind":"symbol","type":"topic","url":"\/documentation\/atk\/registryref\/init(_:)-6wvh0"},"doc://Atk/documentation/Atk/RegistryRef/RegistryProtocol-Implementations":{"role":"collectionGroup","title":"RegistryProtocol Implementations","abstract":[],"identifier":"doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/RegistryProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/atk\/registryref\/registryprotocol-implementations"},"doc://Atk/documentation/Atk/RegistryRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/atk\/registryref\/init(gpointer:)"},"doc://Atk/documentation/Atk/RegistryRef":{"role":"symbol","title":"RegistryRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RegistryRef"}],"abstract":[{"type":"text","text":"An object used to store the GType of the"},{"type":"text","text":" "},{"type":"text","text":"factories used to create an accessible object for an object of a"},{"type":"text","text":" "},{"type":"text","text":"particular GType."}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/RegistryRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RegistryRef"}],"url":"\/documentation\/atk\/registryref"},"doc://Atk/documentation/Atk/RegistryRef/GWeakCapturing-Implementations":{"role":"collectionGroup","title":"GWeakCapturing Implementations","abstract":[],"identifier":"doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/GWeakCapturing-Implementations","kind":"article","type":"topic","url":"\/documentation\/atk\/registryref\/gweakcapturing-implementations"},"doc://Atk/10GLibObject0B8ProtocolP":{"type":"unresolvable","title":"GLibObject.ObjectProtocol","identifier":"doc:\/\/Atk\/10GLibObject0B8ProtocolP"},"doc://Atk/documentation/Atk/RegistryRef/init(_:)-8jxaz":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"codeVoice","code":"RegistryProtocol"}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/init(_:)-8jxaz","kind":"symbol","type":"topic","url":"\/documentation\/atk\/registryref\/init(_:)-8jxaz"},"doc://Atk/documentation/Atk/RegistryRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"RegistryProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/atk\/registryref\/init(constpointer:)"},"doc://Atk/documentation/Atk/RegistryRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"AtkRegistry"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"codeVoice","code":"registry_ptr"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/atk\/registryref\/ptr"},"doc://Atk/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/Atk\/4GLib14PointerWrapperP"},"doc://Atk/documentation/Atk/RegistryRef/init(_:)-4uylf":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"AtkRegistry"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/init(_:)-4uylf","kind":"symbol","type":"topic","url":"\/documentation\/atk\/registryref\/init(_:)-4uylf"},"doc://Atk/documentation/Atk/RegistryRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"RegistryProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/atk\/registryref\/init(mutating:)"},"doc://Atk/documentation/Atk/RegistryRef/ObjectProtocol-Implementations":{"role":"collectionGroup","title":"ObjectProtocol Implementations","abstract":[],"identifier":"doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/ObjectProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/atk\/registryref\/objectprotocol-implementations"},"doc://Atk/10GLibObject14GWeakCapturingP":{"type":"unresolvable","title":"GLibObject.GWeakCapturing","identifier":"doc:\/\/Atk\/10GLibObject14GWeakCapturingP"},"doc://Atk/documentation/Atk/RegistryRef/unowned(_:)":{"role":"symbol","title":"unowned(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unowned"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"RegistryRef","preciseIdentifier":"s:3Atk11RegistryRefV"}],"abstract":[{"type":"text","text":"This factory is syntactic sugar for setting weak pointers wrapped in "},{"type":"codeVoice","code":"GWeak<T>"}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/RegistryRef\/unowned(_:)","kind":"symbol","type":"topic","url":"\/documentation\/atk\/registryref\/unowned(_:)"}}}