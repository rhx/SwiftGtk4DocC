{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/atk\/attributeref\/init(constpointer:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Atk\/documentation\/Atk\/AttributeRef\/init(constPointer:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atk\/documentation\/Atk\/AttributeProtocol"},{"type":"text","text":"."}]}],"kind":"symbol","metadata":{"role":"symbol","title":"init(constPointer:)","roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"symbolKind":"init","externalID":"s:3Atk12AttributeRefV12constPointerACSPyxG_tclufc","extendedModule":"Atk","modules":[{"name":"Atk"}]},"hierarchy":{"paths":[["doc:\/\/Atk\/documentation\/Atk","doc:\/\/Atk\/documentation\/Atk\/AttributeRef"]]},"references":{"doc://Atk/documentation/Atk/AttributeRef":{"role":"symbol","title":"AttributeRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AttributeRef"}],"abstract":[{"type":"text","text":"AtkAttribute is a string name\/value pair representing a generic"},{"type":"text","text":" "},{"type":"text","text":"attribute. This can be used to expose additional information from"},{"type":"text","text":" "},{"type":"text","text":"an accessible object as a whole (see "},{"type":"codeVoice","code":"atk_object_get_attributes()"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"or an document (see "},{"type":"codeVoice","code":"atk_document_get_attributes()"},{"type":"text","text":"). In the case of"},{"type":"text","text":" "},{"type":"text","text":"text attributes (see "},{"type":"codeVoice","code":"atk_text_get_default_attributes()"},{"type":"text","text":"),"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atk\/documentation\/Atk\/TextAttribute"},{"type":"text","text":" enum defines all the possible text attribute"},{"type":"text","text":" "},{"type":"text","text":"names. You can use "},{"type":"codeVoice","code":"atk_text_attribute_get_name()"},{"type":"text","text":" to get the string"},{"type":"text","text":" "},{"type":"text","text":"name from the enum value. See also "},{"type":"codeVoice","code":"atk_text_attribute_for_name()"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":"atk_text_attribute_get_value()"},{"type":"text","text":" for more information."}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/AttributeRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AttributeRef"}],"url":"\/documentation\/atk\/attributeref"},"doc://Atk/documentation/Atk/TextAttribute":{"role":"symbol","title":"TextAttribute","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"TextAttribute"}],"abstract":[{"type":"text","text":"Describes the text attributes supported"}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/TextAttribute","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TextAttribute"}],"url":"\/documentation\/atk\/textattribute"},"doc://Atk/documentation/Atk/AttributeProtocol":{"role":"symbol","title":"AttributeProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AttributeProtocol"}],"abstract":[{"type":"text","text":"AtkAttribute is a string name\/value pair representing a generic"},{"type":"text","text":" "},{"type":"text","text":"attribute. This can be used to expose additional information from"},{"type":"text","text":" "},{"type":"text","text":"an accessible object as a whole (see "},{"type":"codeVoice","code":"atk_object_get_attributes()"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"or an document (see "},{"type":"codeVoice","code":"atk_document_get_attributes()"},{"type":"text","text":"). In the case of"},{"type":"text","text":" "},{"type":"text","text":"text attributes (see "},{"type":"codeVoice","code":"atk_text_get_default_attributes()"},{"type":"text","text":"),"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atk\/documentation\/Atk\/TextAttribute"},{"type":"text","text":" enum defines all the possible text attribute"},{"type":"text","text":" "},{"type":"text","text":"names. You can use "},{"type":"codeVoice","code":"atk_text_attribute_get_name()"},{"type":"text","text":" to get the string"},{"type":"text","text":" "},{"type":"text","text":"name from the enum value. See also "},{"type":"codeVoice","code":"atk_text_attribute_for_name()"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":"atk_text_attribute_get_value()"},{"type":"text","text":" for more information."}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/AttributeProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AttributeProtocol"}],"url":"\/documentation\/atk\/attributeprotocol"},"doc://Atk/documentation/Atk":{"role":"collection","title":"Atk","abstract":[],"identifier":"doc:\/\/Atk\/documentation\/Atk","kind":"symbol","type":"topic","url":"\/documentation\/atk"},"doc://Atk/documentation/Atk/AttributeRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Atk\/documentation\/Atk\/AttributeProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/AttributeRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/atk\/attributeref\/init(constpointer:)"}}}