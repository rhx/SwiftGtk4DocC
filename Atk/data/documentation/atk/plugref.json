{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PlugRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"See [class"},{"type":"codeVoice","code":"AtkSocket"},{"type":"text","text":"]"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"PlugRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"AtkPlug"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"codeVoice","code":"PlugProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"codeVoice","code":"PlugRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"AtkPlug"},{"type":"text","text":" instance."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/atk\/plugref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Atk\/documentation\/Atk\/ComponentProtocol","doc:\/\/Atk\/4GLib14PointerWrapperP","doc:\/\/Atk\/10GLibObject14GWeakCapturingP","doc:\/\/Atk\/10GLibObject0B8ProtocolP","doc:\/\/Atk\/documentation\/Atk\/ObjectProtocol","doc:\/\/Atk\/documentation\/Atk\/PlugProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Atk\/documentation\/Atk\/PlugRef","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Toplevel for embedding into other processes"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PlugRef"}],"title":"PlugRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:3Atk7PlugRefV","modules":[{"name":"Atk"}],"navigatorTitle":[{"kind":"identifier","text":"PlugRef"}]},"hierarchy":{"paths":[["doc:\/\/Atk\/documentation\/Atk"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Atk\/documentation\/Atk\/PlugRef\/init()","doc:\/\/Atk\/documentation\/Atk\/PlugRef\/init(_:)-1n38x","doc:\/\/Atk\/documentation\/Atk\/PlugRef\/init(_:)-22qa4","doc:\/\/Atk\/documentation\/Atk\/PlugRef\/init(_:)-5a7qn","doc:\/\/Atk\/documentation\/Atk\/PlugRef\/init(_:)-84kr9","doc:\/\/Atk\/documentation\/Atk\/PlugRef\/init(_:)-cng9","doc:\/\/Atk\/documentation\/Atk\/PlugRef\/init(cPointer:)","doc:\/\/Atk\/documentation\/Atk\/PlugRef\/init(constPointer:)","doc:\/\/Atk\/documentation\/Atk\/PlugRef\/init(gconstpointer:)","doc:\/\/Atk\/documentation\/Atk\/PlugRef\/init(gpointer:)","doc:\/\/Atk\/documentation\/Atk\/PlugRef\/init(mutating:)","doc:\/\/Atk\/documentation\/Atk\/PlugRef\/init(opaquePointer:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Atk\/documentation\/Atk\/PlugRef\/ptr"]},{"title":"Type Methods","identifiers":["doc:\/\/Atk\/documentation\/Atk\/PlugRef\/unowned(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/Atk\/documentation\/Atk\/PlugRef\/ComponentProtocol-Implementations","doc:\/\/Atk\/documentation\/Atk\/PlugRef\/GWeakCapturing-Implementations","doc:\/\/Atk\/documentation\/Atk\/PlugRef\/ObjectProtocol-Implementations","doc:\/\/Atk\/documentation\/Atk\/PlugRef\/PlugProtocol-Implementations"],"generated":true}],"references":{"doc://Atk/documentation/Atk/PlugRef/init(_:)-22qa4":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"AtkPlug"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/PlugRef\/init(_:)-22qa4","kind":"symbol","type":"topic","url":"\/documentation\/atk\/plugref\/init(_:)-22qa4"},"doc://Atk/documentation/Atk/PlugRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"PlugProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/PlugRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/atk\/plugref\/init(cpointer:)"},"doc://Atk/documentation/Atk/ObjectProtocol":{"role":"symbol","title":"ObjectProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObjectProtocol"}],"abstract":[{"type":"text","text":"The base object class for the Accessibility Toolkit API."}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/ObjectProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObjectProtocol"}],"url":"\/documentation\/atk\/objectprotocol"},"doc://Atk/documentation/Atk/ComponentProtocol":{"role":"symbol","title":"ComponentProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ComponentProtocol"}],"abstract":[{"type":"text","text":"The ATK interface provided by UI components"},{"type":"text","text":" "},{"type":"text","text":"which occupy a physical area on the screen."},{"type":"text","text":" "},{"type":"text","text":"which the user can activate\/interact with."}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/ComponentProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ComponentProtocol"}],"url":"\/documentation\/atk\/componentprotocol"},"doc://Atk/documentation/Atk/PlugRef/ComponentProtocol-Implementations":{"role":"collectionGroup","title":"ComponentProtocol Implementations","abstract":[],"identifier":"doc:\/\/Atk\/documentation\/Atk\/PlugRef\/ComponentProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/atk\/plugref\/componentprotocol-implementations"},"doc://Atk/documentation/Atk/PlugRef":{"role":"symbol","title":"PlugRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PlugRef"}],"abstract":[{"type":"text","text":"Toplevel for embedding into other processes"}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/PlugRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PlugRef"}],"url":"\/documentation\/atk\/plugref"},"doc://Atk/documentation/Atk/PlugRef/init(_:)-1n38x":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"AtkPlug"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/PlugRef\/init(_:)-1n38x","kind":"symbol","type":"topic","url":"\/documentation\/atk\/plugref\/init(_:)-1n38x"},"doc://Atk/documentation/Atk/PlugRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:gtypes.h@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/PlugRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/atk\/plugref\/init(gconstpointer:)"},"doc://Atk/documentation/Atk/PlugRef/init()":{"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"AtkPlug"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/PlugRef\/init()","kind":"symbol","type":"topic","url":"\/documentation\/atk\/plugref\/init()"},"doc://Atk/10GLibObject14GWeakCapturingP":{"type":"unresolvable","title":"GLibObject.GWeakCapturing","identifier":"doc:\/\/Atk\/10GLibObject14GWeakCapturingP"},"doc://Atk/documentation/Atk/PlugRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"PlugProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/PlugRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/atk\/plugref\/init(constpointer:)"},"doc://Atk/documentation/Atk/PlugProtocol":{"role":"symbol","title":"PlugProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PlugProtocol"}],"abstract":[{"type":"text","text":"Toplevel for embedding into other processes"}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/PlugProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PlugProtocol"}],"url":"\/documentation\/atk\/plugprotocol"},"doc://Atk/documentation/Atk/PlugRef/init(_:)-5a7qn":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"AtkPlug"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/PlugRef\/init(_:)-5a7qn","kind":"symbol","type":"topic","url":"\/documentation\/atk\/plugref\/init(_:)-5a7qn"},"doc://Atk/documentation/Atk":{"role":"collection","title":"Atk","abstract":[],"identifier":"doc:\/\/Atk\/documentation\/Atk","kind":"symbol","type":"topic","url":"\/documentation\/atk"},"doc://Atk/10GLibObject0B8ProtocolP":{"type":"unresolvable","title":"GLibObject.ObjectProtocol","identifier":"doc:\/\/Atk\/10GLibObject0B8ProtocolP"},"doc://Atk/documentation/Atk/PlugRef/init(_:)-84kr9":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"codeVoice","code":"PlugProtocol"}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/PlugRef\/init(_:)-84kr9","kind":"symbol","type":"topic","url":"\/documentation\/atk\/plugref\/init(_:)-84kr9"},"doc://Atk/documentation/Atk/PlugRef/PlugProtocol-Implementations":{"role":"collectionGroup","title":"PlugProtocol Implementations","abstract":[],"identifier":"doc:\/\/Atk\/documentation\/Atk\/PlugRef\/PlugProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/atk\/plugref\/plugprotocol-implementations"},"doc://Atk/documentation/Atk/PlugRef/ObjectProtocol-Implementations":{"role":"collectionGroup","title":"ObjectProtocol Implementations","abstract":[],"identifier":"doc:\/\/Atk\/documentation\/Atk\/PlugRef\/ObjectProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/atk\/plugref\/objectprotocol-implementations"},"doc://Atk/documentation/Atk/PlugRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/PlugRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/atk\/plugref\/init(gpointer:)"},"doc://Atk/documentation/Atk/PlugRef/GWeakCapturing-Implementations":{"role":"collectionGroup","title":"GWeakCapturing Implementations","abstract":[],"identifier":"doc:\/\/Atk\/documentation\/Atk\/PlugRef\/GWeakCapturing-Implementations","kind":"article","type":"topic","url":"\/documentation\/atk\/plugref\/gweakcapturing-implementations"},"doc://Atk/documentation/Atk/PlugRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"AtkPlug"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"codeVoice","code":"plug_ptr"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/PlugRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/atk\/plugref\/ptr"},"doc://Atk/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/Atk\/4GLib14PointerWrapperP"},"doc://Atk/documentation/Atk/PlugRef/init(_:)-cng9":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"AtkPlug"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/PlugRef\/init(_:)-cng9","kind":"symbol","type":"topic","url":"\/documentation\/atk\/plugref\/init(_:)-cng9"},"doc://Atk/documentation/Atk/PlugRef/unowned(_:)":{"role":"symbol","title":"unowned(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unowned"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"PlugRef","preciseIdentifier":"s:3Atk7PlugRefV"}],"abstract":[{"type":"text","text":"This factory is syntactic sugar for setting weak pointers wrapped in "},{"type":"codeVoice","code":"GWeak<T>"}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/PlugRef\/unowned(_:)","kind":"symbol","type":"topic","url":"\/documentation\/atk\/plugref\/unowned(_:)"},"doc://Atk/documentation/Atk/PlugRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"PlugProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/PlugRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/atk\/plugref\/init(opaquepointer:)"},"doc://Atk/documentation/Atk/PlugRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"PlugProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Atk\/documentation\/Atk\/PlugRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/atk\/plugref\/init(mutating:)"}}}