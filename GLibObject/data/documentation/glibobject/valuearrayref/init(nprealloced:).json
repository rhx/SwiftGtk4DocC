{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"nPrealloced"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"new is deprecated:"}]},{"type":"text","text":" "},{"type":"text","text":"Use #GArray and g_array_sized_new() instead."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glibobject\/valuearrayref\/init(nprealloced:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLibObject\/documentation\/GLibObject\/ValueArrayRef\/init(nPrealloced:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Allocate and initialize a new "},{"type":"codeVoice","code":"GValueArray"},{"type":"text","text":", optionally preserve space"},{"type":"text","text":" "},{"type":"text","text":"for "},{"type":"codeVoice","code":"n_prealloced"},{"type":"text","text":" elements. New arrays always contain 0 elements,"},{"type":"text","text":" "},{"type":"text","text":"regardless of the value of "},{"type":"codeVoice","code":"n_prealloced"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"modules":[{"name":"GLibObject"}],"role":"symbol","title":"init(nPrealloced:)","roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"nPrealloced"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"symbolKind":"init","externalID":"s:10GLibObject13ValueArrayRefV11nPreallocedACSi_tcfc","extendedModule":"GLibObject","platforms":[]},"hierarchy":{"paths":[["doc:\/\/GLibObject\/documentation\/GLibObject","doc:\/\/GLibObject\/documentation\/GLibObject\/ValueArrayRef"]]},"references":{"doc://GLibObject/documentation/GLibObject":{"role":"collection","title":"GLibObject","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject","kind":"symbol","type":"topic","url":"\/documentation\/glibobject"},"doc://GLibObject/documentation/GLibObject/ValueArrayRef":{"role":"symbol","title":"ValueArrayRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueArrayRef"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GValueArray"},{"type":"text","text":" contains an array of "},{"type":"codeVoice","code":"GValue"},{"type":"text","text":" elements."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/ValueArrayRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValueArrayRef"}],"url":"\/documentation\/glibobject\/valuearrayref"},"doc://GLibObject/documentation/GLibObject/ValueArrayRef/init(nPrealloced:)":{"role":"symbol","title":"init(nPrealloced:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"nPrealloced"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Allocate and initialize a new "},{"type":"codeVoice","code":"GValueArray"},{"type":"text","text":", optionally preserve space"},{"type":"text","text":" "},{"type":"text","text":"for "},{"type":"codeVoice","code":"n_prealloced"},{"type":"text","text":" elements. New arrays always contain 0 elements,"},{"type":"text","text":" "},{"type":"text","text":"regardless of the value of "},{"type":"codeVoice","code":"n_prealloced"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/ValueArrayRef\/init(nPrealloced:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/glibobject\/valuearrayref\/init(nprealloced:)"}}}