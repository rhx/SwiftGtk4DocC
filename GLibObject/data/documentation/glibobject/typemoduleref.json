{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypeModuleRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The model of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModule"},{"type":"text","text":" is a dynamically loaded module which"},{"type":"text","text":" "},{"type":"text","text":"implements some number of types and interface implementations."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When the module is loaded, it registers its types and interfaces"},{"type":"text","text":" "},{"type":"text","text":"using "},{"type":"codeVoice","code":"g_type_module_register_type()"},{"type":"text","text":" and "},{"type":"codeVoice","code":"g_type_module_add_interface()"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"As long as any instances of these types and interface implementations"},{"type":"text","text":" "},{"type":"text","text":"are in use, the module is kept loaded. When the types and interfaces"},{"type":"text","text":" "},{"type":"text","text":"are gone, the module may be unloaded. If the types and interfaces"},{"type":"text","text":" "},{"type":"text","text":"become used again, the module will be reloaded. Note that the last"},{"type":"text","text":" "},{"type":"text","text":"reference cannot be released from within the module code, since that"},{"type":"text","text":" "},{"type":"text","text":"would lead to the callerâ€™s code being unloaded before "},{"type":"codeVoice","code":"g_object_unref()"},{"type":"text","text":" "},{"type":"text","text":"returns to it."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Keeping track of whether the module should be loaded or not is done by"},{"type":"text","text":" "},{"type":"text","text":"using a use count - it starts at zero, and whenever it is greater than"},{"type":"text","text":" "},{"type":"text","text":"zero, the module is loaded. The use count is maintained internally by"},{"type":"text","text":" "},{"type":"text","text":"the type system, but also can be explicitly controlled by"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_type_module_use()"},{"type":"text","text":" and "},{"type":"codeVoice","code":"g_type_module_unuse()"},{"type":"text","text":". Typically, when loading"},{"type":"text","text":" "},{"type":"text","text":"a module for the first type, "},{"type":"codeVoice","code":"g_type_module_use()"},{"type":"text","text":" will be used to load"},{"type":"text","text":" "},{"type":"text","text":"it so that it can initialize its types. At some later point, when the"},{"type":"text","text":" "},{"type":"text","text":"module no longer needs to be loaded except for the type"},{"type":"text","text":" "},{"type":"text","text":"implementations it contains, "},{"type":"codeVoice","code":"g_type_module_unuse()"},{"type":"text","text":" is called."}]},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModule"},{"type":"text","text":" does not actually provide any implementation of module"},{"type":"text","text":" "},{"type":"text","text":"loading and unloading. To create a particular module type you must"},{"type":"text","text":" "},{"type":"text","text":"derive from "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModule"},{"type":"text","text":" and implement the load and unload functions"},{"type":"text","text":" "},{"type":"text","text":"in "},{"type":"codeVoice","code":"TypeModuleClass"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GTypeModule"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"GTypeModule"},{"type":"text","text":" instance."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModule"},{"type":"text","text":" (instead of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef"},{"type":"text","text":") if you want to use Automatic Reference Counting for memory management of the underlying "},{"type":"codeVoice","code":"GTypeModule"},{"type":"text","text":" instance."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glibobject\/typemoduleref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GLibObject\/4GLib14PointerWrapperP","doc:\/\/GLibObject\/documentation\/GLibObject\/GWeakCapturing","doc:\/\/GLibObject\/documentation\/GLibObject\/ObjectProtocol","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol","doc:\/\/GLibObject\/documentation\/GLibObject\/TypePluginProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef","interfaceLanguage":"swift"},"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModule"},{"type":"text","text":" provides a simple implementation of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin"},{"type":"text","text":" "},{"type":"text","text":"interface."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypeModuleRef"}],"title":"TypeModuleRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:10GLibObject13TypeModuleRefV","modules":[{"name":"GLibObject"}],"navigatorTitle":[{"kind":"identifier","text":"TypeModuleRef"}]},"hierarchy":{"paths":[["doc:\/\/GLibObject\/documentation\/GLibObject"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(_:)-371zq","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(_:)-3z8qk","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(_:)-4b5zs","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(_:)-4vlqa","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(_:)-92kh5","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(cPointer:)","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(constPointer:)","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(gconstpointer:)","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(gpointer:)","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(mutating:)","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(opaquePointer:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/ptr"]},{"title":"Type Methods","identifiers":["doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/unowned(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/ObjectProtocol-Implementations","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/PointerWrapper-Implementations","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/TypeModuleProtocol-Implementations","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/TypePluginProtocol-Implementations"],"generated":true}],"references":{"doc://GLibObject/documentation/GLibObject/TypeModuleRef/ObjectProtocol-Implementations":{"role":"collectionGroup","title":"ObjectProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/ObjectProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glibobject\/typemoduleref\/objectprotocol-implementations"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/init(_:)-4b5zs":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GTypeModule"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(_:)-4b5zs","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typemoduleref\/init(_:)-4b5zs"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/init(_:)-4vlqa":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GTypeModule"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(_:)-4vlqa","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typemoduleref\/init(_:)-4vlqa"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typemoduleref\/init(gconstpointer:)"},"doc://GLibObject/documentation/GLibObject/TypePluginProtocol":{"role":"symbol","title":"TypePluginProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypePluginProtocol"}],"abstract":[{"type":"text","text":"An interface that handles the lifecycle of dynamically loaded types."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePluginProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TypePluginProtocol"}],"url":"\/documentation\/glibobject\/typepluginprotocol"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GTypeModule"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/type_module_ptr-lh1o"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typemoduleref\/ptr"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typemoduleref\/init(cpointer:)"},"doc://GLibObject/documentation/GLibObject/GWeakCapturing":{"role":"symbol","title":"GWeakCapturing","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"GWeakCapturing"}],"abstract":[{"type":"text","text":"This protocol is used to constrain generic argument T of GWeak container for weak references. Wrappers with strong references to underlying GObjects must NOT conform to this protocol."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/GWeakCapturing","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GWeakCapturing"}],"url":"\/documentation\/glibobject\/gweakcapturing"},"doc://GLibObject/documentation/GLibObject/TypeModuleProtocol/type_module_ptr-lh1o":{"defaultImplementations":1,"role":"symbol","title":"type_module_ptr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"type_module_ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GTypeModule"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Typed pointer to the underlying "},{"type":"codeVoice","code":"GTypeModule"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/type_module_ptr-lh1o","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/glibobject\/typemoduleprotocol\/type_module_ptr-lh1o"},"doc://GLibObject/documentation/GLibObject/ObjectProtocol":{"role":"symbol","title":"ObjectProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObjectProtocol"}],"abstract":[{"type":"text","text":"The base object type."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/ObjectProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObjectProtocol"}],"url":"\/documentation\/glibobject\/objectprotocol"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/init(_:)-371zq":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(_:)-371zq","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typemoduleref\/init(_:)-371zq"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typemoduleref\/init(mutating:)"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typemoduleref\/init(gpointer:)"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/TypePluginProtocol-Implementations":{"role":"collectionGroup","title":"TypePluginProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/TypePluginProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glibobject\/typemoduleref\/typepluginprotocol-implementations"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/unowned(_:)":{"role":"symbol","title":"unowned(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unowned"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"TypeModuleRef","preciseIdentifier":"s:10GLibObject13TypeModuleRefV"}],"abstract":[{"type":"text","text":"This factory is syntactic sugar for setting weak pointers wrapped in "},{"type":"codeVoice","code":"GWeak<T>"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/unowned(_:)","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typemoduleref\/unowned(_:)"},"doc://GLibObject/documentation/GLibObject/TypeModule":{"role":"symbol","title":"TypeModule","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypeModule"}],"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModule"},{"type":"text","text":" provides a simple implementation of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin"},{"type":"text","text":" "},{"type":"text","text":"interface."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModule","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TypeModule"}],"url":"\/documentation\/glibobject\/typemodule"},"doc://GLibObject/documentation/GLibObject/TypeModuleProtocol":{"role":"symbol","title":"TypeModuleProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypeModuleProtocol"}],"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModule"},{"type":"text","text":" provides a simple implementation of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin"},{"type":"text","text":" "},{"type":"text","text":"interface."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TypeModuleProtocol"}],"url":"\/documentation\/glibobject\/typemoduleprotocol"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef":{"role":"symbol","title":"TypeModuleRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypeModuleRef"}],"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModule"},{"type":"text","text":" provides a simple implementation of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin"},{"type":"text","text":" "},{"type":"text","text":"interface."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TypeModuleRef"}],"url":"\/documentation\/glibobject\/typemoduleref"},"doc://GLibObject/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/GLibObject\/4GLib14PointerWrapperP"},"doc://GLibObject/documentation/GLibObject/TypePlugin":{"role":"symbol","title":"TypePlugin","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypePlugin"}],"abstract":[{"type":"text","text":"An interface that handles the lifecycle of dynamically loaded types."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TypePlugin"}],"url":"\/documentation\/glibobject\/typeplugin"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/PointerWrapper-Implementations":{"role":"collectionGroup","title":"PointerWrapper Implementations","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/PointerWrapper-Implementations","kind":"article","type":"topic","url":"\/documentation\/glibobject\/typemoduleref\/pointerwrapper-implementations"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/TypeModuleProtocol-Implementations":{"role":"collectionGroup","title":"TypeModuleProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/TypeModuleProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glibobject\/typemoduleref\/typemoduleprotocol-implementations"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typemoduleref\/init(constpointer:)"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/init(_:)-92kh5":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GTypeModule"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(_:)-92kh5","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typemoduleref\/init(_:)-92kh5"},"doc://GLibObject/documentation/GLibObject":{"role":"collection","title":"GLibObject","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject","kind":"symbol","type":"topic","url":"\/documentation\/glibobject"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/init(_:)-3z8qk":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GTypeModule"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(_:)-3z8qk","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typemoduleref\/init(_:)-3z8qk"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typemoduleref\/init(opaquepointer:)"}}}