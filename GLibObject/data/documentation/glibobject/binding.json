{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Binding"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Whenever the source property changes, the same value is applied to the"},{"type":"text","text":" "},{"type":"text","text":"target property; for instance, the following binding:"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"(C Language Example):"}]},{"type":"codeListing","syntax":"C","code":["  g_object_bind_property (object1, \"property-a\",","                          object2, \"property-b\",","                          G_BINDING_DEFAULT);"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"will cause the property named “property-b” of "},{"type":"codeVoice","code":"object2"},{"type":"text","text":" to be updated"},{"type":"text","text":" "},{"type":"text","text":"every time "},{"type":"codeVoice","code":"g_object_set()"},{"type":"text","text":" or the specific accessor changes the value of"},{"type":"text","text":" "},{"type":"text","text":"the property “property-a” of "},{"type":"codeVoice","code":"object1"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is possible to create a bidirectional binding between two properties"},{"type":"text","text":" "},{"type":"text","text":"of two "},{"type":"codeVoice","code":"GObject"},{"type":"text","text":" instances, so that if either property changes, the"},{"type":"text","text":" "},{"type":"text","text":"other is updated as well, for instance:"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"(C Language Example):"}]},{"type":"codeListing","syntax":"C","code":["  g_object_bind_property (object1, \"property-a\",","                          object2, \"property-b\",","                          G_BINDING_BIDIRECTIONAL);"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"will keep the two properties in sync."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is also possible to set a custom transformation function (in both"},{"type":"text","text":" "},{"type":"text","text":"directions, in case of a bidirectional binding) to apply a custom"},{"type":"text","text":" "},{"type":"text","text":"transformation from the source value to the target value before"},{"type":"text","text":" "},{"type":"text","text":"applying it; for instance, the following binding:"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"(C Language Example):"}]},{"type":"codeListing","syntax":"C","code":["  g_object_bind_property_full (adjustment1, \"value\",","                               adjustment2, \"value\",","                               G_BINDING_BIDIRECTIONAL,","                               celsius_to_fahrenheit,","                               fahrenheit_to_celsius,","                               NULL, NULL);"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"will keep the “value” property of the two adjustments in sync; the"},{"type":"text","text":" "},{"type":"codeVoice","code":"celsius_to_fahrenheit"},{"type":"text","text":" function will be called whenever the “value”"},{"type":"text","text":" "},{"type":"text","text":"property of "},{"type":"codeVoice","code":"adjustment1"},{"type":"text","text":" changes and will transform the current value"},{"type":"text","text":" "},{"type":"text","text":"of the property before applying it to the “value” property of "},{"type":"codeVoice","code":"adjustment2"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Vice versa, the "},{"type":"codeVoice","code":"fahrenheit_to_celsius"},{"type":"text","text":" function will be called whenever"},{"type":"text","text":" "},{"type":"text","text":"the “value” property of "},{"type":"codeVoice","code":"adjustment2"},{"type":"text","text":" changes, and will transform the"},{"type":"text","text":" "},{"type":"text","text":"current value of the property before applying it to the “value” property"},{"type":"text","text":" "},{"type":"text","text":"of "},{"type":"codeVoice","code":"adjustment1"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that "},{"type":"codeVoice","code":"GBinding"},{"type":"text","text":" does not resolve cycles by itself; a cycle like"}]},{"type":"codeListing","syntax":null,"code":["  object1:propertyA -> object2:propertyB","  object2:propertyB -> object3:propertyC","  object3:propertyC -> object1:propertyA"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"might lead to an infinite loop. The loop, in this particular case,"},{"type":"text","text":" "},{"type":"text","text":"can be avoided if the objects emit the "},{"type":"codeVoice","code":"GObject::notify"},{"type":"text","text":" signal only"},{"type":"text","text":" "},{"type":"text","text":"if the value has effectively been changed. A binding is implemented"},{"type":"text","text":" "},{"type":"text","text":"using the "},{"type":"codeVoice","code":"GObject::notify"},{"type":"text","text":" signal, so it is susceptible to all the"},{"type":"text","text":" "},{"type":"text","text":"various ways of blocking a signal emission, like "},{"type":"codeVoice","code":"g_signal_stop_emission()"},{"type":"text","text":" "},{"type":"text","text":"or "},{"type":"codeVoice","code":"g_signal_handler_block()"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A binding will be severed, and the resources it allocates freed, whenever"},{"type":"text","text":" "},{"type":"text","text":"either one of the "},{"type":"codeVoice","code":"GObject"},{"type":"text","text":" instances it refers to are finalized, or when"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"GBinding"},{"type":"text","text":" instance loses its last reference."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Bindings for languages with garbage collection can use"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_binding_unbind()"},{"type":"text","text":" to explicitly release a binding between the source"},{"type":"text","text":" "},{"type":"text","text":"and target properties, instead of relying on the last reference on the"},{"type":"text","text":" "},{"type":"text","text":"binding, source, and target instances to drop."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GBinding"},{"type":"text","text":" is available since GObject 2.26"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":" type acts as a reference-counted owner of an underlying "},{"type":"codeVoice","code":"GBinding"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It provides the methods that can operate on this data type through "},{"type":"codeVoice","code":"BindingProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":" as a strong reference or owner of a "},{"type":"codeVoice","code":"GBinding"},{"type":"text","text":" instance."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glibobject\/binding"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GLibObject\/documentation\/GLibObject\/Object"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/GLibObject\/documentation\/GLibObject\/BindingProtocol","doc:\/\/GLibObject\/4GLib14PointerWrapperP","doc:\/\/GLibObject\/documentation\/GLibObject\/ObjectProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/GLibObject\/documentation\/GLibObject\/Binding","interfaceLanguage":"swift"},"abstract":[{"type":"codeVoice","code":"GBinding"},{"type":"text","text":" is the representation of a binding between a property on a"},{"type":"text","text":" "},{"type":"codeVoice","code":"GObject"},{"type":"text","text":" instance (or source) and another property on another "},{"type":"codeVoice","code":"GObject"},{"type":"text","text":" "},{"type":"text","text":"instance (or target)."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Binding"}],"title":"Binding","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:10GLibObject7BindingC","modules":[{"name":"GLibObject"}],"navigatorTitle":[{"kind":"identifier","text":"Binding"}]},"hierarchy":{"paths":[["doc:\/\/GLibObject\/documentation\/GLibObject"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(_:)-2gjer","doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(_:)-6ihlv","doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(_:)-9ejwo","doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(_:)-c2ks","doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(binding:)","doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(cPointer:)","doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(gconstpointer:)","doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(gpointer:)","doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(opaquePointer:)","doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(raw:)-6d9mu","doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(raw:)-8xm6p","doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(retaining:)","doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(retainingCPointer:)","doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(retainingOpaquePointer:)","doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(retainingRaw:)-6qwvy","doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(retainingRaw:)-9vwpp"]},{"title":"Default Implementations","identifiers":["doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/BindingProtocol-Implementations"],"generated":true}],"references":{"doc://GLibObject/documentation/GLibObject/Binding/init(_:)-c2ks":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GBinding"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(_:)-c2ks","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/binding\/init(_:)-c2ks"},"doc://GLibObject/documentation/GLibObject/Binding/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a non-mutating "},{"type":"codeVoice","code":"gconstpointer"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/binding\/init(gconstpointer:)"},"doc://GLibObject/documentation/GLibObject/Binding/init(retaining:)":{"role":"symbol","title":"init(retaining:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retaining"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GBinding"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"Will retain "},{"type":"codeVoice","code":"GBinding"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(retaining:)","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/binding\/init(retaining:)"},"doc://GLibObject/documentation/GLibObject/Binding/init(_:)-6ihlv":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GBinding"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Optional initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(_:)-6ihlv","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/binding\/init(_:)-6ihlv"},"doc://GLibObject/documentation/GLibObject":{"role":"collection","title":"GLibObject","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject","kind":"symbol","type":"topic","url":"\/documentation\/glibobject"},"doc://GLibObject/documentation/GLibObject/Binding/BindingProtocol-Implementations":{"role":"collectionGroup","title":"BindingProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/BindingProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glibobject\/binding\/bindingprotocol-implementations"},"doc://GLibObject/documentation/GLibObject/Binding/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"BindingProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/binding\/init(cpointer:)"},"doc://GLibObject/documentation/GLibObject/Binding/init(retainingRaw:)-9vwpp":{"role":"symbol","title":"init(retainingRaw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingRaw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"BindingProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(retainingRaw:)-9vwpp","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/binding\/init(retainingraw:)-9vwpp"},"doc://GLibObject/documentation/GLibObject/Binding/init(retainingRaw:)-6qwvy":{"role":"symbol","title":"init(retainingRaw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingRaw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"BindingProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(retainingRaw:)-6qwvy","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/binding\/init(retainingraw:)-6qwvy"},"doc://GLibObject/documentation/GLibObject/Binding/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a non-mutating "},{"type":"codeVoice","code":"gpointer"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/binding\/init(gpointer:)"},"doc://GLibObject/documentation/GLibObject/ObjectProtocol":{"role":"symbol","title":"ObjectProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObjectProtocol"}],"abstract":[{"type":"text","text":"The base object type."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/ObjectProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObjectProtocol"}],"url":"\/documentation\/glibobject\/objectprotocol"},"doc://GLibObject/documentation/GLibObject/Binding":{"role":"symbol","title":"Binding","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Binding"}],"abstract":[{"type":"codeVoice","code":"GBinding"},{"type":"text","text":" is the representation of a binding between a property on a"},{"type":"text","text":" "},{"type":"codeVoice","code":"GObject"},{"type":"text","text":" instance (or source) and another property on another "},{"type":"codeVoice","code":"GObject"},{"type":"text","text":" "},{"type":"text","text":"instance (or target)."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Binding","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Binding"}],"url":"\/documentation\/glibobject\/binding"},"doc://GLibObject/documentation/GLibObject/BindingProtocol":{"role":"symbol","title":"BindingProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindingProtocol"}],"abstract":[{"type":"codeVoice","code":"GBinding"},{"type":"text","text":" is the representation of a binding between a property on a"},{"type":"text","text":" "},{"type":"codeVoice","code":"GObject"},{"type":"text","text":" instance (or source) and another property on another "},{"type":"codeVoice","code":"GObject"},{"type":"text","text":" "},{"type":"text","text":"instance (or target)."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/BindingProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BindingProtocol"}],"url":"\/documentation\/glibobject\/bindingprotocol"},"doc://GLibObject/documentation/GLibObject/Binding/init(retainingCPointer:)":{"role":"symbol","title":"init(retainingCPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"retainingCPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"BindingProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(retainingCPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/binding\/init(retainingcpointer:)"},"doc://GLibObject/documentation/GLibObject/Binding/init(binding:)":{"role":"symbol","title":"init(binding:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"binding"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"codeVoice","code":"BindingProtocol"},{"type":"text","text":" "},{"type":"text","text":"Will retain "},{"type":"codeVoice","code":"GBinding"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(binding:)","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/binding\/init(binding:)"},"doc://GLibObject/documentation/GLibObject/Binding/init(raw:)-6d9mu":{"role":"symbol","title":"init(raw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"raw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"BindingProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(raw:)-6d9mu","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/binding\/init(raw:)-6d9mu"},"doc://GLibObject/documentation/GLibObject/Binding/init(retainingOpaquePointer:)":{"role":"symbol","title":"init(retainingOpaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingOpaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"BindingProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(retainingOpaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/binding\/init(retainingopaquepointer:)"},"doc://GLibObject/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/GLibObject\/4GLib14PointerWrapperP"},"doc://GLibObject/documentation/GLibObject/Binding/init(_:)-2gjer":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GBinding"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(_:)-2gjer","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/binding\/init(_:)-2gjer"},"doc://GLibObject/documentation/GLibObject/Binding/init(_:)-9ejwo":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GBinding"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(_:)-9ejwo","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/binding\/init(_:)-9ejwo"},"doc://GLibObject/documentation/GLibObject/Binding/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"BindingProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/binding\/init(opaquepointer:)"},"doc://GLibObject/documentation/GLibObject/Object":{"role":"symbol","title":"Object","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Object"}],"abstract":[{"type":"text","text":"The base object type."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Object","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Object"}],"url":"\/documentation\/glibobject\/object"},"doc://GLibObject/documentation/GLibObject/Binding/init(raw:)-8xm6p":{"role":"symbol","title":"init(raw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"raw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"BindingProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Binding\/init(raw:)-8xm6p","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/binding\/init(raw:)-8xm6p"}}}