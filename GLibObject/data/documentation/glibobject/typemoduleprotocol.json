{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypeModuleProtocol"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/ObjectProtocol","preciseIdentifier":"s:10GLibObject0B8ProtocolP","text":"ObjectProtocol"},{"kind":"text","text":", "},{"kind":"typeIdentifier","identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePluginProtocol","preciseIdentifier":"s:10GLibObject18TypePluginProtocolP","text":"TypePluginProtocol"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The model of "},{"type":"codeVoice","code":"GTypeModule"},{"type":"text","text":" is a dynamically loaded module which"},{"type":"text","text":" "},{"type":"text","text":"implements some number of types and interface implementations."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When the module is loaded, it registers its types and interfaces"},{"type":"text","text":" "},{"type":"text","text":"using "},{"type":"codeVoice","code":"g_type_module_register_type()"},{"type":"text","text":" and "},{"type":"codeVoice","code":"g_type_module_add_interface()"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"As long as any instances of these types and interface implementations"},{"type":"text","text":" "},{"type":"text","text":"are in use, the module is kept loaded. When the types and interfaces"},{"type":"text","text":" "},{"type":"text","text":"are gone, the module may be unloaded. If the types and interfaces"},{"type":"text","text":" "},{"type":"text","text":"become used again, the module will be reloaded. Note that the last"},{"type":"text","text":" "},{"type":"text","text":"reference cannot be released from within the module code, since that"},{"type":"text","text":" "},{"type":"text","text":"would lead to the callerâ€™s code being unloaded before "},{"type":"codeVoice","code":"g_object_unref()"},{"type":"text","text":" "},{"type":"text","text":"returns to it."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Keeping track of whether the module should be loaded or not is done by"},{"type":"text","text":" "},{"type":"text","text":"using a use count - it starts at zero, and whenever it is greater than"},{"type":"text","text":" "},{"type":"text","text":"zero, the module is loaded. The use count is maintained internally by"},{"type":"text","text":" "},{"type":"text","text":"the type system, but also can be explicitly controlled by"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_type_module_use()"},{"type":"text","text":" and "},{"type":"codeVoice","code":"g_type_module_unuse()"},{"type":"text","text":". Typically, when loading"},{"type":"text","text":" "},{"type":"text","text":"a module for the first type, "},{"type":"codeVoice","code":"g_type_module_use()"},{"type":"text","text":" will be used to load"},{"type":"text","text":" "},{"type":"text","text":"it so that it can initialize its types. At some later point, when the"},{"type":"text","text":" "},{"type":"text","text":"module no longer needs to be loaded except for the type"},{"type":"text","text":" "},{"type":"text","text":"implementations it contains, "},{"type":"codeVoice","code":"g_type_module_unuse()"},{"type":"text","text":" is called."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GTypeModule"},{"type":"text","text":" does not actually provide any implementation of module"},{"type":"text","text":" "},{"type":"text","text":"loading and unloading. To create a particular module type you must"},{"type":"text","text":" "},{"type":"text","text":"derive from "},{"type":"codeVoice","code":"GTypeModule"},{"type":"text","text":" and implement the load and unload functions"},{"type":"text","text":" "},{"type":"text","text":"in "},{"type":"codeVoice","code":"GTypeModuleClass"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"TypeModuleProtocol"},{"type":"text","text":" protocol exposes the methods and properties of an underlying "},{"type":"codeVoice","code":"GTypeModule"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"The default implementation of these can be found in the protocol extension below."},{"type":"text","text":" "},{"type":"text","text":"For a concrete class that implements these methods and properties, see "},{"type":"codeVoice","code":"TypeModule"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Alternatively, use "},{"type":"codeVoice","code":"TypeModuleRef"},{"type":"text","text":" as a lighweight, "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference if you already have an instance you just want to use."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glibobject\/typemoduleprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GLibObject\/4GLib14PointerWrapperP","doc:\/\/GLibObject\/documentation\/GLibObject\/ObjectProtocol","doc:\/\/GLibObject\/documentation\/GLibObject\/TypePluginProtocol"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModule","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"identifier":{"url":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol","interfaceLanguage":"swift"},"abstract":[{"type":"codeVoice","code":"GTypeModule"},{"type":"text","text":" provides a simple implementation of the "},{"type":"codeVoice","code":"GTypePlugin"},{"type":"text","text":" "},{"type":"text","text":"interface."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypeModuleProtocol"}],"title":"TypeModuleProtocol","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:10GLibObject18TypeModuleProtocolP","modules":[{"name":"GLibObject"}],"navigatorTitle":[{"kind":"identifier","text":"TypeModuleProtocol"}]},"hierarchy":{"paths":[["doc:\/\/GLibObject\/documentation\/GLibObject"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/interfaceInfos","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/name","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/parentInstance","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/typeInfos","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/type_module_ptr-lh1o","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/useCount"]},{"title":"Instance Methods","identifiers":["doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/addInterface(instanceType:interfaceType:interfaceInfo:)","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/registerEnum(name:constStaticValues:)","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/registerFlags(name:constStaticValues:)","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/registerType(parentType:typeName:typeInfo:flags:)","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/set(name:)","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/unuse()","doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/use()"]}],"references":{"doc://GLibObject/documentation/GLibObject":{"role":"collection","title":"GLibObject","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject","kind":"symbol","type":"topic","url":"\/documentation\/glibobject"},"doc://GLibObject/documentation/GLibObject/TypeModuleProtocol/typeInfos":{"role":"symbol","title":"typeInfos","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"typeInfos"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SListRef","preciseIdentifier":"s:4GLib8SListRefV"},{"kind":"text","text":"!"}],"abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/typeInfos","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typemoduleprotocol\/typeinfos"},"doc://GLibObject/documentation/GLibObject/TypeModuleProtocol/interfaceInfos":{"role":"symbol","title":"interfaceInfos","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"interfaceInfos"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SListRef","preciseIdentifier":"s:4GLib8SListRefV"},{"kind":"text","text":"!"}],"abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/interfaceInfos","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typemoduleprotocol\/interfaceinfos"},"doc://GLibObject/documentation/GLibObject/TypeModuleProtocol/useCount":{"role":"symbol","title":"useCount","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"useCount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"guint","preciseIdentifier":"c:gtypes.h@T@guint"}],"abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/useCount","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typemoduleprotocol\/usecount"},"doc://GLibObject/documentation/GLibObject/TypePluginProtocol":{"role":"symbol","title":"TypePluginProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypePluginProtocol"}],"abstract":[{"type":"text","text":"An interface that handles the lifecycle of dynamically loaded types."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePluginProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TypePluginProtocol"}],"url":"\/documentation\/glibobject\/typepluginprotocol"},"doc://GLibObject/documentation/GLibObject/TypeModuleRef":{"role":"symbol","title":"TypeModuleRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypeModuleRef"}],"abstract":[{"type":"codeVoice","code":"GTypeModule"},{"type":"text","text":" provides a simple implementation of the "},{"type":"codeVoice","code":"GTypePlugin"},{"type":"text","text":" "},{"type":"text","text":"interface."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TypeModuleRef"}],"url":"\/documentation\/glibobject\/typemoduleref"},"doc://GLibObject/documentation/GLibObject/TypeModuleProtocol/name":{"role":"symbol","title":"name","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"the name of the module"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/name","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typemoduleprotocol\/name"},"doc://GLibObject/documentation/GLibObject/TypeModuleProtocol":{"role":"symbol","title":"TypeModuleProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypeModuleProtocol"}],"abstract":[{"type":"codeVoice","code":"GTypeModule"},{"type":"text","text":" provides a simple implementation of the "},{"type":"codeVoice","code":"GTypePlugin"},{"type":"text","text":" "},{"type":"text","text":"interface."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TypeModuleProtocol"}],"url":"\/documentation\/glibobject\/typemoduleprotocol"},"doc://GLibObject/documentation/GLibObject/TypeModuleProtocol/registerEnum(name:constStaticValues:)":{"role":"symbol","title":"registerEnum(name:constStaticValues:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"registerEnum"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"EnumValueT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"constStaticValues"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EnumValueT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GType","preciseIdentifier":"c:@T@GType"}],"abstract":[{"type":"text","text":"Looks up or registers an enumeration that is implemented with a particular"},{"type":"text","text":" "},{"type":"text","text":"type plugin. If a type with name "},{"type":"codeVoice","code":"type_name"},{"type":"text","text":" was previously registered,"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"GType"},{"type":"text","text":" identifier for the type is returned, otherwise the type"},{"type":"text","text":" "},{"type":"text","text":"is newly registered, and the resulting "},{"type":"codeVoice","code":"GType"},{"type":"text","text":" identifier returned."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/registerEnum(name:constStaticValues:)","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typemoduleprotocol\/registerenum(name:conststaticvalues:)"},"doc://GLibObject/documentation/GLibObject/TypeModuleProtocol/unuse()":{"role":"symbol","title":"unuse()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unuse"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Decreases the use count of a "},{"type":"codeVoice","code":"GTypeModule"},{"type":"text","text":" by one. If the"},{"type":"text","text":" "},{"type":"text","text":"result is zero, the module will be unloaded. (However, the"},{"type":"text","text":" "},{"type":"codeVoice","code":"GTypeModule"},{"type":"text","text":" will not be freed, and types associated with the"},{"type":"text","text":" "},{"type":"codeVoice","code":"GTypeModule"},{"type":"text","text":" are not unregistered. Once a "},{"type":"codeVoice","code":"GTypeModule"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"initialized, it must exist forever.)"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/unuse()","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typemoduleprotocol\/unuse()"},"doc://GLibObject/documentation/GLibObject/TypeModuleProtocol/parentInstance":{"role":"symbol","title":"parentInstance","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"parentInstance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GObject"}],"abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/parentInstance","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typemoduleprotocol\/parentinstance"},"doc://GLibObject/documentation/GLibObject/ObjectProtocol":{"role":"symbol","title":"ObjectProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObjectProtocol"}],"abstract":[{"type":"text","text":"The base object type."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/ObjectProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObjectProtocol"}],"url":"\/documentation\/glibobject\/objectprotocol"},"doc://GLibObject/documentation/GLibObject/TypeModuleProtocol/type_module_ptr-lh1o":{"defaultImplementations":1,"role":"symbol","title":"type_module_ptr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"type_module_ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GTypeModule"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Typed pointer to the underlying "},{"type":"codeVoice","code":"GTypeModule"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/type_module_ptr-lh1o","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/glibobject\/typemoduleprotocol\/type_module_ptr-lh1o"},"doc://GLibObject/documentation/GLibObject/TypeModule":{"role":"symbol","title":"TypeModule","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypeModule"}],"abstract":[{"type":"codeVoice","code":"GTypeModule"},{"type":"text","text":" provides a simple implementation of the "},{"type":"codeVoice","code":"GTypePlugin"},{"type":"text","text":" "},{"type":"text","text":"interface."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModule","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TypeModule"}],"url":"\/documentation\/glibobject\/typemodule"},"doc://GLibObject/documentation/GLibObject/TypeModuleProtocol/registerFlags(name:constStaticValues:)":{"role":"symbol","title":"registerFlags(name:constStaticValues:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"registerFlags"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"FlagsValueT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"constStaticValues"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FlagsValueT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GType","preciseIdentifier":"c:@T@GType"}],"abstract":[{"type":"text","text":"Looks up or registers a flags type that is implemented with a particular"},{"type":"text","text":" "},{"type":"text","text":"type plugin. If a type with name "},{"type":"codeVoice","code":"type_name"},{"type":"text","text":" was previously registered,"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"GType"},{"type":"text","text":" identifier for the type is returned, otherwise the type"},{"type":"text","text":" "},{"type":"text","text":"is newly registered, and the resulting "},{"type":"codeVoice","code":"GType"},{"type":"text","text":" identifier returned."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/registerFlags(name:constStaticValues:)","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typemoduleprotocol\/registerflags(name:conststaticvalues:)"},"doc://GLibObject/documentation/GLibObject/TypeModuleProtocol/use()":{"role":"symbol","title":"use()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"use"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Increases the use count of a "},{"type":"codeVoice","code":"GTypeModule"},{"type":"text","text":" by one. If the"},{"type":"text","text":" "},{"type":"text","text":"use count was zero before, the plugin will be loaded."},{"type":"text","text":" "},{"type":"text","text":"If loading the plugin fails, the use count is reset to"},{"type":"text","text":" "},{"type":"text","text":"its prior value."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/use()","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typemoduleprotocol\/use()"},"doc://GLibObject/documentation/GLibObject/TypeModuleProtocol/set(name:)":{"role":"symbol","title":"set(name:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!)"}],"abstract":[{"type":"text","text":"Sets the name for a "},{"type":"codeVoice","code":"GTypeModule"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/set(name:)","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typemoduleprotocol\/set(name:)"},"doc://GLibObject/documentation/GLibObject/TypeModuleProtocol/registerType(parentType:typeName:typeInfo:flags:)":{"role":"symbol","title":"registerType(parentType:typeName:typeInfo:flags:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"registerType"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TypeInfoT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"parentType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GType","preciseIdentifier":"c:@T@GType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"typeName"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"typeInfo"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TypeInfoT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"flags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TypeFlags","preciseIdentifier":"s:10GLibObject9TypeFlagsV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GType","preciseIdentifier":"c:@T@GType"}],"abstract":[{"type":"text","text":"Looks up or registers a type that is implemented with a particular"},{"type":"text","text":" "},{"type":"text","text":"type plugin. If a type with name "},{"type":"codeVoice","code":"type_name"},{"type":"text","text":" was previously registered,"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"GType"},{"type":"text","text":" identifier for the type is returned, otherwise the type"},{"type":"text","text":" "},{"type":"text","text":"is newly registered, and the resulting "},{"type":"codeVoice","code":"GType"},{"type":"text","text":" identifier returned."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/registerType(parentType:typeName:typeInfo:flags:)","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typemoduleprotocol\/registertype(parenttype:typename:typeinfo:flags:)"},"doc://GLibObject/documentation/GLibObject/TypeModuleProtocol/addInterface(instanceType:interfaceType:interfaceInfo:)":{"role":"symbol","title":"addInterface(instanceType:interfaceType:interfaceInfo:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addInterface"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"InterfaceInfoT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"instanceType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GType","preciseIdentifier":"c:@T@GType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"interfaceType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GType","preciseIdentifier":"c:@T@GType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"interfaceInfo"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"InterfaceInfoT"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Registers an additional interface for a type, whose interface lives"},{"type":"text","text":" "},{"type":"text","text":"in the given type plugin. If the interface was already registered"},{"type":"text","text":" "},{"type":"text","text":"for the type in this plugin, nothing will be done."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypeModuleProtocol\/addInterface(instanceType:interfaceType:interfaceInfo:)","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typemoduleprotocol\/addinterface(instancetype:interfacetype:interfaceinfo:)"},"doc://GLibObject/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/GLibObject\/4GLib14PointerWrapperP"}}}