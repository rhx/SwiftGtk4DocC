{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sink"},{"kind":"text","text":"()"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each closure is initially created in a “floating” state, which means"},{"type":"text","text":" "},{"type":"text","text":"that the initial reference count is not owned by any caller."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function checks to see if the object is still floating, and if so,"},{"type":"text","text":" "},{"type":"text","text":"unsets the floating state and decreases the reference count. If the"},{"type":"text","text":" "},{"type":"text","text":"closure is not floating, "},{"type":"codeVoice","code":"g_closure_sink()"},{"type":"text","text":" does nothing."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The reason for the existence of the floating state is to prevent"},{"type":"text","text":" "},{"type":"text","text":"cumbersome code sequences like:"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"(C Language Example):"}]},{"type":"codeListing","syntax":"C","code":["closure = g_cclosure_new (cb_func, cb_data);","g_source_set_closure (source, closure);","g_closure_unref (closure); \/\/ GObject doesn't really need this"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Because "},{"type":"codeVoice","code":"g_source_set_closure()"},{"type":"text","text":" (and similar functions) take ownership of the"},{"type":"text","text":" "},{"type":"text","text":"initial reference count, if it is unowned, we instead can write:"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"(C Language Example):"}]},{"type":"codeListing","syntax":"C","code":["g_source_set_closure (source, g_cclosure_new (cb_func, cb_data));"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Generally, this function is used together with "},{"type":"codeVoice","code":"g_closure_ref()"},{"type":"text","text":". An example"},{"type":"text","text":" "},{"type":"text","text":"of storing a closure for later notification looks like:"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"(C Language Example):"}]},{"type":"codeListing","syntax":"C","code":["static GClosure *notify_closure = NULL;","void","foo_notify_set_closure (GClosure *closure)","{","  if (notify_closure)","    g_closure_unref (notify_closure);","  notify_closure = closure;","  if (notify_closure)","    {","      g_closure_ref (notify_closure);","      g_closure_sink (notify_closure);","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Because "},{"type":"codeVoice","code":"g_closure_sink()"},{"type":"text","text":" may decrement the reference count of a closure"},{"type":"text","text":" "},{"type":"text","text":"(if it hasn’t been called on "},{"type":"codeVoice","code":"closure"},{"type":"text","text":" yet) just like "},{"type":"codeVoice","code":"g_closure_unref()"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"codeVoice","code":"g_closure_ref()"},{"type":"text","text":" should be called prior to this function."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glibobject\/closureprotocol\/sink()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLibObject\/documentation\/GLibObject\/ClosureProtocol\/sink()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Takes over the initial ownership of a closure."}],"kind":"symbol","metadata":{"role":"symbol","title":"sink()","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sink"},{"kind":"text","text":"()"}],"symbolKind":"method","externalID":"s:10GLibObject15ClosureProtocolPAAE4sinkyyF","extendedModule":"GLibObject","modules":[{"name":"GLibObject"}]},"hierarchy":{"paths":[["doc:\/\/GLibObject\/documentation\/GLibObject","doc:\/\/GLibObject\/documentation\/GLibObject\/ClosureProtocol"]]},"references":{"doc://GLibObject/documentation/GLibObject/Closure":{"role":"symbol","title":"Closure","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Closure"}],"abstract":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Closure"},{"type":"text","text":" represents a callback supplied by the programmer."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Closure","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Closure"}],"url":"\/documentation\/glibobject\/closure"},"doc://GLibObject/documentation/GLibObject":{"role":"collection","title":"GLibObject","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject","kind":"symbol","type":"topic","url":"\/documentation\/glibobject"},"doc://GLibObject/documentation/GLibObject/ClosureProtocol":{"role":"symbol","title":"ClosureProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClosureProtocol"}],"abstract":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/Closure"},{"type":"text","text":" represents a callback supplied by the programmer."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/ClosureProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ClosureProtocol"}],"url":"\/documentation\/glibobject\/closureprotocol"},"doc://GLibObject/documentation/GLibObject/ClosureProtocol/sink()":{"role":"symbol","title":"sink()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sink"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Takes over the initial ownership of a closure."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/ClosureProtocol\/sink()","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/closureprotocol\/sink()"}}}