{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"typeGetTypeRegistrationSerial"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glibobject\/typegettyperegistrationserial()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLibObject\/documentation\/GLibObject\/typeGetTypeRegistrationSerial()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Returns an opaque serial number that represents the state of the set"},{"type":"text","text":" "},{"type":"text","text":"of registered types. Any time a type is registered this serial changes,"},{"type":"text","text":" "},{"type":"text","text":"which means you can cache information based on type lookups (such as"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_type_from_name()"},{"type":"text","text":") and know if the cache is still valid at a later"},{"type":"text","text":" "},{"type":"text","text":"time by comparing the current serial with the one at the type lookup."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"typeGetTypeRegistrationSerial"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"title":"typeGetTypeRegistrationSerial()","roleHeading":"Function","role":"symbol","symbolKind":"func","externalID":"s:10GLibObject29typeGetTypeRegistrationSerialSiyF","modules":[{"name":"GLibObject"}]},"hierarchy":{"paths":[["doc:\/\/GLibObject\/documentation\/GLibObject"]]},"references":{"doc://GLibObject/documentation/GLibObject":{"role":"collection","title":"GLibObject","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject","kind":"symbol","type":"topic","url":"\/documentation\/glibobject"},"doc://GLibObject/documentation/GLibObject/typeGetTypeRegistrationSerial()":{"role":"symbol","title":"typeGetTypeRegistrationSerial()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"typeGetTypeRegistrationSerial"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Returns an opaque serial number that represents the state of the set"},{"type":"text","text":" "},{"type":"text","text":"of registered types. Any time a type is registered this serial changes,"},{"type":"text","text":" "},{"type":"text","text":"which means you can cache information based on type lookups (such as"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_type_from_name()"},{"type":"text","text":") and know if the cache is still valid at a later"},{"type":"text","text":" "},{"type":"text","text":"time by comparing the current serial with the one at the type lookup."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/typeGetTypeRegistrationSerial()","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typegettyperegistrationserial()"}}}