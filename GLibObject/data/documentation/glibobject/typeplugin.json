{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypePlugin"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The GObject type system supports dynamic loading of types."},{"type":"text","text":" "},{"type":"text","text":"It goes as follows:"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The type is initially introduced (usually upon loading the module"},{"type":"text","text":" "},{"type":"text","text":"the first time, or by your main application that knows what modules"},{"type":"text","text":" "},{"type":"text","text":"introduces what types), like this:"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"(C Language Example):"}]},{"type":"codeListing","syntax":"C","code":["   new_type_id = g_type_register_dynamic (parent_type_id,","                                          \"TypeName\",","                                          new_type_plugin,","                                          type_flags);","   "]},{"type":"paragraph","inlineContent":[{"type":"text","text":"where "},{"type":"codeVoice","code":"new_type_plugin"},{"type":"text","text":" is an implementation of the"},{"type":"text","text":" "},{"type":"codeVoice","code":"GTypePlugin"},{"type":"text","text":" interface."}]},{"type":"orderedList","start":2,"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The type’s implementation is referenced, e.g. through"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_type_class_ref()"},{"type":"text","text":" or through "},{"type":"codeVoice","code":"g_type_create_instance()"},{"type":"text","text":" (this is"},{"type":"text","text":" "},{"type":"text","text":"being called by "},{"type":"codeVoice","code":"g_object_new()"},{"type":"text","text":") or through one of the above done on"},{"type":"text","text":" "},{"type":"text","text":"a type derived from "},{"type":"codeVoice","code":"new_type_id"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This causes the type system to load the type’s implementation by"},{"type":"text","text":" "},{"type":"text","text":"calling "},{"type":"codeVoice","code":"g_type_plugin_use()"},{"type":"text","text":" and "},{"type":"codeVoice","code":"g_type_plugin_complete_type_info()"},{"type":"text","text":" "},{"type":"text","text":"on "},{"type":"codeVoice","code":"new_type_plugin"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"At some point the type’s implementation isn’t required anymore,"},{"type":"text","text":" "},{"type":"text","text":"e.g. after "},{"type":"codeVoice","code":"g_type_class_unref()"},{"type":"text","text":" or "},{"type":"codeVoice","code":"g_type_free_instance()"},{"type":"text","text":" (called"},{"type":"text","text":" "},{"type":"text","text":"when the reference count of an instance drops to zero)."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This causes the type system to throw away the information retrieved"},{"type":"text","text":" "},{"type":"text","text":"from "},{"type":"codeVoice","code":"g_type_plugin_complete_type_info()"},{"type":"text","text":" and then it calls"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_type_plugin_unuse()"},{"type":"text","text":" on "},{"type":"codeVoice","code":"new_type_plugin"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Things may repeat from the second step."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"So basically, you need to implement a "},{"type":"codeVoice","code":"GTypePlugin"},{"type":"text","text":" type that"},{"type":"text","text":" "},{"type":"text","text":"carries a use_count, once use_count goes from zero to one, you need"},{"type":"text","text":" "},{"type":"text","text":"to load the implementation to successfully handle the upcoming"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_type_plugin_complete_type_info()"},{"type":"text","text":" call. Later, maybe after"},{"type":"text","text":" "},{"type":"text","text":"succeeding use\/unuse calls, once use_count drops to zero, you can"},{"type":"text","text":" "},{"type":"text","text":"unload the implementation again. The type system makes sure to call"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_type_plugin_use()"},{"type":"text","text":" and "},{"type":"codeVoice","code":"g_type_plugin_complete_type_info()"},{"type":"text","text":" again"},{"type":"text","text":" "},{"type":"text","text":"when the type is needed again."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GTypeModule"},{"type":"text","text":" is an implementation of "},{"type":"codeVoice","code":"GTypePlugin"},{"type":"text","text":" that already"},{"type":"text","text":" "},{"type":"text","text":"implements most of this except for the actual module loading and"},{"type":"text","text":" "},{"type":"text","text":"unloading. It even handles multiple registered types per module."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"TypePlugin"},{"type":"text","text":" type acts as an owner of an underlying "},{"type":"codeVoice","code":"GTypePlugin"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It provides the methods that can operate on this data type through "},{"type":"codeVoice","code":"TypePluginProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"codeVoice","code":"TypePlugin"},{"type":"text","text":" as a strong reference or owner of a "},{"type":"codeVoice","code":"GTypePlugin"},{"type":"text","text":" instance."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glibobject\/typeplugin"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GLibObject\/4GLib14PointerWrapperP","doc:\/\/GLibObject\/documentation\/GLibObject\/TypePluginProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"An interface that handles the lifecycle of dynamically loaded types."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypePlugin"}],"title":"TypePlugin","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:10GLibObject10TypePluginC","modules":[{"name":"GLibObject"}],"navigatorTitle":[{"kind":"identifier","text":"TypePlugin"}]},"hierarchy":{"paths":[["doc:\/\/GLibObject\/documentation\/GLibObject"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(_:)-3cm5a","doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(_:)-62sev","doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(_:)-62wpb","doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(_:)-8ummq","doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(_:)-92sfd","doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(cPointer:)","doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(gconstpointer:)","doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(gpointer:)","doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(opaquePointer:)","doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(raw:)-3wrt5","doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(raw:)-47yum","doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(retaining:)","doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(retainingCPointer:)","doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(retainingOpaquePointer:)","doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(retainingRaw:)-1688d","doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(retainingRaw:)-7ym33"]},{"title":"Instance Properties","identifiers":["doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/ptr"]},{"title":"Default Implementations","identifiers":["doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/TypePluginProtocol-Implementations"],"generated":true}],"references":{"doc://GLibObject/documentation/GLibObject/TypePlugin/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a non-mutating "},{"type":"codeVoice","code":"gpointer"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"TypePlugin"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typeplugin\/init(gpointer:)"},"doc://GLibObject/documentation/GLibObject/TypePlugin/init(retaining:)":{"role":"symbol","title":"init(retaining:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retaining"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GTypePlugin"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"codeVoice","code":"GTypePlugin"},{"type":"text","text":" does not allow reference counting, so despite the name no actual retaining will occur."},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"TypePlugin"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(retaining:)","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typeplugin\/init(retaining:)"},"doc://GLibObject/documentation/GLibObject/TypePlugin/init(raw:)-47yum":{"role":"symbol","title":"init(raw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"raw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"TypePluginProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(raw:)-47yum","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typeplugin\/init(raw:)-47yum"},"doc://GLibObject/documentation/GLibObject/TypePlugin/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"TypePluginProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typeplugin\/init(cpointer:)"},"doc://GLibObject/documentation/GLibObject/TypePlugin/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GTypePlugin"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"codeVoice","code":"type_plugin_ptr"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typeplugin\/ptr"},"doc://GLibObject/documentation/GLibObject/TypePlugin/init(raw:)-3wrt5":{"role":"symbol","title":"init(raw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"raw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"TypePluginProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(raw:)-3wrt5","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typeplugin\/init(raw:)-3wrt5"},"doc://GLibObject/documentation/GLibObject":{"role":"collection","title":"GLibObject","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject","kind":"symbol","type":"topic","url":"\/documentation\/glibobject"},"doc://GLibObject/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/GLibObject\/4GLib14PointerWrapperP"},"doc://GLibObject/documentation/GLibObject/TypePlugin/init(retainingOpaquePointer:)":{"role":"symbol","title":"init(retainingOpaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingOpaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"TypePluginProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(retainingOpaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typeplugin\/init(retainingopaquepointer:)"},"doc://GLibObject/documentation/GLibObject/TypePlugin/init(retainingRaw:)-1688d":{"role":"symbol","title":"init(retainingRaw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingRaw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"TypePluginProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(retainingRaw:)-1688d","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typeplugin\/init(retainingraw:)-1688d"},"doc://GLibObject/documentation/GLibObject/TypePlugin/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"TypePluginProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typeplugin\/init(opaquepointer:)"},"doc://GLibObject/documentation/GLibObject/TypePlugin/init(retainingRaw:)-7ym33":{"role":"symbol","title":"init(retainingRaw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingRaw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"TypePluginProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(retainingRaw:)-7ym33","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typeplugin\/init(retainingraw:)-7ym33"},"doc://GLibObject/documentation/GLibObject/TypePlugin/init(_:)-3cm5a":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GTypePlugin"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"TypePlugin"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(_:)-3cm5a","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typeplugin\/init(_:)-3cm5a"},"doc://GLibObject/documentation/GLibObject/TypePlugin/init(_:)-62sev":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"codeVoice","code":"TypePluginProtocol"},{"type":"text","text":" "},{"type":"codeVoice","code":"GTypePlugin"},{"type":"text","text":" does not allow reference counting."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(_:)-62sev","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typeplugin\/init(_:)-62sev"},"doc://GLibObject/documentation/GLibObject/TypePlugin/init(_:)-8ummq":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GTypePlugin"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"TypePlugin"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(_:)-8ummq","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typeplugin\/init(_:)-8ummq"},"doc://GLibObject/documentation/GLibObject/TypePlugin/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a non-mutating "},{"type":"codeVoice","code":"gconstpointer"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"TypePlugin"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typeplugin\/init(gconstpointer:)"},"doc://GLibObject/documentation/GLibObject/TypePlugin/init(_:)-62wpb":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GTypePlugin"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Optional initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"TypePlugin"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(_:)-62wpb","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typeplugin\/init(_:)-62wpb"},"doc://GLibObject/documentation/GLibObject/TypePlugin/TypePluginProtocol-Implementations":{"role":"collectionGroup","title":"TypePluginProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/TypePluginProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glibobject\/typeplugin\/typepluginprotocol-implementations"},"doc://GLibObject/documentation/GLibObject/TypePluginProtocol":{"role":"symbol","title":"TypePluginProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypePluginProtocol"}],"abstract":[{"type":"text","text":"An interface that handles the lifecycle of dynamically loaded types."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePluginProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TypePluginProtocol"}],"url":"\/documentation\/glibobject\/typepluginprotocol"},"doc://GLibObject/documentation/GLibObject/TypePlugin/init(retainingCPointer:)":{"role":"symbol","title":"init(retainingCPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"retainingCPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"codeVoice","code":"TypePluginProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(retainingCPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typeplugin\/init(retainingcpointer:)"},"doc://GLibObject/documentation/GLibObject/TypePlugin":{"role":"symbol","title":"TypePlugin","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypePlugin"}],"abstract":[{"type":"text","text":"An interface that handles the lifecycle of dynamically loaded types."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TypePlugin"}],"url":"\/documentation\/glibobject\/typeplugin"},"doc://GLibObject/documentation/GLibObject/TypePlugin/init(_:)-92sfd":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GTypePlugin"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"TypePlugin"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/TypePlugin\/init(_:)-92sfd","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typeplugin\/init(_:)-92sfd"}}}