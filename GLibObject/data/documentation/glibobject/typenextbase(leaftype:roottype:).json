{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"typeNextBase"},{"kind":"text","text":"("},{"kind":"externalParam","text":"leafType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GType","preciseIdentifier":"c:@T@GType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"rootType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GType","preciseIdentifier":"c:@T@GType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GType","preciseIdentifier":"c:@T@GType"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glibobject\/typenextbase(leaftype:roottype:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLibObject\/documentation\/GLibObject\/typeNextBase(leafType:rootType:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Given a "},{"type":"codeVoice","code":"leaf_type"},{"type":"text","text":" and a "},{"type":"codeVoice","code":"root_type"},{"type":"text","text":" which is contained in its"},{"type":"text","text":" "},{"type":"text","text":"ancestry, return the type that "},{"type":"codeVoice","code":"root_type"},{"type":"text","text":" is the immediate parent"},{"type":"text","text":" "},{"type":"text","text":"of. In other words, this function determines the type that is"},{"type":"text","text":" "},{"type":"text","text":"derived directly from "},{"type":"codeVoice","code":"root_type"},{"type":"text","text":" which is also a base class of"},{"type":"text","text":" "},{"type":"codeVoice","code":"leaf_type"},{"type":"text","text":".  Given a root type and a leaf type, this function can"},{"type":"text","text":" "},{"type":"text","text":"be used to determine the types and order in which the leaf type is"},{"type":"text","text":" "},{"type":"text","text":"descended from the root type."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"typeNextBase"},{"kind":"text","text":"("},{"kind":"externalParam","text":"leafType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GType","preciseIdentifier":"c:@T@GType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"rootType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GType","preciseIdentifier":"c:@T@GType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GType","preciseIdentifier":"c:@T@GType"}],"title":"typeNextBase(leafType:rootType:)","roleHeading":"Function","role":"symbol","symbolKind":"func","externalID":"s:10GLibObject12typeNextBase8leafType04rootG0S2u_SutF","modules":[{"name":"GLibObject"}]},"hierarchy":{"paths":[["doc:\/\/GLibObject\/documentation\/GLibObject"]]},"references":{"doc://GLibObject/documentation/GLibObject":{"role":"collection","title":"GLibObject","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject","kind":"symbol","type":"topic","url":"\/documentation\/glibobject"},"doc://GLibObject/documentation/GLibObject/typeNextBase(leafType:rootType:)":{"role":"symbol","title":"typeNextBase(leafType:rootType:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"typeNextBase"},{"kind":"text","text":"("},{"kind":"externalParam","text":"leafType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GType","preciseIdentifier":"c:@T@GType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"rootType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GType","preciseIdentifier":"c:@T@GType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GType","preciseIdentifier":"c:@T@GType"}],"abstract":[{"type":"text","text":"Given a "},{"type":"codeVoice","code":"leaf_type"},{"type":"text","text":" and a "},{"type":"codeVoice","code":"root_type"},{"type":"text","text":" which is contained in its"},{"type":"text","text":" "},{"type":"text","text":"ancestry, return the type that "},{"type":"codeVoice","code":"root_type"},{"type":"text","text":" is the immediate parent"},{"type":"text","text":" "},{"type":"text","text":"of. In other words, this function determines the type that is"},{"type":"text","text":" "},{"type":"text","text":"derived directly from "},{"type":"codeVoice","code":"root_type"},{"type":"text","text":" which is also a base class of"},{"type":"text","text":" "},{"type":"codeVoice","code":"leaf_type"},{"type":"text","text":".  Given a root type and a leaf type, this function can"},{"type":"text","text":" "},{"type":"text","text":"be used to determine the types and order in which the leaf type is"},{"type":"text","text":" "},{"type":"text","text":"descended from the root type."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/typeNextBase(leafType:rootType:)","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/typenextbase(leaftype:roottype:)"}}}