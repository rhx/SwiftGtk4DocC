{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stealQdata"},{"kind":"text","text":"("},{"kind":"externalParam","text":"quark"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GQuark","preciseIdentifier":"c:@T@GQuark"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"codeListing","syntax":"C","code":["void","object_add_to_user_list (GObject     *object,","                         const gchar *new_string)","{","  \/\/ the quark, naming the object data","  GQuark quark_string_list = g_quark_from_static_string (\"my-string-list\");","  \/\/ retrieve the old string list","  GList *list = g_object_steal_qdata (object, quark_string_list);","","  \/\/ prepend new string","  list = g_list_prepend (list, g_strdup (new_string));","  \/\/ this changed 'list', so we need to set it again","  g_object_set_qdata_full (object, quark_string_list, list, free_string_list);","}","static void","free_string_list (gpointer data)","{","  GList *node, *list = data;","","  for (node = list; node; node = node->next)","    g_free (node->data);","  g_list_free (list);","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using "},{"type":"codeVoice","code":"g_object_get_qdata()"},{"type":"text","text":" in the above example, instead of"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_object_steal_qdata()"},{"type":"text","text":" would have left the destroy function set,"},{"type":"text","text":" "},{"type":"text","text":"and thus the partial string list would have been freed upon"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_object_set_qdata_full()"},{"type":"text","text":"."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glibobject\/objectprotocol\/stealqdata(quark:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLibObject\/documentation\/GLibObject\/ObjectProtocol\/stealQdata(quark:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This function gets back user data pointers stored via"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_object_set_qdata()"},{"type":"text","text":" and removes the "},{"type":"codeVoice","code":"data"},{"type":"text","text":" from object"},{"type":"text","text":" "},{"type":"text","text":"without invoking its "},{"type":"codeVoice","code":"destroy()"},{"type":"text","text":" function (if any was"},{"type":"text","text":" "},{"type":"text","text":"set)."},{"type":"text","text":" "},{"type":"text","text":"Usually, calling this function is only required to update"},{"type":"text","text":" "},{"type":"text","text":"user data pointers with a destroy notifier, for example:"},{"type":"text","text":" "},{"type":"text","text":"(C Language Example):"}],"kind":"symbol","metadata":{"role":"symbol","title":"stealQdata(quark:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stealQdata"},{"kind":"text","text":"("},{"kind":"externalParam","text":"quark"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GQuark","preciseIdentifier":"c:@T@GQuark"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?"}],"symbolKind":"method","externalID":"s:10GLibObject0B8ProtocolPAAE10stealQdata5quarkSvSgs6UInt32V_tF","extendedModule":"GLibObject","modules":[{"name":"GLibObject"}]},"hierarchy":{"paths":[["doc:\/\/GLibObject\/documentation\/GLibObject","doc:\/\/GLibObject\/documentation\/GLibObject\/ObjectProtocol"]]},"references":{"doc://GLibObject/documentation/GLibObject/ObjectProtocol":{"role":"symbol","title":"ObjectProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObjectProtocol"}],"abstract":[{"type":"text","text":"The base object type."}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/ObjectProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObjectProtocol"}],"url":"\/documentation\/glibobject\/objectprotocol"},"doc://GLibObject/documentation/GLibObject":{"role":"collection","title":"GLibObject","abstract":[],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject","kind":"symbol","type":"topic","url":"\/documentation\/glibobject"},"doc://GLibObject/documentation/GLibObject/ObjectProtocol/stealQdata(quark:)":{"role":"symbol","title":"stealQdata(quark:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stealQdata"},{"kind":"text","text":"("},{"kind":"externalParam","text":"quark"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GQuark","preciseIdentifier":"c:@T@GQuark"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:gtypes.h@T@gpointer"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"This function gets back user data pointers stored via"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_object_set_qdata()"},{"type":"text","text":" and removes the "},{"type":"codeVoice","code":"data"},{"type":"text","text":" from object"},{"type":"text","text":" "},{"type":"text","text":"without invoking its "},{"type":"codeVoice","code":"destroy()"},{"type":"text","text":" function (if any was"},{"type":"text","text":" "},{"type":"text","text":"set)."},{"type":"text","text":" "},{"type":"text","text":"Usually, calling this function is only required to update"},{"type":"text","text":" "},{"type":"text","text":"user data pointers with a destroy notifier, for example:"},{"type":"text","text":" "},{"type":"text","text":"(C Language Example):"}],"identifier":"doc:\/\/GLibObject\/documentation\/GLibObject\/ObjectProtocol\/stealQdata(quark:)","kind":"symbol","type":"topic","url":"\/documentation\/glibobject\/objectprotocol\/stealqdata(quark:)"}}}