{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/applaunchcontext\/init(_:)-2kzwz","title":"init!(UnsafePointer<GdkAppLaunchContext>?)","type":"init"},{"path":"\/documentation\/gdk\/applaunchcontext\/init(_:)-557q7","title":"init(UnsafeMutablePointer<GdkAppLaunchContext>)","type":"init"},{"path":"\/documentation\/gdk\/applaunchcontext\/init(_:)-6bsz4","title":"init(UnsafePointer<GdkAppLaunchContext>)","type":"init"},{"path":"\/documentation\/gdk\/applaunchcontext\/init(_:)-7lfjo","title":"init!(UnsafeMutablePointer<GdkAppLaunchContext>?)","type":"init"},{"path":"\/documentation\/gdk\/applaunchcontext\/init(applaunchcontext:)","title":"init<T>(appLaunchContext: T)","type":"init"},{"path":"\/documentation\/gdk\/applaunchcontext\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/applaunchcontext\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/applaunchcontext\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/applaunchcontext\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/applaunchcontext\/init(raw:)-8z42g","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/applaunchcontext\/init(raw:)-yfsc","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/applaunchcontext\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkAppLaunchContext>)","type":"init"},{"path":"\/documentation\/gdk\/applaunchcontext\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/applaunchcontext\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/applaunchcontext\/init(retainingraw:)-28fq7","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/applaunchcontext\/init(retainingraw:)-63a8g","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/applaunchcontext\/app_launch_context_ptr","title":"var app_launch_context_ptr: UnsafeMutablePointer<GdkAppLaunchContext>!","type":"property"},{"path":"\/documentation\/gdk\/applaunchcontext\/display","title":"var display: DisplayRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/applaunchcontext\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: AppLaunchContextPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontext\/get(property:)","title":"func get(property: AppLaunchContextPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontext\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontext\/set(desktop:)","title":"func set(desktop: Int)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontext\/set(icon:)","title":"func set(icon: IconRef?)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontext\/set(iconname:)","title":"func set(iconName: UnsafePointer<CChar>?)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontext\/set(property:value:)","title":"func set(property: AppLaunchContextPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontext\/set(timestamp:)","title":"func set(timestamp: guint32)","type":"method"}],"path":"\/documentation\/gdk\/applaunchcontext\/applaunchcontextprotocol-implementations","title":"AppLaunchContextProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/applaunchcontext","title":"AppLaunchContext","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/buttonevent\/init(_:)-3ny1e","title":"init!(UnsafePointer<GdkButtonEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/buttonevent\/init(_:)-5vyb5","title":"init(UnsafeMutablePointer<GdkButtonEvent>)","type":"init"},{"path":"\/documentation\/gdk\/buttonevent\/init(_:)-6cc32","title":"init(UnsafePointer<GdkButtonEvent>)","type":"init"},{"path":"\/documentation\/gdk\/buttonevent\/init(_:)-7yw0b","title":"init!(UnsafeMutablePointer<GdkButtonEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/buttonevent\/init(buttonevent:)","title":"init<T>(buttonEvent: T)","type":"init"},{"path":"\/documentation\/gdk\/buttonevent\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/buttonevent\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/buttonevent\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/buttonevent\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/buttonevent\/init(raw:)-5md50","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/buttonevent\/init(raw:)-9h7pb","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/buttonevent\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkButtonEvent>)","type":"init"},{"path":"\/documentation\/gdk\/buttonevent\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/buttonevent\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/buttonevent\/init(retainingraw:)-1s6l6","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/buttonevent\/init(retainingraw:)-4eqr1","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/buttonevent\/button","title":"var button: Int","type":"property"},{"path":"\/documentation\/gdk\/buttonevent\/button_event_ptr","title":"var button_event_ptr: UnsafeMutablePointer<GdkButtonEvent>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/buttonevent\/getbutton()","title":"func getButton() -> Int","type":"method"}],"path":"\/documentation\/gdk\/buttonevent\/buttoneventprotocol-implementations","title":"ButtonEventProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/buttonevent","title":"ButtonEvent","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/cairocontext\/init(_:)-2bfh7","title":"init!(UnsafePointer<GdkCairoContext>?)","type":"init"},{"path":"\/documentation\/gdk\/cairocontext\/init(_:)-4y5r4","title":"init(UnsafeMutablePointer<GdkCairoContext>)","type":"init"},{"path":"\/documentation\/gdk\/cairocontext\/init(_:)-5smbo","title":"init!(UnsafeMutablePointer<GdkCairoContext>?)","type":"init"},{"path":"\/documentation\/gdk\/cairocontext\/init(_:)-imma","title":"init(UnsafePointer<GdkCairoContext>)","type":"init"},{"path":"\/documentation\/gdk\/cairocontext\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/cairocontext\/init(cairocontext:)","title":"init<T>(cairoContext: T)","type":"init"},{"path":"\/documentation\/gdk\/cairocontext\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/cairocontext\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/cairocontext\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/cairocontext\/init(raw:)-4vycq","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/cairocontext\/init(raw:)-80ya1","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/cairocontext\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkCairoContext>)","type":"init"},{"path":"\/documentation\/gdk\/cairocontext\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/cairocontext\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/cairocontext\/init(retainingraw:)-7wnmd","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/cairocontext\/init(retainingraw:)-9zb3l","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cairocontext\/cairo_context_ptr","title":"var cairo_context_ptr: UnsafeMutablePointer<GdkCairoContext>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/cairocontext\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: CairoContextPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/cairocontext\/cairocreate()","title":"func cairoCreate() -> ContextRef!","type":"method"},{"path":"\/documentation\/gdk\/cairocontext\/get(property:)","title":"func get(property: CairoContextPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/cairocontext\/set(property:value:)","title":"func set(property: CairoContextPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/gdk\/cairocontext\/cairocontextprotocol-implementations","title":"CairoContextProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/cairocontext","title":"CairoContext","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/clipboard\/init(_:)-2hpuf","title":"init!(UnsafeMutablePointer<GdkClipboard>?)","type":"init"},{"path":"\/documentation\/gdk\/clipboard\/init(_:)-3jepw","title":"init!(UnsafePointer<GdkClipboard>?)","type":"init"},{"path":"\/documentation\/gdk\/clipboard\/init(_:)-468qu","title":"init(UnsafePointer<GdkClipboard>)","type":"init"},{"path":"\/documentation\/gdk\/clipboard\/init(_:)-50ats","title":"init(UnsafeMutablePointer<GdkClipboard>)","type":"init"},{"path":"\/documentation\/gdk\/clipboard\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/clipboard\/init(clipboard:)","title":"init<T>(clipboard: T)","type":"init"},{"path":"\/documentation\/gdk\/clipboard\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/clipboard\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/clipboard\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/clipboard\/init(raw:)-533hr","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/clipboard\/init(raw:)-5eao4","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/clipboard\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkClipboard>)","type":"init"},{"path":"\/documentation\/gdk\/clipboard\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/clipboard\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/clipboard\/init(retainingraw:)-8u9y0","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/clipboard\/init(retainingraw:)-9rdgb","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/clipboard\/clipboard_ptr","title":"var clipboard_ptr: UnsafeMutablePointer<GdkClipboard>!","type":"property"},{"path":"\/documentation\/gdk\/clipboard\/content","title":"var content: ContentProviderRef!","type":"property"},{"path":"\/documentation\/gdk\/clipboard\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/clipboard\/formats","title":"var formats: ContentFormatsRef!","type":"property"},{"path":"\/documentation\/gdk\/clipboard\/islocal","title":"var isLocal: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/clipboard\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: ClipboardPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboard\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ClipboardSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboard\/connect(signal:flags:handler:)","title":"func connect(signal: ClipboardSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboard\/get(property:)","title":"func get(property: ClipboardPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/clipboard\/getcontent()","title":"func getContent() -> ContentProviderRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboard\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboard\/getformats()","title":"func getFormats() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboard\/onchanged(flags:handler:)","title":"func onChanged(flags: ConnectFlags, handler: (ClipboardRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboard\/onnotifycontent(flags:handler:)","title":"func onNotifyContent(flags: ConnectFlags, handler: (ClipboardRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboard\/onnotifydisplay(flags:handler:)","title":"func onNotifyDisplay(flags: ConnectFlags, handler: (ClipboardRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboard\/onnotifyformats(flags:handler:)","title":"func onNotifyFormats(flags: ConnectFlags, handler: (ClipboardRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboard\/onnotifylocal(flags:handler:)","title":"func onNotifyLocal(flags: ConnectFlags, handler: (ClipboardRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboard\/readasync(mimetypes:iopriority:cancellable:callback:userdata:)","title":"func readAsync(mimeTypes: UnsafeMutablePointer<UnsafePointer<CChar>?>!, ioPriority: Int, cancellable: CancellableRef?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/clipboard\/readfinish(result:outmimetype:)","title":"func readFinish<GioAsyncResultT>(result: GioAsyncResultT, outMimeType: UnsafeMutablePointer<UnsafePointer<CChar>?>!) throws -> InputStreamRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboard\/readtextasync(cancellable:callback:userdata:)","title":"func readTextAsync(cancellable: CancellableRef?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/clipboard\/readtextfinish(result:)","title":"func readTextFinish<GioAsyncResultT>(result: GioAsyncResultT) throws -> String!","type":"method"},{"path":"\/documentation\/gdk\/clipboard\/readtextureasync(cancellable:callback:userdata:)","title":"func readTextureAsync(cancellable: CancellableRef?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/clipboard\/readtexturefinish(result:)","title":"func readTextureFinish<GioAsyncResultT>(result: GioAsyncResultT) throws -> TextureRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboard\/readvalueasync(type:iopriority:cancellable:callback:userdata:)","title":"func readValueAsync(type: GType, ioPriority: Int, cancellable: CancellableRef?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/clipboard\/readvaluefinish(result:)","title":"func readValueFinish<GioAsyncResultT>(result: GioAsyncResultT) throws -> ValueRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboard\/set(property:value:)","title":"func set(property: ClipboardPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/clipboard\/set(text:)","title":"func set(text: UnsafePointer<CChar>!)","type":"method"},{"path":"\/documentation\/gdk\/clipboard\/set(texture:)","title":"func set<TextureT>(texture: TextureT)","type":"method"},{"path":"\/documentation\/gdk\/clipboard\/set(value:)","title":"func set<GObjectValueT>(value: GObjectValueT)","type":"method"},{"path":"\/documentation\/gdk\/clipboard\/setcontent(provider:)","title":"func setContent(provider: ContentProviderRef?) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/clipboard\/setvalist(type:args:)","title":"func setValist(type: GType, args: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/clipboard\/storeasync(iopriority:cancellable:callback:userdata:)","title":"func storeAsync(ioPriority: Int, cancellable: CancellableRef?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/clipboard\/storefinish(result:)","title":"func storeFinish<GioAsyncResultT>(result: GioAsyncResultT) throws -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/clipboard\/changedsignal","title":"static var changedSignal: ClipboardSignalName","type":"property"},{"path":"\/documentation\/gdk\/clipboard\/notifycontentsignal","title":"static var notifyContentSignal: ClipboardSignalName","type":"property"},{"path":"\/documentation\/gdk\/clipboard\/notifydisplaysignal","title":"static var notifyDisplaySignal: ClipboardSignalName","type":"property"},{"path":"\/documentation\/gdk\/clipboard\/notifyformatssignal","title":"static var notifyFormatsSignal: ClipboardSignalName","type":"property"},{"path":"\/documentation\/gdk\/clipboard\/notifylocalsignal","title":"static var notifyLocalSignal: ClipboardSignalName","type":"property"}],"path":"\/documentation\/gdk\/clipboard\/clipboardprotocol-implementations","title":"ClipboardProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/clipboard","title":"Clipboard","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentdeserializer\/init(_:)-14y5p","title":"init(UnsafeMutablePointer<GdkContentDeserializer>)","type":"init"},{"path":"\/documentation\/gdk\/contentdeserializer\/init(_:)-1dlum","title":"init!(UnsafePointer<GdkContentDeserializer>?)","type":"init"},{"path":"\/documentation\/gdk\/contentdeserializer\/init(_:)-20e7t","title":"init!(UnsafeMutablePointer<GdkContentDeserializer>?)","type":"init"},{"path":"\/documentation\/gdk\/contentdeserializer\/init(_:)-8pmzm","title":"init(UnsafePointer<GdkContentDeserializer>)","type":"init"},{"path":"\/documentation\/gdk\/contentdeserializer\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/contentdeserializer\/init(contentdeserializer:)","title":"init<T>(contentDeserializer: T)","type":"init"},{"path":"\/documentation\/gdk\/contentdeserializer\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/contentdeserializer\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/contentdeserializer\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/contentdeserializer\/init(raw:)-2b861","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/contentdeserializer\/init(raw:)-9o9l5","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/contentdeserializer\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkContentDeserializer>)","type":"init"},{"path":"\/documentation\/gdk\/contentdeserializer\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/contentdeserializer\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/contentdeserializer\/init(retainingraw:)-3vdat","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/contentdeserializer\/init(retainingraw:)-6fpus","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentdeserializer\/async_result_ptr","title":"var async_result_ptr: UnsafeMutablePointer<GAsyncResult>!","type":"property"},{"path":"\/documentation\/gdk\/contentdeserializer\/sourceobject","title":"var sourceObject: ObjectRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentdeserializer\/appinfogetdefaultfortypefinish()","title":"func appInfoGetDefaultForTypeFinish() throws -> AppInfoRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializer\/appinfogetdefaultforurischemefinish()","title":"func appInfoGetDefaultForURISchemeFinish() throws -> AppInfoRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializer\/appinfolaunchdefaultforurifinish()","title":"func appInfoLaunchDefaultForURIFinish() throws -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializer\/busgetfinish()","title":"func busGetFinish() throws -> DBusConnectionRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializer\/dbusaddressgetstreamfinish(outguid:)","title":"func dbusAddressGetStreamFinish(outGuid: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?) throws -> IOStreamRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializer\/filenewtmpdirfinish()","title":"func fileNewTmpDirFinish() throws -> FileRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializer\/filenewtmpfinish(iostream:)","title":"func fileNewTmpFinish(iostream: UnsafeMutablePointer<UnsafeMutablePointer<GFileIOStream>?>!) throws -> FileRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializer\/getsourceobject()","title":"func getSourceObject() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializer\/istagged(sourcetag:)","title":"func isTagged(sourceTag: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializer\/legacypropagateerror()","title":"func legacyPropagateError() throws -> Bool","type":"method"}],"path":"\/documentation\/gdk\/contentdeserializer\/asyncresultprotocol-implementations","title":"AsyncResultProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentdeserializer\/cancellable","title":"var cancellable: CancellableRef!","type":"property"},{"path":"\/documentation\/gdk\/contentdeserializer\/content_deserializer_ptr","title":"var content_deserializer_ptr: UnsafeMutablePointer<GdkContentDeserializer>!","type":"property"},{"path":"\/documentation\/gdk\/contentdeserializer\/gtype","title":"var gtype: GType","type":"property"},{"path":"\/documentation\/gdk\/contentdeserializer\/inputstream","title":"var inputStream: InputStreamRef!","type":"property"},{"path":"\/documentation\/gdk\/contentdeserializer\/mimetype","title":"var mimeType: String!","type":"property"},{"path":"\/documentation\/gdk\/contentdeserializer\/priority","title":"var priority: Int","type":"property"},{"path":"\/documentation\/gdk\/contentdeserializer\/taskdata","title":"var taskData: gpointer?","type":"property"},{"path":"\/documentation\/gdk\/contentdeserializer\/userdata","title":"var userData: gpointer?","type":"property"},{"path":"\/documentation\/gdk\/contentdeserializer\/value","title":"var value: ValueRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentdeserializer\/getcancellable()","title":"func getCancellable() -> CancellableRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializer\/getgtype()","title":"func getGtype() -> GType","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializer\/getinputstream()","title":"func getInputStream() -> InputStreamRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializer\/getmimetype()","title":"func getMimeType() -> String!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializer\/getpriority()","title":"func getPriority() -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializer\/gettaskdata()","title":"func getTaskData() -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializer\/getuserdata()","title":"func getUserData() -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializer\/getvalue()","title":"func getValue() -> ValueRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializer\/returnsuccess()","title":"func returnSuccess()","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializer\/return_(error:)","title":"func return_<GLibGLibErrorT>(error: GLibGLibErrorT)","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializer\/settask(data:notify:)","title":"func setTask(data: gpointer?, notify: GDestroyNotify?)","type":"method"}],"path":"\/documentation\/gdk\/contentdeserializer\/contentdeserializerprotocol-implementations","title":"ContentDeserializerProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/contentdeserializer","title":"ContentDeserializer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentformats\/init(_:)-3mi01","title":"init(UnsafePointer<GdkContentFormats>)","type":"init"},{"path":"\/documentation\/gdk\/contentformats\/init(_:)-4p84","title":"init!(UnsafeMutablePointer<GdkContentFormats>?)","type":"init"},{"path":"\/documentation\/gdk\/contentformats\/init(_:)-5vpzr","title":"init(UnsafeMutablePointer<GdkContentFormats>)","type":"init"},{"path":"\/documentation\/gdk\/contentformats\/init(_:)-83hyc","title":"init!(UnsafePointer<GdkContentFormats>?)","type":"init"},{"path":"\/documentation\/gdk\/contentformats\/init(_:)-8qji6","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/contentformats\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/contentformats\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/contentformats\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/contentformats\/init(gtype:)","title":"init(gtype: GType)","type":"init"},{"path":"\/documentation\/gdk\/contentformats\/init(mimetypes:nmimetypes:)","title":"init(mimeTypes: UnsafeMutablePointer<UnsafePointer<CChar>?>!, nMimeTypes: Int)","type":"init"},{"path":"\/documentation\/gdk\/contentformats\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/contentformats\/init(raw:)-5uttl","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/contentformats\/init(raw:)-ronw","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/contentformats\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkContentFormats>)","type":"init"},{"path":"\/documentation\/gdk\/contentformats\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/contentformats\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/contentformats\/init(retainingraw:)-39rll","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/contentformats\/init(retainingraw:)-9ei9v","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentformats\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentformats\/newforg(gtype:)","title":"static func newForG(gtype: GType) -> ContentFormats!","type":"method"},{"path":"\/documentation\/gdk\/contentformats\/parse(string:)","title":"static func parse(string: UnsafePointer<CChar>!) -> ContentFormats!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentformats\/content_formats_ptr","title":"var content_formats_ptr: UnsafeMutablePointer<GdkContentFormats>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentformats\/contain(mimetype:)","title":"func contain(mimeType: UnsafePointer<CChar>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentformats\/containgtype(type:)","title":"func containGtype(type: GType) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentformats\/getgtypes(ngtypes:)","title":"func getGtypes(nGtypes: UnsafeMutablePointer<gsize>!) -> UnsafePointer<GType>!","type":"method"},{"path":"\/documentation\/gdk\/contentformats\/getmimetypes(nmimetypes:)","title":"func getMimeTypes(nMimeTypes: UnsafeMutablePointer<gsize>!) -> UnsafePointer<UnsafePointer<CChar>?>!","type":"method"},{"path":"\/documentation\/gdk\/contentformats\/match(second:)","title":"func match<ContentFormatsT>(second: ContentFormatsT) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentformats\/matchgtype(second:)","title":"func matchGtype<ContentFormatsT>(second: ContentFormatsT) -> GType","type":"method"},{"path":"\/documentation\/gdk\/contentformats\/matchmimetype(second:)","title":"func matchMimeType<ContentFormatsT>(second: ContentFormatsT) -> String!","type":"method"},{"path":"\/documentation\/gdk\/contentformats\/print(string:)","title":"func print<GLibStringTypeT>(string: GLibStringTypeT)","type":"method"},{"path":"\/documentation\/gdk\/contentformats\/ref()","title":"func ref() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/contentformats\/tostring()","title":"func toString() -> String!","type":"method"},{"path":"\/documentation\/gdk\/contentformats\/union(second:)","title":"func union<ContentFormatsT>(second: ContentFormatsT) -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/contentformats\/uniondeserializegtypes()","title":"func unionDeserializeGtypes() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/contentformats\/uniondeserializemimetypes()","title":"func unionDeserializeMimeTypes() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/contentformats\/unionserializegtypes()","title":"func unionSerializeGtypes() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/contentformats\/unionserializemimetypes()","title":"func unionSerializeMimeTypes() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/contentformats\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/gdk\/contentformats\/contentformatsprotocol-implementations","title":"ContentFormatsProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/contentformats","title":"ContentFormats","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentformatsbuilder\/init()","title":"init()","type":"init"},{"path":"\/documentation\/gdk\/contentformatsbuilder\/init(_:)-1ymjh","title":"init(UnsafePointer<GdkContentFormatsBuilder>)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsbuilder\/init(_:)-65b6p","title":"init(UnsafeMutablePointer<GdkContentFormatsBuilder>)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsbuilder\/init(_:)-79tlv","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsbuilder\/init(_:)-7ren","title":"init!(UnsafePointer<GdkContentFormatsBuilder>?)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsbuilder\/init(_:)-9w20g","title":"init!(UnsafeMutablePointer<GdkContentFormatsBuilder>?)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsbuilder\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsbuilder\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsbuilder\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsbuilder\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsbuilder\/init(raw:)-4esdm","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsbuilder\/init(raw:)-89n1r","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsbuilder\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkContentFormatsBuilder>)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsbuilder\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsbuilder\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsbuilder\/init(retainingraw:)-2g6fv","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsbuilder\/init(retainingraw:)-6b15q","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentformatsbuilder\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentformatsbuilder\/content_formats_builder_ptr","title":"var content_formats_builder_ptr: UnsafeMutablePointer<GdkContentFormatsBuilder>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentformatsbuilder\/add(formats:)","title":"func add<ContentFormatsT>(formats: ContentFormatsT)","type":"method"},{"path":"\/documentation\/gdk\/contentformatsbuilder\/add(mimetype:)","title":"func add(mimeType: UnsafePointer<CChar>!)","type":"method"},{"path":"\/documentation\/gdk\/contentformatsbuilder\/addgtype(type:)","title":"func addGtype(type: GType)","type":"method"},{"path":"\/documentation\/gdk\/contentformatsbuilder\/freetoformats()","title":"func freeToFormats() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/contentformatsbuilder\/ref()","title":"func ref() -> ContentFormatsBuilderRef!","type":"method"},{"path":"\/documentation\/gdk\/contentformatsbuilder\/toformats()","title":"func toFormats() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/contentformatsbuilder\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/gdk\/contentformatsbuilder\/contentformatsbuilderprotocol-implementations","title":"ContentFormatsBuilderProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/contentformatsbuilder","title":"ContentFormatsBuilder","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentprovider\/init(_:)-29no5","title":"init(UnsafePointer<GdkContentProvider>)","type":"init"},{"path":"\/documentation\/gdk\/contentprovider\/init(_:)-7yp7d","title":"init!(UnsafePointer<GdkContentProvider>?)","type":"init"},{"path":"\/documentation\/gdk\/contentprovider\/init(_:)-8vbh0","title":"init(UnsafeMutablePointer<GdkContentProvider>)","type":"init"},{"path":"\/documentation\/gdk\/contentprovider\/init(_:)-94kxi","title":"init!(UnsafeMutablePointer<GdkContentProvider>?)","type":"init"},{"path":"\/documentation\/gdk\/contentprovider\/init(bytes:bytes:)","title":"init<GLibBytesT>(bytes: UnsafePointer<CChar>!, bytes: GLibBytesT)","type":"init"},{"path":"\/documentation\/gdk\/contentprovider\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/contentprovider\/init(contentprovider:)","title":"init<T>(contentProvider: T)","type":"init"},{"path":"\/documentation\/gdk\/contentprovider\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/contentprovider\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/contentprovider\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/contentprovider\/init(raw:)-4hm9j","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/contentprovider\/init(raw:)-74654","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/contentprovider\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkContentProvider>)","type":"init"},{"path":"\/documentation\/gdk\/contentprovider\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/contentprovider\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/contentprovider\/init(retainingraw:)-4uam","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/contentprovider\/init(retainingraw:)-6zfso","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/contentprovider\/init(value:)","title":"init<GObjectValueT>(value: GObjectValueT)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentprovider\/metatypereferenceforcontentprovider","title":"var metatypeReferenceForContentProvider: GType","type":"property"},{"path":"\/documentation\/gdk\/contentprovider\/wrapperforcontentprovider","title":"var wrapperForContentProvider: ContentProviderClassRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentprovider\/metatypeforcontentprovider","title":"static var metatypeForContentProvider: GdkContentProviderClass?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentprovider\/newfor(bytes:bytes:)","title":"static func newFor<GLibBytesT>(bytes: UnsafePointer<CChar>!, bytes: GLibBytesT) -> ContentProvider!","type":"method"},{"path":"\/documentation\/gdk\/contentprovider\/newfor(value:)","title":"static func newFor<GObjectValueT>(value: GObjectValueT) -> ContentProvider!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentprovider\/content_provider_ptr","title":"var content_provider_ptr: UnsafeMutablePointer<GdkContentProvider>!","type":"property"},{"path":"\/documentation\/gdk\/contentprovider\/parent","title":"var parent: GObject","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentprovider\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: ContentProviderPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/contentprovider\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ContentProviderSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentprovider\/connect(signal:flags:handler:)","title":"func connect(signal: ContentProviderSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentprovider\/contentchanged()","title":"func contentChanged()","type":"method"},{"path":"\/documentation\/gdk\/contentprovider\/get(property:)","title":"func get(property: ContentProviderPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/contentprovider\/get(value:)","title":"func get<GObjectValueT>(value: GObjectValueT) throws -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentprovider\/oncontentchanged(flags:handler:)","title":"func onContentChanged(flags: ConnectFlags, handler: (ContentProviderRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentprovider\/onnotifyformats(flags:handler:)","title":"func onNotifyFormats(flags: ConnectFlags, handler: (ContentProviderRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentprovider\/onnotifystorableformats(flags:handler:)","title":"func onNotifyStorableFormats(flags: ConnectFlags, handler: (ContentProviderRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentprovider\/refformats()","title":"func refFormats() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/contentprovider\/refstorableformats()","title":"func refStorableFormats() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/contentprovider\/set(property:value:)","title":"func set(property: ContentProviderPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/contentprovider\/writemimetypeasync(mimetype:stream:iopriority:cancellable:callback:userdata:)-8wsxi","title":"func writeMimeTypeAsync<GioCancellableT, GioOutputStreamT>(mimeType: UnsafePointer<CChar>!, stream: GioOutputStreamT, ioPriority: Int, cancellable: GioCancellableT?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/contentprovider\/writemimetypeasync(mimetype:stream:iopriority:cancellable:callback:userdata:)-paqs","title":"func writeMimeTypeAsync<GioOutputStreamT>(mimeType: UnsafePointer<CChar>!, stream: GioOutputStreamT, ioPriority: Int, cancellable: CancellableRef?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/contentprovider\/writemimetypefinish(result:)","title":"func writeMimeTypeFinish<GioAsyncResultT>(result: GioAsyncResultT) throws -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentprovider\/contentchangedsignal","title":"static var contentChangedSignal: ContentProviderSignalName","type":"property"},{"path":"\/documentation\/gdk\/contentprovider\/notifyformatssignal","title":"static var notifyFormatsSignal: ContentProviderSignalName","type":"property"},{"path":"\/documentation\/gdk\/contentprovider\/notifystorableformatssignal","title":"static var notifyStorableFormatsSignal: ContentProviderSignalName","type":"property"}],"path":"\/documentation\/gdk\/contentprovider\/contentproviderprotocol-implementations","title":"ContentProviderProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/contentprovider","title":"ContentProvider","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentserializer\/init(_:)-81hkd","title":"init!(UnsafeMutablePointer<GdkContentSerializer>?)","type":"init"},{"path":"\/documentation\/gdk\/contentserializer\/init(_:)-85js5","title":"init(UnsafePointer<GdkContentSerializer>)","type":"init"},{"path":"\/documentation\/gdk\/contentserializer\/init(_:)-8b8w7","title":"init(UnsafeMutablePointer<GdkContentSerializer>)","type":"init"},{"path":"\/documentation\/gdk\/contentserializer\/init(_:)-9jvx","title":"init!(UnsafePointer<GdkContentSerializer>?)","type":"init"},{"path":"\/documentation\/gdk\/contentserializer\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/contentserializer\/init(contentserializer:)","title":"init<T>(contentSerializer: T)","type":"init"},{"path":"\/documentation\/gdk\/contentserializer\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/contentserializer\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/contentserializer\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/contentserializer\/init(raw:)-2d5h","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/contentserializer\/init(raw:)-dkei","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/contentserializer\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkContentSerializer>)","type":"init"},{"path":"\/documentation\/gdk\/contentserializer\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/contentserializer\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/contentserializer\/init(retainingraw:)-8kh53","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/contentserializer\/init(retainingraw:)-9hkne","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentserializer\/async_result_ptr","title":"var async_result_ptr: UnsafeMutablePointer<GAsyncResult>!","type":"property"},{"path":"\/documentation\/gdk\/contentserializer\/sourceobject","title":"var sourceObject: ObjectRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentserializer\/appinfogetdefaultfortypefinish()","title":"func appInfoGetDefaultForTypeFinish() throws -> AppInfoRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializer\/appinfogetdefaultforurischemefinish()","title":"func appInfoGetDefaultForURISchemeFinish() throws -> AppInfoRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializer\/appinfolaunchdefaultforurifinish()","title":"func appInfoLaunchDefaultForURIFinish() throws -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentserializer\/busgetfinish()","title":"func busGetFinish() throws -> DBusConnectionRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializer\/dbusaddressgetstreamfinish(outguid:)","title":"func dbusAddressGetStreamFinish(outGuid: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?) throws -> IOStreamRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializer\/filenewtmpdirfinish()","title":"func fileNewTmpDirFinish() throws -> FileRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializer\/filenewtmpfinish(iostream:)","title":"func fileNewTmpFinish(iostream: UnsafeMutablePointer<UnsafeMutablePointer<GFileIOStream>?>!) throws -> FileRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializer\/getsourceobject()","title":"func getSourceObject() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializer\/istagged(sourcetag:)","title":"func isTagged(sourceTag: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentserializer\/legacypropagateerror()","title":"func legacyPropagateError() throws -> Bool","type":"method"}],"path":"\/documentation\/gdk\/contentserializer\/asyncresultprotocol-implementations","title":"AsyncResultProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentserializer\/cancellable","title":"var cancellable: CancellableRef!","type":"property"},{"path":"\/documentation\/gdk\/contentserializer\/content_serializer_ptr","title":"var content_serializer_ptr: UnsafeMutablePointer<GdkContentSerializer>!","type":"property"},{"path":"\/documentation\/gdk\/contentserializer\/gtype","title":"var gtype: GType","type":"property"},{"path":"\/documentation\/gdk\/contentserializer\/mimetype","title":"var mimeType: String!","type":"property"},{"path":"\/documentation\/gdk\/contentserializer\/outputstream","title":"var outputStream: OutputStreamRef!","type":"property"},{"path":"\/documentation\/gdk\/contentserializer\/priority","title":"var priority: Int","type":"property"},{"path":"\/documentation\/gdk\/contentserializer\/taskdata","title":"var taskData: gpointer?","type":"property"},{"path":"\/documentation\/gdk\/contentserializer\/userdata","title":"var userData: gpointer?","type":"property"},{"path":"\/documentation\/gdk\/contentserializer\/value","title":"var value: ValueRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentserializer\/getcancellable()","title":"func getCancellable() -> CancellableRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializer\/getgtype()","title":"func getGtype() -> GType","type":"method"},{"path":"\/documentation\/gdk\/contentserializer\/getmimetype()","title":"func getMimeType() -> String!","type":"method"},{"path":"\/documentation\/gdk\/contentserializer\/getoutputstream()","title":"func getOutputStream() -> OutputStreamRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializer\/getpriority()","title":"func getPriority() -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentserializer\/gettaskdata()","title":"func getTaskData() -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/contentserializer\/getuserdata()","title":"func getUserData() -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/contentserializer\/getvalue()","title":"func getValue() -> ValueRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializer\/returnsuccess()","title":"func returnSuccess()","type":"method"},{"path":"\/documentation\/gdk\/contentserializer\/return_(error:)","title":"func return_<GLibGLibErrorT>(error: GLibGLibErrorT)","type":"method"},{"path":"\/documentation\/gdk\/contentserializer\/settask(data:notify:)","title":"func setTask(data: gpointer?, notify: GDestroyNotify?)","type":"method"}],"path":"\/documentation\/gdk\/contentserializer\/contentserializerprotocol-implementations","title":"ContentSerializerProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/contentserializer","title":"ContentSerializer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/crossingevent\/init(_:)-19ods","title":"init(UnsafeMutablePointer<GdkCrossingEvent>)","type":"init"},{"path":"\/documentation\/gdk\/crossingevent\/init(_:)-2vp0d","title":"init(UnsafePointer<GdkCrossingEvent>)","type":"init"},{"path":"\/documentation\/gdk\/crossingevent\/init(_:)-5pvkb","title":"init!(UnsafeMutablePointer<GdkCrossingEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/crossingevent\/init(_:)-wzt4","title":"init!(UnsafePointer<GdkCrossingEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/crossingevent\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/crossingevent\/init(crossingevent:)","title":"init<T>(crossingEvent: T)","type":"init"},{"path":"\/documentation\/gdk\/crossingevent\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/crossingevent\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/crossingevent\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/crossingevent\/init(raw:)-4eae1","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/crossingevent\/init(raw:)-8952c","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/crossingevent\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkCrossingEvent>)","type":"init"},{"path":"\/documentation\/gdk\/crossingevent\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/crossingevent\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/crossingevent\/init(retainingraw:)-2xob0","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/crossingevent\/init(retainingraw:)-5k8cb","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/crossingevent\/crossing_event_ptr","title":"var crossing_event_ptr: UnsafeMutablePointer<GdkCrossingEvent>!","type":"property"},{"path":"\/documentation\/gdk\/crossingevent\/detail","title":"var detail: GdkNotifyType","type":"property"},{"path":"\/documentation\/gdk\/crossingevent\/focus","title":"var focus: Bool","type":"property"},{"path":"\/documentation\/gdk\/crossingevent\/mode","title":"var mode: GdkCrossingMode","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/crossingevent\/getdetail()","title":"func getDetail() -> GdkNotifyType","type":"method"},{"path":"\/documentation\/gdk\/crossingevent\/getfocus()","title":"func getFocus() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/crossingevent\/getmode()","title":"func getMode() -> GdkCrossingMode","type":"method"}],"path":"\/documentation\/gdk\/crossingevent\/crossingeventprotocol-implementations","title":"CrossingEventProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/crossingevent","title":"CrossingEvent","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/cursor\/init(_:)-134ze","title":"init!(UnsafeMutablePointer<GdkCursor>?)","type":"init"},{"path":"\/documentation\/gdk\/cursor\/init(_:)-4t95e","title":"init(UnsafePointer<GdkCursor>)","type":"init"},{"path":"\/documentation\/gdk\/cursor\/init(_:)-6wbuc","title":"init!(UnsafePointer<GdkCursor>?)","type":"init"},{"path":"\/documentation\/gdk\/cursor\/init(_:)-ggnw","title":"init(UnsafeMutablePointer<GdkCursor>)","type":"init"},{"path":"\/documentation\/gdk\/cursor\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/cursor\/init(cursor:)","title":"init<T>(cursor: T)","type":"init"},{"path":"\/documentation\/gdk\/cursor\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/cursor\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/cursor\/init(name:fallback:)","title":"init<CursorT>(name: UnsafePointer<CChar>!, fallback: CursorT?)","type":"init"},{"path":"\/documentation\/gdk\/cursor\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/cursor\/init(raw:)-3l9nn","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/cursor\/init(raw:)-8oezg","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/cursor\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkCursor>)","type":"init"},{"path":"\/documentation\/gdk\/cursor\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/cursor\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/cursor\/init(retainingraw:)-69cs","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/cursor\/init(retainingraw:)-6azvq","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/cursor\/init(texture:hotspotx:hotspoty:fallback:)","title":"init<CursorT, TextureT>(texture: TextureT, hotspotX: Int, hotspotY: Int, fallback: CursorT?)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/cursor\/newfrom(name:fallback:)","title":"static func newFrom<CursorT>(name: UnsafePointer<CChar>!, fallback: CursorT?) -> Cursor!","type":"method"},{"path":"\/documentation\/gdk\/cursor\/newfrom(texture:hotspotx:hotspoty:fallback:)","title":"static func newFrom<CursorT, TextureT>(texture: TextureT, hotspotX: Int, hotspotY: Int, fallback: CursorT?) -> Cursor!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cursor\/cursor_ptr","title":"var cursor_ptr: UnsafeMutablePointer<GdkCursor>!","type":"property"},{"path":"\/documentation\/gdk\/cursor\/fallback","title":"var fallback: CursorRef!","type":"property"},{"path":"\/documentation\/gdk\/cursor\/hotspotx","title":"var hotspotX: Int","type":"property"},{"path":"\/documentation\/gdk\/cursor\/hotspoty","title":"var hotspotY: Int","type":"property"},{"path":"\/documentation\/gdk\/cursor\/name","title":"var name: String!","type":"property"},{"path":"\/documentation\/gdk\/cursor\/texture","title":"var texture: TextureRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/cursor\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: CursorPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/cursor\/get(property:)","title":"func get(property: CursorPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/cursor\/getfallback()","title":"func getFallback() -> CursorRef!","type":"method"},{"path":"\/documentation\/gdk\/cursor\/gethotspotx()","title":"func getHotspotX() -> Int","type":"method"},{"path":"\/documentation\/gdk\/cursor\/gethotspoty()","title":"func getHotspotY() -> Int","type":"method"},{"path":"\/documentation\/gdk\/cursor\/getname()","title":"func getName() -> String!","type":"method"},{"path":"\/documentation\/gdk\/cursor\/gettexture()","title":"func getTexture() -> TextureRef!","type":"method"},{"path":"\/documentation\/gdk\/cursor\/set(property:value:)","title":"func set(property: CursorPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/gdk\/cursor\/cursorprotocol-implementations","title":"CursorProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/cursor","title":"Cursor","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/dndevent\/init(_:)-1fydo","title":"init!(UnsafePointer<GdkDNDEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/dndevent\/init(_:)-1s9h4","title":"init(UnsafePointer<GdkDNDEvent>)","type":"init"},{"path":"\/documentation\/gdk\/dndevent\/init(_:)-4dv4k","title":"init(UnsafeMutablePointer<GdkDNDEvent>)","type":"init"},{"path":"\/documentation\/gdk\/dndevent\/init(_:)-8myoo","title":"init!(UnsafeMutablePointer<GdkDNDEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/dndevent\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/dndevent\/init(dndevent:)","title":"init<T>(dNDEvent: T)","type":"init"},{"path":"\/documentation\/gdk\/dndevent\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/dndevent\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/dndevent\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/dndevent\/init(raw:)-47jru","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/dndevent\/init(raw:)-66gof","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/dndevent\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkDNDEvent>)","type":"init"},{"path":"\/documentation\/gdk\/dndevent\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/dndevent\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/dndevent\/init(retainingraw:)-4ozpr","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/dndevent\/init(retainingraw:)-7tzn0","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dndevent\/dnd_event_ptr","title":"var dnd_event_ptr: UnsafeMutablePointer<GdkDNDEvent>!","type":"property"},{"path":"\/documentation\/gdk\/dndevent\/drop","title":"var drop: DropRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/dndevent\/getdrop()","title":"func getDrop() -> DropRef!","type":"method"}],"path":"\/documentation\/gdk\/dndevent\/dndeventprotocol-implementations","title":"DNDEventProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/dndevent","title":"DNDEvent","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/deleteevent\/init(_:)-2rnkb","title":"init(UnsafeMutablePointer<GdkDeleteEvent>)","type":"init"},{"path":"\/documentation\/gdk\/deleteevent\/init(_:)-4ikhg","title":"init!(UnsafePointer<GdkDeleteEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/deleteevent\/init(_:)-5hgz2","title":"init!(UnsafeMutablePointer<GdkDeleteEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/deleteevent\/init(_:)-65df","title":"init(UnsafePointer<GdkDeleteEvent>)","type":"init"},{"path":"\/documentation\/gdk\/deleteevent\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/deleteevent\/init(deleteevent:)","title":"init<T>(deleteEvent: T)","type":"init"},{"path":"\/documentation\/gdk\/deleteevent\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/deleteevent\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/deleteevent\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/deleteevent\/init(raw:)-2lea0","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/deleteevent\/init(raw:)-55qnb","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/deleteevent\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkDeleteEvent>)","type":"init"},{"path":"\/documentation\/gdk\/deleteevent\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/deleteevent\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/deleteevent\/init(retainingraw:)-1z3k8","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/deleteevent\/init(retainingraw:)-5436z","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/deleteevent\/delete_event_ptr","title":"var delete_event_ptr: UnsafeMutablePointer<GdkDeleteEvent>!","type":"property"}],"path":"\/documentation\/gdk\/deleteevent\/deleteeventprotocol-implementations","title":"DeleteEventProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/deleteevent","title":"DeleteEvent","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/device\/init(_:)-1pq8s","title":"init(UnsafePointer<GdkDevice>)","type":"init"},{"path":"\/documentation\/gdk\/device\/init(_:)-2by6p","title":"init(UnsafeMutablePointer<GdkDevice>)","type":"init"},{"path":"\/documentation\/gdk\/device\/init(_:)-3i69v","title":"init!(UnsafeMutablePointer<GdkDevice>?)","type":"init"},{"path":"\/documentation\/gdk\/device\/init(_:)-7kqym","title":"init!(UnsafePointer<GdkDevice>?)","type":"init"},{"path":"\/documentation\/gdk\/device\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/device\/init(device:)","title":"init<T>(device: T)","type":"init"},{"path":"\/documentation\/gdk\/device\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/device\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/device\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/device\/init(raw:)-2u2bd","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/device\/init(raw:)-5gmha","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/device\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkDevice>)","type":"init"},{"path":"\/documentation\/gdk\/device\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/device\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/device\/init(retainingraw:)-6cmef","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/device\/init(retainingraw:)-8wyt2","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/device\/capslockstate","title":"var capsLockState: Bool","type":"property"},{"path":"\/documentation\/gdk\/device\/devicetool","title":"var deviceTool: DeviceToolRef!","type":"property"},{"path":"\/documentation\/gdk\/device\/device_ptr","title":"var device_ptr: UnsafeMutablePointer<GdkDevice>!","type":"property"},{"path":"\/documentation\/gdk\/device\/direction","title":"var direction: PangoDirection","type":"property"},{"path":"\/documentation\/gdk\/device\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/device\/hascursor","title":"var hasCursor: Bool","type":"property"},{"path":"\/documentation\/gdk\/device\/modifierstate","title":"var modifierState: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/device\/name","title":"var name: String!","type":"property"},{"path":"\/documentation\/gdk\/device\/numlockstate","title":"var numLockState: Bool","type":"property"},{"path":"\/documentation\/gdk\/device\/numtouches","title":"var numTouches: Int","type":"property"},{"path":"\/documentation\/gdk\/device\/productid","title":"var productId: String!","type":"property"},{"path":"\/documentation\/gdk\/device\/scrolllockstate","title":"var scrollLockState: Bool","type":"property"},{"path":"\/documentation\/gdk\/device\/seat","title":"var seat: SeatRef!","type":"property"},{"path":"\/documentation\/gdk\/device\/source","title":"var source: GdkInputSource","type":"property"},{"path":"\/documentation\/gdk\/device\/timestamp","title":"var timestamp: guint32","type":"property"},{"path":"\/documentation\/gdk\/device\/vendorid","title":"var vendorId: String!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/device\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: DevicePropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/device\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: DeviceSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/device\/connect(signal:flags:handler:)","title":"func connect(signal: DeviceSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/device\/get(property:)","title":"func get(property: DevicePropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/device\/getcapslockstate()","title":"func getCapsLockState() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/device\/getdevicetool()","title":"func getDeviceTool() -> DeviceToolRef!","type":"method"},{"path":"\/documentation\/gdk\/device\/getdirection()","title":"func getDirection() -> PangoDirection","type":"method"},{"path":"\/documentation\/gdk\/device\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/device\/gethascursor()","title":"func getHasCursor() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/device\/getmodifierstate()","title":"func getModifierState() -> ModifierType","type":"method"},{"path":"\/documentation\/gdk\/device\/getname()","title":"func getName() -> String!","type":"method"},{"path":"\/documentation\/gdk\/device\/getnumlockstate()","title":"func getNumLockState() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/device\/getnumtouches()","title":"func getNumTouches() -> Int","type":"method"},{"path":"\/documentation\/gdk\/device\/getproductid()","title":"func getProductId() -> String!","type":"method"},{"path":"\/documentation\/gdk\/device\/getscrolllockstate()","title":"func getScrollLockState() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/device\/getseat()","title":"func getSeat() -> SeatRef!","type":"method"},{"path":"\/documentation\/gdk\/device\/getsource()","title":"func getSource() -> GdkInputSource","type":"method"},{"path":"\/documentation\/gdk\/device\/getsurfaceatposition(winx:winy:)","title":"func getSurfaceAtPosition(winX: UnsafeMutablePointer<CDouble>!, winY: UnsafeMutablePointer<CDouble>!) -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/device\/gettimestamp()","title":"func getTimestamp() -> guint32","type":"method"},{"path":"\/documentation\/gdk\/device\/getvendorid()","title":"func getVendorId() -> String!","type":"method"},{"path":"\/documentation\/gdk\/device\/hasbidilayouts()","title":"func hasBidiLayouts() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/device\/onchanged(flags:handler:)","title":"func onChanged(flags: ConnectFlags, handler: (DeviceRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/device\/onnotifycapslockstate(flags:handler:)","title":"func onNotifyCapsLockState(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/device\/onnotifydirection(flags:handler:)","title":"func onNotifyDirection(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/device\/onnotifydisplay(flags:handler:)","title":"func onNotifyDisplay(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/device\/onnotifyhasbidilayouts(flags:handler:)","title":"func onNotifyHasBidiLayouts(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/device\/onnotifyhascursor(flags:handler:)","title":"func onNotifyHasCursor(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/device\/onnotifymodifierstate(flags:handler:)","title":"func onNotifyModifierState(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/device\/onnotifynaxes(flags:handler:)","title":"func onNotifyNAxes(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/device\/onnotifyname(flags:handler:)","title":"func onNotifyName(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/device\/onnotifynumlockstate(flags:handler:)","title":"func onNotifyNumLockState(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/device\/onnotifynumtouches(flags:handler:)","title":"func onNotifyNumTouches(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/device\/onnotifyproductid(flags:handler:)","title":"func onNotifyProductId(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/device\/onnotifyscrolllockstate(flags:handler:)","title":"func onNotifyScrollLockState(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/device\/onnotifyseat(flags:handler:)","title":"func onNotifySeat(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/device\/onnotifysource(flags:handler:)","title":"func onNotifySource(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/device\/onnotifytool(flags:handler:)","title":"func onNotifyTool(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/device\/onnotifyvendorid(flags:handler:)","title":"func onNotifyVendorId(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/device\/ontoolchanged(flags:handler:)","title":"func onToolChanged(flags: ConnectFlags, handler: (DeviceRef, DeviceToolRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/device\/set(property:value:)","title":"func set(property: DevicePropertyName, value: Value)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/device\/changedsignal","title":"static var changedSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/device\/notifycapslockstatesignal","title":"static var notifyCapsLockStateSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/device\/notifydirectionsignal","title":"static var notifyDirectionSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/device\/notifydisplaysignal","title":"static var notifyDisplaySignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/device\/notifyhasbidilayoutssignal","title":"static var notifyHasBidiLayoutsSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/device\/notifyhascursorsignal","title":"static var notifyHasCursorSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/device\/notifymodifierstatesignal","title":"static var notifyModifierStateSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/device\/notifynaxessignal","title":"static var notifyNAxesSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/device\/notifynamesignal","title":"static var notifyNameSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/device\/notifynumlockstatesignal","title":"static var notifyNumLockStateSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/device\/notifynumtouchessignal","title":"static var notifyNumTouchesSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/device\/notifyproductidsignal","title":"static var notifyProductIdSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/device\/notifyscrolllockstatesignal","title":"static var notifyScrollLockStateSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/device\/notifyseatsignal","title":"static var notifySeatSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/device\/notifysourcesignal","title":"static var notifySourceSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/device\/notifytoolsignal","title":"static var notifyToolSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/device\/notifyvendoridsignal","title":"static var notifyVendorIdSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/device\/toolchangedsignal","title":"static var toolChangedSignal: DeviceSignalName","type":"property"}],"path":"\/documentation\/gdk\/device\/deviceprotocol-implementations","title":"DeviceProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/device","title":"Device","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepad\/init(_:)-3tzxm","title":"init!(UnsafePointer<GdkDevicePad>?)","type":"init"},{"path":"\/documentation\/gdk\/devicepad\/init(_:)-5z7yj","title":"init(UnsafePointer<GdkDevicePad>)","type":"init"},{"path":"\/documentation\/gdk\/devicepad\/init(_:)-6bcvk","title":"init(UnsafeMutablePointer<GdkDevicePad>)","type":"init"},{"path":"\/documentation\/gdk\/devicepad\/init(_:)-9vaji","title":"init!(UnsafeMutablePointer<GdkDevicePad>?)","type":"init"},{"path":"\/documentation\/gdk\/devicepad\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/devicepad\/init(devicepad:)","title":"init<T>(devicePad: T)","type":"init"},{"path":"\/documentation\/gdk\/devicepad\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/devicepad\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/devicepad\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/devicepad\/init(raw:)-24zr8","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/devicepad\/init(raw:)-2g727","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/devicepad\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkDevicePad>)","type":"init"},{"path":"\/documentation\/gdk\/devicepad\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/devicepad\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/devicepad\/init(retainingraw:)-4b05n","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/devicepad\/init(retainingraw:)-9e5fa","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepad\/metatypereferencefordevicepad","title":"var metatypeReferenceForDevicePad: GType","type":"property"},{"path":"\/documentation\/gdk\/devicepad\/wrapperfordevicepad","title":"var wrapperForDevicePad: DevicePadInterfaceRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepad\/metatypefordevicepad","title":"static var metatypeForDevicePad: GdkDevicePadInterface?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepad\/device_pad_ptr","title":"var device_pad_ptr: UnsafeMutablePointer<GdkDevicePad>!","type":"property"},{"path":"\/documentation\/gdk\/devicepad\/ngroups","title":"var nGroups: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepad\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: DevicePadPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/devicepad\/get(property:)","title":"func get(property: DevicePadPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/devicepad\/getfeaturegroup(feature:featureidx:)","title":"func getFeatureGroup(feature: GdkDevicePadFeature, featureIdx: Int) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepad\/getgroupnmodes(groupidx:)","title":"func getGroupNModes(groupIdx: Int) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepad\/getnfeatures(feature:)","title":"func getNFeatures(feature: GdkDevicePadFeature) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepad\/getngroups()","title":"func getNGroups() -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepad\/set(property:value:)","title":"func set(property: DevicePadPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/gdk\/devicepad\/devicepadprotocol-implementations","title":"DevicePadProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/devicepad","title":"DevicePad","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicetool\/init(_:)-1ksjv","title":"init!(UnsafeMutablePointer<GdkDeviceTool>?)","type":"init"},{"path":"\/documentation\/gdk\/devicetool\/init(_:)-1zhiv","title":"init(UnsafeMutablePointer<GdkDeviceTool>)","type":"init"},{"path":"\/documentation\/gdk\/devicetool\/init(_:)-3e7ab","title":"init!(UnsafePointer<GdkDeviceTool>?)","type":"init"},{"path":"\/documentation\/gdk\/devicetool\/init(_:)-9i5cs","title":"init(UnsafePointer<GdkDeviceTool>)","type":"init"},{"path":"\/documentation\/gdk\/devicetool\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/devicetool\/init(devicetool:)","title":"init<T>(deviceTool: T)","type":"init"},{"path":"\/documentation\/gdk\/devicetool\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/devicetool\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/devicetool\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/devicetool\/init(raw:)-3dn56","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/devicetool\/init(raw:)-8caxi","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/devicetool\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkDeviceTool>)","type":"init"},{"path":"\/documentation\/gdk\/devicetool\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/devicetool\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/devicetool\/init(retainingraw:)-1nkgs","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/devicetool\/init(retainingraw:)-60uxx","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicetool\/axes","title":"var axes: AxisFlags","type":"property"},{"path":"\/documentation\/gdk\/devicetool\/device_tool_ptr","title":"var device_tool_ptr: UnsafeMutablePointer<GdkDeviceTool>!","type":"property"},{"path":"\/documentation\/gdk\/devicetool\/hardwareid","title":"var hardwareId: guint64","type":"property"},{"path":"\/documentation\/gdk\/devicetool\/serial","title":"var serial: guint64","type":"property"},{"path":"\/documentation\/gdk\/devicetool\/tooltype","title":"var toolType: GdkDeviceToolType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicetool\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: DeviceToolPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/devicetool\/get(property:)","title":"func get(property: DeviceToolPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/devicetool\/getaxes()","title":"func getAxes() -> AxisFlags","type":"method"},{"path":"\/documentation\/gdk\/devicetool\/gethardwareid()","title":"func getHardwareId() -> guint64","type":"method"},{"path":"\/documentation\/gdk\/devicetool\/getserial()","title":"func getSerial() -> guint64","type":"method"},{"path":"\/documentation\/gdk\/devicetool\/gettooltype()","title":"func getToolType() -> GdkDeviceToolType","type":"method"},{"path":"\/documentation\/gdk\/devicetool\/set(property:value:)","title":"func set(property: DeviceToolPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/gdk\/devicetool\/devicetoolprotocol-implementations","title":"DeviceToolProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/devicetool","title":"DeviceTool","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/display\/init(_:)-29q10","title":"init(UnsafePointer<GdkDisplay>)","type":"init"},{"path":"\/documentation\/gdk\/display\/init(_:)-3c100","title":"init!(UnsafeMutablePointer<GdkDisplay>?)","type":"init"},{"path":"\/documentation\/gdk\/display\/init(_:)-3njx1","title":"init(UnsafeMutablePointer<GdkDisplay>)","type":"init"},{"path":"\/documentation\/gdk\/display\/init(_:)-6h128","title":"init!(UnsafePointer<GdkDisplay>?)","type":"init"},{"path":"\/documentation\/gdk\/display\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/display\/init(display:)","title":"init<T>(display: T)","type":"init"},{"path":"\/documentation\/gdk\/display\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/display\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/display\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/display\/init(raw:)-3yy8k","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/display\/init(raw:)-5xv5b","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/display\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkDisplay>)","type":"init"},{"path":"\/documentation\/gdk\/display\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/display\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/display\/init(retainingraw:)-11exi","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/display\/init(retainingraw:)-8eg4m","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/display\/getdefault()","title":"static func getDefault() -> Display!","type":"method"},{"path":"\/documentation\/gdk\/display\/open(displayname:)","title":"static func open(displayName: UnsafePointer<CChar>?) -> Display!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/display\/applaunchcontext","title":"var appLaunchContext: AppLaunchContextRef!","type":"property"},{"path":"\/documentation\/gdk\/display\/clipboard","title":"var clipboard: ClipboardRef!","type":"property"},{"path":"\/documentation\/gdk\/display\/defaultseat","title":"var defaultSeat: SeatRef!","type":"property"},{"path":"\/documentation\/gdk\/display\/display_ptr","title":"var display_ptr: UnsafeMutablePointer<GdkDisplay>!","type":"property"},{"path":"\/documentation\/gdk\/display\/isclosed","title":"var isClosed: Bool","type":"property"},{"path":"\/documentation\/gdk\/display\/iscomposited","title":"var isComposited: Bool","type":"property"},{"path":"\/documentation\/gdk\/display\/isrgba","title":"var isRgba: Bool","type":"property"},{"path":"\/documentation\/gdk\/display\/monitors","title":"var monitors: ListModelRef!","type":"property"},{"path":"\/documentation\/gdk\/display\/name","title":"var name: String!","type":"property"},{"path":"\/documentation\/gdk\/display\/primaryclipboard","title":"var primaryClipboard: ClipboardRef!","type":"property"},{"path":"\/documentation\/gdk\/display\/startupnotificationid","title":"var startupNotificationId: String!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/display\/beep()","title":"func beep()","type":"method"},{"path":"\/documentation\/gdk\/display\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: DisplayPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/display\/close()","title":"func close()","type":"method"},{"path":"\/documentation\/gdk\/display\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: DisplaySignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/display\/connect(signal:flags:handler:)","title":"func connect(signal: DisplaySignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/display\/createglcontext()","title":"func createGlContext() throws -> GLContextRef!","type":"method"},{"path":"\/documentation\/gdk\/display\/deviceisgrabbed(device:)","title":"func deviceIsGrabbed<DeviceT>(device: DeviceT) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/display\/flush()","title":"func flush()","type":"method"},{"path":"\/documentation\/gdk\/display\/get(property:)","title":"func get(property: DisplayPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/display\/getapplaunchcontext()","title":"func getAppLaunchContext() -> AppLaunchContextRef!","type":"method"},{"path":"\/documentation\/gdk\/display\/getclipboard()","title":"func getClipboard() -> ClipboardRef!","type":"method"},{"path":"\/documentation\/gdk\/display\/getdefaultseat()","title":"func getDefaultSeat() -> SeatRef!","type":"method"},{"path":"\/documentation\/gdk\/display\/getmonitorat(surface:)","title":"func getMonitorAt<SurfaceT>(surface: SurfaceT) -> MonitorRef!","type":"method"},{"path":"\/documentation\/gdk\/display\/getmonitors()","title":"func getMonitors() -> ListModelRef!","type":"method"},{"path":"\/documentation\/gdk\/display\/getname()","title":"func getName() -> String!","type":"method"},{"path":"\/documentation\/gdk\/display\/getprimaryclipboard()","title":"func getPrimaryClipboard() -> ClipboardRef!","type":"method"},{"path":"\/documentation\/gdk\/display\/getsetting(name:value:)","title":"func getSetting<GObjectValueT>(name: UnsafePointer<CChar>!, value: GObjectValueT) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/display\/getstartupnotificationid()","title":"func getStartupNotificationId() -> String!","type":"method"},{"path":"\/documentation\/gdk\/display\/listseats()","title":"func listSeats() -> RefListRef<SeatRef>!","type":"method"},{"path":"\/documentation\/gdk\/display\/map(keycode:keys:keyvals:nentries:)","title":"func map(keycode: Int, keys: UnsafeMutablePointer<UnsafeMutablePointer<GdkKeymapKey>?>!, keyvals: UnsafeMutablePointer<UnsafeMutablePointer<guint>?>!, nEntries: UnsafeMutablePointer<gint>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/display\/map(keyval:keys:nkeys:)","title":"func map(keyval: Int, keys: UnsafeMutablePointer<UnsafeMutablePointer<GdkKeymapKey>?>!, nKeys: UnsafeMutablePointer<gint>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/display\/notifystartupcomplete(startupid:)","title":"func notifyStartupComplete(startupId: UnsafePointer<CChar>!)","type":"method"},{"path":"\/documentation\/gdk\/display\/onclosed(flags:handler:)","title":"func onClosed(flags: ConnectFlags, handler: (DisplayRef, Bool) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/display\/onnotifycomposited(flags:handler:)","title":"func onNotifyComposited(flags: ConnectFlags, handler: (DisplayRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/display\/onnotifyinputshapes(flags:handler:)","title":"func onNotifyInputShapes(flags: ConnectFlags, handler: (DisplayRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/display\/onnotifyrgba(flags:handler:)","title":"func onNotifyRgba(flags: ConnectFlags, handler: (DisplayRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/display\/onopened(flags:handler:)","title":"func onOpened(flags: ConnectFlags, handler: (DisplayRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/display\/onseatadded(flags:handler:)","title":"func onSeatAdded(flags: ConnectFlags, handler: (DisplayRef, SeatRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/display\/onseatremoved(flags:handler:)","title":"func onSeatRemoved(flags: ConnectFlags, handler: (DisplayRef, SeatRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/display\/onsettingchanged(flags:handler:)","title":"func onSettingChanged(flags: ConnectFlags, handler: (DisplayRef, String) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/display\/preparegl()","title":"func prepareGl() throws -> Bool","type":"method"},{"path":"\/documentation\/gdk\/display\/put(event:)","title":"func put<EventT>(event: EventT)","type":"method"},{"path":"\/documentation\/gdk\/display\/set(property:value:)","title":"func set(property: DisplayPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/display\/supportsinputshapes()","title":"func supportsInputShapes() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/display\/sync()","title":"func sync()","type":"method"},{"path":"\/documentation\/gdk\/display\/translatekey(keycode:state:group:keyval:effectivegroup:level:consumed:)","title":"func translateKey(keycode: Int, state: ModifierType, group: Int, keyval: UnsafeMutablePointer<guint>!, effectiveGroup: UnsafeMutablePointer<gint>!, level: UnsafeMutablePointer<gint>!, consumed: UnsafeMutablePointer<GdkModifierType>!) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/display\/closedsignal","title":"static var closedSignal: DisplaySignalName","type":"property"},{"path":"\/documentation\/gdk\/display\/notifycompositedsignal","title":"static var notifyCompositedSignal: DisplaySignalName","type":"property"},{"path":"\/documentation\/gdk\/display\/notifyinputshapessignal","title":"static var notifyInputShapesSignal: DisplaySignalName","type":"property"},{"path":"\/documentation\/gdk\/display\/notifyrgbasignal","title":"static var notifyRgbaSignal: DisplaySignalName","type":"property"},{"path":"\/documentation\/gdk\/display\/openedsignal","title":"static var openedSignal: DisplaySignalName","type":"property"},{"path":"\/documentation\/gdk\/display\/seataddedsignal","title":"static var seatAddedSignal: DisplaySignalName","type":"property"},{"path":"\/documentation\/gdk\/display\/seatremovedsignal","title":"static var seatRemovedSignal: DisplaySignalName","type":"property"},{"path":"\/documentation\/gdk\/display\/settingchangedsignal","title":"static var settingChangedSignal: DisplaySignalName","type":"property"}],"path":"\/documentation\/gdk\/display\/displayprotocol-implementations","title":"DisplayProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/display","title":"Display","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaymanager\/init(_:)-3ebr9","title":"init!(UnsafePointer<GdkDisplayManager>?)","type":"init"},{"path":"\/documentation\/gdk\/displaymanager\/init(_:)-5684l","title":"init(UnsafeMutablePointer<GdkDisplayManager>)","type":"init"},{"path":"\/documentation\/gdk\/displaymanager\/init(_:)-5mm4y","title":"init(UnsafePointer<GdkDisplayManager>)","type":"init"},{"path":"\/documentation\/gdk\/displaymanager\/init(_:)-7p9z2","title":"init!(UnsafeMutablePointer<GdkDisplayManager>?)","type":"init"},{"path":"\/documentation\/gdk\/displaymanager\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/displaymanager\/init(displaymanager:)","title":"init<T>(displayManager: T)","type":"init"},{"path":"\/documentation\/gdk\/displaymanager\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/displaymanager\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/displaymanager\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/displaymanager\/init(raw:)-3v3qf","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/displaymanager\/init(raw:)-7pyfu","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/displaymanager\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkDisplayManager>)","type":"init"},{"path":"\/documentation\/gdk\/displaymanager\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/displaymanager\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/displaymanager\/init(retainingraw:)-5931b","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/displaymanager\/init(retainingraw:)-7vmzy","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaymanager\/displaymanagerget()","title":"static func displayManagerGet() -> DisplayManager!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaymanager\/defaultdisplay","title":"var defaultDisplay: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/displaymanager\/display_manager_ptr","title":"var display_manager_ptr: UnsafeMutablePointer<GdkDisplayManager>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaymanager\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: DisplayManagerPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/displaymanager\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: DisplayManagerSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displaymanager\/connect(signal:flags:handler:)","title":"func connect(signal: DisplayManagerSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displaymanager\/get(property:)","title":"func get(property: DisplayManagerPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/displaymanager\/getdefaultdisplay()","title":"func getDefaultDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/displaymanager\/listdisplays()","title":"func listDisplays() -> RefSListRef<DisplayRef>!","type":"method"},{"path":"\/documentation\/gdk\/displaymanager\/ondisplayopened(flags:handler:)","title":"func onDisplayOpened(flags: ConnectFlags, handler: (DisplayManagerRef, DisplayRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displaymanager\/onnotifydefaultdisplay(flags:handler:)","title":"func onNotifyDefaultDisplay(flags: ConnectFlags, handler: (DisplayManagerRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displaymanager\/opendisplay(name:)","title":"func openDisplay(name: UnsafePointer<CChar>?) -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/displaymanager\/set(property:value:)","title":"func set(property: DisplayManagerPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/displaymanager\/setdefault(display:)","title":"func setDefault<DisplayT>(display: DisplayT)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaymanager\/displayopenedsignal","title":"static var displayOpenedSignal: DisplayManagerSignalName","type":"property"},{"path":"\/documentation\/gdk\/displaymanager\/notifydefaultdisplaysignal","title":"static var notifyDefaultDisplaySignal: DisplayManagerSignalName","type":"property"}],"path":"\/documentation\/gdk\/displaymanager\/displaymanagerprotocol-implementations","title":"DisplayManagerProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/displaymanager","title":"DisplayManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/drag\/init(_:)-3uwz5","title":"init!(UnsafeMutablePointer<GdkDrag>?)","type":"init"},{"path":"\/documentation\/gdk\/drag\/init(_:)-565cf","title":"init(UnsafeMutablePointer<GdkDrag>)","type":"init"},{"path":"\/documentation\/gdk\/drag\/init(_:)-593t0","title":"init!(UnsafePointer<GdkDrag>?)","type":"init"},{"path":"\/documentation\/gdk\/drag\/init(_:)-onoa","title":"init(UnsafePointer<GdkDrag>)","type":"init"},{"path":"\/documentation\/gdk\/drag\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/drag\/init(drag:)","title":"init<T>(drag: T)","type":"init"},{"path":"\/documentation\/gdk\/drag\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/drag\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/drag\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/drag\/init(raw:)-6rd5p","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/drag\/init(raw:)-9wczg","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/drag\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkDrag>)","type":"init"},{"path":"\/documentation\/gdk\/drag\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/drag\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/drag\/init(retainingraw:)-5utv6","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/drag\/init(retainingraw:)-8hdst","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/drag\/begin(surface:device:content:actions:dx:dy:)","title":"static func begin<ContentProviderT, DeviceT, SurfaceT>(surface: SurfaceT, device: DeviceT, content: ContentProviderT, actions: DragAction, dx: CDouble, dy: CDouble) -> Drag!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/drag\/actions","title":"var actions: DragAction","type":"property"},{"path":"\/documentation\/gdk\/drag\/content","title":"var content: ContentProviderRef!","type":"property"},{"path":"\/documentation\/gdk\/drag\/device","title":"var device: DeviceRef!","type":"property"},{"path":"\/documentation\/gdk\/drag\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/drag\/dragsurface","title":"var dragSurface: SurfaceRef!","type":"property"},{"path":"\/documentation\/gdk\/drag\/drag_ptr","title":"var drag_ptr: UnsafeMutablePointer<GdkDrag>!","type":"property"},{"path":"\/documentation\/gdk\/drag\/formats","title":"var formats: ContentFormatsRef!","type":"property"},{"path":"\/documentation\/gdk\/drag\/selectedaction","title":"var selectedAction: DragAction","type":"property"},{"path":"\/documentation\/gdk\/drag\/surface","title":"var surface: SurfaceRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/drag\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: DragPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/drag\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: DragSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/drag\/connect(signal:flags:handler:)","title":"func connect(signal: DragSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/drag\/dropdone(success:)","title":"func dropDone(success: Bool)","type":"method"},{"path":"\/documentation\/gdk\/drag\/get(property:)","title":"func get(property: DragPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/drag\/getactions()","title":"func getActions() -> DragAction","type":"method"},{"path":"\/documentation\/gdk\/drag\/getcontent()","title":"func getContent() -> ContentProviderRef!","type":"method"},{"path":"\/documentation\/gdk\/drag\/getdevice()","title":"func getDevice() -> DeviceRef!","type":"method"},{"path":"\/documentation\/gdk\/drag\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/drag\/getdragsurface()","title":"func getDragSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/drag\/getformats()","title":"func getFormats() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/drag\/getselectedaction()","title":"func getSelectedAction() -> DragAction","type":"method"},{"path":"\/documentation\/gdk\/drag\/getsurface()","title":"func getSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/drag\/oncancel(flags:handler:)","title":"func onCancel(flags: ConnectFlags, handler: (DragRef, DragCancelReason) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/drag\/ondndfinished(flags:handler:)","title":"func onDndFinished(flags: ConnectFlags, handler: (DragRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/drag\/ondropperformed(flags:handler:)","title":"func onDropPerformed(flags: ConnectFlags, handler: (DragRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/drag\/onnotifyactions(flags:handler:)","title":"func onNotifyActions(flags: ConnectFlags, handler: (DragRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/drag\/onnotifycontent(flags:handler:)","title":"func onNotifyContent(flags: ConnectFlags, handler: (DragRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/drag\/onnotifydevice(flags:handler:)","title":"func onNotifyDevice(flags: ConnectFlags, handler: (DragRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/drag\/onnotifydisplay(flags:handler:)","title":"func onNotifyDisplay(flags: ConnectFlags, handler: (DragRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/drag\/onnotifyformats(flags:handler:)","title":"func onNotifyFormats(flags: ConnectFlags, handler: (DragRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/drag\/onnotifyselectedaction(flags:handler:)","title":"func onNotifySelectedAction(flags: ConnectFlags, handler: (DragRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/drag\/onnotifysurface(flags:handler:)","title":"func onNotifySurface(flags: ConnectFlags, handler: (DragRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/drag\/set(property:value:)","title":"func set(property: DragPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/drag\/sethotspot(hotx:hoty:)","title":"func setHotspot(hotX: Int, hotY: Int)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/drag\/cancelsignal","title":"static var cancelSignal: DragSignalName","type":"property"},{"path":"\/documentation\/gdk\/drag\/dndfinishedsignal","title":"static var dndFinishedSignal: DragSignalName","type":"property"},{"path":"\/documentation\/gdk\/drag\/dropperformedsignal","title":"static var dropPerformedSignal: DragSignalName","type":"property"},{"path":"\/documentation\/gdk\/drag\/notifyactionssignal","title":"static var notifyActionsSignal: DragSignalName","type":"property"},{"path":"\/documentation\/gdk\/drag\/notifycontentsignal","title":"static var notifyContentSignal: DragSignalName","type":"property"},{"path":"\/documentation\/gdk\/drag\/notifydevicesignal","title":"static var notifyDeviceSignal: DragSignalName","type":"property"},{"path":"\/documentation\/gdk\/drag\/notifydisplaysignal","title":"static var notifyDisplaySignal: DragSignalName","type":"property"},{"path":"\/documentation\/gdk\/drag\/notifyformatssignal","title":"static var notifyFormatsSignal: DragSignalName","type":"property"},{"path":"\/documentation\/gdk\/drag\/notifyselectedactionsignal","title":"static var notifySelectedActionSignal: DragSignalName","type":"property"},{"path":"\/documentation\/gdk\/drag\/notifysurfacesignal","title":"static var notifySurfaceSignal: DragSignalName","type":"property"}],"path":"\/documentation\/gdk\/drag\/dragprotocol-implementations","title":"DragProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/drag","title":"Drag","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurface\/init(_:)-1cmuh","title":"init(UnsafePointer<GdkDragSurface>)","type":"init"},{"path":"\/documentation\/gdk\/dragsurface\/init(_:)-6yazn","title":"init!(UnsafeMutablePointer<GdkDragSurface>?)","type":"init"},{"path":"\/documentation\/gdk\/dragsurface\/init(_:)-6z0oz","title":"init(UnsafeMutablePointer<GdkDragSurface>)","type":"init"},{"path":"\/documentation\/gdk\/dragsurface\/init(_:)-ns18","title":"init!(UnsafePointer<GdkDragSurface>?)","type":"init"},{"path":"\/documentation\/gdk\/dragsurface\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/dragsurface\/init(dragsurface:)","title":"init<T>(dragSurface: T)","type":"init"},{"path":"\/documentation\/gdk\/dragsurface\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/dragsurface\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/dragsurface\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/dragsurface\/init(raw:)-7o6rs","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/dragsurface\/init(raw:)-9n3lv","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/dragsurface\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkDragSurface>)","type":"init"},{"path":"\/documentation\/gdk\/dragsurface\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/dragsurface\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/dragsurface\/init(retainingraw:)-504g6","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/dragsurface\/init(retainingraw:)-5bbj5","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurface\/metatypereferencefordragsurface","title":"var metatypeReferenceForDragSurface: GType","type":"property"},{"path":"\/documentation\/gdk\/dragsurface\/wrapperfordragsurface","title":"var wrapperForDragSurface: DragSurfaceInterfaceRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurface\/metatypefordragsurface","title":"static var metatypeForDragSurface: GdkDragSurfaceInterface?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurface\/drag_surface_ptr","title":"var drag_surface_ptr: UnsafeMutablePointer<GdkDragSurface>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurface\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: DragSurfacePropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/dragsurface\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: DragSurfaceSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurface\/connect(signal:flags:handler:)","title":"func connect(signal: DragSurfaceSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurface\/get(property:)","title":"func get(property: DragSurfacePropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/dragsurface\/oncomputesize(flags:handler:)","title":"func onComputeSize(flags: ConnectFlags, handler: (DragSurfaceRef, DragSurfaceSizeRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurface\/present(width:height:)","title":"func present(width: Int, height: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dragsurface\/set(property:value:)","title":"func set(property: DragSurfacePropertyName, value: Value)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurface\/computesizesignal","title":"static var computeSizeSignal: DragSurfaceSignalName","type":"property"}],"path":"\/documentation\/gdk\/dragsurface\/dragsurfaceprotocol-implementations","title":"DragSurfaceProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/dragsurface","title":"DragSurface","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfacesize\/init(_:)-2tkgy","title":"init(UnsafePointer<GdkDragSurfaceSize>)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfacesize\/init(_:)-5pjte","title":"init!(UnsafeMutablePointer<GdkDragSurfaceSize>?)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfacesize\/init(_:)-5r17l","title":"init!(UnsafePointer<GdkDragSurfaceSize>?)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfacesize\/init(_:)-89xyl","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfacesize\/init(_:)-srjn","title":"init(UnsafeMutablePointer<GdkDragSurfaceSize>)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfacesize\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfacesize\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfacesize\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfacesize\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfacesize\/init(raw:)-6awhi","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfacesize\/init(raw:)-77zuh","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfacesize\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkDragSurfaceSize>)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfacesize\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfacesize\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfacesize\/init(retainingraw:)-1vhwu","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfacesize\/init(retainingraw:)-6yn45","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfacesize\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfacesize\/setsize(width:height:)","title":"func setSize(width: Int, height: Int)","type":"method"}],"path":"\/documentation\/gdk\/dragsurfacesize\/dragsurfacesizeprotocol-implementations","title":"DragSurfaceSizeProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/dragsurfacesize","title":"DragSurfaceSize","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/drawcontext\/init(_:)-18j81","title":"init(UnsafePointer<GdkDrawContext>)","type":"init"},{"path":"\/documentation\/gdk\/drawcontext\/init(_:)-5gqd5","title":"init!(UnsafeMutablePointer<GdkDrawContext>?)","type":"init"},{"path":"\/documentation\/gdk\/drawcontext\/init(_:)-6ux8r","title":"init(UnsafeMutablePointer<GdkDrawContext>)","type":"init"},{"path":"\/documentation\/gdk\/drawcontext\/init(_:)-95syz","title":"init!(UnsafePointer<GdkDrawContext>?)","type":"init"},{"path":"\/documentation\/gdk\/drawcontext\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/drawcontext\/init(drawcontext:)","title":"init<T>(drawContext: T)","type":"init"},{"path":"\/documentation\/gdk\/drawcontext\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/drawcontext\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/drawcontext\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/drawcontext\/init(raw:)-4bi0z","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/drawcontext\/init(raw:)-6aezi","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/drawcontext\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkDrawContext>)","type":"init"},{"path":"\/documentation\/gdk\/drawcontext\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/drawcontext\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/drawcontext\/init(retainingraw:)-3t15","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/drawcontext\/init(retainingraw:)-9s7bz","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/drawcontext\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/drawcontext\/draw_context_ptr","title":"var draw_context_ptr: UnsafeMutablePointer<GdkDrawContext>!","type":"property"},{"path":"\/documentation\/gdk\/drawcontext\/frameregion","title":"var frameRegion: RegionRef!","type":"property"},{"path":"\/documentation\/gdk\/drawcontext\/isinframe","title":"var isInFrame: Bool","type":"property"},{"path":"\/documentation\/gdk\/drawcontext\/surface","title":"var surface: SurfaceRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/drawcontext\/beginframe(region:)","title":"func beginFrame<cairoRegionT>(region: cairoRegionT)","type":"method"},{"path":"\/documentation\/gdk\/drawcontext\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: DrawContextPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/drawcontext\/endframe()","title":"func endFrame()","type":"method"},{"path":"\/documentation\/gdk\/drawcontext\/get(property:)","title":"func get(property: DrawContextPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/drawcontext\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/drawcontext\/getframeregion()","title":"func getFrameRegion() -> RegionRef!","type":"method"},{"path":"\/documentation\/gdk\/drawcontext\/getsurface()","title":"func getSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/drawcontext\/set(property:value:)","title":"func set(property: DrawContextPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/gdk\/drawcontext\/drawcontextprotocol-implementations","title":"DrawContextProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/drawcontext","title":"DrawContext","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/drop\/init(_:)-153cg","title":"init(UnsafeMutablePointer<GdkDrop>)","type":"init"},{"path":"\/documentation\/gdk\/drop\/init(_:)-1dbcw","title":"init!(UnsafePointer<GdkDrop>?)","type":"init"},{"path":"\/documentation\/gdk\/drop\/init(_:)-3q11e","title":"init(UnsafePointer<GdkDrop>)","type":"init"},{"path":"\/documentation\/gdk\/drop\/init(_:)-cdax","title":"init!(UnsafeMutablePointer<GdkDrop>?)","type":"init"},{"path":"\/documentation\/gdk\/drop\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/drop\/init(drop:)","title":"init<T>(drop: T)","type":"init"},{"path":"\/documentation\/gdk\/drop\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/drop\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/drop\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/drop\/init(raw:)-6cgyv","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/drop\/init(raw:)-7py9","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/drop\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkDrop>)","type":"init"},{"path":"\/documentation\/gdk\/drop\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/drop\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/drop\/init(retainingraw:)-25shb","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/drop\/init(retainingraw:)-8ajat","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/drop\/actions","title":"var actions: DragAction","type":"property"},{"path":"\/documentation\/gdk\/drop\/device","title":"var device: DeviceRef!","type":"property"},{"path":"\/documentation\/gdk\/drop\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/drop\/drag","title":"var drag: DragRef!","type":"property"},{"path":"\/documentation\/gdk\/drop\/drop_ptr","title":"var drop_ptr: UnsafeMutablePointer<GdkDrop>!","type":"property"},{"path":"\/documentation\/gdk\/drop\/formats","title":"var formats: ContentFormatsRef!","type":"property"},{"path":"\/documentation\/gdk\/drop\/surface","title":"var surface: SurfaceRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/drop\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: DropPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/drop\/finish(action:)","title":"func finish(action: DragAction)","type":"method"},{"path":"\/documentation\/gdk\/drop\/get(property:)","title":"func get(property: DropPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/drop\/getactions()","title":"func getActions() -> DragAction","type":"method"},{"path":"\/documentation\/gdk\/drop\/getdevice()","title":"func getDevice() -> DeviceRef!","type":"method"},{"path":"\/documentation\/gdk\/drop\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/drop\/getdrag()","title":"func getDrag() -> DragRef!","type":"method"},{"path":"\/documentation\/gdk\/drop\/getformats()","title":"func getFormats() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/drop\/getsurface()","title":"func getSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/drop\/readasync(mimetypes:iopriority:cancellable:callback:userdata:)","title":"func readAsync(mimeTypes: UnsafeMutablePointer<UnsafePointer<CChar>?>!, ioPriority: Int, cancellable: CancellableRef?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/drop\/readfinish(result:outmimetype:)","title":"func readFinish<GioAsyncResultT>(result: GioAsyncResultT, outMimeType: UnsafeMutablePointer<UnsafePointer<CChar>?>!) throws -> InputStreamRef!","type":"method"},{"path":"\/documentation\/gdk\/drop\/readvalueasync(type:iopriority:cancellable:callback:userdata:)","title":"func readValueAsync(type: GType, ioPriority: Int, cancellable: CancellableRef?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/drop\/readvaluefinish(result:)","title":"func readValueFinish<GioAsyncResultT>(result: GioAsyncResultT) throws -> ValueRef!","type":"method"},{"path":"\/documentation\/gdk\/drop\/set(property:value:)","title":"func set(property: DropPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/drop\/status(actions:preferred:)","title":"func status(actions: DragAction, preferred: DragAction)","type":"method"}],"path":"\/documentation\/gdk\/drop\/dropprotocol-implementations","title":"DropProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/drop","title":"Drop","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/event\/init(_:)-1a9zb","title":"init!(UnsafeMutablePointer<GdkEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/event\/init(_:)-2pab3","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/event\/init(_:)-3d25d","title":"init(UnsafeMutablePointer<GdkEvent>)","type":"init"},{"path":"\/documentation\/gdk\/event\/init(_:)-6ksi3","title":"init!(UnsafePointer<GdkEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/event\/init(_:)-6qw7o","title":"init(UnsafePointer<GdkEvent>)","type":"init"},{"path":"\/documentation\/gdk\/event\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/event\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/event\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/event\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/event\/init(raw:)-6ya1c","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/event\/init(raw:)-8uzdn","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/event\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkEvent>)","type":"init"},{"path":"\/documentation\/gdk\/event\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/event\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/event\/init(retainingraw:)-3i1uq","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/event\/init(retainingraw:)-7cw8p","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/event\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/event\/device","title":"var device: DeviceRef!","type":"property"},{"path":"\/documentation\/gdk\/event\/devicetool","title":"var deviceTool: DeviceToolRef!","type":"property"},{"path":"\/documentation\/gdk\/event\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/event\/eventsequence","title":"var eventSequence: EventSequenceRef!","type":"property"},{"path":"\/documentation\/gdk\/event\/eventtype","title":"var eventType: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/event\/event_ptr","title":"var event_ptr: UnsafeMutablePointer<GdkEvent>!","type":"property"},{"path":"\/documentation\/gdk\/event\/modifierstate","title":"var modifierState: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/event\/pointeremulated","title":"var pointerEmulated: Bool","type":"property"},{"path":"\/documentation\/gdk\/event\/seat","title":"var seat: SeatRef!","type":"property"},{"path":"\/documentation\/gdk\/event\/surface","title":"var surface: SurfaceRef!","type":"property"},{"path":"\/documentation\/gdk\/event\/time","title":"var time: guint32","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/event\/getangle(event2:angle:)","title":"func GetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/event\/getcenter(event2:x:y:)","title":"func GetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/event\/getdistance(event2:distance:)","title":"func GetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/event\/eventsgetangle(event2:angle:)","title":"func eventsGetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/event\/eventsgetcenter(event2:x:y:)","title":"func eventsGetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/event\/eventsgetdistance(event2:distance:)","title":"func eventsGetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/event\/get(axes:naxes:)","title":"func get(axes: UnsafeMutablePointer<UnsafeMutablePointer<CDouble>?>!, nAxes: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/event\/getaxis(axisuse:value:)","title":"func getAxis(axisUse: GdkAxisUse, value: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/event\/getdevice()","title":"func getDevice() -> DeviceRef!","type":"method"},{"path":"\/documentation\/gdk\/event\/getdevicetool()","title":"func getDeviceTool() -> DeviceToolRef!","type":"method"},{"path":"\/documentation\/gdk\/event\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/event\/geteventsequence()","title":"func getEventSequence() -> EventSequenceRef!","type":"method"},{"path":"\/documentation\/gdk\/event\/geteventtype()","title":"func getEventType() -> GdkEventType","type":"method"},{"path":"\/documentation\/gdk\/event\/gethistory(outncoords:)","title":"func getHistory(outNCoords: UnsafeMutablePointer<guint>!) -> UnsafeMutablePointer<GdkTimeCoord>!","type":"method"},{"path":"\/documentation\/gdk\/event\/getmodifierstate()","title":"func getModifierState() -> ModifierType","type":"method"},{"path":"\/documentation\/gdk\/event\/getpointeremulated()","title":"func getPointerEmulated() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/event\/getposition(x:y:)","title":"func getPosition(x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/event\/getseat()","title":"func getSeat() -> SeatRef!","type":"method"},{"path":"\/documentation\/gdk\/event\/getsurface()","title":"func getSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/event\/gettime()","title":"func getTime() -> guint32","type":"method"},{"path":"\/documentation\/gdk\/event\/ref()","title":"func ref() -> EventRef!","type":"method"},{"path":"\/documentation\/gdk\/event\/triggerscontextmenu()","title":"func triggersContextMenu() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/event\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/gdk\/event\/eventprotocol-implementations","title":"EventProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/event","title":"Event","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/eventsequence\/init(_:)-1od72","title":"init(UnsafePointer<GdkEventSequence>)","type":"init"},{"path":"\/documentation\/gdk\/eventsequence\/init(_:)-1oxd9","title":"init!(UnsafeMutablePointer<GdkEventSequence>?)","type":"init"},{"path":"\/documentation\/gdk\/eventsequence\/init(_:)-28hbq","title":"init(UnsafeMutablePointer<GdkEventSequence>)","type":"init"},{"path":"\/documentation\/gdk\/eventsequence\/init(_:)-7s3li","title":"init!(UnsafePointer<GdkEventSequence>?)","type":"init"},{"path":"\/documentation\/gdk\/eventsequence\/init(_:)-8okul","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/eventsequence\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/eventsequence\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/eventsequence\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/eventsequence\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/eventsequence\/init(raw:)-7astm","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/eventsequence\/init(raw:)-9xcyd","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/eventsequence\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkEventSequence>)","type":"init"},{"path":"\/documentation\/gdk\/eventsequence\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/eventsequence\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/eventsequence\/init(retainingraw:)-7uevf","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/eventsequence\/init(retainingraw:)-85m02","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/eventsequence\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/eventsequence\/event_sequence_ptr","title":"var event_sequence_ptr: UnsafeMutablePointer<GdkEventSequence>!","type":"property"}],"path":"\/documentation\/gdk\/eventsequence\/eventsequenceprotocol-implementations","title":"EventSequenceProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/eventsequence","title":"EventSequence","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/filelist\/init(_:)-172i8","title":"init!(UnsafePointer<GdkFileList>?)","type":"init"},{"path":"\/documentation\/gdk\/filelist\/init(_:)-1y499","title":"init!(UnsafeMutablePointer<GdkFileList>?)","type":"init"},{"path":"\/documentation\/gdk\/filelist\/init(_:)-255d2","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/filelist\/init(_:)-27ed2","title":"init(UnsafeMutablePointer<GdkFileList>)","type":"init"},{"path":"\/documentation\/gdk\/filelist\/init(_:)-5wpm7","title":"init(UnsafePointer<GdkFileList>)","type":"init"},{"path":"\/documentation\/gdk\/filelist\/init(array:nfiles:)","title":"init(array: UnsafeMutablePointer<UnsafeMutablePointer<GFile>?>!, nFiles: Int)","type":"init"},{"path":"\/documentation\/gdk\/filelist\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/filelist\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/filelist\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/filelist\/init(list:)","title":"init<GLibSListT>(list: GLibSListT)","type":"init"},{"path":"\/documentation\/gdk\/filelist\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/filelist\/init(raw:)-6chaf","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/filelist\/init(raw:)-8wto0","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/filelist\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkFileList>)","type":"init"},{"path":"\/documentation\/gdk\/filelist\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/filelist\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/filelist\/init(retainingraw:)-1zi3f","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/filelist\/init(retainingraw:)-7lt5f","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/filelist\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/filelist\/newfrom(array:nfiles:)","title":"static func newFrom(array: UnsafeMutablePointer<UnsafeMutablePointer<GFile>?>!, nFiles: Int) -> FileList!","type":"method"},{"path":"\/documentation\/gdk\/filelist\/newfrom(list:)","title":"static func newFrom<GLibSListT>(list: GLibSListT) -> FileList!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/filelist\/file_list_ptr","title":"var file_list_ptr: UnsafeMutablePointer<GdkFileList>!","type":"property"},{"path":"\/documentation\/gdk\/filelist\/files","title":"var files: RefSListRef<FileRef>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/filelist\/getfiles()","title":"func getFiles() -> RefSListRef<FileRef>!","type":"method"}],"path":"\/documentation\/gdk\/filelist\/filelistprotocol-implementations","title":"FileListProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/filelist","title":"FileList","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/focusevent\/init(_:)-2vgru","title":"init!(UnsafeMutablePointer<GdkFocusEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/focusevent\/init(_:)-59i2m","title":"init!(UnsafePointer<GdkFocusEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/focusevent\/init(_:)-7kkoy","title":"init(UnsafePointer<GdkFocusEvent>)","type":"init"},{"path":"\/documentation\/gdk\/focusevent\/init(_:)-a2i9","title":"init(UnsafeMutablePointer<GdkFocusEvent>)","type":"init"},{"path":"\/documentation\/gdk\/focusevent\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/focusevent\/init(focusevent:)","title":"init<T>(focusEvent: T)","type":"init"},{"path":"\/documentation\/gdk\/focusevent\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/focusevent\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/focusevent\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/focusevent\/init(raw:)-5hnxd","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/focusevent\/init(raw:)-eio6","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/focusevent\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkFocusEvent>)","type":"init"},{"path":"\/documentation\/gdk\/focusevent\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/focusevent\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/focusevent\/init(retainingraw:)-4rbvc","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/focusevent\/init(retainingraw:)-6o145","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/focusevent\/focus_event_ptr","title":"var focus_event_ptr: UnsafeMutablePointer<GdkFocusEvent>!","type":"property"},{"path":"\/documentation\/gdk\/focusevent\/in","title":"var `in`: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/focusevent\/getin()","title":"func getIn() -> Bool","type":"method"}],"path":"\/documentation\/gdk\/focusevent\/focuseventprotocol-implementations","title":"FocusEventProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/focusevent","title":"FocusEvent","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclock\/init(_:)-2n97h","title":"init!(UnsafeMutablePointer<GdkFrameClock>?)","type":"init"},{"path":"\/documentation\/gdk\/frameclock\/init(_:)-49oem","title":"init!(UnsafePointer<GdkFrameClock>?)","type":"init"},{"path":"\/documentation\/gdk\/frameclock\/init(_:)-7ueqh","title":"init(UnsafeMutablePointer<GdkFrameClock>)","type":"init"},{"path":"\/documentation\/gdk\/frameclock\/init(_:)-haaa","title":"init(UnsafePointer<GdkFrameClock>)","type":"init"},{"path":"\/documentation\/gdk\/frameclock\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/frameclock\/init(frameclock:)","title":"init<T>(frameClock: T)","type":"init"},{"path":"\/documentation\/gdk\/frameclock\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/frameclock\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/frameclock\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/frameclock\/init(raw:)-10gdq","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/frameclock\/init(raw:)-2zd9v","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/frameclock\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkFrameClock>)","type":"init"},{"path":"\/documentation\/gdk\/frameclock\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/frameclock\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/frameclock\/init(retainingraw:)-2xrch","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/frameclock\/init(retainingraw:)-6slze","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclock\/metatypereferenceforframeclock","title":"var metatypeReferenceForFrameClock: GType","type":"property"},{"path":"\/documentation\/gdk\/frameclock\/wrapperforframeclock","title":"var wrapperForFrameClock: FrameClockClassRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclock\/metatypeforframeclock","title":"static var metatypeForFrameClock: GdkFrameClockClass?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclock\/currenttimings","title":"var currentTimings: FrameTimingsRef!","type":"property"},{"path":"\/documentation\/gdk\/frameclock\/fps","title":"var fps: CDouble","type":"property"},{"path":"\/documentation\/gdk\/frameclock\/framecounter","title":"var frameCounter: gint64","type":"property"},{"path":"\/documentation\/gdk\/frameclock\/frametime","title":"var frameTime: gint64","type":"property"},{"path":"\/documentation\/gdk\/frameclock\/frame_clock_ptr","title":"var frame_clock_ptr: UnsafeMutablePointer<GdkFrameClock>!","type":"property"},{"path":"\/documentation\/gdk\/frameclock\/historystart","title":"var historyStart: gint64","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclock\/beginupdating()","title":"func beginUpdating()","type":"method"},{"path":"\/documentation\/gdk\/frameclock\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: FrameClockSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclock\/connect(signal:flags:handler:)","title":"func connect(signal: FrameClockSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclock\/endupdating()","title":"func endUpdating()","type":"method"},{"path":"\/documentation\/gdk\/frameclock\/getcurrenttimings()","title":"func getCurrentTimings() -> FrameTimingsRef!","type":"method"},{"path":"\/documentation\/gdk\/frameclock\/getfps()","title":"func getFps() -> CDouble","type":"method"},{"path":"\/documentation\/gdk\/frameclock\/getframecounter()","title":"func getFrameCounter() -> gint64","type":"method"},{"path":"\/documentation\/gdk\/frameclock\/getframetime()","title":"func getFrameTime() -> gint64","type":"method"},{"path":"\/documentation\/gdk\/frameclock\/gethistorystart()","title":"func getHistoryStart() -> gint64","type":"method"},{"path":"\/documentation\/gdk\/frameclock\/getrefreshinfo(basetime:refreshintervalreturn:presentationtimereturn:)","title":"func getRefreshInfo(baseTime: gint64, refreshIntervalReturn: UnsafeMutablePointer<gint64>!, presentationTimeReturn: UnsafeMutablePointer<gint64>!)","type":"method"},{"path":"\/documentation\/gdk\/frameclock\/gettimings(framecounter:)","title":"func getTimings(frameCounter: gint64) -> FrameTimingsRef!","type":"method"},{"path":"\/documentation\/gdk\/frameclock\/onafterpaint(flags:handler:)","title":"func onAfterPaint(flags: ConnectFlags, handler: (FrameClockRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclock\/onbeforepaint(flags:handler:)","title":"func onBeforePaint(flags: ConnectFlags, handler: (FrameClockRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclock\/onflushevents(flags:handler:)","title":"func onFlushEvents(flags: ConnectFlags, handler: (FrameClockRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclock\/onlayout(flags:handler:)","title":"func onLayout(flags: ConnectFlags, handler: (FrameClockRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclock\/onpaint(flags:handler:)","title":"func onPaint(flags: ConnectFlags, handler: (FrameClockRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclock\/onresumeevents(flags:handler:)","title":"func onResumeEvents(flags: ConnectFlags, handler: (FrameClockRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclock\/onupdate(flags:handler:)","title":"func onUpdate(flags: ConnectFlags, handler: (FrameClockRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclock\/request(phase:)","title":"func request(phase: FrameClockPhase)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclock\/afterpaintsignal","title":"static var afterPaintSignal: FrameClockSignalName","type":"property"},{"path":"\/documentation\/gdk\/frameclock\/beforepaintsignal","title":"static var beforePaintSignal: FrameClockSignalName","type":"property"},{"path":"\/documentation\/gdk\/frameclock\/flusheventssignal","title":"static var flushEventsSignal: FrameClockSignalName","type":"property"},{"path":"\/documentation\/gdk\/frameclock\/layoutsignal","title":"static var layoutSignal: FrameClockSignalName","type":"property"},{"path":"\/documentation\/gdk\/frameclock\/paintsignal","title":"static var paintSignal: FrameClockSignalName","type":"property"},{"path":"\/documentation\/gdk\/frameclock\/resumeeventssignal","title":"static var resumeEventsSignal: FrameClockSignalName","type":"property"},{"path":"\/documentation\/gdk\/frameclock\/updatesignal","title":"static var updateSignal: FrameClockSignalName","type":"property"}],"path":"\/documentation\/gdk\/frameclock\/frameclockprotocol-implementations","title":"FrameClockProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/frameclock","title":"FrameClock","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/frametimings\/init(_:)-4npwk","title":"init!(UnsafeMutablePointer<GdkFrameTimings>?)","type":"init"},{"path":"\/documentation\/gdk\/frametimings\/init(_:)-7w3o1","title":"init(UnsafeMutablePointer<GdkFrameTimings>)","type":"init"},{"path":"\/documentation\/gdk\/frametimings\/init(_:)-81smr","title":"init(UnsafePointer<GdkFrameTimings>)","type":"init"},{"path":"\/documentation\/gdk\/frametimings\/init(_:)-9usm5","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/frametimings\/init(_:)-9x8vq","title":"init!(UnsafePointer<GdkFrameTimings>?)","type":"init"},{"path":"\/documentation\/gdk\/frametimings\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/frametimings\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/frametimings\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/frametimings\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/frametimings\/init(raw:)-6gw8t","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/frametimings\/init(raw:)-93gcs","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/frametimings\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkFrameTimings>)","type":"init"},{"path":"\/documentation\/gdk\/frametimings\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/frametimings\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/frametimings\/init(retainingraw:)-2j7z9","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/frametimings\/init(retainingraw:)-3gbc8","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/frametimings\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/frametimings\/complete","title":"var complete: Bool","type":"property"},{"path":"\/documentation\/gdk\/frametimings\/framecounter","title":"var frameCounter: gint64","type":"property"},{"path":"\/documentation\/gdk\/frametimings\/frametime","title":"var frameTime: gint64","type":"property"},{"path":"\/documentation\/gdk\/frametimings\/frame_timings_ptr","title":"var frame_timings_ptr: UnsafeMutablePointer<GdkFrameTimings>!","type":"property"},{"path":"\/documentation\/gdk\/frametimings\/predictedpresentationtime","title":"var predictedPresentationTime: gint64","type":"property"},{"path":"\/documentation\/gdk\/frametimings\/presentationtime","title":"var presentationTime: gint64","type":"property"},{"path":"\/documentation\/gdk\/frametimings\/refreshinterval","title":"var refreshInterval: gint64","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/frametimings\/getcomplete()","title":"func getComplete() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/frametimings\/getframecounter()","title":"func getFrameCounter() -> gint64","type":"method"},{"path":"\/documentation\/gdk\/frametimings\/getframetime()","title":"func getFrameTime() -> gint64","type":"method"},{"path":"\/documentation\/gdk\/frametimings\/getpredictedpresentationtime()","title":"func getPredictedPresentationTime() -> gint64","type":"method"},{"path":"\/documentation\/gdk\/frametimings\/getpresentationtime()","title":"func getPresentationTime() -> gint64","type":"method"},{"path":"\/documentation\/gdk\/frametimings\/getrefreshinterval()","title":"func getRefreshInterval() -> gint64","type":"method"},{"path":"\/documentation\/gdk\/frametimings\/ref()","title":"func ref() -> FrameTimingsRef!","type":"method"},{"path":"\/documentation\/gdk\/frametimings\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/gdk\/frametimings\/frametimingsprotocol-implementations","title":"FrameTimingsProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/frametimings","title":"FrameTimings","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/glcontext\/init(_:)-33dir","title":"init!(UnsafePointer<GdkGLContext>?)","type":"init"},{"path":"\/documentation\/gdk\/glcontext\/init(_:)-4t90z","title":"init!(UnsafeMutablePointer<GdkGLContext>?)","type":"init"},{"path":"\/documentation\/gdk\/glcontext\/init(_:)-7rbxq","title":"init(UnsafeMutablePointer<GdkGLContext>)","type":"init"},{"path":"\/documentation\/gdk\/glcontext\/init(_:)-9ysav","title":"init(UnsafePointer<GdkGLContext>)","type":"init"},{"path":"\/documentation\/gdk\/glcontext\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/glcontext\/init(glcontext:)","title":"init<T>(gLContext: T)","type":"init"},{"path":"\/documentation\/gdk\/glcontext\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/glcontext\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/glcontext\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/glcontext\/init(raw:)-7ox0y","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/glcontext\/init(raw:)-ubio","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/glcontext\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkGLContext>)","type":"init"},{"path":"\/documentation\/gdk\/glcontext\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/glcontext\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/glcontext\/init(retainingraw:)-36ilc","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/glcontext\/init(retainingraw:)-71d2z","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/glcontext\/getcurrent()","title":"static func getCurrent() -> GLContext!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/glcontext\/allowedapis","title":"var allowedApis: GLAPI","type":"property"},{"path":"\/documentation\/gdk\/glcontext\/api","title":"var api: GLAPI","type":"property"},{"path":"\/documentation\/gdk\/glcontext\/debugenabled","title":"var debugEnabled: Bool","type":"property"},{"path":"\/documentation\/gdk\/glcontext\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/glcontext\/forwardcompatible","title":"var forwardCompatible: Bool","type":"property"},{"path":"\/documentation\/gdk\/glcontext\/gl_context_ptr","title":"var gl_context_ptr: UnsafeMutablePointer<GdkGLContext>!","type":"property"},{"path":"\/documentation\/gdk\/glcontext\/islegacy","title":"var isLegacy: Bool","type":"property"},{"path":"\/documentation\/gdk\/glcontext\/sharedcontext","title":"var sharedContext: GLContextRef!","type":"property"},{"path":"\/documentation\/gdk\/glcontext\/surface","title":"var surface: SurfaceRef!","type":"property"},{"path":"\/documentation\/gdk\/glcontext\/usees","title":"var useEs: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/glcontext\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: GLContextPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/glcontext\/get(property:)","title":"func get(property: GLContextPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/glcontext\/getallowedapis()","title":"func getAllowedApis() -> GLAPI","type":"method"},{"path":"\/documentation\/gdk\/glcontext\/getapi()","title":"func getApi() -> GLAPI","type":"method"},{"path":"\/documentation\/gdk\/glcontext\/getdebugenabled()","title":"func getDebugEnabled() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/glcontext\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/glcontext\/getforwardcompatible()","title":"func getForwardCompatible() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/glcontext\/getrequiredversion(major:minor:)","title":"func getRequiredVersion(major: UnsafeMutablePointer<gint>?, minor: UnsafeMutablePointer<gint>?)","type":"method"},{"path":"\/documentation\/gdk\/glcontext\/getsharedcontext()","title":"func getSharedContext() -> GLContextRef!","type":"method"},{"path":"\/documentation\/gdk\/glcontext\/getsurface()","title":"func getSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/glcontext\/getusees()","title":"func getUseEs() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/glcontext\/getversion(major:minor:)","title":"func getVersion(major: UnsafeMutablePointer<gint>!, minor: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/gdk\/glcontext\/isshared(other:)","title":"func isShared<GLContextT>(other: GLContextT) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/glcontext\/makecurrent()","title":"func makeCurrent()","type":"method"},{"path":"\/documentation\/gdk\/glcontext\/realize()","title":"func realize() throws -> Bool","type":"method"},{"path":"\/documentation\/gdk\/glcontext\/set(property:value:)","title":"func set(property: GLContextPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/glcontext\/set(usees:)","title":"func set(useEs: Int)","type":"method"},{"path":"\/documentation\/gdk\/glcontext\/setallowed(apis:)","title":"func setAllowed(apis: GLAPI)","type":"method"},{"path":"\/documentation\/gdk\/glcontext\/setdebug(enabled:)","title":"func setDebug(enabled: Bool)","type":"method"},{"path":"\/documentation\/gdk\/glcontext\/setforward(compatible:)","title":"func setForward(compatible: Bool)","type":"method"},{"path":"\/documentation\/gdk\/glcontext\/setrequiredversion(major:minor:)","title":"func setRequiredVersion(major: Int, minor: Int)","type":"method"}],"path":"\/documentation\/gdk\/glcontext\/glcontextprotocol-implementations","title":"GLContextProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/glcontext","title":"GLContext","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexture\/init(_:)-38hd9","title":"init(UnsafePointer<GdkGLTexture>)","type":"init"},{"path":"\/documentation\/gdk\/gltexture\/init(_:)-8gub9","title":"init(UnsafeMutablePointer<GdkGLTexture>)","type":"init"},{"path":"\/documentation\/gdk\/gltexture\/init(_:)-9506c","title":"init!(UnsafeMutablePointer<GdkGLTexture>?)","type":"init"},{"path":"\/documentation\/gdk\/gltexture\/init(_:)-mkdl","title":"init!(UnsafePointer<GdkGLTexture>?)","type":"init"},{"path":"\/documentation\/gdk\/gltexture\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/gltexture\/init(gltexture:)","title":"init<T>(gLTexture: T)","type":"init"},{"path":"\/documentation\/gdk\/gltexture\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/gltexture\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/gltexture\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/gltexture\/init(raw:)-5nxfv","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/gltexture\/init(raw:)-ksfg","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/gltexture\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkGLTexture>)","type":"init"},{"path":"\/documentation\/gdk\/gltexture\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/gltexture\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/gltexture\/init(retainingraw:)-41i8j","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/gltexture\/init(retainingraw:)-7u5cm","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexture\/metatypereferenceforgltexture","title":"var metatypeReferenceForGLTexture: GType","type":"property"},{"path":"\/documentation\/gdk\/gltexture\/wrapperforgltexture","title":"var wrapperForGLTexture: GLTextureClassRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexture\/metatypeforgltexture","title":"static var metatypeForGLTexture: GdkGLTextureClass?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexture\/gl_texture_ptr","title":"var gl_texture_ptr: UnsafeMutablePointer<GdkGLTexture>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexture\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: GLTexturePropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/gltexture\/get(property:)","title":"func get(property: GLTexturePropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/gltexture\/release()","title":"func release()","type":"method"},{"path":"\/documentation\/gdk\/gltexture\/set(property:value:)","title":"func set(property: GLTexturePropertyName, value: Value)","type":"method"}],"path":"\/documentation\/gdk\/gltexture\/gltextureprotocol-implementations","title":"GLTextureProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/gltexture","title":"GLTexture","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuilder\/init()","title":"init()","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilder\/init(_:)-46dj3","title":"init(UnsafeMutablePointer<GdkGLTextureBuilder>)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilder\/init(_:)-492uj","title":"init(UnsafePointer<GdkGLTextureBuilder>)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilder\/init(_:)-9wwis","title":"init!(UnsafeMutablePointer<GdkGLTextureBuilder>?)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilder\/init(_:)-ucb4","title":"init!(UnsafePointer<GdkGLTextureBuilder>?)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilder\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilder\/init(gltexturebuilder:)","title":"init<T>(gLTextureBuilder: T)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilder\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilder\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilder\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilder\/init(raw:)-6dux1","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilder\/init(raw:)-8ak5q","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilder\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkGLTextureBuilder>)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilder\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilder\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilder\/init(retainingraw:)-12yeu","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilder\/init(retainingraw:)-4vl9v","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuilder\/metatypereferenceforgltexturebuilder","title":"var metatypeReferenceForGLTextureBuilder: GType","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilder\/wrapperforgltexturebuilder","title":"var wrapperForGLTextureBuilder: GLTextureBuilderClassRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuilder\/metatypeforgltexturebuilder","title":"static var metatypeForGLTextureBuilder: GdkGLTextureBuilderClass?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuilder\/context","title":"var context: GLContextRef!","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilder\/format","title":"var format: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilder\/gl_texture_builder_ptr","title":"var gl_texture_builder_ptr: UnsafeMutablePointer<GdkGLTextureBuilder>!","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilder\/hasmipmap","title":"var hasMipmap: Bool","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilder\/height","title":"var height: Int","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilder\/id","title":"var id: Int","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilder\/sync","title":"var sync: gpointer?","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilder\/updateregion","title":"var updateRegion: RegionRef!","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilder\/updatetexture","title":"var updateTexture: TextureRef!","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilder\/width","title":"var width: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuilder\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: GLTextureBuilderPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilder\/build(destroy:data:)","title":"func build(destroy: GDestroyNotify?, data: gpointer?) -> TextureRef!","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilder\/get(property:)","title":"func get(property: GLTextureBuilderPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilder\/getcontext()","title":"func getContext() -> GLContextRef!","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilder\/getformat()","title":"func getFormat() -> GdkMemoryFormat","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilder\/gethasmipmap()","title":"func getHasMipmap() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilder\/getheight()","title":"func getHeight() -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilder\/getid()","title":"func getId() -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilder\/getsync()","title":"func getSync() -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilder\/getupdateregion()","title":"func getUpdateRegion() -> RegionRef!","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilder\/getupdatetexture()","title":"func getUpdateTexture() -> TextureRef!","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilder\/getwidth()","title":"func getWidth() -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilder\/set(context:)","title":"func set(context: GLContextRef?)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilder\/set(format:)","title":"func set(format: GdkMemoryFormat)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilder\/set(hasmipmap:)","title":"func set(hasMipmap: Bool)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilder\/set(height:)","title":"func set(height: Int)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilder\/set(id:)","title":"func set(id: Int)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilder\/set(property:value:)","title":"func set(property: GLTextureBuilderPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilder\/set(sync:)","title":"func set(sync: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilder\/set(width:)","title":"func set(width: Int)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilder\/setupdate(region:)","title":"func setUpdate(region: RegionRef?)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilder\/setupdate(texture:)","title":"func setUpdate(texture: TextureRef?)","type":"method"}],"path":"\/documentation\/gdk\/gltexturebuilder\/gltexturebuilderprotocol-implementations","title":"GLTextureBuilderProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/gltexturebuilder","title":"GLTextureBuilder","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/grabbrokenevent\/init(_:)-4tgf3","title":"init!(UnsafeMutablePointer<GdkGrabBrokenEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/grabbrokenevent\/init(_:)-5wejp","title":"init!(UnsafePointer<GdkGrabBrokenEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/grabbrokenevent\/init(_:)-9kj5h","title":"init(UnsafePointer<GdkGrabBrokenEvent>)","type":"init"},{"path":"\/documentation\/gdk\/grabbrokenevent\/init(_:)-9ktgi","title":"init(UnsafeMutablePointer<GdkGrabBrokenEvent>)","type":"init"},{"path":"\/documentation\/gdk\/grabbrokenevent\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/grabbrokenevent\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/grabbrokenevent\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/grabbrokenevent\/init(grabbrokenevent:)","title":"init<T>(grabBrokenEvent: T)","type":"init"},{"path":"\/documentation\/gdk\/grabbrokenevent\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/grabbrokenevent\/init(raw:)-2n14","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/grabbrokenevent\/init(raw:)-9a369","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/grabbrokenevent\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkGrabBrokenEvent>)","type":"init"},{"path":"\/documentation\/gdk\/grabbrokenevent\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/grabbrokenevent\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/grabbrokenevent\/init(retainingraw:)-831ph","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/grabbrokenevent\/init(retainingraw:)-q0gl","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/grabbrokenevent\/grabsurface","title":"var grabSurface: SurfaceRef!","type":"property"},{"path":"\/documentation\/gdk\/grabbrokenevent\/grab_broken_event_ptr","title":"var grab_broken_event_ptr: UnsafeMutablePointer<GdkGrabBrokenEvent>!","type":"property"},{"path":"\/documentation\/gdk\/grabbrokenevent\/implicit","title":"var implicit: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/grabbrokenevent\/getgrabsurface()","title":"func getGrabSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/grabbrokenevent\/getimplicit()","title":"func getImplicit() -> Bool","type":"method"}],"path":"\/documentation\/gdk\/grabbrokenevent\/grabbrokeneventprotocol-implementations","title":"GrabBrokenEventProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/grabbrokenevent","title":"GrabBrokenEvent","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/keyevent\/init(_:)-2xrnm","title":"init!(UnsafeMutablePointer<GdkKeyEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/keyevent\/init(_:)-4id7x","title":"init!(UnsafePointer<GdkKeyEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/keyevent\/init(_:)-74fx4","title":"init(UnsafePointer<GdkKeyEvent>)","type":"init"},{"path":"\/documentation\/gdk\/keyevent\/init(_:)-9hzhm","title":"init(UnsafeMutablePointer<GdkKeyEvent>)","type":"init"},{"path":"\/documentation\/gdk\/keyevent\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/keyevent\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/keyevent\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/keyevent\/init(keyevent:)","title":"init<T>(keyEvent: T)","type":"init"},{"path":"\/documentation\/gdk\/keyevent\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/keyevent\/init(raw:)-2y88e","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/keyevent\/init(raw:)-39fg7","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/keyevent\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkKeyEvent>)","type":"init"},{"path":"\/documentation\/gdk\/keyevent\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/keyevent\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/keyevent\/init(retainingraw:)-3ok42","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/keyevent\/init(retainingraw:)-5nh7r","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/keyevent\/consumedmodifiers","title":"var consumedModifiers: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/keyevent\/ismodifier","title":"var isModifier: Bool","type":"property"},{"path":"\/documentation\/gdk\/keyevent\/key_event_ptr","title":"var key_event_ptr: UnsafeMutablePointer<GdkKeyEvent>!","type":"property"},{"path":"\/documentation\/gdk\/keyevent\/keycode","title":"var keycode: Int","type":"property"},{"path":"\/documentation\/gdk\/keyevent\/keyval","title":"var keyval: Int","type":"property"},{"path":"\/documentation\/gdk\/keyevent\/layout","title":"var layout: Int","type":"property"},{"path":"\/documentation\/gdk\/keyevent\/level","title":"var level: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/keyevent\/getconsumedmodifiers()","title":"func getConsumedModifiers() -> ModifierType","type":"method"},{"path":"\/documentation\/gdk\/keyevent\/getkeycode()","title":"func getKeycode() -> Int","type":"method"},{"path":"\/documentation\/gdk\/keyevent\/getkeyval()","title":"func getKeyval() -> Int","type":"method"},{"path":"\/documentation\/gdk\/keyevent\/getlayout()","title":"func getLayout() -> Int","type":"method"},{"path":"\/documentation\/gdk\/keyevent\/getlevel()","title":"func getLevel() -> Int","type":"method"},{"path":"\/documentation\/gdk\/keyevent\/getmatch(keyval:modifiers:)","title":"func getMatch(keyval: UnsafeMutablePointer<guint>!, modifiers: UnsafeMutablePointer<GdkModifierType>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/keyevent\/matches(keyval:modifiers:)","title":"func matches(keyval: Int, modifiers: ModifierType) -> GdkKeyMatch","type":"method"}],"path":"\/documentation\/gdk\/keyevent\/keyeventprotocol-implementations","title":"KeyEventProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/keyevent","title":"KeyEvent","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/keymapkey\/init(_:)-1b0ki","title":"init(UnsafeMutablePointer<GdkKeymapKey>)","type":"init"},{"path":"\/documentation\/gdk\/keymapkey\/init(_:)-1vium","title":"init!(UnsafeMutablePointer<GdkKeymapKey>?)","type":"init"},{"path":"\/documentation\/gdk\/keymapkey\/init(_:)-50ur","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/keymapkey\/init(_:)-8h5gz","title":"init!(UnsafePointer<GdkKeymapKey>?)","type":"init"},{"path":"\/documentation\/gdk\/keymapkey\/init(_:)-91pc5","title":"init(UnsafePointer<GdkKeymapKey>)","type":"init"},{"path":"\/documentation\/gdk\/keymapkey\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/keymapkey\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/keymapkey\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/keymapkey\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/keymapkey\/init(raw:)-1hwv9","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/keymapkey\/init(raw:)-747rx","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/keymapkey\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkKeymapKey>)","type":"init"},{"path":"\/documentation\/gdk\/keymapkey\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/keymapkey\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/keymapkey\/init(retainingraw:)-2zk1d","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/keymapkey\/init(retainingraw:)-6uem4","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/keymapkey\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/keymapkey\/group","title":"var group: gint","type":"property"},{"path":"\/documentation\/gdk\/keymapkey\/keycode","title":"var keycode: guint","type":"property"},{"path":"\/documentation\/gdk\/keymapkey\/level","title":"var level: gint","type":"property"}],"path":"\/documentation\/gdk\/keymapkey\/keymapkeyprotocol-implementations","title":"KeymapKeyProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/keymapkey","title":"KeymapKey","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytexture\/init(_:)-1knsb","title":"init(UnsafePointer<GdkMemoryTexture>)","type":"init"},{"path":"\/documentation\/gdk\/memorytexture\/init(_:)-474o3","title":"init(UnsafeMutablePointer<GdkMemoryTexture>)","type":"init"},{"path":"\/documentation\/gdk\/memorytexture\/init(_:)-5rtzl","title":"init!(UnsafePointer<GdkMemoryTexture>?)","type":"init"},{"path":"\/documentation\/gdk\/memorytexture\/init(_:)-7e8w2","title":"init!(UnsafeMutablePointer<GdkMemoryTexture>?)","type":"init"},{"path":"\/documentation\/gdk\/memorytexture\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/memorytexture\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/memorytexture\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/memorytexture\/init(memorytexture:)","title":"init<T>(memoryTexture: T)","type":"init"},{"path":"\/documentation\/gdk\/memorytexture\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/memorytexture\/init(raw:)-1svyz","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/memorytexture\/init(raw:)-3rsv4","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/memorytexture\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkMemoryTexture>)","type":"init"},{"path":"\/documentation\/gdk\/memorytexture\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/memorytexture\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/memorytexture\/init(retainingraw:)-3fohl","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/memorytexture\/init(retainingraw:)-6koda","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytexture\/metatypereferenceformemorytexture","title":"var metatypeReferenceForMemoryTexture: GType","type":"property"},{"path":"\/documentation\/gdk\/memorytexture\/wrapperformemorytexture","title":"var wrapperForMemoryTexture: MemoryTextureClassRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytexture\/metatypeformemorytexture","title":"static var metatypeForMemoryTexture: GdkMemoryTextureClass?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytexture\/memory_texture_ptr","title":"var memory_texture_ptr: UnsafeMutablePointer<GdkMemoryTexture>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytexture\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: MemoryTexturePropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/memorytexture\/get(property:)","title":"func get(property: MemoryTexturePropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/memorytexture\/set(property:value:)","title":"func set(property: MemoryTexturePropertyName, value: Value)","type":"method"}],"path":"\/documentation\/gdk\/memorytexture\/memorytextureprotocol-implementations","title":"MemoryTextureProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/memorytexture","title":"MemoryTexture","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitor\/init(_:)-26vo7","title":"init(UnsafeMutablePointer<GdkMonitor>)","type":"init"},{"path":"\/documentation\/gdk\/monitor\/init(_:)-389rm","title":"init!(UnsafeMutablePointer<GdkMonitor>?)","type":"init"},{"path":"\/documentation\/gdk\/monitor\/init(_:)-3fe6s","title":"init(UnsafePointer<GdkMonitor>)","type":"init"},{"path":"\/documentation\/gdk\/monitor\/init(_:)-3tqb","title":"init!(UnsafePointer<GdkMonitor>?)","type":"init"},{"path":"\/documentation\/gdk\/monitor\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/monitor\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/monitor\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/monitor\/init(monitor:)","title":"init<T>(monitor: T)","type":"init"},{"path":"\/documentation\/gdk\/monitor\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/monitor\/init(raw:)-2lybv","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/monitor\/init(raw:)-9yzyz","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/monitor\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkMonitor>)","type":"init"},{"path":"\/documentation\/gdk\/monitor\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/monitor\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/monitor\/init(retainingraw:)-24mv5","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/monitor\/init(retainingraw:)-2ftwo","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitor\/metatypereferenceformonitor","title":"var metatypeReferenceForMonitor: GType","type":"property"},{"path":"\/documentation\/gdk\/monitor\/wrapperformonitor","title":"var wrapperForMonitor: MonitorClassRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitor\/metatypeformonitor","title":"static var metatypeForMonitor: GdkMonitorClass?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitor\/connector","title":"var connector: String!","type":"property"},{"path":"\/documentation\/gdk\/monitor\/description","title":"var description: String!","type":"property"},{"path":"\/documentation\/gdk\/monitor\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/monitor\/heightmm","title":"var heightMm: Int","type":"property"},{"path":"\/documentation\/gdk\/monitor\/isvalid","title":"var isValid: Bool","type":"property"},{"path":"\/documentation\/gdk\/monitor\/manufacturer","title":"var manufacturer: String!","type":"property"},{"path":"\/documentation\/gdk\/monitor\/model","title":"var model: String!","type":"property"},{"path":"\/documentation\/gdk\/monitor\/monitor_ptr","title":"var monitor_ptr: UnsafeMutablePointer<GdkMonitor>!","type":"property"},{"path":"\/documentation\/gdk\/monitor\/refreshrate","title":"var refreshRate: Int","type":"property"},{"path":"\/documentation\/gdk\/monitor\/scalefactor","title":"var scaleFactor: Int","type":"property"},{"path":"\/documentation\/gdk\/monitor\/subpixellayout","title":"var subpixelLayout: GdkSubpixelLayout","type":"property"},{"path":"\/documentation\/gdk\/monitor\/widthmm","title":"var widthMm: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitor\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: MonitorPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/monitor\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: MonitorSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitor\/connect(signal:flags:handler:)","title":"func connect(signal: MonitorSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitor\/get(geometry:)","title":"func get<RectangleT>(geometry: RectangleT)","type":"method"},{"path":"\/documentation\/gdk\/monitor\/get(property:)","title":"func get(property: MonitorPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/monitor\/getconnector()","title":"func getConnector() -> String!","type":"method"},{"path":"\/documentation\/gdk\/monitor\/getdescription()","title":"func getDescription() -> String!","type":"method"},{"path":"\/documentation\/gdk\/monitor\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/monitor\/getheightmm()","title":"func getHeightMm() -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitor\/getmanufacturer()","title":"func getManufacturer() -> String!","type":"method"},{"path":"\/documentation\/gdk\/monitor\/getmodel()","title":"func getModel() -> String!","type":"method"},{"path":"\/documentation\/gdk\/monitor\/getrefreshrate()","title":"func getRefreshRate() -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitor\/getscalefactor()","title":"func getScaleFactor() -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitor\/getsubpixellayout()","title":"func getSubpixelLayout() -> GdkSubpixelLayout","type":"method"},{"path":"\/documentation\/gdk\/monitor\/getwidthmm()","title":"func getWidthMm() -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitor\/oninvalidate(flags:handler:)","title":"func onInvalidate(flags: ConnectFlags, handler: (MonitorRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitor\/onnotifyconnector(flags:handler:)","title":"func onNotifyConnector(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitor\/onnotifydescription(flags:handler:)","title":"func onNotifyDescription(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitor\/onnotifydisplay(flags:handler:)","title":"func onNotifyDisplay(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitor\/onnotifygeometry(flags:handler:)","title":"func onNotifyGeometry(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitor\/onnotifyheightmm(flags:handler:)","title":"func onNotifyHeightMm(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitor\/onnotifymanufacturer(flags:handler:)","title":"func onNotifyManufacturer(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitor\/onnotifymodel(flags:handler:)","title":"func onNotifyModel(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitor\/onnotifyrefreshrate(flags:handler:)","title":"func onNotifyRefreshRate(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitor\/onnotifyscalefactor(flags:handler:)","title":"func onNotifyScaleFactor(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitor\/onnotifysubpixellayout(flags:handler:)","title":"func onNotifySubpixelLayout(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitor\/onnotifyvalid(flags:handler:)","title":"func onNotifyValid(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitor\/onnotifywidthmm(flags:handler:)","title":"func onNotifyWidthMm(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitor\/set(property:value:)","title":"func set(property: MonitorPropertyName, value: Value)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitor\/invalidatesignal","title":"static var invalidateSignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitor\/notifyconnectorsignal","title":"static var notifyConnectorSignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitor\/notifydescriptionsignal","title":"static var notifyDescriptionSignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitor\/notifydisplaysignal","title":"static var notifyDisplaySignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitor\/notifygeometrysignal","title":"static var notifyGeometrySignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitor\/notifyheightmmsignal","title":"static var notifyHeightMmSignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitor\/notifymanufacturersignal","title":"static var notifyManufacturerSignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitor\/notifymodelsignal","title":"static var notifyModelSignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitor\/notifyrefreshratesignal","title":"static var notifyRefreshRateSignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitor\/notifyscalefactorsignal","title":"static var notifyScaleFactorSignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitor\/notifysubpixellayoutsignal","title":"static var notifySubpixelLayoutSignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitor\/notifyvalidsignal","title":"static var notifyValidSignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitor\/notifywidthmmsignal","title":"static var notifyWidthMmSignal: MonitorSignalName","type":"property"}],"path":"\/documentation\/gdk\/monitor\/monitorprotocol-implementations","title":"MonitorProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/monitor","title":"Monitor","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/motionevent\/init(_:)-1wcz5","title":"init(UnsafeMutablePointer<GdkMotionEvent>)","type":"init"},{"path":"\/documentation\/gdk\/motionevent\/init(_:)-5pn43","title":"init!(UnsafePointer<GdkMotionEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/motionevent\/init(_:)-7i4t7","title":"init!(UnsafeMutablePointer<GdkMotionEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/motionevent\/init(_:)-7q711","title":"init(UnsafePointer<GdkMotionEvent>)","type":"init"},{"path":"\/documentation\/gdk\/motionevent\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/motionevent\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/motionevent\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/motionevent\/init(motionevent:)","title":"init<T>(motionEvent: T)","type":"init"},{"path":"\/documentation\/gdk\/motionevent\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/motionevent\/init(raw:)-41bah","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/motionevent\/init(raw:)-7w61w","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/motionevent\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkMotionEvent>)","type":"init"},{"path":"\/documentation\/gdk\/motionevent\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/motionevent\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/motionevent\/init(retainingraw:)-1jrsc","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/motionevent\/init(retainingraw:)-7oili","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/motionevent\/motion_event_ptr","title":"var motion_event_ptr: UnsafeMutablePointer<GdkMotionEvent>!","type":"property"}],"path":"\/documentation\/gdk\/motionevent\/motioneventprotocol-implementations","title":"MotionEventProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/motionevent","title":"MotionEvent","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/padevent\/init(_:)-4fiaa","title":"init(UnsafeMutablePointer<GdkPadEvent>)","type":"init"},{"path":"\/documentation\/gdk\/padevent\/init(_:)-5odch","title":"init!(UnsafeMutablePointer<GdkPadEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/padevent\/init(_:)-6qlq2","title":"init!(UnsafePointer<GdkPadEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/padevent\/init(_:)-6swqx","title":"init(UnsafePointer<GdkPadEvent>)","type":"init"},{"path":"\/documentation\/gdk\/padevent\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/padevent\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/padevent\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/padevent\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/padevent\/init(padevent:)","title":"init<T>(padEvent: T)","type":"init"},{"path":"\/documentation\/gdk\/padevent\/init(raw:)-24s1f","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/padevent\/init(raw:)-41hba","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/padevent\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkPadEvent>)","type":"init"},{"path":"\/documentation\/gdk\/padevent\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/padevent\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/padevent\/init(retainingraw:)-1h3ri","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/padevent\/init(retainingraw:)-7lupc","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/padevent\/button","title":"var button: Int","type":"property"},{"path":"\/documentation\/gdk\/padevent\/pad_event_ptr","title":"var pad_event_ptr: UnsafeMutablePointer<GdkPadEvent>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/padevent\/getaxisvalue(index:value:)","title":"func getAxisValue(index: UnsafeMutablePointer<guint>!, value: UnsafeMutablePointer<CDouble>!)","type":"method"},{"path":"\/documentation\/gdk\/padevent\/getbutton()","title":"func getButton() -> Int","type":"method"},{"path":"\/documentation\/gdk\/padevent\/getgroupmode(group:mode:)","title":"func getGroupMode(group: UnsafeMutablePointer<guint>!, mode: UnsafeMutablePointer<guint>!)","type":"method"}],"path":"\/documentation\/gdk\/padevent\/padeventprotocol-implementations","title":"PadEventProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/padevent","title":"PadEvent","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintable\/init(_:)-222ls","title":"init!(UnsafeMutablePointer<GdkPaintable>?)","type":"init"},{"path":"\/documentation\/gdk\/paintable\/init(_:)-3kobt","title":"init(UnsafeMutablePointer<GdkPaintable>)","type":"init"},{"path":"\/documentation\/gdk\/paintable\/init(_:)-6bcf8","title":"init(UnsafePointer<GdkPaintable>)","type":"init"},{"path":"\/documentation\/gdk\/paintable\/init(_:)-6vx5n","title":"init!(UnsafePointer<GdkPaintable>?)","type":"init"},{"path":"\/documentation\/gdk\/paintable\/init(_:)-9n6xn","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/paintable\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/paintable\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/paintable\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/paintable\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/paintable\/init(raw:)-3pp5g","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/paintable\/init(raw:)-7ic9d","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/paintable\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkPaintable>)","type":"init"},{"path":"\/documentation\/gdk\/paintable\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/paintable\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/paintable\/init(retainingraw:)-93oe7","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/paintable\/init(retainingraw:)-9evfa","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintable\/metatypereferenceforpaintable","title":"var metatypeReferenceForPaintable: GType","type":"property"},{"path":"\/documentation\/gdk\/paintable\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"path":"\/documentation\/gdk\/paintable\/wrapperforpaintable","title":"var wrapperForPaintable: PaintableInterfaceRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintable\/metatypeforpaintable","title":"static var metatypeForPaintable: GdkPaintableInterface?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintable\/new(empty:intrinsicheight:)","title":"static func new(empty: Int, intrinsicHeight: Int) -> Paintable!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintable\/currentimage","title":"var currentImage: PaintableRef!","type":"property"},{"path":"\/documentation\/gdk\/paintable\/flags","title":"var flags: PaintableFlags","type":"property"},{"path":"\/documentation\/gdk\/paintable\/intrinsicaspectratio","title":"var intrinsicAspectRatio: CDouble","type":"property"},{"path":"\/documentation\/gdk\/paintable\/intrinsicheight","title":"var intrinsicHeight: Int","type":"property"},{"path":"\/documentation\/gdk\/paintable\/intrinsicwidth","title":"var intrinsicWidth: Int","type":"property"},{"path":"\/documentation\/gdk\/paintable\/paintable_ptr","title":"var paintable_ptr: UnsafeMutablePointer<GdkPaintable>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintable\/computeconcretesize(specifiedwidth:specifiedheight:defaultwidth:defaultheight:concretewidth:concreteheight:)","title":"func computeConcreteSize(specifiedWidth: CDouble, specifiedHeight: CDouble, defaultWidth: CDouble, defaultHeight: CDouble, concreteWidth: UnsafeMutablePointer<CDouble>!, concreteHeight: UnsafeMutablePointer<CDouble>!)","type":"method"},{"path":"\/documentation\/gdk\/paintable\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: PaintableSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/paintable\/connect(signal:flags:handler:)","title":"func connect(signal: PaintableSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/paintable\/getcurrentimage()","title":"func getCurrentImage() -> PaintableRef!","type":"method"},{"path":"\/documentation\/gdk\/paintable\/getflags()","title":"func getFlags() -> PaintableFlags","type":"method"},{"path":"\/documentation\/gdk\/paintable\/getintrinsicaspectratio()","title":"func getIntrinsicAspectRatio() -> CDouble","type":"method"},{"path":"\/documentation\/gdk\/paintable\/getintrinsicheight()","title":"func getIntrinsicHeight() -> Int","type":"method"},{"path":"\/documentation\/gdk\/paintable\/getintrinsicwidth()","title":"func getIntrinsicWidth() -> Int","type":"method"},{"path":"\/documentation\/gdk\/paintable\/invalidatecontents()","title":"func invalidateContents()","type":"method"},{"path":"\/documentation\/gdk\/paintable\/invalidatesize()","title":"func invalidateSize()","type":"method"},{"path":"\/documentation\/gdk\/paintable\/oninvalidatecontents(flags:handler:)","title":"func onInvalidateContents(flags: ConnectFlags, handler: (PaintableRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/paintable\/oninvalidatesize(flags:handler:)","title":"func onInvalidateSize(flags: ConnectFlags, handler: (PaintableRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/paintable\/snapshot(snapshot:width:height:)","title":"func snapshot<SnapshotT>(snapshot: SnapshotT, width: CDouble, height: CDouble)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintable\/invalidatecontentssignal","title":"static var invalidateContentsSignal: PaintableSignalName","type":"property"},{"path":"\/documentation\/gdk\/paintable\/invalidatesizesignal","title":"static var invalidateSizeSignal: PaintableSignalName","type":"property"}],"path":"\/documentation\/gdk\/paintable\/paintableprotocol-implementations","title":"PaintableProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/paintable","title":"Paintable","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/popup\/init(_:)-44esq","title":"init(UnsafePointer<GdkPopup>)","type":"init"},{"path":"\/documentation\/gdk\/popup\/init(_:)-5wm9m","title":"init!(UnsafePointer<GdkPopup>?)","type":"init"},{"path":"\/documentation\/gdk\/popup\/init(_:)-8ctfj","title":"init(UnsafeMutablePointer<GdkPopup>)","type":"init"},{"path":"\/documentation\/gdk\/popup\/init(_:)-8mwxe","title":"init!(UnsafeMutablePointer<GdkPopup>?)","type":"init"},{"path":"\/documentation\/gdk\/popup\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/popup\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/popup\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/popup\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/popup\/init(popup:)","title":"init<T>(popup: T)","type":"init"},{"path":"\/documentation\/gdk\/popup\/init(raw:)-77qml","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/popup\/init(raw:)-9ual8","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/popup\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkPopup>)","type":"init"},{"path":"\/documentation\/gdk\/popup\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/popup\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/popup\/init(retainingraw:)-1o817","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/popup\/init(retainingraw:)-8glvx","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/popup\/metatypereferenceforpopup","title":"var metatypeReferenceForPopup: GType","type":"property"},{"path":"\/documentation\/gdk\/popup\/wrapperforpopup","title":"var wrapperForPopup: PopupInterfaceRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/popup\/metatypeforpopup","title":"static var metatypeForPopup: GdkPopupInterface?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/popup\/autohide","title":"var autohide: Bool","type":"property"},{"path":"\/documentation\/gdk\/popup\/parent","title":"var parent: SurfaceRef!","type":"property"},{"path":"\/documentation\/gdk\/popup\/popup_ptr","title":"var popup_ptr: UnsafeMutablePointer<GdkPopup>!","type":"property"},{"path":"\/documentation\/gdk\/popup\/positionx","title":"var positionX: Int","type":"property"},{"path":"\/documentation\/gdk\/popup\/positiony","title":"var positionY: Int","type":"property"},{"path":"\/documentation\/gdk\/popup\/rectanchor","title":"var rectAnchor: GdkGravity","type":"property"},{"path":"\/documentation\/gdk\/popup\/surfaceanchor","title":"var surfaceAnchor: GdkGravity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/popup\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: PopupPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/popup\/get(property:)","title":"func get(property: PopupPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/popup\/getautohide()","title":"func getAutohide() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/popup\/getparent()","title":"func getParent() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/popup\/getpositionx()","title":"func getPositionX() -> Int","type":"method"},{"path":"\/documentation\/gdk\/popup\/getpositiony()","title":"func getPositionY() -> Int","type":"method"},{"path":"\/documentation\/gdk\/popup\/getrectanchor()","title":"func getRectAnchor() -> GdkGravity","type":"method"},{"path":"\/documentation\/gdk\/popup\/getsurfaceanchor()","title":"func getSurfaceAnchor() -> GdkGravity","type":"method"},{"path":"\/documentation\/gdk\/popup\/present(width:height:layout:)","title":"func present<PopupLayoutT>(width: Int, height: Int, layout: PopupLayoutT) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/popup\/set(property:value:)","title":"func set(property: PopupPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/gdk\/popup\/popupprotocol-implementations","title":"PopupProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/popup","title":"Popup","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/popuplayout\/init(_:)-1f31g","title":"init!(UnsafeMutablePointer<GdkPopupLayout>?)","type":"init"},{"path":"\/documentation\/gdk\/popuplayout\/init(_:)-35w25","title":"init(UnsafeMutablePointer<GdkPopupLayout>)","type":"init"},{"path":"\/documentation\/gdk\/popuplayout\/init(_:)-3scnt","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/popuplayout\/init(_:)-5vjsg","title":"init(UnsafePointer<GdkPopupLayout>)","type":"init"},{"path":"\/documentation\/gdk\/popuplayout\/init(_:)-89q8m","title":"init!(UnsafePointer<GdkPopupLayout>?)","type":"init"},{"path":"\/documentation\/gdk\/popuplayout\/init(anchorrect:rectanchor:surfaceanchor:)","title":"init<RectangleT>(anchorRect: RectangleT, rectAnchor: GdkGravity, surfaceAnchor: GdkGravity)","type":"init"},{"path":"\/documentation\/gdk\/popuplayout\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/popuplayout\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/popuplayout\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/popuplayout\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/popuplayout\/init(raw:)-1m141","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/popuplayout\/init(raw:)-5eo2s","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/popuplayout\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkPopupLayout>)","type":"init"},{"path":"\/documentation\/gdk\/popuplayout\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/popuplayout\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/popuplayout\/init(retainingraw:)-1mom2","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/popuplayout\/init(retainingraw:)-47159","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/popuplayout\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/popuplayout\/anchorhints","title":"var anchorHints: AnchorHints","type":"property"},{"path":"\/documentation\/gdk\/popuplayout\/anchorrect","title":"var anchorRect: RectangleRef!","type":"property"},{"path":"\/documentation\/gdk\/popuplayout\/popup_layout_ptr","title":"var popup_layout_ptr: UnsafeMutablePointer<GdkPopupLayout>!","type":"property"},{"path":"\/documentation\/gdk\/popuplayout\/rectanchor","title":"var rectAnchor: GdkGravity","type":"property"},{"path":"\/documentation\/gdk\/popuplayout\/surfaceanchor","title":"var surfaceAnchor: GdkGravity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/popuplayout\/copy()","title":"func copy() -> PopupLayoutRef!","type":"method"},{"path":"\/documentation\/gdk\/popuplayout\/equal(other:)","title":"func equal<PopupLayoutT>(other: PopupLayoutT) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/popuplayout\/getanchorhints()","title":"func getAnchorHints() -> AnchorHints","type":"method"},{"path":"\/documentation\/gdk\/popuplayout\/getanchorrect()","title":"func getAnchorRect() -> RectangleRef!","type":"method"},{"path":"\/documentation\/gdk\/popuplayout\/getoffset(dx:dy:)","title":"func getOffset(dx: UnsafeMutablePointer<gint>!, dy: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/gdk\/popuplayout\/getrectanchor()","title":"func getRectAnchor() -> GdkGravity","type":"method"},{"path":"\/documentation\/gdk\/popuplayout\/getshadowwidth(left:right:top:bottom:)","title":"func getShadowWidth(left: UnsafeMutablePointer<gint>!, right: UnsafeMutablePointer<gint>!, top: UnsafeMutablePointer<gint>!, bottom: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/gdk\/popuplayout\/getsurfaceanchor()","title":"func getSurfaceAnchor() -> GdkGravity","type":"method"},{"path":"\/documentation\/gdk\/popuplayout\/ref()","title":"func ref() -> PopupLayoutRef!","type":"method"},{"path":"\/documentation\/gdk\/popuplayout\/set(anchorhints:)","title":"func set(anchorHints: AnchorHints)","type":"method"},{"path":"\/documentation\/gdk\/popuplayout\/set(anchorrect:)","title":"func set<RectangleT>(anchorRect: RectangleT)","type":"method"},{"path":"\/documentation\/gdk\/popuplayout\/setoffset(dx:dy:)","title":"func setOffset(dx: Int, dy: Int)","type":"method"},{"path":"\/documentation\/gdk\/popuplayout\/setrect(anchor:)","title":"func setRect(anchor: GdkGravity)","type":"method"},{"path":"\/documentation\/gdk\/popuplayout\/setshadowwidth(left:right:top:bottom:)","title":"func setShadowWidth(left: Int, right: Int, top: Int, bottom: Int)","type":"method"},{"path":"\/documentation\/gdk\/popuplayout\/setsurface(anchor:)","title":"func setSurface(anchor: GdkGravity)","type":"method"},{"path":"\/documentation\/gdk\/popuplayout\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/gdk\/popuplayout\/popuplayoutprotocol-implementations","title":"PopupLayoutProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/popuplayout","title":"PopupLayout","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/proximityevent\/init(_:)-3lxhw","title":"init!(UnsafePointer<GdkProximityEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/proximityevent\/init(_:)-522rx","title":"init!(UnsafeMutablePointer<GdkProximityEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/proximityevent\/init(_:)-6b2ie","title":"init(UnsafeMutablePointer<GdkProximityEvent>)","type":"init"},{"path":"\/documentation\/gdk\/proximityevent\/init(_:)-qzzb","title":"init(UnsafePointer<GdkProximityEvent>)","type":"init"},{"path":"\/documentation\/gdk\/proximityevent\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/proximityevent\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/proximityevent\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/proximityevent\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/proximityevent\/init(proximityevent:)","title":"init<T>(proximityEvent: T)","type":"init"},{"path":"\/documentation\/gdk\/proximityevent\/init(raw:)-3lge6","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/proximityevent\/init(raw:)-680kv","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/proximityevent\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkProximityEvent>)","type":"init"},{"path":"\/documentation\/gdk\/proximityevent\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/proximityevent\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/proximityevent\/init(retainingraw:)-6jko0","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/proximityevent\/init(retainingraw:)-eu2m","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/proximityevent\/proximity_event_ptr","title":"var proximity_event_ptr: UnsafeMutablePointer<GdkProximityEvent>!","type":"property"}],"path":"\/documentation\/gdk\/proximityevent\/proximityeventprotocol-implementations","title":"ProximityEventProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/proximityevent","title":"ProximityEvent","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/rgba\/init(_:)-43rkn","title":"init!(UnsafePointer<GdkRGBA>?)","type":"init"},{"path":"\/documentation\/gdk\/rgba\/init(_:)-4kqpe","title":"init(UnsafeMutablePointer<GdkRGBA>)","type":"init"},{"path":"\/documentation\/gdk\/rgba\/init(_:)-58unw","title":"init!(UnsafeMutablePointer<GdkRGBA>?)","type":"init"},{"path":"\/documentation\/gdk\/rgba\/init(_:)-7jjjy","title":"init(UnsafePointer<GdkRGBA>)","type":"init"},{"path":"\/documentation\/gdk\/rgba\/init(_:)-msh4","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/rgba\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/rgba\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/rgba\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/rgba\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/rgba\/init(raw:)-55l0a","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/rgba\/init(raw:)-7s4y3","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/rgba\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkRGBA>)","type":"init"},{"path":"\/documentation\/gdk\/rgba\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/rgba\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/rgba\/init(retainingraw:)-71ae","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/rgba\/init(retainingraw:)-71msg","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/rgba\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/rgba\/alpha","title":"var alpha: CFloat","type":"property"},{"path":"\/documentation\/gdk\/rgba\/blue","title":"var blue: CFloat","type":"property"},{"path":"\/documentation\/gdk\/rgba\/green","title":"var green: CFloat","type":"property"},{"path":"\/documentation\/gdk\/rgba\/isclear","title":"var isClear: Bool","type":"property"},{"path":"\/documentation\/gdk\/rgba\/isopaque","title":"var isOpaque: Bool","type":"property"},{"path":"\/documentation\/gdk\/rgba\/red","title":"var red: CFloat","type":"property"},{"path":"\/documentation\/gdk\/rgba\/rgba_ptr","title":"var rgba_ptr: UnsafeMutablePointer<GdkRGBA>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/rgba\/cairosetsourcergba(cr:)","title":"func cairoSetSourceRgba<CairoContextT>(cr: CairoContextT)","type":"method"},{"path":"\/documentation\/gdk\/rgba\/copy()","title":"func copy() -> RGBARef!","type":"method"},{"path":"\/documentation\/gdk\/rgba\/equal(p2:)","title":"func equal<RGBAT>(p2: RGBAT) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/rgba\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/gdk\/rgba\/hash()","title":"func hash() -> Int","type":"method"},{"path":"\/documentation\/gdk\/rgba\/parse(spec:)","title":"func parse(spec: UnsafePointer<CChar>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/rgba\/tostring()","title":"func toString() -> String!","type":"method"}],"path":"\/documentation\/gdk\/rgba\/rgbaprotocol-implementations","title":"RGBAProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/rgba","title":"RGBA","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/rectangle\/init(_:)-1trr9","title":"init(UnsafePointer<GdkRectangle>)","type":"init"},{"path":"\/documentation\/gdk\/rectangle\/init(_:)-2568o","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/rectangle\/init(_:)-456wi","title":"init!(UnsafePointer<GdkRectangle>?)","type":"init"},{"path":"\/documentation\/gdk\/rectangle\/init(_:)-6sbm1","title":"init!(UnsafeMutablePointer<GdkRectangle>?)","type":"init"},{"path":"\/documentation\/gdk\/rectangle\/init(_:)-9w19n","title":"init(UnsafeMutablePointer<GdkRectangle>)","type":"init"},{"path":"\/documentation\/gdk\/rectangle\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/rectangle\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/rectangle\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/rectangle\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/rectangle\/init(raw:)-4v6qz","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/rectangle\/init(raw:)-806iy","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/rectangle\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkRectangle>)","type":"init"},{"path":"\/documentation\/gdk\/rectangle\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/rectangle\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/rectangle\/init(retainingraw:)-7470","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/rectangle\/init(retainingraw:)-7k5e4","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/rectangle\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/rectangle\/height","title":"var height: gint","type":"property"},{"path":"\/documentation\/gdk\/rectangle\/rectangle_ptr","title":"var rectangle_ptr: UnsafeMutablePointer<GdkRectangle>!","type":"property"},{"path":"\/documentation\/gdk\/rectangle\/width","title":"var width: gint","type":"property"},{"path":"\/documentation\/gdk\/rectangle\/x","title":"var x: gint","type":"property"},{"path":"\/documentation\/gdk\/rectangle\/y","title":"var y: gint","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/rectangle\/cairorectangle(cr:)","title":"func cairoRectangle<CairoContextT>(cr: CairoContextT)","type":"method"},{"path":"\/documentation\/gdk\/rectangle\/containspoint(x:y:)","title":"func containsPoint(x: Int, y: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/rectangle\/equal(rect2:)","title":"func equal<RectangleT>(rect2: RectangleT) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/rectangle\/intersect(src2:dest:)","title":"func intersect<RectangleT>(src2: RectangleT, dest: RectangleT?) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/rectangle\/union(src2:dest:)","title":"func union<RectangleT>(src2: RectangleT, dest: RectangleT)","type":"method"}],"path":"\/documentation\/gdk\/rectangle\/rectangleprotocol-implementations","title":"RectangleProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/rectangle","title":"Rectangle","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/scrollevent\/init(_:)-6m0ms","title":"init!(UnsafeMutablePointer<GdkScrollEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/scrollevent\/init(_:)-8lxqw","title":"init(UnsafePointer<GdkScrollEvent>)","type":"init"},{"path":"\/documentation\/gdk\/scrollevent\/init(_:)-8rmwq","title":"init(UnsafeMutablePointer<GdkScrollEvent>)","type":"init"},{"path":"\/documentation\/gdk\/scrollevent\/init(_:)-8to51","title":"init!(UnsafePointer<GdkScrollEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/scrollevent\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/scrollevent\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/scrollevent\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/scrollevent\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/scrollevent\/init(raw:)-4bkkq","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/scrollevent\/init(raw:)-4mrk3","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/scrollevent\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkScrollEvent>)","type":"init"},{"path":"\/documentation\/gdk\/scrollevent\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/scrollevent\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/scrollevent\/init(retainingraw:)-8eztu","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/scrollevent\/init(retainingraw:)-9c36t","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/scrollevent\/init(scrollevent:)","title":"init<T>(scrollEvent: T)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/scrollevent\/direction","title":"var direction: GdkScrollDirection","type":"property"},{"path":"\/documentation\/gdk\/scrollevent\/isstop","title":"var isStop: Bool","type":"property"},{"path":"\/documentation\/gdk\/scrollevent\/scroll_event_ptr","title":"var scroll_event_ptr: UnsafeMutablePointer<GdkScrollEvent>!","type":"property"},{"path":"\/documentation\/gdk\/scrollevent\/unit","title":"var unit: GdkScrollUnit","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/scrollevent\/getdeltas(deltax:deltay:)","title":"func getDeltas(deltaX: UnsafeMutablePointer<CDouble>!, deltaY: UnsafeMutablePointer<CDouble>!)","type":"method"},{"path":"\/documentation\/gdk\/scrollevent\/getdirection()","title":"func getDirection() -> GdkScrollDirection","type":"method"},{"path":"\/documentation\/gdk\/scrollevent\/getunit()","title":"func getUnit() -> GdkScrollUnit","type":"method"}],"path":"\/documentation\/gdk\/scrollevent\/scrolleventprotocol-implementations","title":"ScrollEventProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/scrollevent","title":"ScrollEvent","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/seat\/init(_:)-2ch28","title":"init!(UnsafePointer<GdkSeat>?)","type":"init"},{"path":"\/documentation\/gdk\/seat\/init(_:)-3dezv","title":"init!(UnsafeMutablePointer<GdkSeat>?)","type":"init"},{"path":"\/documentation\/gdk\/seat\/init(_:)-75t2d","title":"init(UnsafePointer<GdkSeat>)","type":"init"},{"path":"\/documentation\/gdk\/seat\/init(_:)-9qqrb","title":"init(UnsafeMutablePointer<GdkSeat>)","type":"init"},{"path":"\/documentation\/gdk\/seat\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/seat\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/seat\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/seat\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/seat\/init(raw:)-6hrj8","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/seat\/init(raw:)-d0mm","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/seat\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkSeat>)","type":"init"},{"path":"\/documentation\/gdk\/seat\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/seat\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/seat\/init(retainingraw:)-4chcn","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/seat\/init(retainingraw:)-87bv6","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/seat\/init(seat:)","title":"init<T>(seat: T)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/seat\/capabilities","title":"var capabilities: SeatCapabilities","type":"property"},{"path":"\/documentation\/gdk\/seat\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/seat\/keyboard","title":"var keyboard: DeviceRef!","type":"property"},{"path":"\/documentation\/gdk\/seat\/parentinstance","title":"var parentInstance: GObject","type":"property"},{"path":"\/documentation\/gdk\/seat\/pointer","title":"var pointer: DeviceRef!","type":"property"},{"path":"\/documentation\/gdk\/seat\/seat_ptr","title":"var seat_ptr: UnsafeMutablePointer<GdkSeat>!","type":"property"},{"path":"\/documentation\/gdk\/seat\/tools","title":"var tools: RefListRef<DeviceToolRef>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/seat\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: SeatPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/seat\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: SeatSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seat\/connect(signal:flags:handler:)","title":"func connect(signal: SeatSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seat\/get(property:)","title":"func get(property: SeatPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/seat\/getcapabilities()","title":"func getCapabilities() -> SeatCapabilities","type":"method"},{"path":"\/documentation\/gdk\/seat\/getdevices(capabilities:)","title":"func getDevices(capabilities: SeatCapabilities) -> RefListRef<DeviceRef>!","type":"method"},{"path":"\/documentation\/gdk\/seat\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/seat\/getkeyboard()","title":"func getKeyboard() -> DeviceRef!","type":"method"},{"path":"\/documentation\/gdk\/seat\/getpointer()","title":"func getPointer() -> DeviceRef!","type":"method"},{"path":"\/documentation\/gdk\/seat\/gettools()","title":"func getTools() -> RefListRef<DeviceToolRef>!","type":"method"},{"path":"\/documentation\/gdk\/seat\/ondeviceadded(flags:handler:)","title":"func onDeviceAdded(flags: ConnectFlags, handler: (SeatRef, DeviceRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seat\/ondeviceremoved(flags:handler:)","title":"func onDeviceRemoved(flags: ConnectFlags, handler: (SeatRef, DeviceRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seat\/onnotifydisplay(flags:handler:)","title":"func onNotifyDisplay(flags: ConnectFlags, handler: (SeatRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seat\/ontooladded(flags:handler:)","title":"func onToolAdded(flags: ConnectFlags, handler: (SeatRef, DeviceToolRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seat\/ontoolremoved(flags:handler:)","title":"func onToolRemoved(flags: ConnectFlags, handler: (SeatRef, DeviceToolRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seat\/set(property:value:)","title":"func set(property: SeatPropertyName, value: Value)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/seat\/deviceaddedsignal","title":"static var deviceAddedSignal: SeatSignalName","type":"property"},{"path":"\/documentation\/gdk\/seat\/deviceremovedsignal","title":"static var deviceRemovedSignal: SeatSignalName","type":"property"},{"path":"\/documentation\/gdk\/seat\/notifydisplaysignal","title":"static var notifyDisplaySignal: SeatSignalName","type":"property"},{"path":"\/documentation\/gdk\/seat\/tooladdedsignal","title":"static var toolAddedSignal: SeatSignalName","type":"property"},{"path":"\/documentation\/gdk\/seat\/toolremovedsignal","title":"static var toolRemovedSignal: SeatSignalName","type":"property"}],"path":"\/documentation\/gdk\/seat\/seatprotocol-implementations","title":"SeatProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/seat","title":"Seat","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/snapshot\/init(_:)-14u8r","title":"init(UnsafeMutablePointer<GdkSnapshot>)","type":"init"},{"path":"\/documentation\/gdk\/snapshot\/init(_:)-27snu","title":"init!(UnsafePointer<GdkSnapshot>?)","type":"init"},{"path":"\/documentation\/gdk\/snapshot\/init(_:)-3ljk6","title":"init!(UnsafeMutablePointer<GdkSnapshot>?)","type":"init"},{"path":"\/documentation\/gdk\/snapshot\/init(_:)-6rxcb","title":"init(UnsafePointer<GdkSnapshot>)","type":"init"},{"path":"\/documentation\/gdk\/snapshot\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/snapshot\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/snapshot\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/snapshot\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/snapshot\/init(raw:)-1qekg","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/snapshot\/init(raw:)-63p3d","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/snapshot\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkSnapshot>)","type":"init"},{"path":"\/documentation\/gdk\/snapshot\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/snapshot\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/snapshot\/init(retainingraw:)-26vdn","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/snapshot\/init(retainingraw:)-7a0mu","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/snapshot\/init(snapshot:)","title":"init<T>(snapshot: T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/snapshot\/metatypereferenceforsnapshot","title":"var metatypeReferenceForSnapshot: GType","type":"property"},{"path":"\/documentation\/gdk\/snapshot\/wrapperforsnapshot","title":"var wrapperForSnapshot: SnapshotClassRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/snapshot\/metatypeforsnapshot","title":"static var metatypeForSnapshot: GdkSnapshotClass?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/snapshot\/snapshot_ptr","title":"var snapshot_ptr: UnsafeMutablePointer<GdkSnapshot>!","type":"property"}],"path":"\/documentation\/gdk\/snapshot\/snapshotprotocol-implementations","title":"SnapshotProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/snapshot","title":"Snapshot","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/surface\/init(_:)-44r9r","title":"init!(UnsafeMutablePointer<GdkSurface>?)","type":"init"},{"path":"\/documentation\/gdk\/surface\/init(_:)-6gaz1","title":"init(UnsafeMutablePointer<GdkSurface>)","type":"init"},{"path":"\/documentation\/gdk\/surface\/init(_:)-8xzrb","title":"init(UnsafePointer<GdkSurface>)","type":"init"},{"path":"\/documentation\/gdk\/surface\/init(_:)-r8sv","title":"init!(UnsafePointer<GdkSurface>?)","type":"init"},{"path":"\/documentation\/gdk\/surface\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/surface\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/surface\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/surface\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/surface\/init(raw:)-783uo","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/surface\/init(raw:)-9sg8h","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/surface\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkSurface>)","type":"init"},{"path":"\/documentation\/gdk\/surface\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/surface\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/surface\/init(retainingraw:)-6h72t","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/surface\/init(retainingraw:)-uw7x","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/surface\/init(surface:)","title":"init<T>(surface: T)","type":"init"},{"path":"\/documentation\/gdk\/surface\/init(toplevel:)","title":"init<DisplayT>(toplevel: DisplayT)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/surface\/metatypereferenceforsurface","title":"var metatypeReferenceForSurface: GType","type":"property"},{"path":"\/documentation\/gdk\/surface\/wrapperforsurface","title":"var wrapperForSurface: SurfaceClassRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/surface\/metatypeforsurface","title":"static var metatypeForSurface: GdkSurfaceClass?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/surface\/new(toplevel:)","title":"static func new<DisplayT>(toplevel: DisplayT) -> Surface!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/surface\/cursor","title":"var cursor: CursorRef!","type":"property"},{"path":"\/documentation\/gdk\/surface\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/surface\/frameclock","title":"var frameClock: FrameClockRef!","type":"property"},{"path":"\/documentation\/gdk\/surface\/height","title":"var height: Int","type":"property"},{"path":"\/documentation\/gdk\/surface\/isdestroyed","title":"var isDestroyed: Bool","type":"property"},{"path":"\/documentation\/gdk\/surface\/mapped","title":"var mapped: Bool","type":"property"},{"path":"\/documentation\/gdk\/surface\/scale","title":"var scale: CDouble","type":"property"},{"path":"\/documentation\/gdk\/surface\/scalefactor","title":"var scaleFactor: Int","type":"property"},{"path":"\/documentation\/gdk\/surface\/surface_ptr","title":"var surface_ptr: UnsafeMutablePointer<GdkSurface>!","type":"property"},{"path":"\/documentation\/gdk\/surface\/width","title":"var width: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/surface\/beep()","title":"func beep()","type":"method"},{"path":"\/documentation\/gdk\/surface\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: SurfacePropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/surface\/cairodrawfromgl(cr:source:sourcetype:bufferscale:x:y:width:height:)","title":"func cairoDrawFromGl<CairoContextT>(cr: CairoContextT, source: Int, sourceType: Int, bufferScale: Int, x: Int, y: Int, width: Int, height: Int)","type":"method"},{"path":"\/documentation\/gdk\/surface\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: SurfaceSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surface\/connect(signal:flags:handler:)","title":"func connect(signal: SurfaceSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surface\/createcairocontext()","title":"func createCairoContext() -> CairoContextRef!","type":"method"},{"path":"\/documentation\/gdk\/surface\/createglcontext()","title":"func createGlContext() throws -> GLContextRef!","type":"method"},{"path":"\/documentation\/gdk\/surface\/createsimilarsurface(content:width:height:)","title":"func createSimilarSurface(content: cairo_content_t, width: Int, height: Int) -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/surface\/createvulkancontext()","title":"func createVulkanContext() throws -> VulkanContextRef!","type":"method"},{"path":"\/documentation\/gdk\/surface\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/gdk\/surface\/get(property:)","title":"func get(property: SurfacePropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/surface\/getcursor()","title":"func getCursor() -> CursorRef!","type":"method"},{"path":"\/documentation\/gdk\/surface\/getdevicecursor(device:)","title":"func getDeviceCursor<DeviceT>(device: DeviceT) -> CursorRef!","type":"method"},{"path":"\/documentation\/gdk\/surface\/getdeviceposition(device:x:y:mask:)","title":"func getDevicePosition<DeviceT>(device: DeviceT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!, mask: UnsafeMutablePointer<GdkModifierType>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/surface\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/surface\/getframeclock()","title":"func getFrameClock() -> FrameClockRef!","type":"method"},{"path":"\/documentation\/gdk\/surface\/getheight()","title":"func getHeight() -> Int","type":"method"},{"path":"\/documentation\/gdk\/surface\/getmapped()","title":"func getMapped() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/surface\/getscale()","title":"func getScale() -> CDouble","type":"method"},{"path":"\/documentation\/gdk\/surface\/getscalefactor()","title":"func getScaleFactor() -> Int","type":"method"},{"path":"\/documentation\/gdk\/surface\/getwidth()","title":"func getWidth() -> Int","type":"method"},{"path":"\/documentation\/gdk\/surface\/hide()","title":"func hide()","type":"method"},{"path":"\/documentation\/gdk\/surface\/onentermonitor(flags:handler:)","title":"func onEnterMonitor(flags: ConnectFlags, handler: (SurfaceRef, MonitorRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surface\/onevent(flags:handler:)","title":"func onEvent(flags: ConnectFlags, handler: (SurfaceRef, EventRef) -> Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surface\/onlayout(flags:handler:)","title":"func onLayout(flags: ConnectFlags, handler: (SurfaceRef, Int, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surface\/onleavemonitor(flags:handler:)","title":"func onLeaveMonitor(flags: ConnectFlags, handler: (SurfaceRef, MonitorRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surface\/onnotifycursor(flags:handler:)","title":"func onNotifyCursor(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surface\/onnotifydisplay(flags:handler:)","title":"func onNotifyDisplay(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surface\/onnotifyframeclock(flags:handler:)","title":"func onNotifyFrameClock(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surface\/onnotifyheight(flags:handler:)","title":"func onNotifyHeight(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surface\/onnotifymapped(flags:handler:)","title":"func onNotifyMapped(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surface\/onnotifyscale(flags:handler:)","title":"func onNotifyScale(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surface\/onnotifyscalefactor(flags:handler:)","title":"func onNotifyScaleFactor(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surface\/onnotifywidth(flags:handler:)","title":"func onNotifyWidth(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surface\/onrender(flags:handler:)","title":"func onRender(flags: ConnectFlags, handler: (SurfaceRef, RegionRef) -> Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surface\/queuerender()","title":"func queueRender()","type":"method"},{"path":"\/documentation\/gdk\/surface\/requestlayout()","title":"func requestLayout()","type":"method"},{"path":"\/documentation\/gdk\/surface\/set(cursor:)","title":"func set(cursor: CursorRef?)","type":"method"},{"path":"\/documentation\/gdk\/surface\/set(property:value:)","title":"func set(property: SurfacePropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/surface\/setdevicecursor(device:cursor:)","title":"func setDeviceCursor<CursorT, DeviceT>(device: DeviceT, cursor: CursorT)","type":"method"},{"path":"\/documentation\/gdk\/surface\/setinput(region:)","title":"func setInput<cairoRegionT>(region: cairoRegionT)","type":"method"},{"path":"\/documentation\/gdk\/surface\/setopaque(region:)","title":"func setOpaque(region: RegionRef?)","type":"method"},{"path":"\/documentation\/gdk\/surface\/translatecoordinates(to:x:y:)","title":"func translateCoordinates<SurfaceT>(to: SurfaceT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/surface\/entermonitorsignal","title":"static var enterMonitorSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surface\/eventsignal","title":"static var eventSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surface\/layoutsignal","title":"static var layoutSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surface\/leavemonitorsignal","title":"static var leaveMonitorSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surface\/notifycursorsignal","title":"static var notifyCursorSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surface\/notifydisplaysignal","title":"static var notifyDisplaySignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surface\/notifyframeclocksignal","title":"static var notifyFrameClockSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surface\/notifyheightsignal","title":"static var notifyHeightSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surface\/notifymappedsignal","title":"static var notifyMappedSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surface\/notifyscalefactorsignal","title":"static var notifyScaleFactorSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surface\/notifyscalesignal","title":"static var notifyScaleSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surface\/notifywidthsignal","title":"static var notifyWidthSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surface\/rendersignal","title":"static var renderSignal: SurfaceSignalName","type":"property"}],"path":"\/documentation\/gdk\/surface\/surfaceprotocol-implementations","title":"SurfaceProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/surface","title":"Surface","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/texture\/init(string:)","title":"init(String: UnsafePointer<CChar>!) throws","type":"init"},{"path":"\/documentation\/gdk\/texture\/init(_:)-1qpfn","title":"init!(UnsafeMutablePointer<GdkTexture>?)","type":"init"},{"path":"\/documentation\/gdk\/texture\/init(_:)-1vc4r","title":"init(UnsafeMutablePointer<GdkTexture>)","type":"init"},{"path":"\/documentation\/gdk\/texture\/init(_:)-4g84y","title":"init!(UnsafePointer<GdkTexture>?)","type":"init"},{"path":"\/documentation\/gdk\/texture\/init(_:)-4ofit","title":"init(UnsafePointer<GdkTexture>)","type":"init"},{"path":"\/documentation\/gdk\/texture\/init(bytes:)","title":"init<GLibBytesT>(bytes: GLibBytesT) throws","type":"init"},{"path":"\/documentation\/gdk\/texture\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/texture\/init(file:)","title":"init<GioFileT>(file: GioFileT) throws","type":"init"},{"path":"\/documentation\/gdk\/texture\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/texture\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/texture\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/texture\/init(pixbuf:)","title":"init<GdkPixbufPixbufT>(pixbuf: GdkPixbufPixbufT)","type":"init"},{"path":"\/documentation\/gdk\/texture\/init(raw:)-4d2aq","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/texture\/init(raw:)-i7qf","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/texture\/init(resource:)","title":"init(resource: UnsafePointer<CChar>!)","type":"init"},{"path":"\/documentation\/gdk\/texture\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkTexture>)","type":"init"},{"path":"\/documentation\/gdk\/texture\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/texture\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/texture\/init(retainingraw:)-4fxeo","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/texture\/init(retainingraw:)-l2jz","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/texture\/init(texture:)","title":"init<T>(texture: T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/texture\/metatypereferencefortexture","title":"var metatypeReferenceForTexture: GType","type":"property"},{"path":"\/documentation\/gdk\/texture\/wrapperfortexture","title":"var wrapperForTexture: TextureClassRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/texture\/metatypefortexture","title":"static var metatypeForTexture: GdkTextureClass?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/texture\/newfor(pixbuf:)","title":"static func newFor<GdkPixbufPixbufT>(pixbuf: GdkPixbufPixbufT) -> Texture!","type":"method"},{"path":"\/documentation\/gdk\/texture\/newfrom(bytes:)","title":"static func newFrom<GLibBytesT>(bytes: GLibBytesT) throws -> Texture!","type":"method"},{"path":"\/documentation\/gdk\/texture\/newfrom(file:)","title":"static func newFrom<GioFileT>(file: GioFileT) throws -> Texture!","type":"method"},{"path":"\/documentation\/gdk\/texture\/newfrom(resource:)","title":"static func newFrom(resource: UnsafePointer<CChar>!) -> Texture!","type":"method"},{"path":"\/documentation\/gdk\/texture\/newfromfilename(string:)","title":"static func newFromFilename(String: UnsafePointer<CChar>!) throws -> Texture!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/texture\/icon_ptr","title":"var icon_ptr: UnsafeMutablePointer<GIcon>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/texture\/equal(icon2:)","title":"func equal(icon2: IconRef?) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/texture\/hash()","title":"func hash() -> Int","type":"method"},{"path":"\/documentation\/gdk\/texture\/serialize()","title":"func serialize() -> VariantRef!","type":"method"},{"path":"\/documentation\/gdk\/texture\/tostring()","title":"func toString() -> String!","type":"method"}],"path":"\/documentation\/gdk\/texture\/iconprotocol-implementations","title":"IconProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/texture\/loadable_icon_ptr","title":"var loadable_icon_ptr: UnsafeMutablePointer<GLoadableIcon>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/texture\/load(size:type:cancellable:)","title":"func load(size: Int, type: UnsafeMutablePointer<UnsafeMutablePointer<CChar>?>!, cancellable: CancellableRef?) throws -> InputStreamRef!","type":"method"},{"path":"\/documentation\/gdk\/texture\/loadasync(size:cancellable:callback:userdata:)","title":"func loadAsync(size: Int, cancellable: CancellableRef?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/texture\/loadfinish(res:type:)","title":"func loadFinish<AsyncResultT>(res: AsyncResultT, type: UnsafeMutablePointer<UnsafeMutablePointer<CChar>?>!) throws -> InputStreamRef!","type":"method"}],"path":"\/documentation\/gdk\/texture\/loadableiconprotocol-implementations","title":"LoadableIconProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/texture\/currentimage","title":"var currentImage: PaintableRef!","type":"property"},{"path":"\/documentation\/gdk\/texture\/flags","title":"var flags: PaintableFlags","type":"property"},{"path":"\/documentation\/gdk\/texture\/intrinsicaspectratio","title":"var intrinsicAspectRatio: CDouble","type":"property"},{"path":"\/documentation\/gdk\/texture\/intrinsicheight","title":"var intrinsicHeight: Int","type":"property"},{"path":"\/documentation\/gdk\/texture\/intrinsicwidth","title":"var intrinsicWidth: Int","type":"property"},{"path":"\/documentation\/gdk\/texture\/paintable_ptr","title":"var paintable_ptr: UnsafeMutablePointer<GdkPaintable>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/texture\/computeconcretesize(specifiedwidth:specifiedheight:defaultwidth:defaultheight:concretewidth:concreteheight:)","title":"func computeConcreteSize(specifiedWidth: CDouble, specifiedHeight: CDouble, defaultWidth: CDouble, defaultHeight: CDouble, concreteWidth: UnsafeMutablePointer<CDouble>!, concreteHeight: UnsafeMutablePointer<CDouble>!)","type":"method"},{"path":"\/documentation\/gdk\/texture\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: PaintableSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/texture\/connect(signal:flags:handler:)","title":"func connect(signal: PaintableSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/texture\/getcurrentimage()","title":"func getCurrentImage() -> PaintableRef!","type":"method"},{"path":"\/documentation\/gdk\/texture\/getflags()","title":"func getFlags() -> PaintableFlags","type":"method"},{"path":"\/documentation\/gdk\/texture\/getintrinsicaspectratio()","title":"func getIntrinsicAspectRatio() -> CDouble","type":"method"},{"path":"\/documentation\/gdk\/texture\/getintrinsicheight()","title":"func getIntrinsicHeight() -> Int","type":"method"},{"path":"\/documentation\/gdk\/texture\/getintrinsicwidth()","title":"func getIntrinsicWidth() -> Int","type":"method"},{"path":"\/documentation\/gdk\/texture\/invalidatecontents()","title":"func invalidateContents()","type":"method"},{"path":"\/documentation\/gdk\/texture\/invalidatesize()","title":"func invalidateSize()","type":"method"},{"path":"\/documentation\/gdk\/texture\/oninvalidatecontents(flags:handler:)","title":"func onInvalidateContents(flags: ConnectFlags, handler: (PaintableRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/texture\/oninvalidatesize(flags:handler:)","title":"func onInvalidateSize(flags: ConnectFlags, handler: (PaintableRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/texture\/snapshot(snapshot:width:height:)","title":"func snapshot<SnapshotT>(snapshot: SnapshotT, width: CDouble, height: CDouble)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/texture\/invalidatecontentssignal","title":"static var invalidateContentsSignal: PaintableSignalName","type":"property"},{"path":"\/documentation\/gdk\/texture\/invalidatesizesignal","title":"static var invalidateSizeSignal: PaintableSignalName","type":"property"}],"path":"\/documentation\/gdk\/texture\/paintableprotocol-implementations","title":"PaintableProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/texture\/format","title":"var format: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/texture\/height","title":"var height: Int","type":"property"},{"path":"\/documentation\/gdk\/texture\/texture_ptr","title":"var texture_ptr: UnsafeMutablePointer<GdkTexture>!","type":"property"},{"path":"\/documentation\/gdk\/texture\/width","title":"var width: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/texture\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: TexturePropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/texture\/download(data:stride:)","title":"func download(data: UnsafeMutablePointer<guchar>!, stride: Int)","type":"method"},{"path":"\/documentation\/gdk\/texture\/get(property:)","title":"func get(property: TexturePropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/texture\/getformat()","title":"func getFormat() -> GdkMemoryFormat","type":"method"},{"path":"\/documentation\/gdk\/texture\/getheight()","title":"func getHeight() -> Int","type":"method"},{"path":"\/documentation\/gdk\/texture\/getwidth()","title":"func getWidth() -> Int","type":"method"},{"path":"\/documentation\/gdk\/texture\/pixbufgetfromtexture()","title":"func pixbufGetFromTexture() -> PixbufRef!","type":"method"},{"path":"\/documentation\/gdk\/texture\/savetopng(filename:)","title":"func saveToPng(filename: UnsafePointer<CChar>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/texture\/savetopngbytes()","title":"func saveToPngBytes() -> BytesRef!","type":"method"},{"path":"\/documentation\/gdk\/texture\/savetotiff(filename:)","title":"func saveToTiff(filename: UnsafePointer<CChar>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/texture\/savetotiffbytes()","title":"func saveToTiffBytes() -> BytesRef!","type":"method"},{"path":"\/documentation\/gdk\/texture\/set(property:value:)","title":"func set(property: TexturePropertyName, value: Value)","type":"method"}],"path":"\/documentation\/gdk\/texture\/textureprotocol-implementations","title":"TextureProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/texture","title":"Texture","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/texturedownloader\/init(_:)-3reaz","title":"init(UnsafePointer<GdkTextureDownloader>)","type":"init"},{"path":"\/documentation\/gdk\/texturedownloader\/init(_:)-46u68","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/texturedownloader\/init(_:)-6m314","title":"init!(UnsafePointer<GdkTextureDownloader>?)","type":"init"},{"path":"\/documentation\/gdk\/texturedownloader\/init(_:)-713yq","title":"init!(UnsafeMutablePointer<GdkTextureDownloader>?)","type":"init"},{"path":"\/documentation\/gdk\/texturedownloader\/init(_:)-ihfv","title":"init(UnsafeMutablePointer<GdkTextureDownloader>)","type":"init"},{"path":"\/documentation\/gdk\/texturedownloader\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/texturedownloader\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/texturedownloader\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/texturedownloader\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/texturedownloader\/init(raw:)-22z2b","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/texturedownloader\/init(raw:)-2e6ay","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/texturedownloader\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkTextureDownloader>)","type":"init"},{"path":"\/documentation\/gdk\/texturedownloader\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/texturedownloader\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/texturedownloader\/init(retainingraw:)-2lglc","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/texturedownloader\/init(retainingraw:)-3dm12","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/texturedownloader\/init(texture:)","title":"init<TextureT>(texture: TextureT)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/texturedownloader\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/texturedownloader\/format","title":"var format: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/texturedownloader\/texture","title":"var texture: TextureRef!","type":"property"},{"path":"\/documentation\/gdk\/texturedownloader\/texture_downloader_ptr","title":"var texture_downloader_ptr: UnsafeMutablePointer<GdkTextureDownloader>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/texturedownloader\/copy()","title":"func copy() -> TextureDownloaderRef!","type":"method"},{"path":"\/documentation\/gdk\/texturedownloader\/downloadbytes(outstride:)","title":"func downloadBytes(outStride: UnsafeMutablePointer<gsize>!) -> BytesRef!","type":"method"},{"path":"\/documentation\/gdk\/texturedownloader\/downloadinto(data:stride:)","title":"func downloadInto(data: UnsafeMutablePointer<guchar>!, stride: Int)","type":"method"},{"path":"\/documentation\/gdk\/texturedownloader\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/gdk\/texturedownloader\/getformat()","title":"func getFormat() -> GdkMemoryFormat","type":"method"},{"path":"\/documentation\/gdk\/texturedownloader\/gettexture()","title":"func getTexture() -> TextureRef!","type":"method"},{"path":"\/documentation\/gdk\/texturedownloader\/set(format:)","title":"func set(format: GdkMemoryFormat)","type":"method"},{"path":"\/documentation\/gdk\/texturedownloader\/set(texture:)","title":"func set<TextureT>(texture: TextureT)","type":"method"}],"path":"\/documentation\/gdk\/texturedownloader\/texturedownloaderprotocol-implementations","title":"TextureDownloaderProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/texturedownloader","title":"TextureDownloader","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/timecoord\/init(_:)-4v4fl","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/timecoord\/init(_:)-6vq8q","title":"init(UnsafeMutablePointer<GdkTimeCoord>)","type":"init"},{"path":"\/documentation\/gdk\/timecoord\/init(_:)-7qjre","title":"init(UnsafePointer<GdkTimeCoord>)","type":"init"},{"path":"\/documentation\/gdk\/timecoord\/init(_:)-97cja","title":"init!(UnsafeMutablePointer<GdkTimeCoord>?)","type":"init"},{"path":"\/documentation\/gdk\/timecoord\/init(_:)-9vbpi","title":"init!(UnsafePointer<GdkTimeCoord>?)","type":"init"},{"path":"\/documentation\/gdk\/timecoord\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/timecoord\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/timecoord\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/timecoord\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/timecoord\/init(raw:)-5xx8y","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/timecoord\/init(raw:)-9sryv","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/timecoord\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkTimeCoord>)","type":"init"},{"path":"\/documentation\/gdk\/timecoord\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/timecoord\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/timecoord\/init(retainingraw:)-2fe7n","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/timecoord\/init(retainingraw:)-8k54p","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/timecoord\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/timecoord\/axes","title":"var axes: (CDouble, CDouble, CDouble, CDouble, CDouble, CDouble, CDouble, CDouble, CDouble, CDouble, CDouble, CDouble)","type":"property"},{"path":"\/documentation\/gdk\/timecoord\/flags","title":"var flags: AxisFlags","type":"property"},{"path":"\/documentation\/gdk\/timecoord\/time","title":"var time: guint32","type":"property"}],"path":"\/documentation\/gdk\/timecoord\/timecoordprotocol-implementations","title":"TimeCoordProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/timecoord","title":"TimeCoord","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevel\/init(_:)-7axhg","title":"init(UnsafeMutablePointer<GdkToplevel>)","type":"init"},{"path":"\/documentation\/gdk\/toplevel\/init(_:)-7crnk","title":"init(UnsafePointer<GdkToplevel>)","type":"init"},{"path":"\/documentation\/gdk\/toplevel\/init(_:)-95tcp","title":"init!(UnsafePointer<GdkToplevel>?)","type":"init"},{"path":"\/documentation\/gdk\/toplevel\/init(_:)-9aaxv","title":"init!(UnsafeMutablePointer<GdkToplevel>?)","type":"init"},{"path":"\/documentation\/gdk\/toplevel\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/toplevel\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/toplevel\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/toplevel\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/toplevel\/init(raw:)-43eqh","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/toplevel\/init(raw:)-96jzo","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/toplevel\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkToplevel>)","type":"init"},{"path":"\/documentation\/gdk\/toplevel\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/toplevel\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/toplevel\/init(retainingraw:)-2pucm","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/toplevel\/init(retainingraw:)-4mjn7","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/toplevel\/init(toplevel:)","title":"init<T>(toplevel: T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevel\/metatypereferencefortoplevel","title":"var metatypeReferenceForToplevel: GType","type":"property"},{"path":"\/documentation\/gdk\/toplevel\/wrapperfortoplevel","title":"var wrapperForToplevel: ToplevelInterfaceRef?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevel\/metatypefortoplevel","title":"static var metatypeForToplevel: GdkToplevelInterface?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevel\/state","title":"var state: ToplevelState","type":"property"},{"path":"\/documentation\/gdk\/toplevel\/toplevel_ptr","title":"var toplevel_ptr: UnsafeMutablePointer<GdkToplevel>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevel\/beginmove(device:button:x:y:timestamp:)","title":"func beginMove<DeviceT>(device: DeviceT, button: Int, x: CDouble, y: CDouble, timestamp: guint32)","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/beginresize(edge:device:button:x:y:timestamp:)","title":"func beginResize(edge: GdkSurfaceEdge, device: DeviceRef?, button: Int, x: CDouble, y: CDouble, timestamp: guint32)","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: ToplevelPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ToplevelSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/connect(signal:flags:handler:)","title":"func connect(signal: ToplevelSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/focus(timestamp:)","title":"func focus(timestamp: guint32)","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/get(property:)","title":"func get(property: ToplevelPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/getstate()","title":"func getState() -> ToplevelState","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/inhibitsystemshortcuts(event:)","title":"func inhibitSystemShortcuts(event: EventRef?)","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/lower()","title":"func lower() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/minimize()","title":"func minimize() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/oncomputesize(flags:handler:)","title":"func onComputeSize(flags: ConnectFlags, handler: (ToplevelRef, ToplevelSizeRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/onnotifydecorated(flags:handler:)","title":"func onNotifyDecorated(flags: ConnectFlags, handler: (ToplevelRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/onnotifydeletable(flags:handler:)","title":"func onNotifyDeletable(flags: ConnectFlags, handler: (ToplevelRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/onnotifyfullscreenmode(flags:handler:)","title":"func onNotifyFullscreenMode(flags: ConnectFlags, handler: (ToplevelRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/onnotifyiconlist(flags:handler:)","title":"func onNotifyIconList(flags: ConnectFlags, handler: (ToplevelRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/onnotifymodal(flags:handler:)","title":"func onNotifyModal(flags: ConnectFlags, handler: (ToplevelRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/onnotifyshortcutsinhibited(flags:handler:)","title":"func onNotifyShortcutsInhibited(flags: ConnectFlags, handler: (ToplevelRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/onnotifystartupid(flags:handler:)","title":"func onNotifyStartupId(flags: ConnectFlags, handler: (ToplevelRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/onnotifystate(flags:handler:)","title":"func onNotifyState(flags: ConnectFlags, handler: (ToplevelRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/onnotifytitle(flags:handler:)","title":"func onNotifyTitle(flags: ConnectFlags, handler: (ToplevelRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/onnotifytransientfor(flags:handler:)","title":"func onNotifyTransientFor(flags: ConnectFlags, handler: (ToplevelRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/present(layout:)","title":"func present<ToplevelLayoutT>(layout: ToplevelLayoutT)","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/restoresystemshortcuts()","title":"func restoreSystemShortcuts()","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/set(decorated:)","title":"func set(decorated: Bool)","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/set(deletable:)","title":"func set(deletable: Bool)","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/set(modal:)","title":"func set(modal: Bool)","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/set(property:value:)","title":"func set(property: ToplevelPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/set(startupid:)","title":"func set(startupId: UnsafePointer<CChar>!)","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/set(title:)","title":"func set(title: UnsafePointer<CChar>!)","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/seticonlist(surfaces:)","title":"func setIconList<GLibListT>(surfaces: GLibListT)","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/settransientfor(parent:)","title":"func setTransientFor<SurfaceT>(parent: SurfaceT)","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/showwindowmenu(event:)","title":"func showWindowMenu<EventT>(event: EventT) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/supportsedgeconstraints()","title":"func supportsEdgeConstraints() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevel\/titlebar(gesture:)","title":"func titlebar(gesture: GdkTitlebarGesture) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevel\/computesizesignal","title":"static var computeSizeSignal: ToplevelSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevel\/notifydecoratedsignal","title":"static var notifyDecoratedSignal: ToplevelSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevel\/notifydeletablesignal","title":"static var notifyDeletableSignal: ToplevelSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevel\/notifyfullscreenmodesignal","title":"static var notifyFullscreenModeSignal: ToplevelSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevel\/notifyiconlistsignal","title":"static var notifyIconListSignal: ToplevelSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevel\/notifymodalsignal","title":"static var notifyModalSignal: ToplevelSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevel\/notifyshortcutsinhibitedsignal","title":"static var notifyShortcutsInhibitedSignal: ToplevelSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevel\/notifystartupidsignal","title":"static var notifyStartupIdSignal: ToplevelSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevel\/notifystatesignal","title":"static var notifyStateSignal: ToplevelSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevel\/notifytitlesignal","title":"static var notifyTitleSignal: ToplevelSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevel\/notifytransientforsignal","title":"static var notifyTransientForSignal: ToplevelSignalName","type":"property"}],"path":"\/documentation\/gdk\/toplevel\/toplevelprotocol-implementations","title":"ToplevelProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/toplevel","title":"Toplevel","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevellayout\/init()","title":"init()","type":"init"},{"path":"\/documentation\/gdk\/toplevellayout\/init(_:)-1qp2d","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/toplevellayout\/init(_:)-23oj8","title":"init!(UnsafeMutablePointer<GdkToplevelLayout>?)","type":"init"},{"path":"\/documentation\/gdk\/toplevellayout\/init(_:)-2fltb","title":"init!(UnsafePointer<GdkToplevelLayout>?)","type":"init"},{"path":"\/documentation\/gdk\/toplevellayout\/init(_:)-3axrz","title":"init(UnsafePointer<GdkToplevelLayout>)","type":"init"},{"path":"\/documentation\/gdk\/toplevellayout\/init(_:)-8v0b4","title":"init(UnsafeMutablePointer<GdkToplevelLayout>)","type":"init"},{"path":"\/documentation\/gdk\/toplevellayout\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/toplevellayout\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/toplevellayout\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/toplevellayout\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/toplevellayout\/init(raw:)-6gh6c","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/toplevellayout\/init(raw:)-9lh03","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/toplevellayout\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkToplevelLayout>)","type":"init"},{"path":"\/documentation\/gdk\/toplevellayout\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/toplevellayout\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/toplevellayout\/init(retainingraw:)-483ho","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/toplevellayout\/init(retainingraw:)-6aqx4","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevellayout\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevellayout\/fullscreenmonitor","title":"var fullscreenMonitor: MonitorRef!","type":"property"},{"path":"\/documentation\/gdk\/toplevellayout\/resizable","title":"var resizable: Bool","type":"property"},{"path":"\/documentation\/gdk\/toplevellayout\/toplevel_layout_ptr","title":"var toplevel_layout_ptr: UnsafeMutablePointer<GdkToplevelLayout>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevellayout\/copy()","title":"func copy() -> ToplevelLayoutRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevellayout\/equal(other:)","title":"func equal<ToplevelLayoutT>(other: ToplevelLayoutT) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevellayout\/get(fullscreen:)","title":"func get(fullscreen: UnsafeMutablePointer<gboolean>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevellayout\/get(maximized:)","title":"func get(maximized: UnsafeMutablePointer<gboolean>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevellayout\/getfullscreenmonitor()","title":"func getFullscreenMonitor() -> MonitorRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevellayout\/getresizable()","title":"func getResizable() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevellayout\/ref()","title":"func ref() -> ToplevelLayoutRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevellayout\/set(fullscreen:monitor:)","title":"func set(fullscreen: Bool, monitor: MonitorRef?)","type":"method"},{"path":"\/documentation\/gdk\/toplevellayout\/set(maximized:)","title":"func set(maximized: Bool)","type":"method"},{"path":"\/documentation\/gdk\/toplevellayout\/set(resizable:)","title":"func set(resizable: Bool)","type":"method"},{"path":"\/documentation\/gdk\/toplevellayout\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/gdk\/toplevellayout\/toplevellayoutprotocol-implementations","title":"ToplevelLayoutProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/toplevellayout","title":"ToplevelLayout","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelsize\/init(_:)-4f340","title":"init(UnsafePointer<GdkToplevelSize>)","type":"init"},{"path":"\/documentation\/gdk\/toplevelsize\/init(_:)-4ofcb","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/toplevelsize\/init(_:)-58prz","title":"init!(UnsafeMutablePointer<GdkToplevelSize>?)","type":"init"},{"path":"\/documentation\/gdk\/toplevelsize\/init(_:)-6atfj","title":"init!(UnsafePointer<GdkToplevelSize>?)","type":"init"},{"path":"\/documentation\/gdk\/toplevelsize\/init(_:)-8sal3","title":"init(UnsafeMutablePointer<GdkToplevelSize>)","type":"init"},{"path":"\/documentation\/gdk\/toplevelsize\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/toplevelsize\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/toplevelsize\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/toplevelsize\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/toplevelsize\/init(raw:)-2y1z2","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/toplevelsize\/init(raw:)-5klrh","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/toplevelsize\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkToplevelSize>)","type":"init"},{"path":"\/documentation\/gdk\/toplevelsize\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/toplevelsize\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/toplevelsize\/init(retainingraw:)-2dsyv","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/toplevelsize\/init(retainingraw:)-2ozwu","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelsize\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelsize\/getbounds(boundswidth:boundsheight:)","title":"func getBounds(boundsWidth: UnsafeMutablePointer<gint>!, boundsHeight: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/gdk\/toplevelsize\/setminsize(minwidth:minheight:)","title":"func setMinSize(minWidth: Int, minHeight: Int)","type":"method"},{"path":"\/documentation\/gdk\/toplevelsize\/setshadowwidth(left:right:top:bottom:)","title":"func setShadowWidth(left: Int, right: Int, top: Int, bottom: Int)","type":"method"},{"path":"\/documentation\/gdk\/toplevelsize\/setsize(width:height:)","title":"func setSize(width: Int, height: Int)","type":"method"}],"path":"\/documentation\/gdk\/toplevelsize\/toplevelsizeprotocol-implementations","title":"ToplevelSizeProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/toplevelsize","title":"ToplevelSize","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/touchevent\/init(_:)-2zy5d","title":"init(UnsafePointer<GdkTouchEvent>)","type":"init"},{"path":"\/documentation\/gdk\/touchevent\/init(_:)-406h9","title":"init!(UnsafeMutablePointer<GdkTouchEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/touchevent\/init(_:)-561x6","title":"init!(UnsafePointer<GdkTouchEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/touchevent\/init(_:)-6dvs1","title":"init(UnsafeMutablePointer<GdkTouchEvent>)","type":"init"},{"path":"\/documentation\/gdk\/touchevent\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/touchevent\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/touchevent\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/touchevent\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/touchevent\/init(raw:)-1gec8","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/touchevent\/init(raw:)-42ya1","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/touchevent\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkTouchEvent>)","type":"init"},{"path":"\/documentation\/gdk\/touchevent\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/touchevent\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/touchevent\/init(retainingraw:)-52h7l","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/touchevent\/init(retainingraw:)-8xbp6","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/touchevent\/init(touchevent:)","title":"init<T>(touchEvent: T)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/touchevent\/emulatingpointer","title":"var emulatingPointer: Bool","type":"property"},{"path":"\/documentation\/gdk\/touchevent\/touch_event_ptr","title":"var touch_event_ptr: UnsafeMutablePointer<GdkTouchEvent>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/touchevent\/getemulatingpointer()","title":"func getEmulatingPointer() -> Bool","type":"method"}],"path":"\/documentation\/gdk\/touchevent\/toucheventprotocol-implementations","title":"TouchEventProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/touchevent","title":"TouchEvent","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/touchpadevent\/init(_:)-4cwdd","title":"init!(UnsafeMutablePointer<GdkTouchpadEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/touchpadevent\/init(_:)-64xiz","title":"init(UnsafeMutablePointer<GdkTouchpadEvent>)","type":"init"},{"path":"\/documentation\/gdk\/touchpadevent\/init(_:)-9ddsq","title":"init(UnsafePointer<GdkTouchpadEvent>)","type":"init"},{"path":"\/documentation\/gdk\/touchpadevent\/init(_:)-xg1l","title":"init!(UnsafePointer<GdkTouchpadEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/touchpadevent\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/touchpadevent\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/touchpadevent\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/touchpadevent\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/touchpadevent\/init(raw:)-1lovc","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/touchpadevent\/init(raw:)-77zz4","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/touchpadevent\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkTouchpadEvent>)","type":"init"},{"path":"\/documentation\/gdk\/touchpadevent\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/touchpadevent\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/touchpadevent\/init(retainingraw:)-44f16","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/touchpadevent\/init(retainingraw:)-97kad","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/touchpadevent\/init(touchpadevent:)","title":"init<T>(touchpadEvent: T)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/touchpadevent\/gesturephase","title":"var gesturePhase: GdkTouchpadGesturePhase","type":"property"},{"path":"\/documentation\/gdk\/touchpadevent\/nfingers","title":"var nFingers: Int","type":"property"},{"path":"\/documentation\/gdk\/touchpadevent\/pinchangledelta","title":"var pinchAngleDelta: CDouble","type":"property"},{"path":"\/documentation\/gdk\/touchpadevent\/pinchscale","title":"var pinchScale: CDouble","type":"property"},{"path":"\/documentation\/gdk\/touchpadevent\/touchpad_event_ptr","title":"var touchpad_event_ptr: UnsafeMutablePointer<GdkTouchpadEvent>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/touchpadevent\/getdeltas(dx:dy:)","title":"func getDeltas(dx: UnsafeMutablePointer<CDouble>!, dy: UnsafeMutablePointer<CDouble>!)","type":"method"},{"path":"\/documentation\/gdk\/touchpadevent\/getgesturephase()","title":"func getGesturePhase() -> GdkTouchpadGesturePhase","type":"method"},{"path":"\/documentation\/gdk\/touchpadevent\/getnfingers()","title":"func getNFingers() -> Int","type":"method"},{"path":"\/documentation\/gdk\/touchpadevent\/getpinchangledelta()","title":"func getPinchAngleDelta() -> CDouble","type":"method"},{"path":"\/documentation\/gdk\/touchpadevent\/getpinchscale()","title":"func getPinchScale() -> CDouble","type":"method"}],"path":"\/documentation\/gdk\/touchpadevent\/touchpadeventprotocol-implementations","title":"TouchpadEventProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/touchpadevent","title":"TouchpadEvent","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontext\/init(_:)-4ns5k","title":"init(UnsafePointer<GdkVulkanContext>)","type":"init"},{"path":"\/documentation\/gdk\/vulkancontext\/init(_:)-4vg4f","title":"init!(UnsafeMutablePointer<GdkVulkanContext>?)","type":"init"},{"path":"\/documentation\/gdk\/vulkancontext\/init(_:)-7dfsj","title":"init(UnsafeMutablePointer<GdkVulkanContext>)","type":"init"},{"path":"\/documentation\/gdk\/vulkancontext\/init(_:)-80eb0","title":"init!(UnsafePointer<GdkVulkanContext>?)","type":"init"},{"path":"\/documentation\/gdk\/vulkancontext\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/vulkancontext\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/vulkancontext\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/vulkancontext\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/vulkancontext\/init(raw:)-5h6vh","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/vulkancontext\/init(raw:)-99ttc","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/vulkancontext\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GdkVulkanContext>)","type":"init"},{"path":"\/documentation\/gdk\/vulkancontext\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/vulkancontext\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/vulkancontext\/init(retainingraw:)-82i9p","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/vulkancontext\/init(retainingraw:)-8dp8i","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/vulkancontext\/init(vulkancontext:)","title":"init<T>(vulkanContext: T)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontext\/initable_ptr","title":"var initable_ptr: UnsafeMutablePointer<GInitable>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontext\/init_(cancellable:)","title":"func init_(cancellable: CancellableRef?) throws -> Bool","type":"method"}],"path":"\/documentation\/gdk\/vulkancontext\/initableprotocol-implementations","title":"InitableProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontext\/vulkan_context_ptr","title":"var vulkan_context_ptr: UnsafeMutablePointer<GdkVulkanContext>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontext\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: VulkanContextPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/vulkancontext\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: VulkanContextSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/vulkancontext\/connect(signal:flags:handler:)","title":"func connect(signal: VulkanContextSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/vulkancontext\/get(property:)","title":"func get(property: VulkanContextPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/vulkancontext\/onimagesupdated(flags:handler:)","title":"func onImagesUpdated(flags: ConnectFlags, handler: (VulkanContextRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/vulkancontext\/set(property:value:)","title":"func set(property: VulkanContextPropertyName, value: Value)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontext\/imagesupdatedsignal","title":"static var imagesUpdatedSignal: VulkanContextSignalName","type":"property"}],"path":"\/documentation\/gdk\/vulkancontext\/vulkancontextprotocol-implementations","title":"VulkanContextProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/vulkancontext","title":"VulkanContext","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/gdk\/applaunchcontextprotocol\/app_launch_context_ptr-7fau4","title":"var app_launch_context_ptr: UnsafeMutablePointer<GdkAppLaunchContext>!","type":"property"}],"title":"AppLaunchContextProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/applaunchcontextprotocol\/app_launch_context_ptr-5k9n6","title":"var app_launch_context_ptr: UnsafeMutablePointer<GdkAppLaunchContext>!","type":"property"},{"path":"\/documentation\/gdk\/applaunchcontextprotocol\/display","title":"var display: DisplayRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/applaunchcontextprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: AppLaunchContextPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextprotocol\/get(property:)","title":"func get(property: AppLaunchContextPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextprotocol\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextprotocol\/set(desktop:)","title":"func set(desktop: Int)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextprotocol\/set(icon:)-7emq7","title":"func set(icon: IconRef?)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextprotocol\/set(icon:)-8omvt","title":"func set<GioIconT>(icon: GioIconT?)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextprotocol\/set(iconname:)","title":"func set(iconName: UnsafePointer<CChar>?)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextprotocol\/set(property:value:)","title":"func set(property: AppLaunchContextPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextprotocol\/set(timestamp:)","title":"func set(timestamp: guint32)","type":"method"}],"path":"\/documentation\/gdk\/applaunchcontextprotocol","title":"AppLaunchContextProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/buttoneventprotocol\/button","title":"var button: Int","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/buttoneventprotocol\/button_event_ptr-31v3p","title":"var button_event_ptr: UnsafeMutablePointer<GdkButtonEvent>!","type":"property"}],"title":"ButtonEventProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/buttoneventprotocol\/button_event_ptr-6kb0d","title":"var button_event_ptr: UnsafeMutablePointer<GdkButtonEvent>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/buttoneventprotocol\/getbutton()","title":"func getButton() -> Int","type":"method"}],"path":"\/documentation\/gdk\/buttoneventprotocol","title":"ButtonEventProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/gdk\/cairocontextprotocol\/cairo_context_ptr-5uf67","title":"var cairo_context_ptr: UnsafeMutablePointer<GdkCairoContext>!","type":"property"}],"title":"CairoContextProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/cairocontextprotocol\/cairo_context_ptr-6zn0n","title":"var cairo_context_ptr: UnsafeMutablePointer<GdkCairoContext>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/cairocontextprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: CairoContextPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/cairocontextprotocol\/cairocreate()","title":"func cairoCreate() -> ContextRef!","type":"method"},{"path":"\/documentation\/gdk\/cairocontextprotocol\/get(property:)","title":"func get(property: CairoContextPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/cairocontextprotocol\/set(property:value:)","title":"func set(property: CairoContextPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/gdk\/cairocontextprotocol","title":"CairoContextProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/gdk\/clipboardprotocol\/clipboard_ptr-5bg2u","title":"var clipboard_ptr: UnsafeMutablePointer<GdkClipboard>!","type":"property"}],"title":"ClipboardProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/clipboardprotocol\/clipboard_ptr-5gxah","title":"var clipboard_ptr: UnsafeMutablePointer<GdkClipboard>!","type":"property"},{"path":"\/documentation\/gdk\/clipboardprotocol\/content","title":"var content: ContentProviderRef!","type":"property"},{"path":"\/documentation\/gdk\/clipboardprotocol\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/clipboardprotocol\/formats","title":"var formats: ContentFormatsRef!","type":"property"},{"path":"\/documentation\/gdk\/clipboardprotocol\/islocal","title":"var isLocal: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/clipboardprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: ClipboardPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ClipboardSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/connect(signal:flags:handler:)","title":"func connect(signal: ClipboardSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/get(property:)","title":"func get(property: ClipboardPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/getcontent()","title":"func getContent() -> ContentProviderRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/getformats()","title":"func getFormats() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/onchanged(flags:handler:)","title":"func onChanged(flags: ConnectFlags, handler: (ClipboardRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/onnotifycontent(flags:handler:)","title":"func onNotifyContent(flags: ConnectFlags, handler: (ClipboardRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/onnotifydisplay(flags:handler:)","title":"func onNotifyDisplay(flags: ConnectFlags, handler: (ClipboardRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/onnotifyformats(flags:handler:)","title":"func onNotifyFormats(flags: ConnectFlags, handler: (ClipboardRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/onnotifylocal(flags:handler:)","title":"func onNotifyLocal(flags: ConnectFlags, handler: (ClipboardRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/readasync(mimetypes:iopriority:cancellable:callback:userdata:)-2xs6r","title":"func readAsync<GioCancellableT>(mimeTypes: UnsafeMutablePointer<UnsafePointer<CChar>?>!, ioPriority: Int, cancellable: GioCancellableT?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/readasync(mimetypes:iopriority:cancellable:callback:userdata:)-3gijj","title":"func readAsync(mimeTypes: UnsafeMutablePointer<UnsafePointer<CChar>?>!, ioPriority: Int, cancellable: CancellableRef?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/readfinish(result:outmimetype:)","title":"func readFinish<GioAsyncResultT>(result: GioAsyncResultT, outMimeType: UnsafeMutablePointer<UnsafePointer<CChar>?>!) throws -> InputStreamRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/readtextasync(cancellable:callback:userdata:)-2avd8","title":"func readTextAsync<GioCancellableT>(cancellable: GioCancellableT?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/readtextasync(cancellable:callback:userdata:)-9atoq","title":"func readTextAsync(cancellable: CancellableRef?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/readtextfinish(result:)","title":"func readTextFinish<GioAsyncResultT>(result: GioAsyncResultT) throws -> String!","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/readtextureasync(cancellable:callback:userdata:)-3p5zg","title":"func readTextureAsync(cancellable: CancellableRef?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/readtextureasync(cancellable:callback:userdata:)-7be0m","title":"func readTextureAsync<GioCancellableT>(cancellable: GioCancellableT?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/readtexturefinish(result:)","title":"func readTextureFinish<GioAsyncResultT>(result: GioAsyncResultT) throws -> TextureRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/readvalueasync(type:iopriority:cancellable:callback:userdata:)-4r5qy","title":"func readValueAsync(type: GType, ioPriority: Int, cancellable: CancellableRef?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/readvalueasync(type:iopriority:cancellable:callback:userdata:)-shjr","title":"func readValueAsync<GioCancellableT>(type: GType, ioPriority: Int, cancellable: GioCancellableT?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/readvaluefinish(result:)","title":"func readValueFinish<GioAsyncResultT>(result: GioAsyncResultT) throws -> ValueRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/set(property:value:)","title":"func set(property: ClipboardPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/set(text:)","title":"func set(text: UnsafePointer<CChar>!)","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/set(texture:)","title":"func set<TextureT>(texture: TextureT)","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/set(value:)","title":"func set<GObjectValueT>(value: GObjectValueT)","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/setcontent(provider:)-90g9r","title":"func setContent<ContentProviderT>(provider: ContentProviderT?) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/setcontent(provider:)-9s0el","title":"func setContent(provider: ContentProviderRef?) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/setvalist(type:args:)","title":"func setValist(type: GType, args: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/storeasync(iopriority:cancellable:callback:userdata:)-51fha","title":"func storeAsync(ioPriority: Int, cancellable: CancellableRef?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/storeasync(iopriority:cancellable:callback:userdata:)-gcsk","title":"func storeAsync<GioCancellableT>(ioPriority: Int, cancellable: GioCancellableT?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/clipboardprotocol\/storefinish(result:)","title":"func storeFinish<GioAsyncResultT>(result: GioAsyncResultT) throws -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/clipboardprotocol\/changedsignal","title":"static var changedSignal: ClipboardSignalName","type":"property"},{"path":"\/documentation\/gdk\/clipboardprotocol\/notifycontentsignal","title":"static var notifyContentSignal: ClipboardSignalName","type":"property"},{"path":"\/documentation\/gdk\/clipboardprotocol\/notifydisplaysignal","title":"static var notifyDisplaySignal: ClipboardSignalName","type":"property"},{"path":"\/documentation\/gdk\/clipboardprotocol\/notifyformatssignal","title":"static var notifyFormatsSignal: ClipboardSignalName","type":"property"},{"path":"\/documentation\/gdk\/clipboardprotocol\/notifylocalsignal","title":"static var notifyLocalSignal: ClipboardSignalName","type":"property"}],"path":"\/documentation\/gdk\/clipboardprotocol","title":"ClipboardProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentdeserializerprotocol\/cancellable","title":"var cancellable: CancellableRef!","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/contentdeserializerprotocol\/content_deserializer_ptr-8sxbg","title":"var content_deserializer_ptr: UnsafeMutablePointer<GdkContentDeserializer>!","type":"property"}],"title":"ContentDeserializerProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/contentdeserializerprotocol\/content_deserializer_ptr-mk1o","title":"var content_deserializer_ptr: UnsafeMutablePointer<GdkContentDeserializer>!","type":"property"},{"path":"\/documentation\/gdk\/contentdeserializerprotocol\/gtype","title":"var gtype: GType","type":"property"},{"path":"\/documentation\/gdk\/contentdeserializerprotocol\/inputstream","title":"var inputStream: InputStreamRef!","type":"property"},{"path":"\/documentation\/gdk\/contentdeserializerprotocol\/mimetype","title":"var mimeType: String!","type":"property"},{"path":"\/documentation\/gdk\/contentdeserializerprotocol\/priority","title":"var priority: Int","type":"property"},{"path":"\/documentation\/gdk\/contentdeserializerprotocol\/taskdata","title":"var taskData: gpointer?","type":"property"},{"path":"\/documentation\/gdk\/contentdeserializerprotocol\/userdata","title":"var userData: gpointer?","type":"property"},{"path":"\/documentation\/gdk\/contentdeserializerprotocol\/value","title":"var value: ValueRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentdeserializerprotocol\/getcancellable()","title":"func getCancellable() -> CancellableRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerprotocol\/getgtype()","title":"func getGtype() -> GType","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerprotocol\/getinputstream()","title":"func getInputStream() -> InputStreamRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerprotocol\/getmimetype()","title":"func getMimeType() -> String!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerprotocol\/getpriority()","title":"func getPriority() -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerprotocol\/gettaskdata()","title":"func getTaskData() -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerprotocol\/getuserdata()","title":"func getUserData() -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerprotocol\/getvalue()","title":"func getValue() -> ValueRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerprotocol\/returnsuccess()","title":"func returnSuccess()","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerprotocol\/return_(error:)","title":"func return_<GLibGLibErrorT>(error: GLibGLibErrorT)","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerprotocol\/settask(data:notify:)","title":"func setTask(data: gpointer?, notify: GDestroyNotify?)","type":"method"}],"path":"\/documentation\/gdk\/contentdeserializerprotocol","title":"ContentDeserializerProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/gdk\/contentformatsbuilderprotocol\/content_formats_builder_ptr-2yxj0","title":"var content_formats_builder_ptr: UnsafeMutablePointer<GdkContentFormatsBuilder>!","type":"property"}],"title":"ContentFormatsBuilderProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/contentformatsbuilderprotocol\/content_formats_builder_ptr-6bsxd","title":"var content_formats_builder_ptr: UnsafeMutablePointer<GdkContentFormatsBuilder>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentformatsbuilderprotocol\/add(formats:)","title":"func add<ContentFormatsT>(formats: ContentFormatsT)","type":"method"},{"path":"\/documentation\/gdk\/contentformatsbuilderprotocol\/add(mimetype:)","title":"func add(mimeType: UnsafePointer<CChar>!)","type":"method"},{"path":"\/documentation\/gdk\/contentformatsbuilderprotocol\/addgtype(type:)","title":"func addGtype(type: GType)","type":"method"},{"path":"\/documentation\/gdk\/contentformatsbuilderprotocol\/freetoformats()","title":"func freeToFormats() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/contentformatsbuilderprotocol\/ref()","title":"func ref() -> ContentFormatsBuilderRef!","type":"method"},{"path":"\/documentation\/gdk\/contentformatsbuilderprotocol\/toformats()","title":"func toFormats() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/contentformatsbuilderprotocol\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/gdk\/contentformatsbuilderprotocol","title":"ContentFormatsBuilderProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/gdk\/contentformatsprotocol\/content_formats_ptr-347a2","title":"var content_formats_ptr: UnsafeMutablePointer<GdkContentFormats>!","type":"property"}],"title":"ContentFormatsProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/contentformatsprotocol\/content_formats_ptr-3k2u","title":"var content_formats_ptr: UnsafeMutablePointer<GdkContentFormats>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentformatsprotocol\/contain(mimetype:)","title":"func contain(mimeType: UnsafePointer<CChar>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentformatsprotocol\/containgtype(type:)","title":"func containGtype(type: GType) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentformatsprotocol\/getgtypes(ngtypes:)","title":"func getGtypes(nGtypes: UnsafeMutablePointer<gsize>!) -> UnsafePointer<GType>!","type":"method"},{"path":"\/documentation\/gdk\/contentformatsprotocol\/getmimetypes(nmimetypes:)","title":"func getMimeTypes(nMimeTypes: UnsafeMutablePointer<gsize>!) -> UnsafePointer<UnsafePointer<CChar>?>!","type":"method"},{"path":"\/documentation\/gdk\/contentformatsprotocol\/match(second:)","title":"func match<ContentFormatsT>(second: ContentFormatsT) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentformatsprotocol\/matchgtype(second:)","title":"func matchGtype<ContentFormatsT>(second: ContentFormatsT) -> GType","type":"method"},{"path":"\/documentation\/gdk\/contentformatsprotocol\/matchmimetype(second:)","title":"func matchMimeType<ContentFormatsT>(second: ContentFormatsT) -> String!","type":"method"},{"path":"\/documentation\/gdk\/contentformatsprotocol\/print(string:)","title":"func print<GLibStringTypeT>(string: GLibStringTypeT)","type":"method"},{"path":"\/documentation\/gdk\/contentformatsprotocol\/ref()","title":"func ref() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/contentformatsprotocol\/tostring()","title":"func toString() -> String!","type":"method"},{"path":"\/documentation\/gdk\/contentformatsprotocol\/union(second:)","title":"func union<ContentFormatsT>(second: ContentFormatsT) -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/contentformatsprotocol\/uniondeserializegtypes()","title":"func unionDeserializeGtypes() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/contentformatsprotocol\/uniondeserializemimetypes()","title":"func unionDeserializeMimeTypes() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/contentformatsprotocol\/unionserializegtypes()","title":"func unionSerializeGtypes() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/contentformatsprotocol\/unionserializemimetypes()","title":"func unionSerializeMimeTypes() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/contentformatsprotocol\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/gdk\/contentformatsprotocol","title":"ContentFormatsProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentproviderclassprotocol\/parentclass","title":"var parentClass: GObjectClass","type":"property"}],"path":"\/documentation\/gdk\/contentproviderclassprotocol","title":"ContentProviderClassProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/gdk\/contentproviderprotocol\/content_provider_ptr-43sl8","title":"var content_provider_ptr: UnsafeMutablePointer<GdkContentProvider>!","type":"property"}],"title":"ContentProviderProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/contentproviderprotocol\/content_provider_ptr-8wxw9","title":"var content_provider_ptr: UnsafeMutablePointer<GdkContentProvider>!","type":"property"},{"path":"\/documentation\/gdk\/contentproviderprotocol\/parent","title":"var parent: GObject","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentproviderprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: ContentProviderPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/contentproviderprotocol\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ContentProviderSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentproviderprotocol\/connect(signal:flags:handler:)","title":"func connect(signal: ContentProviderSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentproviderprotocol\/contentchanged()","title":"func contentChanged()","type":"method"},{"path":"\/documentation\/gdk\/contentproviderprotocol\/get(property:)","title":"func get(property: ContentProviderPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/contentproviderprotocol\/get(value:)","title":"func get<GObjectValueT>(value: GObjectValueT) throws -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentproviderprotocol\/oncontentchanged(flags:handler:)","title":"func onContentChanged(flags: ConnectFlags, handler: (ContentProviderRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentproviderprotocol\/onnotifyformats(flags:handler:)","title":"func onNotifyFormats(flags: ConnectFlags, handler: (ContentProviderRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentproviderprotocol\/onnotifystorableformats(flags:handler:)","title":"func onNotifyStorableFormats(flags: ConnectFlags, handler: (ContentProviderRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentproviderprotocol\/refformats()","title":"func refFormats() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/contentproviderprotocol\/refstorableformats()","title":"func refStorableFormats() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/contentproviderprotocol\/set(property:value:)","title":"func set(property: ContentProviderPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderprotocol\/writemimetypeasync(mimetype:stream:iopriority:cancellable:callback:userdata:)-3xx9v","title":"func writeMimeTypeAsync<GioCancellableT, GioOutputStreamT>(mimeType: UnsafePointer<CChar>!, stream: GioOutputStreamT, ioPriority: Int, cancellable: GioCancellableT?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderprotocol\/writemimetypeasync(mimetype:stream:iopriority:cancellable:callback:userdata:)-8pf28","title":"func writeMimeTypeAsync<GioOutputStreamT>(mimeType: UnsafePointer<CChar>!, stream: GioOutputStreamT, ioPriority: Int, cancellable: CancellableRef?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderprotocol\/writemimetypefinish(result:)","title":"func writeMimeTypeFinish<GioAsyncResultT>(result: GioAsyncResultT) throws -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentproviderprotocol\/contentchangedsignal","title":"static var contentChangedSignal: ContentProviderSignalName","type":"property"},{"path":"\/documentation\/gdk\/contentproviderprotocol\/notifyformatssignal","title":"static var notifyFormatsSignal: ContentProviderSignalName","type":"property"},{"path":"\/documentation\/gdk\/contentproviderprotocol\/notifystorableformatssignal","title":"static var notifyStorableFormatsSignal: ContentProviderSignalName","type":"property"}],"path":"\/documentation\/gdk\/contentproviderprotocol","title":"ContentProviderProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentserializerprotocol\/cancellable","title":"var cancellable: CancellableRef!","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/contentserializerprotocol\/content_serializer_ptr-9m1f","title":"var content_serializer_ptr: UnsafeMutablePointer<GdkContentSerializer>!","type":"property"}],"title":"ContentSerializerProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/contentserializerprotocol\/content_serializer_ptr-3m9s1","title":"var content_serializer_ptr: UnsafeMutablePointer<GdkContentSerializer>!","type":"property"},{"path":"\/documentation\/gdk\/contentserializerprotocol\/gtype","title":"var gtype: GType","type":"property"},{"path":"\/documentation\/gdk\/contentserializerprotocol\/mimetype","title":"var mimeType: String!","type":"property"},{"path":"\/documentation\/gdk\/contentserializerprotocol\/outputstream","title":"var outputStream: OutputStreamRef!","type":"property"},{"path":"\/documentation\/gdk\/contentserializerprotocol\/priority","title":"var priority: Int","type":"property"},{"path":"\/documentation\/gdk\/contentserializerprotocol\/taskdata","title":"var taskData: gpointer?","type":"property"},{"path":"\/documentation\/gdk\/contentserializerprotocol\/userdata","title":"var userData: gpointer?","type":"property"},{"path":"\/documentation\/gdk\/contentserializerprotocol\/value","title":"var value: ValueRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentserializerprotocol\/getcancellable()","title":"func getCancellable() -> CancellableRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializerprotocol\/getgtype()","title":"func getGtype() -> GType","type":"method"},{"path":"\/documentation\/gdk\/contentserializerprotocol\/getmimetype()","title":"func getMimeType() -> String!","type":"method"},{"path":"\/documentation\/gdk\/contentserializerprotocol\/getoutputstream()","title":"func getOutputStream() -> OutputStreamRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializerprotocol\/getpriority()","title":"func getPriority() -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentserializerprotocol\/gettaskdata()","title":"func getTaskData() -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/contentserializerprotocol\/getuserdata()","title":"func getUserData() -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/contentserializerprotocol\/getvalue()","title":"func getValue() -> ValueRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializerprotocol\/returnsuccess()","title":"func returnSuccess()","type":"method"},{"path":"\/documentation\/gdk\/contentserializerprotocol\/return_(error:)","title":"func return_<GLibGLibErrorT>(error: GLibGLibErrorT)","type":"method"},{"path":"\/documentation\/gdk\/contentserializerprotocol\/settask(data:notify:)","title":"func setTask(data: gpointer?, notify: GDestroyNotify?)","type":"method"}],"path":"\/documentation\/gdk\/contentserializerprotocol","title":"ContentSerializerProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/gdk\/crossingeventprotocol\/crossing_event_ptr-29diy","title":"var crossing_event_ptr: UnsafeMutablePointer<GdkCrossingEvent>!","type":"property"}],"title":"CrossingEventProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/crossingeventprotocol\/crossing_event_ptr-8sl2f","title":"var crossing_event_ptr: UnsafeMutablePointer<GdkCrossingEvent>!","type":"property"},{"path":"\/documentation\/gdk\/crossingeventprotocol\/detail","title":"var detail: GdkNotifyType","type":"property"},{"path":"\/documentation\/gdk\/crossingeventprotocol\/focus","title":"var focus: Bool","type":"property"},{"path":"\/documentation\/gdk\/crossingeventprotocol\/mode","title":"var mode: GdkCrossingMode","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/crossingeventprotocol\/getdetail()","title":"func getDetail() -> GdkNotifyType","type":"method"},{"path":"\/documentation\/gdk\/crossingeventprotocol\/getfocus()","title":"func getFocus() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/crossingeventprotocol\/getmode()","title":"func getMode() -> GdkCrossingMode","type":"method"}],"path":"\/documentation\/gdk\/crossingeventprotocol","title":"CrossingEventProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/gdk\/cursorprotocol\/cursor_ptr-2h9l3","title":"var cursor_ptr: UnsafeMutablePointer<GdkCursor>!","type":"property"}],"title":"CursorProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/cursorprotocol\/cursor_ptr-1zhys","title":"var cursor_ptr: UnsafeMutablePointer<GdkCursor>!","type":"property"},{"path":"\/documentation\/gdk\/cursorprotocol\/fallback","title":"var fallback: CursorRef!","type":"property"},{"path":"\/documentation\/gdk\/cursorprotocol\/hotspotx","title":"var hotspotX: Int","type":"property"},{"path":"\/documentation\/gdk\/cursorprotocol\/hotspoty","title":"var hotspotY: Int","type":"property"},{"path":"\/documentation\/gdk\/cursorprotocol\/name","title":"var name: String!","type":"property"},{"path":"\/documentation\/gdk\/cursorprotocol\/texture","title":"var texture: TextureRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/cursorprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: CursorPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/cursorprotocol\/get(property:)","title":"func get(property: CursorPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/cursorprotocol\/getfallback()","title":"func getFallback() -> CursorRef!","type":"method"},{"path":"\/documentation\/gdk\/cursorprotocol\/gethotspotx()","title":"func getHotspotX() -> Int","type":"method"},{"path":"\/documentation\/gdk\/cursorprotocol\/gethotspoty()","title":"func getHotspotY() -> Int","type":"method"},{"path":"\/documentation\/gdk\/cursorprotocol\/getname()","title":"func getName() -> String!","type":"method"},{"path":"\/documentation\/gdk\/cursorprotocol\/gettexture()","title":"func getTexture() -> TextureRef!","type":"method"},{"path":"\/documentation\/gdk\/cursorprotocol\/set(property:value:)","title":"func set(property: CursorPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/gdk\/cursorprotocol","title":"CursorProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/gdk\/dndeventprotocol\/dnd_event_ptr-5hv3","title":"var dnd_event_ptr: UnsafeMutablePointer<GdkDNDEvent>!","type":"property"}],"title":"DNDEventProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/dndeventprotocol\/dnd_event_ptr-8h7qv","title":"var dnd_event_ptr: UnsafeMutablePointer<GdkDNDEvent>!","type":"property"},{"path":"\/documentation\/gdk\/dndeventprotocol\/drop","title":"var drop: DropRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/dndeventprotocol\/getdrop()","title":"func getDrop() -> DropRef!","type":"method"}],"path":"\/documentation\/gdk\/dndeventprotocol","title":"DNDEventProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/gdk\/deleteeventprotocol\/delete_event_ptr-6jspp","title":"var delete_event_ptr: UnsafeMutablePointer<GdkDeleteEvent>!","type":"property"}],"title":"DeleteEventProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/deleteeventprotocol\/delete_event_ptr-43vel","title":"var delete_event_ptr: UnsafeMutablePointer<GdkDeleteEvent>!","type":"property"}],"path":"\/documentation\/gdk\/deleteeventprotocol","title":"DeleteEventProtocol","type":"protocol"},{"path":"\/documentation\/gdk\/devicepadinterfaceprotocol","title":"DevicePadInterfaceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/gdk\/devicepadprotocol\/device_pad_ptr-176zq","title":"var device_pad_ptr: UnsafeMutablePointer<GdkDevicePad>!","type":"property"}],"title":"DevicePadProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/devicepadprotocol\/device_pad_ptr-8n0mh","title":"var device_pad_ptr: UnsafeMutablePointer<GdkDevicePad>!","type":"property"},{"path":"\/documentation\/gdk\/devicepadprotocol\/ngroups","title":"var nGroups: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepadprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: DevicePadPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/devicepadprotocol\/get(property:)","title":"func get(property: DevicePadPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/devicepadprotocol\/getfeaturegroup(feature:featureidx:)","title":"func getFeatureGroup(feature: GdkDevicePadFeature, featureIdx: Int) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadprotocol\/getgroupnmodes(groupidx:)","title":"func getGroupNModes(groupIdx: Int) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadprotocol\/getnfeatures(feature:)","title":"func getNFeatures(feature: GdkDevicePadFeature) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadprotocol\/getngroups()","title":"func getNGroups() -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadprotocol\/set(property:value:)","title":"func set(property: DevicePadPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/gdk\/devicepadprotocol","title":"DevicePadProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/deviceprotocol\/capslockstate","title":"var capsLockState: Bool","type":"property"},{"path":"\/documentation\/gdk\/deviceprotocol\/devicetool","title":"var deviceTool: DeviceToolRef!","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/deviceprotocol\/device_ptr-47x3d","title":"var device_ptr: UnsafeMutablePointer<GdkDevice>!","type":"property"}],"title":"DeviceProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/deviceprotocol\/device_ptr-9jdzz","title":"var device_ptr: UnsafeMutablePointer<GdkDevice>!","type":"property"},{"path":"\/documentation\/gdk\/deviceprotocol\/direction","title":"var direction: PangoDirection","type":"property"},{"path":"\/documentation\/gdk\/deviceprotocol\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/deviceprotocol\/hascursor","title":"var hasCursor: Bool","type":"property"},{"path":"\/documentation\/gdk\/deviceprotocol\/modifierstate","title":"var modifierState: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/deviceprotocol\/name","title":"var name: String!","type":"property"},{"path":"\/documentation\/gdk\/deviceprotocol\/numlockstate","title":"var numLockState: Bool","type":"property"},{"path":"\/documentation\/gdk\/deviceprotocol\/numtouches","title":"var numTouches: Int","type":"property"},{"path":"\/documentation\/gdk\/deviceprotocol\/productid","title":"var productId: String!","type":"property"},{"path":"\/documentation\/gdk\/deviceprotocol\/scrolllockstate","title":"var scrollLockState: Bool","type":"property"},{"path":"\/documentation\/gdk\/deviceprotocol\/seat","title":"var seat: SeatRef!","type":"property"},{"path":"\/documentation\/gdk\/deviceprotocol\/source","title":"var source: GdkInputSource","type":"property"},{"path":"\/documentation\/gdk\/deviceprotocol\/timestamp","title":"var timestamp: guint32","type":"property"},{"path":"\/documentation\/gdk\/deviceprotocol\/vendorid","title":"var vendorId: String!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/deviceprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: DevicePropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: DeviceSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/connect(signal:flags:handler:)","title":"func connect(signal: DeviceSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/get(property:)","title":"func get(property: DevicePropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/getcapslockstate()","title":"func getCapsLockState() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/getdevicetool()","title":"func getDeviceTool() -> DeviceToolRef!","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/getdirection()","title":"func getDirection() -> PangoDirection","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/gethascursor()","title":"func getHasCursor() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/getmodifierstate()","title":"func getModifierState() -> ModifierType","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/getname()","title":"func getName() -> String!","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/getnumlockstate()","title":"func getNumLockState() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/getnumtouches()","title":"func getNumTouches() -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/getproductid()","title":"func getProductId() -> String!","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/getscrolllockstate()","title":"func getScrollLockState() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/getseat()","title":"func getSeat() -> SeatRef!","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/getsource()","title":"func getSource() -> GdkInputSource","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/getsurfaceatposition(winx:winy:)","title":"func getSurfaceAtPosition(winX: UnsafeMutablePointer<CDouble>!, winY: UnsafeMutablePointer<CDouble>!) -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/gettimestamp()","title":"func getTimestamp() -> guint32","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/getvendorid()","title":"func getVendorId() -> String!","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/hasbidilayouts()","title":"func hasBidiLayouts() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/onchanged(flags:handler:)","title":"func onChanged(flags: ConnectFlags, handler: (DeviceRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/onnotifycapslockstate(flags:handler:)","title":"func onNotifyCapsLockState(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/onnotifydirection(flags:handler:)","title":"func onNotifyDirection(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/onnotifydisplay(flags:handler:)","title":"func onNotifyDisplay(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/onnotifyhasbidilayouts(flags:handler:)","title":"func onNotifyHasBidiLayouts(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/onnotifyhascursor(flags:handler:)","title":"func onNotifyHasCursor(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/onnotifymodifierstate(flags:handler:)","title":"func onNotifyModifierState(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/onnotifynaxes(flags:handler:)","title":"func onNotifyNAxes(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/onnotifyname(flags:handler:)","title":"func onNotifyName(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/onnotifynumlockstate(flags:handler:)","title":"func onNotifyNumLockState(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/onnotifynumtouches(flags:handler:)","title":"func onNotifyNumTouches(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/onnotifyproductid(flags:handler:)","title":"func onNotifyProductId(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/onnotifyscrolllockstate(flags:handler:)","title":"func onNotifyScrollLockState(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/onnotifyseat(flags:handler:)","title":"func onNotifySeat(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/onnotifysource(flags:handler:)","title":"func onNotifySource(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/onnotifytool(flags:handler:)","title":"func onNotifyTool(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/onnotifyvendorid(flags:handler:)","title":"func onNotifyVendorId(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/ontoolchanged(flags:handler:)","title":"func onToolChanged(flags: ConnectFlags, handler: (DeviceRef, DeviceToolRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceprotocol\/set(property:value:)","title":"func set(property: DevicePropertyName, value: Value)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/deviceprotocol\/changedsignal","title":"static var changedSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceprotocol\/notifycapslockstatesignal","title":"static var notifyCapsLockStateSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceprotocol\/notifydirectionsignal","title":"static var notifyDirectionSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceprotocol\/notifydisplaysignal","title":"static var notifyDisplaySignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceprotocol\/notifyhasbidilayoutssignal","title":"static var notifyHasBidiLayoutsSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceprotocol\/notifyhascursorsignal","title":"static var notifyHasCursorSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceprotocol\/notifymodifierstatesignal","title":"static var notifyModifierStateSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceprotocol\/notifynaxessignal","title":"static var notifyNAxesSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceprotocol\/notifynamesignal","title":"static var notifyNameSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceprotocol\/notifynumlockstatesignal","title":"static var notifyNumLockStateSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceprotocol\/notifynumtouchessignal","title":"static var notifyNumTouchesSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceprotocol\/notifyproductidsignal","title":"static var notifyProductIdSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceprotocol\/notifyscrolllockstatesignal","title":"static var notifyScrollLockStateSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceprotocol\/notifyseatsignal","title":"static var notifySeatSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceprotocol\/notifysourcesignal","title":"static var notifySourceSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceprotocol\/notifytoolsignal","title":"static var notifyToolSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceprotocol\/notifyvendoridsignal","title":"static var notifyVendorIdSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceprotocol\/toolchangedsignal","title":"static var toolChangedSignal: DeviceSignalName","type":"property"}],"path":"\/documentation\/gdk\/deviceprotocol","title":"DeviceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicetoolprotocol\/axes","title":"var axes: AxisFlags","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/devicetoolprotocol\/device_tool_ptr-8n5ht","title":"var device_tool_ptr: UnsafeMutablePointer<GdkDeviceTool>!","type":"property"}],"title":"DeviceToolProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/devicetoolprotocol\/device_tool_ptr-95m0r","title":"var device_tool_ptr: UnsafeMutablePointer<GdkDeviceTool>!","type":"property"},{"path":"\/documentation\/gdk\/devicetoolprotocol\/hardwareid","title":"var hardwareId: guint64","type":"property"},{"path":"\/documentation\/gdk\/devicetoolprotocol\/serial","title":"var serial: guint64","type":"property"},{"path":"\/documentation\/gdk\/devicetoolprotocol\/tooltype","title":"var toolType: GdkDeviceToolType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicetoolprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: DeviceToolPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/devicetoolprotocol\/get(property:)","title":"func get(property: DeviceToolPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/devicetoolprotocol\/getaxes()","title":"func getAxes() -> AxisFlags","type":"method"},{"path":"\/documentation\/gdk\/devicetoolprotocol\/gethardwareid()","title":"func getHardwareId() -> guint64","type":"method"},{"path":"\/documentation\/gdk\/devicetoolprotocol\/getserial()","title":"func getSerial() -> guint64","type":"method"},{"path":"\/documentation\/gdk\/devicetoolprotocol\/gettooltype()","title":"func getToolType() -> GdkDeviceToolType","type":"method"},{"path":"\/documentation\/gdk\/devicetoolprotocol\/set(property:value:)","title":"func set(property: DeviceToolPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/gdk\/devicetoolprotocol","title":"DeviceToolProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaymanagerprotocol\/defaultdisplay","title":"var defaultDisplay: DisplayRef!","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/displaymanagerprotocol\/display_manager_ptr-9cez6","title":"var display_manager_ptr: UnsafeMutablePointer<GdkDisplayManager>!","type":"property"}],"title":"DisplayManagerProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/displaymanagerprotocol\/display_manager_ptr-4vf28","title":"var display_manager_ptr: UnsafeMutablePointer<GdkDisplayManager>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaymanagerprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: DisplayManagerPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerprotocol\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: DisplayManagerSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerprotocol\/connect(signal:flags:handler:)","title":"func connect(signal: DisplayManagerSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerprotocol\/get(property:)","title":"func get(property: DisplayManagerPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerprotocol\/getdefaultdisplay()","title":"func getDefaultDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerprotocol\/listdisplays()","title":"func listDisplays() -> RefSListRef<DisplayRef>!","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerprotocol\/ondisplayopened(flags:handler:)","title":"func onDisplayOpened(flags: ConnectFlags, handler: (DisplayManagerRef, DisplayRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerprotocol\/onnotifydefaultdisplay(flags:handler:)","title":"func onNotifyDefaultDisplay(flags: ConnectFlags, handler: (DisplayManagerRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerprotocol\/opendisplay(name:)","title":"func openDisplay(name: UnsafePointer<CChar>?) -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerprotocol\/set(property:value:)","title":"func set(property: DisplayManagerPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerprotocol\/setdefault(display:)","title":"func setDefault<DisplayT>(display: DisplayT)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaymanagerprotocol\/displayopenedsignal","title":"static var displayOpenedSignal: DisplayManagerSignalName","type":"property"},{"path":"\/documentation\/gdk\/displaymanagerprotocol\/notifydefaultdisplaysignal","title":"static var notifyDefaultDisplaySignal: DisplayManagerSignalName","type":"property"}],"path":"\/documentation\/gdk\/displaymanagerprotocol","title":"DisplayManagerProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/displayprotocol\/applaunchcontext","title":"var appLaunchContext: AppLaunchContextRef!","type":"property"},{"path":"\/documentation\/gdk\/displayprotocol\/clipboard","title":"var clipboard: ClipboardRef!","type":"property"},{"path":"\/documentation\/gdk\/displayprotocol\/defaultseat","title":"var defaultSeat: SeatRef!","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/displayprotocol\/display_ptr-7zk9o","title":"var display_ptr: UnsafeMutablePointer<GdkDisplay>!","type":"property"}],"title":"DisplayProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/displayprotocol\/display_ptr-mpet","title":"var display_ptr: UnsafeMutablePointer<GdkDisplay>!","type":"property"},{"path":"\/documentation\/gdk\/displayprotocol\/isclosed","title":"var isClosed: Bool","type":"property"},{"path":"\/documentation\/gdk\/displayprotocol\/iscomposited","title":"var isComposited: Bool","type":"property"},{"path":"\/documentation\/gdk\/displayprotocol\/isrgba","title":"var isRgba: Bool","type":"property"},{"path":"\/documentation\/gdk\/displayprotocol\/monitors","title":"var monitors: ListModelRef!","type":"property"},{"path":"\/documentation\/gdk\/displayprotocol\/name","title":"var name: String!","type":"property"},{"path":"\/documentation\/gdk\/displayprotocol\/primaryclipboard","title":"var primaryClipboard: ClipboardRef!","type":"property"},{"path":"\/documentation\/gdk\/displayprotocol\/startupnotificationid","title":"var startupNotificationId: String!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/displayprotocol\/beep()","title":"func beep()","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: DisplayPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/close()","title":"func close()","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: DisplaySignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/connect(signal:flags:handler:)","title":"func connect(signal: DisplaySignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/createglcontext()","title":"func createGlContext() throws -> GLContextRef!","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/deviceisgrabbed(device:)","title":"func deviceIsGrabbed<DeviceT>(device: DeviceT) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/flush()","title":"func flush()","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/get(property:)","title":"func get(property: DisplayPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/getapplaunchcontext()","title":"func getAppLaunchContext() -> AppLaunchContextRef!","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/getclipboard()","title":"func getClipboard() -> ClipboardRef!","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/getdefaultseat()","title":"func getDefaultSeat() -> SeatRef!","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/getmonitorat(surface:)","title":"func getMonitorAt<SurfaceT>(surface: SurfaceT) -> MonitorRef!","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/getmonitors()","title":"func getMonitors() -> ListModelRef!","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/getname()","title":"func getName() -> String!","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/getprimaryclipboard()","title":"func getPrimaryClipboard() -> ClipboardRef!","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/getsetting(name:value:)","title":"func getSetting<GObjectValueT>(name: UnsafePointer<CChar>!, value: GObjectValueT) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/getstartupnotificationid()","title":"func getStartupNotificationId() -> String!","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/listseats()","title":"func listSeats() -> RefListRef<SeatRef>!","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/map(keycode:keys:keyvals:nentries:)","title":"func map(keycode: Int, keys: UnsafeMutablePointer<UnsafeMutablePointer<GdkKeymapKey>?>!, keyvals: UnsafeMutablePointer<UnsafeMutablePointer<guint>?>!, nEntries: UnsafeMutablePointer<gint>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/map(keyval:keys:nkeys:)","title":"func map(keyval: Int, keys: UnsafeMutablePointer<UnsafeMutablePointer<GdkKeymapKey>?>!, nKeys: UnsafeMutablePointer<gint>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/notifystartupcomplete(startupid:)","title":"func notifyStartupComplete(startupId: UnsafePointer<CChar>!)","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/onclosed(flags:handler:)","title":"func onClosed(flags: ConnectFlags, handler: (DisplayRef, Bool) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/onnotifycomposited(flags:handler:)","title":"func onNotifyComposited(flags: ConnectFlags, handler: (DisplayRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/onnotifyinputshapes(flags:handler:)","title":"func onNotifyInputShapes(flags: ConnectFlags, handler: (DisplayRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/onnotifyrgba(flags:handler:)","title":"func onNotifyRgba(flags: ConnectFlags, handler: (DisplayRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/onopened(flags:handler:)","title":"func onOpened(flags: ConnectFlags, handler: (DisplayRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/onseatadded(flags:handler:)","title":"func onSeatAdded(flags: ConnectFlags, handler: (DisplayRef, SeatRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/onseatremoved(flags:handler:)","title":"func onSeatRemoved(flags: ConnectFlags, handler: (DisplayRef, SeatRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/onsettingchanged(flags:handler:)","title":"func onSettingChanged(flags: ConnectFlags, handler: (DisplayRef, String) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/preparegl()","title":"func prepareGl() throws -> Bool","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/put(event:)","title":"func put<EventT>(event: EventT)","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/set(property:value:)","title":"func set(property: DisplayPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/supportsinputshapes()","title":"func supportsInputShapes() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/sync()","title":"func sync()","type":"method"},{"path":"\/documentation\/gdk\/displayprotocol\/translatekey(keycode:state:group:keyval:effectivegroup:level:consumed:)","title":"func translateKey(keycode: Int, state: ModifierType, group: Int, keyval: UnsafeMutablePointer<guint>!, effectiveGroup: UnsafeMutablePointer<gint>!, level: UnsafeMutablePointer<gint>!, consumed: UnsafeMutablePointer<GdkModifierType>!) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/displayprotocol\/closedsignal","title":"static var closedSignal: DisplaySignalName","type":"property"},{"path":"\/documentation\/gdk\/displayprotocol\/notifycompositedsignal","title":"static var notifyCompositedSignal: DisplaySignalName","type":"property"},{"path":"\/documentation\/gdk\/displayprotocol\/notifyinputshapessignal","title":"static var notifyInputShapesSignal: DisplaySignalName","type":"property"},{"path":"\/documentation\/gdk\/displayprotocol\/notifyrgbasignal","title":"static var notifyRgbaSignal: DisplaySignalName","type":"property"},{"path":"\/documentation\/gdk\/displayprotocol\/openedsignal","title":"static var openedSignal: DisplaySignalName","type":"property"},{"path":"\/documentation\/gdk\/displayprotocol\/seataddedsignal","title":"static var seatAddedSignal: DisplaySignalName","type":"property"},{"path":"\/documentation\/gdk\/displayprotocol\/seatremovedsignal","title":"static var seatRemovedSignal: DisplaySignalName","type":"property"},{"path":"\/documentation\/gdk\/displayprotocol\/settingchangedsignal","title":"static var settingChangedSignal: DisplaySignalName","type":"property"}],"path":"\/documentation\/gdk\/displayprotocol","title":"DisplayProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragprotocol\/actions","title":"var actions: DragAction","type":"property"},{"path":"\/documentation\/gdk\/dragprotocol\/content","title":"var content: ContentProviderRef!","type":"property"},{"path":"\/documentation\/gdk\/dragprotocol\/device","title":"var device: DeviceRef!","type":"property"},{"path":"\/documentation\/gdk\/dragprotocol\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/dragprotocol\/dragsurface","title":"var dragSurface: SurfaceRef!","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/dragprotocol\/drag_ptr-2kd76","title":"var drag_ptr: UnsafeMutablePointer<GdkDrag>!","type":"property"}],"title":"DragProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/dragprotocol\/drag_ptr-4wsfk","title":"var drag_ptr: UnsafeMutablePointer<GdkDrag>!","type":"property"},{"path":"\/documentation\/gdk\/dragprotocol\/formats","title":"var formats: ContentFormatsRef!","type":"property"},{"path":"\/documentation\/gdk\/dragprotocol\/selectedaction","title":"var selectedAction: DragAction","type":"property"},{"path":"\/documentation\/gdk\/dragprotocol\/surface","title":"var surface: SurfaceRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: DragPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/dragprotocol\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: DragSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragprotocol\/connect(signal:flags:handler:)","title":"func connect(signal: DragSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragprotocol\/dropdone(success:)","title":"func dropDone(success: Bool)","type":"method"},{"path":"\/documentation\/gdk\/dragprotocol\/get(property:)","title":"func get(property: DragPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/dragprotocol\/getactions()","title":"func getActions() -> DragAction","type":"method"},{"path":"\/documentation\/gdk\/dragprotocol\/getcontent()","title":"func getContent() -> ContentProviderRef!","type":"method"},{"path":"\/documentation\/gdk\/dragprotocol\/getdevice()","title":"func getDevice() -> DeviceRef!","type":"method"},{"path":"\/documentation\/gdk\/dragprotocol\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/dragprotocol\/getdragsurface()","title":"func getDragSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/dragprotocol\/getformats()","title":"func getFormats() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/dragprotocol\/getselectedaction()","title":"func getSelectedAction() -> DragAction","type":"method"},{"path":"\/documentation\/gdk\/dragprotocol\/getsurface()","title":"func getSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/dragprotocol\/oncancel(flags:handler:)","title":"func onCancel(flags: ConnectFlags, handler: (DragRef, DragCancelReason) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragprotocol\/ondndfinished(flags:handler:)","title":"func onDndFinished(flags: ConnectFlags, handler: (DragRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragprotocol\/ondropperformed(flags:handler:)","title":"func onDropPerformed(flags: ConnectFlags, handler: (DragRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragprotocol\/onnotifyactions(flags:handler:)","title":"func onNotifyActions(flags: ConnectFlags, handler: (DragRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragprotocol\/onnotifycontent(flags:handler:)","title":"func onNotifyContent(flags: ConnectFlags, handler: (DragRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragprotocol\/onnotifydevice(flags:handler:)","title":"func onNotifyDevice(flags: ConnectFlags, handler: (DragRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragprotocol\/onnotifydisplay(flags:handler:)","title":"func onNotifyDisplay(flags: ConnectFlags, handler: (DragRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragprotocol\/onnotifyformats(flags:handler:)","title":"func onNotifyFormats(flags: ConnectFlags, handler: (DragRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragprotocol\/onnotifyselectedaction(flags:handler:)","title":"func onNotifySelectedAction(flags: ConnectFlags, handler: (DragRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragprotocol\/onnotifysurface(flags:handler:)","title":"func onNotifySurface(flags: ConnectFlags, handler: (DragRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragprotocol\/set(property:value:)","title":"func set(property: DragPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/dragprotocol\/sethotspot(hotx:hoty:)","title":"func setHotspot(hotX: Int, hotY: Int)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragprotocol\/cancelsignal","title":"static var cancelSignal: DragSignalName","type":"property"},{"path":"\/documentation\/gdk\/dragprotocol\/dndfinishedsignal","title":"static var dndFinishedSignal: DragSignalName","type":"property"},{"path":"\/documentation\/gdk\/dragprotocol\/dropperformedsignal","title":"static var dropPerformedSignal: DragSignalName","type":"property"},{"path":"\/documentation\/gdk\/dragprotocol\/notifyactionssignal","title":"static var notifyActionsSignal: DragSignalName","type":"property"},{"path":"\/documentation\/gdk\/dragprotocol\/notifycontentsignal","title":"static var notifyContentSignal: DragSignalName","type":"property"},{"path":"\/documentation\/gdk\/dragprotocol\/notifydevicesignal","title":"static var notifyDeviceSignal: DragSignalName","type":"property"},{"path":"\/documentation\/gdk\/dragprotocol\/notifydisplaysignal","title":"static var notifyDisplaySignal: DragSignalName","type":"property"},{"path":"\/documentation\/gdk\/dragprotocol\/notifyformatssignal","title":"static var notifyFormatsSignal: DragSignalName","type":"property"},{"path":"\/documentation\/gdk\/dragprotocol\/notifyselectedactionsignal","title":"static var notifySelectedActionSignal: DragSignalName","type":"property"},{"path":"\/documentation\/gdk\/dragprotocol\/notifysurfacesignal","title":"static var notifySurfaceSignal: DragSignalName","type":"property"}],"path":"\/documentation\/gdk\/dragprotocol","title":"DragProtocol","type":"protocol"},{"path":"\/documentation\/gdk\/dragsurfaceinterfaceprotocol","title":"DragSurfaceInterfaceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/gdk\/dragsurfaceprotocol\/drag_surface_ptr-y4d5","title":"var drag_surface_ptr: UnsafeMutablePointer<GdkDragSurface>!","type":"property"}],"title":"DragSurfaceProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/dragsurfaceprotocol\/drag_surface_ptr-6hwtq","title":"var drag_surface_ptr: UnsafeMutablePointer<GdkDragSurface>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfaceprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: DragSurfacePropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceprotocol\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: DragSurfaceSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceprotocol\/connect(signal:flags:handler:)","title":"func connect(signal: DragSurfaceSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceprotocol\/get(property:)","title":"func get(property: DragSurfacePropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceprotocol\/oncomputesize(flags:handler:)","title":"func onComputeSize(flags: ConnectFlags, handler: (DragSurfaceRef, DragSurfaceSizeRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceprotocol\/present(width:height:)","title":"func present(width: Int, height: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceprotocol\/set(property:value:)","title":"func set(property: DragSurfacePropertyName, value: Value)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfaceprotocol\/computesizesignal","title":"static var computeSizeSignal: DragSurfaceSignalName","type":"property"}],"path":"\/documentation\/gdk\/dragsurfaceprotocol","title":"DragSurfaceProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfacesizeprotocol\/setsize(width:height:)","title":"func setSize(width: Int, height: Int)","type":"method"}],"path":"\/documentation\/gdk\/dragsurfacesizeprotocol","title":"DragSurfaceSizeProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/drawcontextprotocol\/display","title":"var display: DisplayRef!","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/drawcontextprotocol\/draw_context_ptr-4b2gh","title":"var draw_context_ptr: UnsafeMutablePointer<GdkDrawContext>!","type":"property"}],"title":"DrawContextProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/drawcontextprotocol\/draw_context_ptr-5hcig","title":"var draw_context_ptr: UnsafeMutablePointer<GdkDrawContext>!","type":"property"},{"path":"\/documentation\/gdk\/drawcontextprotocol\/frameregion","title":"var frameRegion: RegionRef!","type":"property"},{"path":"\/documentation\/gdk\/drawcontextprotocol\/isinframe","title":"var isInFrame: Bool","type":"property"},{"path":"\/documentation\/gdk\/drawcontextprotocol\/surface","title":"var surface: SurfaceRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/drawcontextprotocol\/beginframe(region:)","title":"func beginFrame<cairoRegionT>(region: cairoRegionT)","type":"method"},{"path":"\/documentation\/gdk\/drawcontextprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: DrawContextPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/drawcontextprotocol\/endframe()","title":"func endFrame()","type":"method"},{"path":"\/documentation\/gdk\/drawcontextprotocol\/get(property:)","title":"func get(property: DrawContextPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/drawcontextprotocol\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/drawcontextprotocol\/getframeregion()","title":"func getFrameRegion() -> RegionRef!","type":"method"},{"path":"\/documentation\/gdk\/drawcontextprotocol\/getsurface()","title":"func getSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/drawcontextprotocol\/set(property:value:)","title":"func set(property: DrawContextPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/gdk\/drawcontextprotocol","title":"DrawContextProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dropprotocol\/actions","title":"var actions: DragAction","type":"property"},{"path":"\/documentation\/gdk\/dropprotocol\/device","title":"var device: DeviceRef!","type":"property"},{"path":"\/documentation\/gdk\/dropprotocol\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/dropprotocol\/drag","title":"var drag: DragRef!","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/dropprotocol\/drop_ptr-wzgu","title":"var drop_ptr: UnsafeMutablePointer<GdkDrop>!","type":"property"}],"title":"DropProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/dropprotocol\/drop_ptr-1ixvw","title":"var drop_ptr: UnsafeMutablePointer<GdkDrop>!","type":"property"},{"path":"\/documentation\/gdk\/dropprotocol\/formats","title":"var formats: ContentFormatsRef!","type":"property"},{"path":"\/documentation\/gdk\/dropprotocol\/surface","title":"var surface: SurfaceRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/dropprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: DropPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/dropprotocol\/finish(action:)","title":"func finish(action: DragAction)","type":"method"},{"path":"\/documentation\/gdk\/dropprotocol\/get(property:)","title":"func get(property: DropPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/dropprotocol\/getactions()","title":"func getActions() -> DragAction","type":"method"},{"path":"\/documentation\/gdk\/dropprotocol\/getdevice()","title":"func getDevice() -> DeviceRef!","type":"method"},{"path":"\/documentation\/gdk\/dropprotocol\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/dropprotocol\/getdrag()","title":"func getDrag() -> DragRef!","type":"method"},{"path":"\/documentation\/gdk\/dropprotocol\/getformats()","title":"func getFormats() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/dropprotocol\/getsurface()","title":"func getSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/dropprotocol\/readasync(mimetypes:iopriority:cancellable:callback:userdata:)-5wgnv","title":"func readAsync<GioCancellableT>(mimeTypes: UnsafeMutablePointer<UnsafePointer<CChar>?>!, ioPriority: Int, cancellable: GioCancellableT?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/dropprotocol\/readasync(mimetypes:iopriority:cancellable:callback:userdata:)-75kb5","title":"func readAsync(mimeTypes: UnsafeMutablePointer<UnsafePointer<CChar>?>!, ioPriority: Int, cancellable: CancellableRef?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/dropprotocol\/readfinish(result:outmimetype:)","title":"func readFinish<GioAsyncResultT>(result: GioAsyncResultT, outMimeType: UnsafeMutablePointer<UnsafePointer<CChar>?>!) throws -> InputStreamRef!","type":"method"},{"path":"\/documentation\/gdk\/dropprotocol\/readvalueasync(type:iopriority:cancellable:callback:userdata:)-2n7s","title":"func readValueAsync<GioCancellableT>(type: GType, ioPriority: Int, cancellable: GioCancellableT?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/dropprotocol\/readvalueasync(type:iopriority:cancellable:callback:userdata:)-3wok","title":"func readValueAsync(type: GType, ioPriority: Int, cancellable: CancellableRef?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/dropprotocol\/readvaluefinish(result:)","title":"func readValueFinish<GioAsyncResultT>(result: GioAsyncResultT) throws -> ValueRef!","type":"method"},{"path":"\/documentation\/gdk\/dropprotocol\/set(property:value:)","title":"func set(property: DropPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/dropprotocol\/status(actions:preferred:)","title":"func status(actions: DragAction, preferred: DragAction)","type":"method"}],"path":"\/documentation\/gdk\/dropprotocol","title":"DropProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/eventprotocol\/device","title":"var device: DeviceRef!","type":"property"},{"path":"\/documentation\/gdk\/eventprotocol\/devicetool","title":"var deviceTool: DeviceToolRef!","type":"property"},{"path":"\/documentation\/gdk\/eventprotocol\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/eventprotocol\/eventsequence","title":"var eventSequence: EventSequenceRef!","type":"property"},{"path":"\/documentation\/gdk\/eventprotocol\/eventtype","title":"var eventType: GdkEventType","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/eventprotocol\/event_ptr-24g6p","title":"var event_ptr: UnsafeMutablePointer<GdkEvent>!","type":"property"}],"title":"EventProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/eventprotocol\/event_ptr-6hibo","title":"var event_ptr: UnsafeMutablePointer<GdkEvent>!","type":"property"},{"path":"\/documentation\/gdk\/eventprotocol\/modifierstate","title":"var modifierState: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/eventprotocol\/pointeremulated","title":"var pointerEmulated: Bool","type":"property"},{"path":"\/documentation\/gdk\/eventprotocol\/seat","title":"var seat: SeatRef!","type":"property"},{"path":"\/documentation\/gdk\/eventprotocol\/surface","title":"var surface: SurfaceRef!","type":"property"},{"path":"\/documentation\/gdk\/eventprotocol\/time","title":"var time: guint32","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/eventprotocol\/getangle(event2:angle:)","title":"func GetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/eventprotocol\/getcenter(event2:x:y:)","title":"func GetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/eventprotocol\/getdistance(event2:distance:)","title":"func GetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/eventprotocol\/eventsgetangle(event2:angle:)","title":"func eventsGetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/eventprotocol\/eventsgetcenter(event2:x:y:)","title":"func eventsGetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/eventprotocol\/eventsgetdistance(event2:distance:)","title":"func eventsGetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/eventprotocol\/get(axes:naxes:)","title":"func get(axes: UnsafeMutablePointer<UnsafeMutablePointer<CDouble>?>!, nAxes: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/eventprotocol\/getaxis(axisuse:value:)","title":"func getAxis(axisUse: GdkAxisUse, value: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/eventprotocol\/getdevice()","title":"func getDevice() -> DeviceRef!","type":"method"},{"path":"\/documentation\/gdk\/eventprotocol\/getdevicetool()","title":"func getDeviceTool() -> DeviceToolRef!","type":"method"},{"path":"\/documentation\/gdk\/eventprotocol\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/eventprotocol\/geteventsequence()","title":"func getEventSequence() -> EventSequenceRef!","type":"method"},{"path":"\/documentation\/gdk\/eventprotocol\/geteventtype()","title":"func getEventType() -> GdkEventType","type":"method"},{"path":"\/documentation\/gdk\/eventprotocol\/gethistory(outncoords:)","title":"func getHistory(outNCoords: UnsafeMutablePointer<guint>!) -> UnsafeMutablePointer<GdkTimeCoord>!","type":"method"},{"path":"\/documentation\/gdk\/eventprotocol\/getmodifierstate()","title":"func getModifierState() -> ModifierType","type":"method"},{"path":"\/documentation\/gdk\/eventprotocol\/getpointeremulated()","title":"func getPointerEmulated() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/eventprotocol\/getposition(x:y:)","title":"func getPosition(x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/eventprotocol\/getseat()","title":"func getSeat() -> SeatRef!","type":"method"},{"path":"\/documentation\/gdk\/eventprotocol\/getsurface()","title":"func getSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/eventprotocol\/gettime()","title":"func getTime() -> guint32","type":"method"},{"path":"\/documentation\/gdk\/eventprotocol\/ref()","title":"func ref() -> EventRef!","type":"method"},{"path":"\/documentation\/gdk\/eventprotocol\/triggerscontextmenu()","title":"func triggersContextMenu() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/eventprotocol\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/gdk\/eventprotocol","title":"EventProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/gdk\/eventsequenceprotocol\/event_sequence_ptr-5s1i4","title":"var event_sequence_ptr: UnsafeMutablePointer<GdkEventSequence>!","type":"property"}],"title":"EventSequenceProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/eventsequenceprotocol\/event_sequence_ptr-50tvw","title":"var event_sequence_ptr: UnsafeMutablePointer<GdkEventSequence>!","type":"property"}],"path":"\/documentation\/gdk\/eventsequenceprotocol","title":"EventSequenceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/gdk\/filelistprotocol\/file_list_ptr-8adr4","title":"var file_list_ptr: UnsafeMutablePointer<GdkFileList>!","type":"property"}],"title":"FileListProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/filelistprotocol\/file_list_ptr-59gts","title":"var file_list_ptr: UnsafeMutablePointer<GdkFileList>!","type":"property"},{"path":"\/documentation\/gdk\/filelistprotocol\/files","title":"var files: RefSListRef<FileRef>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/filelistprotocol\/getfiles()","title":"func getFiles() -> RefSListRef<FileRef>!","type":"method"}],"path":"\/documentation\/gdk\/filelistprotocol","title":"FileListProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/gdk\/focuseventprotocol\/focus_event_ptr-8xcgv","title":"var focus_event_ptr: UnsafeMutablePointer<GdkFocusEvent>!","type":"property"}],"title":"FocusEventProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/focuseventprotocol\/focus_event_ptr-79i7k","title":"var focus_event_ptr: UnsafeMutablePointer<GdkFocusEvent>!","type":"property"},{"path":"\/documentation\/gdk\/focuseventprotocol\/in","title":"var `in`: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/focuseventprotocol\/getin()","title":"func getIn() -> Bool","type":"method"}],"path":"\/documentation\/gdk\/focuseventprotocol","title":"FocusEventProtocol","type":"protocol"},{"path":"\/documentation\/gdk\/frameclockclassprotocol","title":"FrameClockClassProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclockprotocol\/currenttimings","title":"var currentTimings: FrameTimingsRef!","type":"property"},{"path":"\/documentation\/gdk\/frameclockprotocol\/fps","title":"var fps: CDouble","type":"property"},{"path":"\/documentation\/gdk\/frameclockprotocol\/framecounter","title":"var frameCounter: gint64","type":"property"},{"path":"\/documentation\/gdk\/frameclockprotocol\/frametime","title":"var frameTime: gint64","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/frameclockprotocol\/frame_clock_ptr-6ejjm","title":"var frame_clock_ptr: UnsafeMutablePointer<GdkFrameClock>!","type":"property"}],"title":"FrameClockProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/frameclockprotocol\/frame_clock_ptr-1oolv","title":"var frame_clock_ptr: UnsafeMutablePointer<GdkFrameClock>!","type":"property"},{"path":"\/documentation\/gdk\/frameclockprotocol\/historystart","title":"var historyStart: gint64","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclockprotocol\/beginupdating()","title":"func beginUpdating()","type":"method"},{"path":"\/documentation\/gdk\/frameclockprotocol\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: FrameClockSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclockprotocol\/connect(signal:flags:handler:)","title":"func connect(signal: FrameClockSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclockprotocol\/endupdating()","title":"func endUpdating()","type":"method"},{"path":"\/documentation\/gdk\/frameclockprotocol\/getcurrenttimings()","title":"func getCurrentTimings() -> FrameTimingsRef!","type":"method"},{"path":"\/documentation\/gdk\/frameclockprotocol\/getfps()","title":"func getFps() -> CDouble","type":"method"},{"path":"\/documentation\/gdk\/frameclockprotocol\/getframecounter()","title":"func getFrameCounter() -> gint64","type":"method"},{"path":"\/documentation\/gdk\/frameclockprotocol\/getframetime()","title":"func getFrameTime() -> gint64","type":"method"},{"path":"\/documentation\/gdk\/frameclockprotocol\/gethistorystart()","title":"func getHistoryStart() -> gint64","type":"method"},{"path":"\/documentation\/gdk\/frameclockprotocol\/getrefreshinfo(basetime:refreshintervalreturn:presentationtimereturn:)","title":"func getRefreshInfo(baseTime: gint64, refreshIntervalReturn: UnsafeMutablePointer<gint64>!, presentationTimeReturn: UnsafeMutablePointer<gint64>!)","type":"method"},{"path":"\/documentation\/gdk\/frameclockprotocol\/gettimings(framecounter:)","title":"func getTimings(frameCounter: gint64) -> FrameTimingsRef!","type":"method"},{"path":"\/documentation\/gdk\/frameclockprotocol\/onafterpaint(flags:handler:)","title":"func onAfterPaint(flags: ConnectFlags, handler: (FrameClockRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclockprotocol\/onbeforepaint(flags:handler:)","title":"func onBeforePaint(flags: ConnectFlags, handler: (FrameClockRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclockprotocol\/onflushevents(flags:handler:)","title":"func onFlushEvents(flags: ConnectFlags, handler: (FrameClockRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclockprotocol\/onlayout(flags:handler:)","title":"func onLayout(flags: ConnectFlags, handler: (FrameClockRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclockprotocol\/onpaint(flags:handler:)","title":"func onPaint(flags: ConnectFlags, handler: (FrameClockRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclockprotocol\/onresumeevents(flags:handler:)","title":"func onResumeEvents(flags: ConnectFlags, handler: (FrameClockRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclockprotocol\/onupdate(flags:handler:)","title":"func onUpdate(flags: ConnectFlags, handler: (FrameClockRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclockprotocol\/request(phase:)","title":"func request(phase: FrameClockPhase)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclockprotocol\/afterpaintsignal","title":"static var afterPaintSignal: FrameClockSignalName","type":"property"},{"path":"\/documentation\/gdk\/frameclockprotocol\/beforepaintsignal","title":"static var beforePaintSignal: FrameClockSignalName","type":"property"},{"path":"\/documentation\/gdk\/frameclockprotocol\/flusheventssignal","title":"static var flushEventsSignal: FrameClockSignalName","type":"property"},{"path":"\/documentation\/gdk\/frameclockprotocol\/layoutsignal","title":"static var layoutSignal: FrameClockSignalName","type":"property"},{"path":"\/documentation\/gdk\/frameclockprotocol\/paintsignal","title":"static var paintSignal: FrameClockSignalName","type":"property"},{"path":"\/documentation\/gdk\/frameclockprotocol\/resumeeventssignal","title":"static var resumeEventsSignal: FrameClockSignalName","type":"property"},{"path":"\/documentation\/gdk\/frameclockprotocol\/updatesignal","title":"static var updateSignal: FrameClockSignalName","type":"property"}],"path":"\/documentation\/gdk\/frameclockprotocol","title":"FrameClockProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/frametimingsprotocol\/complete","title":"var complete: Bool","type":"property"},{"path":"\/documentation\/gdk\/frametimingsprotocol\/framecounter","title":"var frameCounter: gint64","type":"property"},{"path":"\/documentation\/gdk\/frametimingsprotocol\/frametime","title":"var frameTime: gint64","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/frametimingsprotocol\/frame_timings_ptr-9rupg","title":"var frame_timings_ptr: UnsafeMutablePointer<GdkFrameTimings>!","type":"property"}],"title":"FrameTimingsProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/frametimingsprotocol\/frame_timings_ptr-xs11","title":"var frame_timings_ptr: UnsafeMutablePointer<GdkFrameTimings>!","type":"property"},{"path":"\/documentation\/gdk\/frametimingsprotocol\/predictedpresentationtime","title":"var predictedPresentationTime: gint64","type":"property"},{"path":"\/documentation\/gdk\/frametimingsprotocol\/presentationtime","title":"var presentationTime: gint64","type":"property"},{"path":"\/documentation\/gdk\/frametimingsprotocol\/refreshinterval","title":"var refreshInterval: gint64","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/frametimingsprotocol\/getcomplete()","title":"func getComplete() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/frametimingsprotocol\/getframecounter()","title":"func getFrameCounter() -> gint64","type":"method"},{"path":"\/documentation\/gdk\/frametimingsprotocol\/getframetime()","title":"func getFrameTime() -> gint64","type":"method"},{"path":"\/documentation\/gdk\/frametimingsprotocol\/getpredictedpresentationtime()","title":"func getPredictedPresentationTime() -> gint64","type":"method"},{"path":"\/documentation\/gdk\/frametimingsprotocol\/getpresentationtime()","title":"func getPresentationTime() -> gint64","type":"method"},{"path":"\/documentation\/gdk\/frametimingsprotocol\/getrefreshinterval()","title":"func getRefreshInterval() -> gint64","type":"method"},{"path":"\/documentation\/gdk\/frametimingsprotocol\/ref()","title":"func ref() -> FrameTimingsRef!","type":"method"},{"path":"\/documentation\/gdk\/frametimingsprotocol\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/gdk\/frametimingsprotocol","title":"FrameTimingsProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/glcontextprotocol\/allowedapis","title":"var allowedApis: GLAPI","type":"property"},{"path":"\/documentation\/gdk\/glcontextprotocol\/api","title":"var api: GLAPI","type":"property"},{"path":"\/documentation\/gdk\/glcontextprotocol\/debugenabled","title":"var debugEnabled: Bool","type":"property"},{"path":"\/documentation\/gdk\/glcontextprotocol\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/glcontextprotocol\/forwardcompatible","title":"var forwardCompatible: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/glcontextprotocol\/gl_context_ptr-49vlc","title":"var gl_context_ptr: UnsafeMutablePointer<GdkGLContext>!","type":"property"}],"title":"GLContextProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/glcontextprotocol\/gl_context_ptr-8wqbf","title":"var gl_context_ptr: UnsafeMutablePointer<GdkGLContext>!","type":"property"},{"path":"\/documentation\/gdk\/glcontextprotocol\/islegacy","title":"var isLegacy: Bool","type":"property"},{"path":"\/documentation\/gdk\/glcontextprotocol\/sharedcontext","title":"var sharedContext: GLContextRef!","type":"property"},{"path":"\/documentation\/gdk\/glcontextprotocol\/surface","title":"var surface: SurfaceRef!","type":"property"},{"path":"\/documentation\/gdk\/glcontextprotocol\/usees","title":"var useEs: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/glcontextprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: GLContextPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/glcontextprotocol\/get(property:)","title":"func get(property: GLContextPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/glcontextprotocol\/getallowedapis()","title":"func getAllowedApis() -> GLAPI","type":"method"},{"path":"\/documentation\/gdk\/glcontextprotocol\/getapi()","title":"func getApi() -> GLAPI","type":"method"},{"path":"\/documentation\/gdk\/glcontextprotocol\/getdebugenabled()","title":"func getDebugEnabled() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/glcontextprotocol\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/glcontextprotocol\/getforwardcompatible()","title":"func getForwardCompatible() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/glcontextprotocol\/getrequiredversion(major:minor:)","title":"func getRequiredVersion(major: UnsafeMutablePointer<gint>?, minor: UnsafeMutablePointer<gint>?)","type":"method"},{"path":"\/documentation\/gdk\/glcontextprotocol\/getsharedcontext()","title":"func getSharedContext() -> GLContextRef!","type":"method"},{"path":"\/documentation\/gdk\/glcontextprotocol\/getsurface()","title":"func getSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/glcontextprotocol\/getusees()","title":"func getUseEs() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/glcontextprotocol\/getversion(major:minor:)","title":"func getVersion(major: UnsafeMutablePointer<gint>!, minor: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/gdk\/glcontextprotocol\/isshared(other:)","title":"func isShared<GLContextT>(other: GLContextT) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/glcontextprotocol\/makecurrent()","title":"func makeCurrent()","type":"method"},{"path":"\/documentation\/gdk\/glcontextprotocol\/realize()","title":"func realize() throws -> Bool","type":"method"},{"path":"\/documentation\/gdk\/glcontextprotocol\/set(property:value:)","title":"func set(property: GLContextPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/glcontextprotocol\/set(usees:)","title":"func set(useEs: Int)","type":"method"},{"path":"\/documentation\/gdk\/glcontextprotocol\/setallowed(apis:)","title":"func setAllowed(apis: GLAPI)","type":"method"},{"path":"\/documentation\/gdk\/glcontextprotocol\/setdebug(enabled:)","title":"func setDebug(enabled: Bool)","type":"method"},{"path":"\/documentation\/gdk\/glcontextprotocol\/setforward(compatible:)","title":"func setForward(compatible: Bool)","type":"method"},{"path":"\/documentation\/gdk\/glcontextprotocol\/setrequiredversion(major:minor:)","title":"func setRequiredVersion(major: Int, minor: Int)","type":"method"}],"path":"\/documentation\/gdk\/glcontextprotocol","title":"GLContextProtocol","type":"protocol"},{"path":"\/documentation\/gdk\/gltexturebuilderclassprotocol","title":"GLTextureBuilderClassProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/context","title":"var context: GLContextRef!","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/format","title":"var format: GdkMemoryFormat","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/gl_texture_builder_ptr-49f6j","title":"var gl_texture_builder_ptr: UnsafeMutablePointer<GdkGLTextureBuilder>!","type":"property"}],"title":"GLTextureBuilderProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/gl_texture_builder_ptr-3bcqu","title":"var gl_texture_builder_ptr: UnsafeMutablePointer<GdkGLTextureBuilder>!","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/hasmipmap","title":"var hasMipmap: Bool","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/height","title":"var height: Int","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/id","title":"var id: Int","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/sync","title":"var sync: gpointer?","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/updateregion","title":"var updateRegion: RegionRef!","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/updatetexture","title":"var updateTexture: TextureRef!","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/width","title":"var width: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: GLTextureBuilderPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/build(destroy:data:)","title":"func build(destroy: GDestroyNotify?, data: gpointer?) -> TextureRef!","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/get(property:)","title":"func get(property: GLTextureBuilderPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/getcontext()","title":"func getContext() -> GLContextRef!","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/getformat()","title":"func getFormat() -> GdkMemoryFormat","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/gethasmipmap()","title":"func getHasMipmap() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/getheight()","title":"func getHeight() -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/getid()","title":"func getId() -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/getsync()","title":"func getSync() -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/getupdateregion()","title":"func getUpdateRegion() -> RegionRef!","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/getupdatetexture()","title":"func getUpdateTexture() -> TextureRef!","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/getwidth()","title":"func getWidth() -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/set(context:)-5sswr","title":"func set<GLContextT>(context: GLContextT?)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/set(context:)-9ve2a","title":"func set(context: GLContextRef?)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/set(format:)","title":"func set(format: GdkMemoryFormat)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/set(hasmipmap:)","title":"func set(hasMipmap: Bool)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/set(height:)","title":"func set(height: Int)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/set(id:)","title":"func set(id: Int)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/set(property:value:)","title":"func set(property: GLTextureBuilderPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/set(sync:)","title":"func set(sync: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/set(width:)","title":"func set(width: Int)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/setupdate(region:)-3cng","title":"func setUpdate(region: RegionRef?)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/setupdate(region:)-9d5ka","title":"func setUpdate<cairoRegionT>(region: cairoRegionT?)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/setupdate(texture:)-2synl","title":"func setUpdate(texture: TextureRef?)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderprotocol\/setupdate(texture:)-f5wo","title":"func setUpdate<TextureT>(texture: TextureT?)","type":"method"}],"path":"\/documentation\/gdk\/gltexturebuilderprotocol","title":"GLTextureBuilderProtocol","type":"protocol"},{"path":"\/documentation\/gdk\/gltextureclassprotocol","title":"GLTextureClassProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/gdk\/gltextureprotocol\/gl_texture_ptr-86uhp","title":"var gl_texture_ptr: UnsafeMutablePointer<GdkGLTexture>!","type":"property"}],"title":"GLTextureProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/gltextureprotocol\/gl_texture_ptr-78t2k","title":"var gl_texture_ptr: UnsafeMutablePointer<GdkGLTexture>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltextureprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: GLTexturePropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/gltextureprotocol\/get(property:)","title":"func get(property: GLTexturePropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/gltextureprotocol\/release()","title":"func release()","type":"method"},{"path":"\/documentation\/gdk\/gltextureprotocol\/set(property:value:)","title":"func set(property: GLTexturePropertyName, value: Value)","type":"method"}],"path":"\/documentation\/gdk\/gltextureprotocol","title":"GLTextureProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/grabbrokeneventprotocol\/grabsurface","title":"var grabSurface: SurfaceRef!","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/grabbrokeneventprotocol\/grab_broken_event_ptr-1zfv3","title":"var grab_broken_event_ptr: UnsafeMutablePointer<GdkGrabBrokenEvent>!","type":"property"}],"title":"GrabBrokenEventProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/grabbrokeneventprotocol\/grab_broken_event_ptr-9zi56","title":"var grab_broken_event_ptr: UnsafeMutablePointer<GdkGrabBrokenEvent>!","type":"property"},{"path":"\/documentation\/gdk\/grabbrokeneventprotocol\/implicit","title":"var implicit: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/grabbrokeneventprotocol\/getgrabsurface()","title":"func getGrabSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/grabbrokeneventprotocol\/getimplicit()","title":"func getImplicit() -> Bool","type":"method"}],"path":"\/documentation\/gdk\/grabbrokeneventprotocol","title":"GrabBrokenEventProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/keyeventprotocol\/consumedmodifiers","title":"var consumedModifiers: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/keyeventprotocol\/ismodifier","title":"var isModifier: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/keyeventprotocol\/key_event_ptr-2qnb1","title":"var key_event_ptr: UnsafeMutablePointer<GdkKeyEvent>!","type":"property"}],"title":"KeyEventProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/keyeventprotocol\/key_event_ptr-9mq20","title":"var key_event_ptr: UnsafeMutablePointer<GdkKeyEvent>!","type":"property"},{"path":"\/documentation\/gdk\/keyeventprotocol\/keycode","title":"var keycode: Int","type":"property"},{"path":"\/documentation\/gdk\/keyeventprotocol\/keyval","title":"var keyval: Int","type":"property"},{"path":"\/documentation\/gdk\/keyeventprotocol\/layout","title":"var layout: Int","type":"property"},{"path":"\/documentation\/gdk\/keyeventprotocol\/level","title":"var level: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/keyeventprotocol\/getconsumedmodifiers()","title":"func getConsumedModifiers() -> ModifierType","type":"method"},{"path":"\/documentation\/gdk\/keyeventprotocol\/getkeycode()","title":"func getKeycode() -> Int","type":"method"},{"path":"\/documentation\/gdk\/keyeventprotocol\/getkeyval()","title":"func getKeyval() -> Int","type":"method"},{"path":"\/documentation\/gdk\/keyeventprotocol\/getlayout()","title":"func getLayout() -> Int","type":"method"},{"path":"\/documentation\/gdk\/keyeventprotocol\/getlevel()","title":"func getLevel() -> Int","type":"method"},{"path":"\/documentation\/gdk\/keyeventprotocol\/getmatch(keyval:modifiers:)","title":"func getMatch(keyval: UnsafeMutablePointer<guint>!, modifiers: UnsafeMutablePointer<GdkModifierType>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/keyeventprotocol\/matches(keyval:modifiers:)","title":"func matches(keyval: Int, modifiers: ModifierType) -> GdkKeyMatch","type":"method"}],"path":"\/documentation\/gdk\/keyeventprotocol","title":"KeyEventProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/keymapkeyprotocol\/group","title":"var group: gint","type":"property"},{"path":"\/documentation\/gdk\/keymapkeyprotocol\/keycode","title":"var keycode: guint","type":"property"},{"path":"\/documentation\/gdk\/keymapkeyprotocol\/level","title":"var level: gint","type":"property"}],"path":"\/documentation\/gdk\/keymapkeyprotocol","title":"KeymapKeyProtocol","type":"protocol"},{"path":"\/documentation\/gdk\/memorytextureclassprotocol","title":"MemoryTextureClassProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/gdk\/memorytextureprotocol\/memory_texture_ptr-1187q","title":"var memory_texture_ptr: UnsafeMutablePointer<GdkMemoryTexture>!","type":"property"}],"title":"MemoryTextureProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/memorytextureprotocol\/memory_texture_ptr-8z4wd","title":"var memory_texture_ptr: UnsafeMutablePointer<GdkMemoryTexture>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytextureprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: MemoryTexturePropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/memorytextureprotocol\/get(property:)","title":"func get(property: MemoryTexturePropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/memorytextureprotocol\/set(property:value:)","title":"func set(property: MemoryTexturePropertyName, value: Value)","type":"method"}],"path":"\/documentation\/gdk\/memorytextureprotocol","title":"MemoryTextureProtocol","type":"protocol"},{"path":"\/documentation\/gdk\/monitorclassprotocol","title":"MonitorClassProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitorprotocol\/connector","title":"var connector: String!","type":"property"},{"path":"\/documentation\/gdk\/monitorprotocol\/description","title":"var description: String!","type":"property"},{"path":"\/documentation\/gdk\/monitorprotocol\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/monitorprotocol\/heightmm","title":"var heightMm: Int","type":"property"},{"path":"\/documentation\/gdk\/monitorprotocol\/isvalid","title":"var isValid: Bool","type":"property"},{"path":"\/documentation\/gdk\/monitorprotocol\/manufacturer","title":"var manufacturer: String!","type":"property"},{"path":"\/documentation\/gdk\/monitorprotocol\/model","title":"var model: String!","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/monitorprotocol\/monitor_ptr-5huj4","title":"var monitor_ptr: UnsafeMutablePointer<GdkMonitor>!","type":"property"}],"title":"MonitorProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/monitorprotocol\/monitor_ptr-c72d","title":"var monitor_ptr: UnsafeMutablePointer<GdkMonitor>!","type":"property"},{"path":"\/documentation\/gdk\/monitorprotocol\/refreshrate","title":"var refreshRate: Int","type":"property"},{"path":"\/documentation\/gdk\/monitorprotocol\/scalefactor","title":"var scaleFactor: Int","type":"property"},{"path":"\/documentation\/gdk\/monitorprotocol\/subpixellayout","title":"var subpixelLayout: GdkSubpixelLayout","type":"property"},{"path":"\/documentation\/gdk\/monitorprotocol\/widthmm","title":"var widthMm: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitorprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: MonitorPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/monitorprotocol\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: MonitorSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorprotocol\/connect(signal:flags:handler:)","title":"func connect(signal: MonitorSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorprotocol\/get(geometry:)","title":"func get<RectangleT>(geometry: RectangleT)","type":"method"},{"path":"\/documentation\/gdk\/monitorprotocol\/get(property:)","title":"func get(property: MonitorPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/monitorprotocol\/getconnector()","title":"func getConnector() -> String!","type":"method"},{"path":"\/documentation\/gdk\/monitorprotocol\/getdescription()","title":"func getDescription() -> String!","type":"method"},{"path":"\/documentation\/gdk\/monitorprotocol\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/monitorprotocol\/getheightmm()","title":"func getHeightMm() -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorprotocol\/getmanufacturer()","title":"func getManufacturer() -> String!","type":"method"},{"path":"\/documentation\/gdk\/monitorprotocol\/getmodel()","title":"func getModel() -> String!","type":"method"},{"path":"\/documentation\/gdk\/monitorprotocol\/getrefreshrate()","title":"func getRefreshRate() -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorprotocol\/getscalefactor()","title":"func getScaleFactor() -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorprotocol\/getsubpixellayout()","title":"func getSubpixelLayout() -> GdkSubpixelLayout","type":"method"},{"path":"\/documentation\/gdk\/monitorprotocol\/getwidthmm()","title":"func getWidthMm() -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorprotocol\/oninvalidate(flags:handler:)","title":"func onInvalidate(flags: ConnectFlags, handler: (MonitorRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorprotocol\/onnotifyconnector(flags:handler:)","title":"func onNotifyConnector(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorprotocol\/onnotifydescription(flags:handler:)","title":"func onNotifyDescription(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorprotocol\/onnotifydisplay(flags:handler:)","title":"func onNotifyDisplay(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorprotocol\/onnotifygeometry(flags:handler:)","title":"func onNotifyGeometry(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorprotocol\/onnotifyheightmm(flags:handler:)","title":"func onNotifyHeightMm(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorprotocol\/onnotifymanufacturer(flags:handler:)","title":"func onNotifyManufacturer(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorprotocol\/onnotifymodel(flags:handler:)","title":"func onNotifyModel(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorprotocol\/onnotifyrefreshrate(flags:handler:)","title":"func onNotifyRefreshRate(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorprotocol\/onnotifyscalefactor(flags:handler:)","title":"func onNotifyScaleFactor(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorprotocol\/onnotifysubpixellayout(flags:handler:)","title":"func onNotifySubpixelLayout(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorprotocol\/onnotifyvalid(flags:handler:)","title":"func onNotifyValid(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorprotocol\/onnotifywidthmm(flags:handler:)","title":"func onNotifyWidthMm(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorprotocol\/set(property:value:)","title":"func set(property: MonitorPropertyName, value: Value)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitorprotocol\/invalidatesignal","title":"static var invalidateSignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitorprotocol\/notifyconnectorsignal","title":"static var notifyConnectorSignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitorprotocol\/notifydescriptionsignal","title":"static var notifyDescriptionSignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitorprotocol\/notifydisplaysignal","title":"static var notifyDisplaySignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitorprotocol\/notifygeometrysignal","title":"static var notifyGeometrySignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitorprotocol\/notifyheightmmsignal","title":"static var notifyHeightMmSignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitorprotocol\/notifymanufacturersignal","title":"static var notifyManufacturerSignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitorprotocol\/notifymodelsignal","title":"static var notifyModelSignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitorprotocol\/notifyrefreshratesignal","title":"static var notifyRefreshRateSignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitorprotocol\/notifyscalefactorsignal","title":"static var notifyScaleFactorSignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitorprotocol\/notifysubpixellayoutsignal","title":"static var notifySubpixelLayoutSignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitorprotocol\/notifyvalidsignal","title":"static var notifyValidSignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitorprotocol\/notifywidthmmsignal","title":"static var notifyWidthMmSignal: MonitorSignalName","type":"property"}],"path":"\/documentation\/gdk\/monitorprotocol","title":"MonitorProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/gdk\/motioneventprotocol\/motion_event_ptr-6smq9","title":"var motion_event_ptr: UnsafeMutablePointer<GdkMotionEvent>!","type":"property"}],"title":"MotionEventProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/motioneventprotocol\/motion_event_ptr-1lw86","title":"var motion_event_ptr: UnsafeMutablePointer<GdkMotionEvent>!","type":"property"}],"path":"\/documentation\/gdk\/motioneventprotocol","title":"MotionEventProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/padeventprotocol\/button","title":"var button: Int","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/padeventprotocol\/pad_event_ptr-48ai6","title":"var pad_event_ptr: UnsafeMutablePointer<GdkPadEvent>!","type":"property"}],"title":"PadEventProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/padeventprotocol\/pad_event_ptr-9g3je","title":"var pad_event_ptr: UnsafeMutablePointer<GdkPadEvent>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/padeventprotocol\/getaxisvalue(index:value:)","title":"func getAxisValue(index: UnsafeMutablePointer<guint>!, value: UnsafeMutablePointer<CDouble>!)","type":"method"},{"path":"\/documentation\/gdk\/padeventprotocol\/getbutton()","title":"func getButton() -> Int","type":"method"},{"path":"\/documentation\/gdk\/padeventprotocol\/getgroupmode(group:mode:)","title":"func getGroupMode(group: UnsafeMutablePointer<guint>!, mode: UnsafeMutablePointer<guint>!)","type":"method"}],"path":"\/documentation\/gdk\/padeventprotocol","title":"PadEventProtocol","type":"protocol"},{"path":"\/documentation\/gdk\/paintableinterfaceprotocol","title":"PaintableInterfaceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintableprotocol\/currentimage","title":"var currentImage: PaintableRef!","type":"property"},{"path":"\/documentation\/gdk\/paintableprotocol\/flags","title":"var flags: PaintableFlags","type":"property"},{"path":"\/documentation\/gdk\/paintableprotocol\/intrinsicaspectratio","title":"var intrinsicAspectRatio: CDouble","type":"property"},{"path":"\/documentation\/gdk\/paintableprotocol\/intrinsicheight","title":"var intrinsicHeight: Int","type":"property"},{"path":"\/documentation\/gdk\/paintableprotocol\/intrinsicwidth","title":"var intrinsicWidth: Int","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/paintableprotocol\/paintable_ptr-5ar20","title":"var paintable_ptr: UnsafeMutablePointer<GdkPaintable>!","type":"property"}],"title":"PaintableProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/paintableprotocol\/paintable_ptr-26uim","title":"var paintable_ptr: UnsafeMutablePointer<GdkPaintable>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintableprotocol\/computeconcretesize(specifiedwidth:specifiedheight:defaultwidth:defaultheight:concretewidth:concreteheight:)","title":"func computeConcreteSize(specifiedWidth: CDouble, specifiedHeight: CDouble, defaultWidth: CDouble, defaultHeight: CDouble, concreteWidth: UnsafeMutablePointer<CDouble>!, concreteHeight: UnsafeMutablePointer<CDouble>!)","type":"method"},{"path":"\/documentation\/gdk\/paintableprotocol\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: PaintableSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/paintableprotocol\/connect(signal:flags:handler:)","title":"func connect(signal: PaintableSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/paintableprotocol\/getcurrentimage()","title":"func getCurrentImage() -> PaintableRef!","type":"method"},{"path":"\/documentation\/gdk\/paintableprotocol\/getflags()","title":"func getFlags() -> PaintableFlags","type":"method"},{"path":"\/documentation\/gdk\/paintableprotocol\/getintrinsicaspectratio()","title":"func getIntrinsicAspectRatio() -> CDouble","type":"method"},{"path":"\/documentation\/gdk\/paintableprotocol\/getintrinsicheight()","title":"func getIntrinsicHeight() -> Int","type":"method"},{"path":"\/documentation\/gdk\/paintableprotocol\/getintrinsicwidth()","title":"func getIntrinsicWidth() -> Int","type":"method"},{"path":"\/documentation\/gdk\/paintableprotocol\/invalidatecontents()","title":"func invalidateContents()","type":"method"},{"path":"\/documentation\/gdk\/paintableprotocol\/invalidatesize()","title":"func invalidateSize()","type":"method"},{"path":"\/documentation\/gdk\/paintableprotocol\/oninvalidatecontents(flags:handler:)","title":"func onInvalidateContents(flags: ConnectFlags, handler: (PaintableRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/paintableprotocol\/oninvalidatesize(flags:handler:)","title":"func onInvalidateSize(flags: ConnectFlags, handler: (PaintableRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/paintableprotocol\/snapshot(snapshot:width:height:)","title":"func snapshot<SnapshotT>(snapshot: SnapshotT, width: CDouble, height: CDouble)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintableprotocol\/invalidatecontentssignal","title":"static var invalidateContentsSignal: PaintableSignalName","type":"property"},{"path":"\/documentation\/gdk\/paintableprotocol\/invalidatesizesignal","title":"static var invalidateSizeSignal: PaintableSignalName","type":"property"}],"path":"\/documentation\/gdk\/paintableprotocol","title":"PaintableProtocol","type":"protocol"},{"path":"\/documentation\/gdk\/popupinterfaceprotocol","title":"PopupInterfaceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/popuplayoutprotocol\/anchorhints","title":"var anchorHints: AnchorHints","type":"property"},{"path":"\/documentation\/gdk\/popuplayoutprotocol\/anchorrect","title":"var anchorRect: RectangleRef!","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/popuplayoutprotocol\/popup_layout_ptr-3fmp","title":"var popup_layout_ptr: UnsafeMutablePointer<GdkPopupLayout>!","type":"property"}],"title":"PopupLayoutProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/popuplayoutprotocol\/popup_layout_ptr-50wlv","title":"var popup_layout_ptr: UnsafeMutablePointer<GdkPopupLayout>!","type":"property"},{"path":"\/documentation\/gdk\/popuplayoutprotocol\/rectanchor","title":"var rectAnchor: GdkGravity","type":"property"},{"path":"\/documentation\/gdk\/popuplayoutprotocol\/surfaceanchor","title":"var surfaceAnchor: GdkGravity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/popuplayoutprotocol\/copy()","title":"func copy() -> PopupLayoutRef!","type":"method"},{"path":"\/documentation\/gdk\/popuplayoutprotocol\/equal(other:)","title":"func equal<PopupLayoutT>(other: PopupLayoutT) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/popuplayoutprotocol\/getanchorhints()","title":"func getAnchorHints() -> AnchorHints","type":"method"},{"path":"\/documentation\/gdk\/popuplayoutprotocol\/getanchorrect()","title":"func getAnchorRect() -> RectangleRef!","type":"method"},{"path":"\/documentation\/gdk\/popuplayoutprotocol\/getoffset(dx:dy:)","title":"func getOffset(dx: UnsafeMutablePointer<gint>!, dy: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/gdk\/popuplayoutprotocol\/getrectanchor()","title":"func getRectAnchor() -> GdkGravity","type":"method"},{"path":"\/documentation\/gdk\/popuplayoutprotocol\/getshadowwidth(left:right:top:bottom:)","title":"func getShadowWidth(left: UnsafeMutablePointer<gint>!, right: UnsafeMutablePointer<gint>!, top: UnsafeMutablePointer<gint>!, bottom: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/gdk\/popuplayoutprotocol\/getsurfaceanchor()","title":"func getSurfaceAnchor() -> GdkGravity","type":"method"},{"path":"\/documentation\/gdk\/popuplayoutprotocol\/ref()","title":"func ref() -> PopupLayoutRef!","type":"method"},{"path":"\/documentation\/gdk\/popuplayoutprotocol\/set(anchorhints:)","title":"func set(anchorHints: AnchorHints)","type":"method"},{"path":"\/documentation\/gdk\/popuplayoutprotocol\/set(anchorrect:)","title":"func set<RectangleT>(anchorRect: RectangleT)","type":"method"},{"path":"\/documentation\/gdk\/popuplayoutprotocol\/setoffset(dx:dy:)","title":"func setOffset(dx: Int, dy: Int)","type":"method"},{"path":"\/documentation\/gdk\/popuplayoutprotocol\/setrect(anchor:)","title":"func setRect(anchor: GdkGravity)","type":"method"},{"path":"\/documentation\/gdk\/popuplayoutprotocol\/setshadowwidth(left:right:top:bottom:)","title":"func setShadowWidth(left: Int, right: Int, top: Int, bottom: Int)","type":"method"},{"path":"\/documentation\/gdk\/popuplayoutprotocol\/setsurface(anchor:)","title":"func setSurface(anchor: GdkGravity)","type":"method"},{"path":"\/documentation\/gdk\/popuplayoutprotocol\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/gdk\/popuplayoutprotocol","title":"PopupLayoutProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/popupprotocol\/autohide","title":"var autohide: Bool","type":"property"},{"path":"\/documentation\/gdk\/popupprotocol\/parent","title":"var parent: SurfaceRef!","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/popupprotocol\/popup_ptr-4k77u","title":"var popup_ptr: UnsafeMutablePointer<GdkPopup>!","type":"property"}],"title":"PopupProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/popupprotocol\/popup_ptr-9r4nz","title":"var popup_ptr: UnsafeMutablePointer<GdkPopup>!","type":"property"},{"path":"\/documentation\/gdk\/popupprotocol\/positionx","title":"var positionX: Int","type":"property"},{"path":"\/documentation\/gdk\/popupprotocol\/positiony","title":"var positionY: Int","type":"property"},{"path":"\/documentation\/gdk\/popupprotocol\/rectanchor","title":"var rectAnchor: GdkGravity","type":"property"},{"path":"\/documentation\/gdk\/popupprotocol\/surfaceanchor","title":"var surfaceAnchor: GdkGravity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/popupprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: PopupPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/popupprotocol\/get(property:)","title":"func get(property: PopupPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/popupprotocol\/getautohide()","title":"func getAutohide() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/popupprotocol\/getparent()","title":"func getParent() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/popupprotocol\/getpositionx()","title":"func getPositionX() -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupprotocol\/getpositiony()","title":"func getPositionY() -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupprotocol\/getrectanchor()","title":"func getRectAnchor() -> GdkGravity","type":"method"},{"path":"\/documentation\/gdk\/popupprotocol\/getsurfaceanchor()","title":"func getSurfaceAnchor() -> GdkGravity","type":"method"},{"path":"\/documentation\/gdk\/popupprotocol\/present(width:height:layout:)","title":"func present<PopupLayoutT>(width: Int, height: Int, layout: PopupLayoutT) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/popupprotocol\/set(property:value:)","title":"func set(property: PopupPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/gdk\/popupprotocol","title":"PopupProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/gdk\/proximityeventprotocol\/proximity_event_ptr-174js","title":"var proximity_event_ptr: UnsafeMutablePointer<GdkProximityEvent>!","type":"property"}],"title":"ProximityEventProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/proximityeventprotocol\/proximity_event_ptr-2h6ra","title":"var proximity_event_ptr: UnsafeMutablePointer<GdkProximityEvent>!","type":"property"}],"path":"\/documentation\/gdk\/proximityeventprotocol","title":"ProximityEventProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/rgbaprotocol\/alpha","title":"var alpha: CFloat","type":"property"},{"path":"\/documentation\/gdk\/rgbaprotocol\/blue","title":"var blue: CFloat","type":"property"},{"path":"\/documentation\/gdk\/rgbaprotocol\/green","title":"var green: CFloat","type":"property"},{"path":"\/documentation\/gdk\/rgbaprotocol\/isclear","title":"var isClear: Bool","type":"property"},{"path":"\/documentation\/gdk\/rgbaprotocol\/isopaque","title":"var isOpaque: Bool","type":"property"},{"path":"\/documentation\/gdk\/rgbaprotocol\/red","title":"var red: CFloat","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/rgbaprotocol\/rgba_ptr-9j8tm","title":"var rgba_ptr: UnsafeMutablePointer<GdkRGBA>!","type":"property"}],"title":"RGBAProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/rgbaprotocol\/rgba_ptr-cq26","title":"var rgba_ptr: UnsafeMutablePointer<GdkRGBA>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/rgbaprotocol\/cairosetsourcergba(cr:)","title":"func cairoSetSourceRgba<CairoContextT>(cr: CairoContextT)","type":"method"},{"path":"\/documentation\/gdk\/rgbaprotocol\/copy()","title":"func copy() -> RGBARef!","type":"method"},{"path":"\/documentation\/gdk\/rgbaprotocol\/equal(p2:)","title":"func equal<RGBAT>(p2: RGBAT) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/rgbaprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/gdk\/rgbaprotocol\/hash()","title":"func hash() -> Int","type":"method"},{"path":"\/documentation\/gdk\/rgbaprotocol\/parse(spec:)","title":"func parse(spec: UnsafePointer<CChar>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/rgbaprotocol\/tostring()","title":"func toString() -> String!","type":"method"}],"path":"\/documentation\/gdk\/rgbaprotocol","title":"RGBAProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/rectangleprotocol\/height","title":"var height: gint","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/rectangleprotocol\/rectangle_ptr-9wvsz","title":"var rectangle_ptr: UnsafeMutablePointer<GdkRectangle>!","type":"property"}],"title":"RectangleProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/rectangleprotocol\/rectangle_ptr-4q1uf","title":"var rectangle_ptr: UnsafeMutablePointer<GdkRectangle>!","type":"property"},{"path":"\/documentation\/gdk\/rectangleprotocol\/width","title":"var width: gint","type":"property"},{"path":"\/documentation\/gdk\/rectangleprotocol\/x","title":"var x: gint","type":"property"},{"path":"\/documentation\/gdk\/rectangleprotocol\/y","title":"var y: gint","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/rectangleprotocol\/cairorectangle(cr:)","title":"func cairoRectangle<CairoContextT>(cr: CairoContextT)","type":"method"},{"path":"\/documentation\/gdk\/rectangleprotocol\/containspoint(x:y:)","title":"func containsPoint(x: Int, y: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/rectangleprotocol\/equal(rect2:)","title":"func equal<RectangleT>(rect2: RectangleT) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/rectangleprotocol\/intersect(src2:dest:)","title":"func intersect<RectangleT>(src2: RectangleT, dest: RectangleT?) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/rectangleprotocol\/union(src2:dest:)","title":"func union<RectangleT>(src2: RectangleT, dest: RectangleT)","type":"method"}],"path":"\/documentation\/gdk\/rectangleprotocol","title":"RectangleProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/scrolleventprotocol\/direction","title":"var direction: GdkScrollDirection","type":"property"},{"path":"\/documentation\/gdk\/scrolleventprotocol\/isstop","title":"var isStop: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/scrolleventprotocol\/scroll_event_ptr-5tgwf","title":"var scroll_event_ptr: UnsafeMutablePointer<GdkScrollEvent>!","type":"property"}],"title":"ScrollEventProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/scrolleventprotocol\/scroll_event_ptr-7kg4z","title":"var scroll_event_ptr: UnsafeMutablePointer<GdkScrollEvent>!","type":"property"},{"path":"\/documentation\/gdk\/scrolleventprotocol\/unit","title":"var unit: GdkScrollUnit","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/scrolleventprotocol\/getdeltas(deltax:deltay:)","title":"func getDeltas(deltaX: UnsafeMutablePointer<CDouble>!, deltaY: UnsafeMutablePointer<CDouble>!)","type":"method"},{"path":"\/documentation\/gdk\/scrolleventprotocol\/getdirection()","title":"func getDirection() -> GdkScrollDirection","type":"method"},{"path":"\/documentation\/gdk\/scrolleventprotocol\/getunit()","title":"func getUnit() -> GdkScrollUnit","type":"method"}],"path":"\/documentation\/gdk\/scrolleventprotocol","title":"ScrollEventProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatprotocol\/capabilities","title":"var capabilities: SeatCapabilities","type":"property"},{"path":"\/documentation\/gdk\/seatprotocol\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/seatprotocol\/keyboard","title":"var keyboard: DeviceRef!","type":"property"},{"path":"\/documentation\/gdk\/seatprotocol\/parentinstance","title":"var parentInstance: GObject","type":"property"},{"path":"\/documentation\/gdk\/seatprotocol\/pointer","title":"var pointer: DeviceRef!","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/seatprotocol\/seat_ptr-6ybee","title":"var seat_ptr: UnsafeMutablePointer<GdkSeat>!","type":"property"}],"title":"SeatProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/seatprotocol\/seat_ptr-3knno","title":"var seat_ptr: UnsafeMutablePointer<GdkSeat>!","type":"property"},{"path":"\/documentation\/gdk\/seatprotocol\/tools","title":"var tools: RefListRef<DeviceToolRef>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: SeatPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/seatprotocol\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: SeatSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seatprotocol\/connect(signal:flags:handler:)","title":"func connect(signal: SeatSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seatprotocol\/get(property:)","title":"func get(property: SeatPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/seatprotocol\/getcapabilities()","title":"func getCapabilities() -> SeatCapabilities","type":"method"},{"path":"\/documentation\/gdk\/seatprotocol\/getdevices(capabilities:)","title":"func getDevices(capabilities: SeatCapabilities) -> RefListRef<DeviceRef>!","type":"method"},{"path":"\/documentation\/gdk\/seatprotocol\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/seatprotocol\/getkeyboard()","title":"func getKeyboard() -> DeviceRef!","type":"method"},{"path":"\/documentation\/gdk\/seatprotocol\/getpointer()","title":"func getPointer() -> DeviceRef!","type":"method"},{"path":"\/documentation\/gdk\/seatprotocol\/gettools()","title":"func getTools() -> RefListRef<DeviceToolRef>!","type":"method"},{"path":"\/documentation\/gdk\/seatprotocol\/ondeviceadded(flags:handler:)","title":"func onDeviceAdded(flags: ConnectFlags, handler: (SeatRef, DeviceRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seatprotocol\/ondeviceremoved(flags:handler:)","title":"func onDeviceRemoved(flags: ConnectFlags, handler: (SeatRef, DeviceRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seatprotocol\/onnotifydisplay(flags:handler:)","title":"func onNotifyDisplay(flags: ConnectFlags, handler: (SeatRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seatprotocol\/ontooladded(flags:handler:)","title":"func onToolAdded(flags: ConnectFlags, handler: (SeatRef, DeviceToolRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seatprotocol\/ontoolremoved(flags:handler:)","title":"func onToolRemoved(flags: ConnectFlags, handler: (SeatRef, DeviceToolRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seatprotocol\/set(property:value:)","title":"func set(property: SeatPropertyName, value: Value)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatprotocol\/deviceaddedsignal","title":"static var deviceAddedSignal: SeatSignalName","type":"property"},{"path":"\/documentation\/gdk\/seatprotocol\/deviceremovedsignal","title":"static var deviceRemovedSignal: SeatSignalName","type":"property"},{"path":"\/documentation\/gdk\/seatprotocol\/notifydisplaysignal","title":"static var notifyDisplaySignal: SeatSignalName","type":"property"},{"path":"\/documentation\/gdk\/seatprotocol\/tooladdedsignal","title":"static var toolAddedSignal: SeatSignalName","type":"property"},{"path":"\/documentation\/gdk\/seatprotocol\/toolremovedsignal","title":"static var toolRemovedSignal: SeatSignalName","type":"property"}],"path":"\/documentation\/gdk\/seatprotocol","title":"SeatProtocol","type":"protocol"},{"path":"\/documentation\/gdk\/snapshotclassprotocol","title":"SnapshotClassProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/gdk\/snapshotprotocol\/snapshot_ptr-7bdw0","title":"var snapshot_ptr: UnsafeMutablePointer<GdkSnapshot>!","type":"property"}],"title":"SnapshotProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/snapshotprotocol\/snapshot_ptr-1s78e","title":"var snapshot_ptr: UnsafeMutablePointer<GdkSnapshot>!","type":"property"}],"path":"\/documentation\/gdk\/snapshotprotocol","title":"SnapshotProtocol","type":"protocol"},{"path":"\/documentation\/gdk\/surfaceclassprotocol","title":"SurfaceClassProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/surfaceprotocol\/cursor","title":"var cursor: CursorRef!","type":"property"},{"path":"\/documentation\/gdk\/surfaceprotocol\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/surfaceprotocol\/frameclock","title":"var frameClock: FrameClockRef!","type":"property"},{"path":"\/documentation\/gdk\/surfaceprotocol\/height","title":"var height: Int","type":"property"},{"path":"\/documentation\/gdk\/surfaceprotocol\/isdestroyed","title":"var isDestroyed: Bool","type":"property"},{"path":"\/documentation\/gdk\/surfaceprotocol\/mapped","title":"var mapped: Bool","type":"property"},{"path":"\/documentation\/gdk\/surfaceprotocol\/scale","title":"var scale: CDouble","type":"property"},{"path":"\/documentation\/gdk\/surfaceprotocol\/scalefactor","title":"var scaleFactor: Int","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/surfaceprotocol\/surface_ptr-1th3c","title":"var surface_ptr: UnsafeMutablePointer<GdkSurface>!","type":"property"}],"title":"SurfaceProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/surfaceprotocol\/surface_ptr-1kaqm","title":"var surface_ptr: UnsafeMutablePointer<GdkSurface>!","type":"property"},{"path":"\/documentation\/gdk\/surfaceprotocol\/width","title":"var width: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/surfaceprotocol\/beep()","title":"func beep()","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: SurfacePropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/cairodrawfromgl(cr:source:sourcetype:bufferscale:x:y:width:height:)","title":"func cairoDrawFromGl<CairoContextT>(cr: CairoContextT, source: Int, sourceType: Int, bufferScale: Int, x: Int, y: Int, width: Int, height: Int)","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: SurfaceSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/connect(signal:flags:handler:)","title":"func connect(signal: SurfaceSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/createcairocontext()","title":"func createCairoContext() -> CairoContextRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/createglcontext()","title":"func createGlContext() throws -> GLContextRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/createsimilarsurface(content:width:height:)","title":"func createSimilarSurface(content: cairo_content_t, width: Int, height: Int) -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/createvulkancontext()","title":"func createVulkanContext() throws -> VulkanContextRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/get(property:)","title":"func get(property: SurfacePropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/getcursor()","title":"func getCursor() -> CursorRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/getdevicecursor(device:)","title":"func getDeviceCursor<DeviceT>(device: DeviceT) -> CursorRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/getdeviceposition(device:x:y:mask:)","title":"func getDevicePosition<DeviceT>(device: DeviceT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!, mask: UnsafeMutablePointer<GdkModifierType>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/getframeclock()","title":"func getFrameClock() -> FrameClockRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/getheight()","title":"func getHeight() -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/getmapped()","title":"func getMapped() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/getscale()","title":"func getScale() -> CDouble","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/getscalefactor()","title":"func getScaleFactor() -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/getwidth()","title":"func getWidth() -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/hide()","title":"func hide()","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/onentermonitor(flags:handler:)","title":"func onEnterMonitor(flags: ConnectFlags, handler: (SurfaceRef, MonitorRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/onevent(flags:handler:)","title":"func onEvent(flags: ConnectFlags, handler: (SurfaceRef, EventRef) -> Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/onlayout(flags:handler:)","title":"func onLayout(flags: ConnectFlags, handler: (SurfaceRef, Int, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/onleavemonitor(flags:handler:)","title":"func onLeaveMonitor(flags: ConnectFlags, handler: (SurfaceRef, MonitorRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/onnotifycursor(flags:handler:)","title":"func onNotifyCursor(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/onnotifydisplay(flags:handler:)","title":"func onNotifyDisplay(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/onnotifyframeclock(flags:handler:)","title":"func onNotifyFrameClock(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/onnotifyheight(flags:handler:)","title":"func onNotifyHeight(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/onnotifymapped(flags:handler:)","title":"func onNotifyMapped(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/onnotifyscale(flags:handler:)","title":"func onNotifyScale(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/onnotifyscalefactor(flags:handler:)","title":"func onNotifyScaleFactor(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/onnotifywidth(flags:handler:)","title":"func onNotifyWidth(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/onrender(flags:handler:)","title":"func onRender(flags: ConnectFlags, handler: (SurfaceRef, RegionRef) -> Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/queuerender()","title":"func queueRender()","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/requestlayout()","title":"func requestLayout()","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/set(cursor:)-2r26v","title":"func set(cursor: CursorRef?)","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/set(cursor:)-69eav","title":"func set<CursorT>(cursor: CursorT?)","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/set(property:value:)","title":"func set(property: SurfacePropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/setdevicecursor(device:cursor:)","title":"func setDeviceCursor<CursorT, DeviceT>(device: DeviceT, cursor: CursorT)","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/setinput(region:)","title":"func setInput<cairoRegionT>(region: cairoRegionT)","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/setopaque(region:)-1ckm9","title":"func setOpaque(region: RegionRef?)","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/setopaque(region:)-d2fv","title":"func setOpaque<cairoRegionT>(region: cairoRegionT?)","type":"method"},{"path":"\/documentation\/gdk\/surfaceprotocol\/translatecoordinates(to:x:y:)","title":"func translateCoordinates<SurfaceT>(to: SurfaceT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/surfaceprotocol\/entermonitorsignal","title":"static var enterMonitorSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surfaceprotocol\/eventsignal","title":"static var eventSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surfaceprotocol\/layoutsignal","title":"static var layoutSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surfaceprotocol\/leavemonitorsignal","title":"static var leaveMonitorSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surfaceprotocol\/notifycursorsignal","title":"static var notifyCursorSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surfaceprotocol\/notifydisplaysignal","title":"static var notifyDisplaySignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surfaceprotocol\/notifyframeclocksignal","title":"static var notifyFrameClockSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surfaceprotocol\/notifyheightsignal","title":"static var notifyHeightSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surfaceprotocol\/notifymappedsignal","title":"static var notifyMappedSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surfaceprotocol\/notifyscalefactorsignal","title":"static var notifyScaleFactorSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surfaceprotocol\/notifyscalesignal","title":"static var notifyScaleSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surfaceprotocol\/notifywidthsignal","title":"static var notifyWidthSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surfaceprotocol\/rendersignal","title":"static var renderSignal: SurfaceSignalName","type":"property"}],"path":"\/documentation\/gdk\/surfaceprotocol","title":"SurfaceProtocol","type":"protocol"},{"path":"\/documentation\/gdk\/textureclassprotocol","title":"TextureClassProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/texturedownloaderprotocol\/format","title":"var format: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/texturedownloaderprotocol\/texture","title":"var texture: TextureRef!","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/texturedownloaderprotocol\/texture_downloader_ptr-3z072","title":"var texture_downloader_ptr: UnsafeMutablePointer<GdkTextureDownloader>!","type":"property"}],"title":"TextureDownloaderProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/texturedownloaderprotocol\/texture_downloader_ptr-20lju","title":"var texture_downloader_ptr: UnsafeMutablePointer<GdkTextureDownloader>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/texturedownloaderprotocol\/copy()","title":"func copy() -> TextureDownloaderRef!","type":"method"},{"path":"\/documentation\/gdk\/texturedownloaderprotocol\/downloadbytes(outstride:)","title":"func downloadBytes(outStride: UnsafeMutablePointer<gsize>!) -> BytesRef!","type":"method"},{"path":"\/documentation\/gdk\/texturedownloaderprotocol\/downloadinto(data:stride:)","title":"func downloadInto(data: UnsafeMutablePointer<guchar>!, stride: Int)","type":"method"},{"path":"\/documentation\/gdk\/texturedownloaderprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/gdk\/texturedownloaderprotocol\/getformat()","title":"func getFormat() -> GdkMemoryFormat","type":"method"},{"path":"\/documentation\/gdk\/texturedownloaderprotocol\/gettexture()","title":"func getTexture() -> TextureRef!","type":"method"},{"path":"\/documentation\/gdk\/texturedownloaderprotocol\/set(format:)","title":"func set(format: GdkMemoryFormat)","type":"method"},{"path":"\/documentation\/gdk\/texturedownloaderprotocol\/set(texture:)","title":"func set<TextureT>(texture: TextureT)","type":"method"}],"path":"\/documentation\/gdk\/texturedownloaderprotocol","title":"TextureDownloaderProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/textureprotocol\/format","title":"var format: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/textureprotocol\/height","title":"var height: Int","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/textureprotocol\/texture_ptr-9nylu","title":"var texture_ptr: UnsafeMutablePointer<GdkTexture>!","type":"property"}],"title":"TextureProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/textureprotocol\/texture_ptr-7d3ti","title":"var texture_ptr: UnsafeMutablePointer<GdkTexture>!","type":"property"},{"path":"\/documentation\/gdk\/textureprotocol\/width","title":"var width: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/textureprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: TexturePropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/textureprotocol\/download(data:stride:)","title":"func download(data: UnsafeMutablePointer<guchar>!, stride: Int)","type":"method"},{"path":"\/documentation\/gdk\/textureprotocol\/get(property:)","title":"func get(property: TexturePropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/textureprotocol\/getformat()","title":"func getFormat() -> GdkMemoryFormat","type":"method"},{"path":"\/documentation\/gdk\/textureprotocol\/getheight()","title":"func getHeight() -> Int","type":"method"},{"path":"\/documentation\/gdk\/textureprotocol\/getwidth()","title":"func getWidth() -> Int","type":"method"},{"path":"\/documentation\/gdk\/textureprotocol\/pixbufgetfromtexture()","title":"func pixbufGetFromTexture() -> PixbufRef!","type":"method"},{"path":"\/documentation\/gdk\/textureprotocol\/savetopng(filename:)","title":"func saveToPng(filename: UnsafePointer<CChar>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/textureprotocol\/savetopngbytes()","title":"func saveToPngBytes() -> BytesRef!","type":"method"},{"path":"\/documentation\/gdk\/textureprotocol\/savetotiff(filename:)","title":"func saveToTiff(filename: UnsafePointer<CChar>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/textureprotocol\/savetotiffbytes()","title":"func saveToTiffBytes() -> BytesRef!","type":"method"},{"path":"\/documentation\/gdk\/textureprotocol\/set(property:value:)","title":"func set(property: TexturePropertyName, value: Value)","type":"method"}],"path":"\/documentation\/gdk\/textureprotocol","title":"TextureProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/timecoordprotocol\/axes","title":"var axes: (CDouble, CDouble, CDouble, CDouble, CDouble, CDouble, CDouble, CDouble, CDouble, CDouble, CDouble, CDouble)","type":"property"},{"path":"\/documentation\/gdk\/timecoordprotocol\/flags","title":"var flags: AxisFlags","type":"property"},{"path":"\/documentation\/gdk\/timecoordprotocol\/time","title":"var time: guint32","type":"property"}],"path":"\/documentation\/gdk\/timecoordprotocol","title":"TimeCoordProtocol","type":"protocol"},{"path":"\/documentation\/gdk\/toplevelinterfaceprotocol","title":"ToplevelInterfaceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevellayoutprotocol\/fullscreenmonitor","title":"var fullscreenMonitor: MonitorRef!","type":"property"},{"path":"\/documentation\/gdk\/toplevellayoutprotocol\/resizable","title":"var resizable: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/toplevellayoutprotocol\/toplevel_layout_ptr-o358","title":"var toplevel_layout_ptr: UnsafeMutablePointer<GdkToplevelLayout>!","type":"property"}],"title":"ToplevelLayoutProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/toplevellayoutprotocol\/toplevel_layout_ptr-3zkvy","title":"var toplevel_layout_ptr: UnsafeMutablePointer<GdkToplevelLayout>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevellayoutprotocol\/copy()","title":"func copy() -> ToplevelLayoutRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevellayoutprotocol\/equal(other:)","title":"func equal<ToplevelLayoutT>(other: ToplevelLayoutT) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevellayoutprotocol\/get(fullscreen:)","title":"func get(fullscreen: UnsafeMutablePointer<gboolean>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevellayoutprotocol\/get(maximized:)","title":"func get(maximized: UnsafeMutablePointer<gboolean>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevellayoutprotocol\/getfullscreenmonitor()","title":"func getFullscreenMonitor() -> MonitorRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevellayoutprotocol\/getresizable()","title":"func getResizable() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevellayoutprotocol\/ref()","title":"func ref() -> ToplevelLayoutRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevellayoutprotocol\/set(fullscreen:monitor:)-5k4gs","title":"func set<MonitorT>(fullscreen: Bool, monitor: MonitorT?)","type":"method"},{"path":"\/documentation\/gdk\/toplevellayoutprotocol\/set(fullscreen:monitor:)-6u2oo","title":"func set(fullscreen: Bool, monitor: MonitorRef?)","type":"method"},{"path":"\/documentation\/gdk\/toplevellayoutprotocol\/set(maximized:)","title":"func set(maximized: Bool)","type":"method"},{"path":"\/documentation\/gdk\/toplevellayoutprotocol\/set(resizable:)","title":"func set(resizable: Bool)","type":"method"},{"path":"\/documentation\/gdk\/toplevellayoutprotocol\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/gdk\/toplevellayoutprotocol","title":"ToplevelLayoutProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelprotocol\/state","title":"var state: ToplevelState","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/toplevelprotocol\/toplevel_ptr-84yhz","title":"var toplevel_ptr: UnsafeMutablePointer<GdkToplevel>!","type":"property"}],"title":"ToplevelProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/toplevelprotocol\/toplevel_ptr-4qgg3","title":"var toplevel_ptr: UnsafeMutablePointer<GdkToplevel>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelprotocol\/beginmove(device:button:x:y:timestamp:)","title":"func beginMove<DeviceT>(device: DeviceT, button: Int, x: CDouble, y: CDouble, timestamp: guint32)","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/beginresize(edge:device:button:x:y:timestamp:)-85e1b","title":"func beginResize(edge: GdkSurfaceEdge, device: DeviceRef?, button: Int, x: CDouble, y: CDouble, timestamp: guint32)","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/beginresize(edge:device:button:x:y:timestamp:)-p3qk","title":"func beginResize<DeviceT>(edge: GdkSurfaceEdge, device: DeviceT?, button: Int, x: CDouble, y: CDouble, timestamp: guint32)","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: ToplevelPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ToplevelSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/connect(signal:flags:handler:)","title":"func connect(signal: ToplevelSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/focus(timestamp:)","title":"func focus(timestamp: guint32)","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/get(property:)","title":"func get(property: ToplevelPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/getstate()","title":"func getState() -> ToplevelState","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/inhibitsystemshortcuts(event:)-3smv6","title":"func inhibitSystemShortcuts(event: EventRef?)","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/inhibitsystemshortcuts(event:)-8s5b3","title":"func inhibitSystemShortcuts<EventT>(event: EventT?)","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/lower()","title":"func lower() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/minimize()","title":"func minimize() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/oncomputesize(flags:handler:)","title":"func onComputeSize(flags: ConnectFlags, handler: (ToplevelRef, ToplevelSizeRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/onnotifydecorated(flags:handler:)","title":"func onNotifyDecorated(flags: ConnectFlags, handler: (ToplevelRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/onnotifydeletable(flags:handler:)","title":"func onNotifyDeletable(flags: ConnectFlags, handler: (ToplevelRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/onnotifyfullscreenmode(flags:handler:)","title":"func onNotifyFullscreenMode(flags: ConnectFlags, handler: (ToplevelRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/onnotifyiconlist(flags:handler:)","title":"func onNotifyIconList(flags: ConnectFlags, handler: (ToplevelRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/onnotifymodal(flags:handler:)","title":"func onNotifyModal(flags: ConnectFlags, handler: (ToplevelRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/onnotifyshortcutsinhibited(flags:handler:)","title":"func onNotifyShortcutsInhibited(flags: ConnectFlags, handler: (ToplevelRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/onnotifystartupid(flags:handler:)","title":"func onNotifyStartupId(flags: ConnectFlags, handler: (ToplevelRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/onnotifystate(flags:handler:)","title":"func onNotifyState(flags: ConnectFlags, handler: (ToplevelRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/onnotifytitle(flags:handler:)","title":"func onNotifyTitle(flags: ConnectFlags, handler: (ToplevelRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/onnotifytransientfor(flags:handler:)","title":"func onNotifyTransientFor(flags: ConnectFlags, handler: (ToplevelRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/present(layout:)","title":"func present<ToplevelLayoutT>(layout: ToplevelLayoutT)","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/restoresystemshortcuts()","title":"func restoreSystemShortcuts()","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/set(decorated:)","title":"func set(decorated: Bool)","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/set(deletable:)","title":"func set(deletable: Bool)","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/set(modal:)","title":"func set(modal: Bool)","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/set(property:value:)","title":"func set(property: ToplevelPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/set(startupid:)","title":"func set(startupId: UnsafePointer<CChar>!)","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/set(title:)","title":"func set(title: UnsafePointer<CChar>!)","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/seticonlist(surfaces:)","title":"func setIconList<GLibListT>(surfaces: GLibListT)","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/settransientfor(parent:)","title":"func setTransientFor<SurfaceT>(parent: SurfaceT)","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/showwindowmenu(event:)","title":"func showWindowMenu<EventT>(event: EventT) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/supportsedgeconstraints()","title":"func supportsEdgeConstraints() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevelprotocol\/titlebar(gesture:)","title":"func titlebar(gesture: GdkTitlebarGesture) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelprotocol\/computesizesignal","title":"static var computeSizeSignal: ToplevelSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelprotocol\/notifydecoratedsignal","title":"static var notifyDecoratedSignal: ToplevelSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelprotocol\/notifydeletablesignal","title":"static var notifyDeletableSignal: ToplevelSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelprotocol\/notifyfullscreenmodesignal","title":"static var notifyFullscreenModeSignal: ToplevelSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelprotocol\/notifyiconlistsignal","title":"static var notifyIconListSignal: ToplevelSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelprotocol\/notifymodalsignal","title":"static var notifyModalSignal: ToplevelSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelprotocol\/notifyshortcutsinhibitedsignal","title":"static var notifyShortcutsInhibitedSignal: ToplevelSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelprotocol\/notifystartupidsignal","title":"static var notifyStartupIdSignal: ToplevelSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelprotocol\/notifystatesignal","title":"static var notifyStateSignal: ToplevelSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelprotocol\/notifytitlesignal","title":"static var notifyTitleSignal: ToplevelSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelprotocol\/notifytransientforsignal","title":"static var notifyTransientForSignal: ToplevelSignalName","type":"property"}],"path":"\/documentation\/gdk\/toplevelprotocol","title":"ToplevelProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelsizeprotocol\/getbounds(boundswidth:boundsheight:)","title":"func getBounds(boundsWidth: UnsafeMutablePointer<gint>!, boundsHeight: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/gdk\/toplevelsizeprotocol\/setminsize(minwidth:minheight:)","title":"func setMinSize(minWidth: Int, minHeight: Int)","type":"method"},{"path":"\/documentation\/gdk\/toplevelsizeprotocol\/setshadowwidth(left:right:top:bottom:)","title":"func setShadowWidth(left: Int, right: Int, top: Int, bottom: Int)","type":"method"},{"path":"\/documentation\/gdk\/toplevelsizeprotocol\/setsize(width:height:)","title":"func setSize(width: Int, height: Int)","type":"method"}],"path":"\/documentation\/gdk\/toplevelsizeprotocol","title":"ToplevelSizeProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toucheventprotocol\/emulatingpointer","title":"var emulatingPointer: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/toucheventprotocol\/touch_event_ptr-4mtzu","title":"var touch_event_ptr: UnsafeMutablePointer<GdkTouchEvent>!","type":"property"}],"title":"TouchEventProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/toucheventprotocol\/touch_event_ptr-123ra","title":"var touch_event_ptr: UnsafeMutablePointer<GdkTouchEvent>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/toucheventprotocol\/getemulatingpointer()","title":"func getEmulatingPointer() -> Bool","type":"method"}],"path":"\/documentation\/gdk\/toucheventprotocol","title":"TouchEventProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/touchpadeventprotocol\/gesturephase","title":"var gesturePhase: GdkTouchpadGesturePhase","type":"property"},{"path":"\/documentation\/gdk\/touchpadeventprotocol\/nfingers","title":"var nFingers: Int","type":"property"},{"path":"\/documentation\/gdk\/touchpadeventprotocol\/pinchangledelta","title":"var pinchAngleDelta: CDouble","type":"property"},{"path":"\/documentation\/gdk\/touchpadeventprotocol\/pinchscale","title":"var pinchScale: CDouble","type":"property"},{"children":[{"children":[{"path":"\/documentation\/gdk\/touchpadeventprotocol\/touchpad_event_ptr-56b0p","title":"var touchpad_event_ptr: UnsafeMutablePointer<GdkTouchpadEvent>!","type":"property"}],"title":"TouchpadEventProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/touchpadeventprotocol\/touchpad_event_ptr-22aeh","title":"var touchpad_event_ptr: UnsafeMutablePointer<GdkTouchpadEvent>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/touchpadeventprotocol\/getdeltas(dx:dy:)","title":"func getDeltas(dx: UnsafeMutablePointer<CDouble>!, dy: UnsafeMutablePointer<CDouble>!)","type":"method"},{"path":"\/documentation\/gdk\/touchpadeventprotocol\/getgesturephase()","title":"func getGesturePhase() -> GdkTouchpadGesturePhase","type":"method"},{"path":"\/documentation\/gdk\/touchpadeventprotocol\/getnfingers()","title":"func getNFingers() -> Int","type":"method"},{"path":"\/documentation\/gdk\/touchpadeventprotocol\/getpinchangledelta()","title":"func getPinchAngleDelta() -> CDouble","type":"method"},{"path":"\/documentation\/gdk\/touchpadeventprotocol\/getpinchscale()","title":"func getPinchScale() -> CDouble","type":"method"}],"path":"\/documentation\/gdk\/touchpadeventprotocol","title":"TouchpadEventProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/gdk\/vulkancontextprotocol\/vulkan_context_ptr-3if40","title":"var vulkan_context_ptr: UnsafeMutablePointer<GdkVulkanContext>!","type":"property"}],"title":"VulkanContextProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/gdk\/vulkancontextprotocol\/vulkan_context_ptr-8wr0i","title":"var vulkan_context_ptr: UnsafeMutablePointer<GdkVulkanContext>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontextprotocol\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: VulkanContextPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextprotocol\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: VulkanContextSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextprotocol\/connect(signal:flags:handler:)","title":"func connect(signal: VulkanContextSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextprotocol\/get(property:)","title":"func get(property: VulkanContextPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextprotocol\/onimagesupdated(flags:handler:)","title":"func onImagesUpdated(flags: ConnectFlags, handler: (VulkanContextRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextprotocol\/set(property:value:)","title":"func set(property: VulkanContextPropertyName, value: Value)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontextprotocol\/imagesupdatedsignal","title":"static var imagesUpdatedSignal: VulkanContextSignalName","type":"property"}],"path":"\/documentation\/gdk\/vulkancontextprotocol","title":"VulkanContextProtocol","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/anchorhints\/init(_:)-5j9mx","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/gdk\/anchorhints\/init(_:)-9flbn","title":"init(GdkAnchorHints)","type":"init"},{"path":"\/documentation\/gdk\/anchorhints\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/anchorhints\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/gdk\/anchorhints\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/gdk\/anchorhints\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/gdk\/anchorhints\/value","title":"var value: GdkAnchorHints","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/anchorhints\/flip","title":"static let flip: AnchorHints","type":"property"},{"path":"\/documentation\/gdk\/anchorhints\/flipx","title":"static let flipX: AnchorHints","type":"property"},{"path":"\/documentation\/gdk\/anchorhints\/flipy","title":"static let flipY: AnchorHints","type":"property"},{"path":"\/documentation\/gdk\/anchorhints\/resize","title":"static let resize: AnchorHints","type":"property"},{"path":"\/documentation\/gdk\/anchorhints\/resizex","title":"static let resizeX: AnchorHints","type":"property"},{"path":"\/documentation\/gdk\/anchorhints\/resizey","title":"static let resizeY: AnchorHints","type":"property"},{"path":"\/documentation\/gdk\/anchorhints\/slide","title":"static let slide: AnchorHints","type":"property"},{"path":"\/documentation\/gdk\/anchorhints\/slidex","title":"static let slideX: AnchorHints","type":"property"},{"path":"\/documentation\/gdk\/anchorhints\/slidey","title":"static let slideY: AnchorHints","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/anchorhints\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/anchorhints\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/anchorhints\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/anchorhints\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/anchorhints\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/gdk\/anchorhints\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/gdk\/anchorhints\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/gdk\/anchorhints\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/gdk\/anchorhints\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/gdk\/anchorhints\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/gdk\/anchorhints\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/gdk\/anchorhints\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/gdk\/anchorhints\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/gdk\/anchorhints\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/anchorhints\/init(_:)-5cxkc","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/gdk\/anchorhints\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/anchorhints\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/anchorhints\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/anchorhints\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/anchorhints\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/anchorhints\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/anchorhints\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/anchorhints\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/gdk\/anchorhints\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/gdk\/anchorhints\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/anchorhints","title":"AnchorHints","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/applaunchcontextref\/init(_:)-1ffgp","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/applaunchcontextref\/init(_:)-2fcsg","title":"init!(UnsafeMutablePointer<GdkAppLaunchContext>?)","type":"init"},{"path":"\/documentation\/gdk\/applaunchcontextref\/init(_:)-64e7t","title":"init(UnsafeMutablePointer<GdkAppLaunchContext>)","type":"init"},{"path":"\/documentation\/gdk\/applaunchcontextref\/init(_:)-8544j","title":"init!(UnsafePointer<GdkAppLaunchContext>?)","type":"init"},{"path":"\/documentation\/gdk\/applaunchcontextref\/init(_:)-j89s","title":"init(UnsafePointer<GdkAppLaunchContext>)","type":"init"},{"path":"\/documentation\/gdk\/applaunchcontextref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/applaunchcontextref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/applaunchcontextref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/applaunchcontextref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/applaunchcontextref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/applaunchcontextref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/applaunchcontextref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/applaunchcontextref\/unowned(_:)","title":"static func unowned<T>(T) -> AppLaunchContextRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/applaunchcontextref\/app_launch_context_ptr","title":"var app_launch_context_ptr: UnsafeMutablePointer<GdkAppLaunchContext>!","type":"property"},{"path":"\/documentation\/gdk\/applaunchcontextref\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/applaunchcontextref\/environment","title":"var environment: UnsafeMutablePointer<UnsafeMutablePointer<CChar>?>!","type":"property"},{"path":"\/documentation\/gdk\/applaunchcontextref\/parentinstance","title":"var parentInstance: GObject","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/applaunchcontextref\/appinfolaunchdefaultfor(uri:)","title":"func appInfoLaunchDefaultFor(uri: UnsafePointer<CChar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/appinfolaunchdefaultforuriasync(uri:cancellable:callback:userdata:)","title":"func appInfoLaunchDefaultForURIAsync(uri: UnsafePointer<CChar>!, cancellable: CancellableRef?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: AppLaunchContextPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: AppLaunchContextSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/connect(signal:flags:handler:)","title":"func connect(signal: AppLaunchContextSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/get(property:)","title":"func get(property: AppLaunchContextPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/getdisplay(info:files:)","title":"func getDisplay<AppInfoT, GLibListT>(info: AppInfoT, files: GLibListT) -> String!","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/getenvironment()","title":"func getEnvironment() -> UnsafeMutablePointer<UnsafeMutablePointer<CChar>?>!","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/getstartupnotifyid(info:files:)","title":"func getStartupNotifyID<AppInfoT, GLibListT>(info: AppInfoT, files: GLibListT) -> String!","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/launchfailed(startupnotifyid:)","title":"func launchFailed(startupNotifyID: UnsafePointer<CChar>!)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/onlaunchfailed(flags:handler:)","title":"func onLaunchFailed(flags: ConnectFlags, handler: (AppLaunchContextRef, String) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/onlaunchstarted(flags:handler:)","title":"func onLaunchStarted(flags: ConnectFlags, handler: (AppLaunchContextRef, AppInfoRef, VariantRef?) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/onlaunched(flags:handler:)","title":"func onLaunched(flags: ConnectFlags, handler: (AppLaunchContextRef, AppInfoRef, VariantRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/set(desktop:)","title":"func set(desktop: Int)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/set(icon:)","title":"func set(icon: IconRef?)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/set(iconname:)","title":"func set(iconName: UnsafePointer<CChar>?)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/set(property:value:)","title":"func set(property: AppLaunchContextPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/set(timestamp:)","title":"func set(timestamp: guint32)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/setenv(variable:value:)","title":"func setenv(variable: UnsafePointer<CChar>!, value: UnsafePointer<CChar>!)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/unsetenv(variable:)","title":"func unsetenv(variable: UnsafePointer<CChar>!)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/applaunchcontextref\/launchfailedsignal","title":"static var launchFailedSignal: AppLaunchContextSignalName","type":"property"},{"path":"\/documentation\/gdk\/applaunchcontextref\/launchstartedsignal","title":"static var launchStartedSignal: AppLaunchContextSignalName","type":"property"},{"path":"\/documentation\/gdk\/applaunchcontextref\/launchedsignal","title":"static var launchedSignal: AppLaunchContextSignalName","type":"property"}],"path":"\/documentation\/gdk\/applaunchcontextref\/applaunchcontextprotocol-implementations","title":"AppLaunchContextProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/applaunchcontextref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/applaunchcontextref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/applaunchcontextref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/gdk\/applaunchcontextref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/gdk\/applaunchcontextref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/gdk\/applaunchcontextref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/gdk\/applaunchcontextref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/gdk\/applaunchcontextref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/applaunchcontextref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/bind(_:to:property:flags:convertfrom:convertto:)-4qgke","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/bind(_:to:property:flags:convertfrom:convertto:)-4v935","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/applaunchcontextref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/applaunchcontextref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/gdk\/applaunchcontextref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/gdk\/applaunchcontextref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/applaunchcontextref","title":"AppLaunchContextRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/axisflags\/init(_:)-41rsq","title":"init(GdkAxisFlags)","type":"init"},{"path":"\/documentation\/gdk\/axisflags\/init(_:)-5bcoo","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/gdk\/axisflags\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/axisflags\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/gdk\/axisflags\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/gdk\/axisflags\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/gdk\/axisflags\/value","title":"var value: GdkAxisFlags","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/axisflags\/deltax","title":"static let deltaX: AxisFlags","type":"property"},{"path":"\/documentation\/gdk\/axisflags\/deltay","title":"static let deltaY: AxisFlags","type":"property"},{"path":"\/documentation\/gdk\/axisflags\/distance","title":"static let distance: AxisFlags","type":"property"},{"path":"\/documentation\/gdk\/axisflags\/pressure","title":"static let pressure: AxisFlags","type":"property"},{"path":"\/documentation\/gdk\/axisflags\/rotation","title":"static let rotation: AxisFlags","type":"property"},{"path":"\/documentation\/gdk\/axisflags\/slider","title":"static let slider: AxisFlags","type":"property"},{"path":"\/documentation\/gdk\/axisflags\/wheel","title":"static let wheel: AxisFlags","type":"property"},{"path":"\/documentation\/gdk\/axisflags\/x","title":"static let x: AxisFlags","type":"property"},{"path":"\/documentation\/gdk\/axisflags\/xtilt","title":"static let xtilt: AxisFlags","type":"property"},{"path":"\/documentation\/gdk\/axisflags\/y","title":"static let y: AxisFlags","type":"property"},{"path":"\/documentation\/gdk\/axisflags\/ytilt","title":"static let ytilt: AxisFlags","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/axisflags\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/axisflags\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/axisflags\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/axisflags\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/axisflags\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/gdk\/axisflags\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/gdk\/axisflags\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/gdk\/axisflags\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/gdk\/axisflags\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/gdk\/axisflags\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/gdk\/axisflags\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/gdk\/axisflags\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/gdk\/axisflags\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/gdk\/axisflags\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/axisflags\/init(_:)-4jftw","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/gdk\/axisflags\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/axisflags\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/axisflags\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/axisflags\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/axisflags\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/axisflags\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/axisflags\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/axisflags\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/gdk\/axisflags\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/gdk\/axisflags\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/axisflags","title":"AxisFlags","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/buttoneventref\/init(_:)-10eui","title":"init(UnsafeMutablePointer<GdkButtonEvent>)","type":"init"},{"path":"\/documentation\/gdk\/buttoneventref\/init(_:)-1d8zd","title":"init!(UnsafeMutablePointer<GdkButtonEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/buttoneventref\/init(_:)-1tcsg","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/buttoneventref\/init(_:)-3lxfm","title":"init(UnsafePointer<GdkButtonEvent>)","type":"init"},{"path":"\/documentation\/gdk\/buttoneventref\/init(_:)-9mgyi","title":"init!(UnsafePointer<GdkButtonEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/buttoneventref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/buttoneventref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/buttoneventref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/buttoneventref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/buttoneventref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/buttoneventref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/buttoneventref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/buttoneventref\/button","title":"var button: Int","type":"property"},{"path":"\/documentation\/gdk\/buttoneventref\/button_event_ptr","title":"var button_event_ptr: UnsafeMutablePointer<GdkButtonEvent>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/buttoneventref\/getbutton()","title":"func getButton() -> Int","type":"method"}],"path":"\/documentation\/gdk\/buttoneventref\/buttoneventprotocol-implementations","title":"ButtonEventProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/buttoneventref\/device","title":"var device: DeviceRef!","type":"property"},{"path":"\/documentation\/gdk\/buttoneventref\/devicetool","title":"var deviceTool: DeviceToolRef!","type":"property"},{"path":"\/documentation\/gdk\/buttoneventref\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/buttoneventref\/eventsequence","title":"var eventSequence: EventSequenceRef!","type":"property"},{"path":"\/documentation\/gdk\/buttoneventref\/eventtype","title":"var eventType: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/buttoneventref\/event_ptr","title":"var event_ptr: UnsafeMutablePointer<GdkEvent>!","type":"property"},{"path":"\/documentation\/gdk\/buttoneventref\/modifierstate","title":"var modifierState: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/buttoneventref\/pointeremulated","title":"var pointerEmulated: Bool","type":"property"},{"path":"\/documentation\/gdk\/buttoneventref\/seat","title":"var seat: SeatRef!","type":"property"},{"path":"\/documentation\/gdk\/buttoneventref\/surface","title":"var surface: SurfaceRef!","type":"property"},{"path":"\/documentation\/gdk\/buttoneventref\/time","title":"var time: guint32","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/buttoneventref\/getangle(event2:angle:)","title":"func GetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/buttoneventref\/getcenter(event2:x:y:)","title":"func GetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/buttoneventref\/getdistance(event2:distance:)","title":"func GetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/buttoneventref\/eventsgetangle(event2:angle:)","title":"func eventsGetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/buttoneventref\/eventsgetcenter(event2:x:y:)","title":"func eventsGetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/buttoneventref\/eventsgetdistance(event2:distance:)","title":"func eventsGetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/buttoneventref\/get(axes:naxes:)","title":"func get(axes: UnsafeMutablePointer<UnsafeMutablePointer<CDouble>?>!, nAxes: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/buttoneventref\/getaxis(axisuse:value:)","title":"func getAxis(axisUse: GdkAxisUse, value: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/buttoneventref\/getdevice()","title":"func getDevice() -> DeviceRef!","type":"method"},{"path":"\/documentation\/gdk\/buttoneventref\/getdevicetool()","title":"func getDeviceTool() -> DeviceToolRef!","type":"method"},{"path":"\/documentation\/gdk\/buttoneventref\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/buttoneventref\/geteventsequence()","title":"func getEventSequence() -> EventSequenceRef!","type":"method"},{"path":"\/documentation\/gdk\/buttoneventref\/geteventtype()","title":"func getEventType() -> GdkEventType","type":"method"},{"path":"\/documentation\/gdk\/buttoneventref\/gethistory(outncoords:)","title":"func getHistory(outNCoords: UnsafeMutablePointer<guint>!) -> UnsafeMutablePointer<GdkTimeCoord>!","type":"method"},{"path":"\/documentation\/gdk\/buttoneventref\/getmodifierstate()","title":"func getModifierState() -> ModifierType","type":"method"},{"path":"\/documentation\/gdk\/buttoneventref\/getpointeremulated()","title":"func getPointerEmulated() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/buttoneventref\/getposition(x:y:)","title":"func getPosition(x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/buttoneventref\/getseat()","title":"func getSeat() -> SeatRef!","type":"method"},{"path":"\/documentation\/gdk\/buttoneventref\/getsurface()","title":"func getSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/buttoneventref\/gettime()","title":"func getTime() -> guint32","type":"method"},{"path":"\/documentation\/gdk\/buttoneventref\/ref()","title":"func ref() -> EventRef!","type":"method"},{"path":"\/documentation\/gdk\/buttoneventref\/triggerscontextmenu()","title":"func triggersContextMenu() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/buttoneventref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/gdk\/buttoneventref\/eventprotocol-implementations","title":"EventProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/buttoneventref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/buttoneventref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/buttoneventref","title":"ButtonEventRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/cairocontextref\/init(_:)-1ky8r","title":"init!(UnsafePointer<GdkCairoContext>?)","type":"init"},{"path":"\/documentation\/gdk\/cairocontextref\/init(_:)-2fo9g","title":"init!(UnsafeMutablePointer<GdkCairoContext>?)","type":"init"},{"path":"\/documentation\/gdk\/cairocontextref\/init(_:)-2wnwp","title":"init(UnsafeMutablePointer<GdkCairoContext>)","type":"init"},{"path":"\/documentation\/gdk\/cairocontextref\/init(_:)-3dnlw","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/cairocontextref\/init(_:)-91w1o","title":"init(UnsafePointer<GdkCairoContext>)","type":"init"},{"path":"\/documentation\/gdk\/cairocontextref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/cairocontextref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/cairocontextref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/cairocontextref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/cairocontextref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/cairocontextref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cairocontextref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/cairocontextref\/unowned(_:)","title":"static func unowned<T>(T) -> CairoContextRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cairocontextref\/cairo_context_ptr","title":"var cairo_context_ptr: UnsafeMutablePointer<GdkCairoContext>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/cairocontextref\/bind(property:to:_:flags:transformfrom:transformto:)-305dd","title":"func bind<Q, T>(property: CairoContextPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/cairocreate()","title":"func cairoCreate() -> ContextRef!","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/get(property:)","title":"func get(property: CairoContextPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/set(property:value:)","title":"func set(property: CairoContextPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/gdk\/cairocontextref\/cairocontextprotocol-implementations","title":"CairoContextProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cairocontextref\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/cairocontextref\/draw_context_ptr","title":"var draw_context_ptr: UnsafeMutablePointer<GdkDrawContext>!","type":"property"},{"path":"\/documentation\/gdk\/cairocontextref\/frameregion","title":"var frameRegion: RegionRef!","type":"property"},{"path":"\/documentation\/gdk\/cairocontextref\/isinframe","title":"var isInFrame: Bool","type":"property"},{"path":"\/documentation\/gdk\/cairocontextref\/surface","title":"var surface: SurfaceRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/cairocontextref\/beginframe(region:)","title":"func beginFrame<cairoRegionT>(region: cairoRegionT)","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/bind(property:to:_:flags:transformfrom:transformto:)-38bdo","title":"func bind<Q, T>(property: DrawContextPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/endframe()","title":"func endFrame()","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/getframeregion()","title":"func getFrameRegion() -> RegionRef!","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/getsurface()","title":"func getSurface() -> SurfaceRef!","type":"method"}],"path":"\/documentation\/gdk\/cairocontextref\/drawcontextprotocol-implementations","title":"DrawContextProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/cairocontextref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/cairocontextref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cairocontextref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/gdk\/cairocontextref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/gdk\/cairocontextref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/gdk\/cairocontextref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/gdk\/cairocontextref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/gdk\/cairocontextref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/cairocontextref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/bind(_:to:property:flags:convertfrom:convertto:)-44dj1","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/bind(_:to:property:flags:convertfrom:convertto:)-4c9q4","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/connect(signal:flags:handler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cairocontextref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/cairocontextref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/gdk\/cairocontextref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/gdk\/cairocontextref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/cairocontextref","title":"CairoContextRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/clipboardref\/init(_:)-11hkb","title":"init(UnsafePointer<GdkClipboard>)","type":"init"},{"path":"\/documentation\/gdk\/clipboardref\/init(_:)-14hzu","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/clipboardref\/init(_:)-2puj3","title":"init!(UnsafePointer<GdkClipboard>?)","type":"init"},{"path":"\/documentation\/gdk\/clipboardref\/init(_:)-2w66k","title":"init!(UnsafeMutablePointer<GdkClipboard>?)","type":"init"},{"path":"\/documentation\/gdk\/clipboardref\/init(_:)-6pn32","title":"init(UnsafeMutablePointer<GdkClipboard>)","type":"init"},{"path":"\/documentation\/gdk\/clipboardref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/clipboardref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/clipboardref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/clipboardref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/clipboardref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/clipboardref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/clipboardref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/clipboardref\/unowned(_:)","title":"static func unowned<T>(T) -> ClipboardRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/clipboardref\/clipboard_ptr","title":"var clipboard_ptr: UnsafeMutablePointer<GdkClipboard>!","type":"property"},{"path":"\/documentation\/gdk\/clipboardref\/content","title":"var content: ContentProviderRef!","type":"property"},{"path":"\/documentation\/gdk\/clipboardref\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/clipboardref\/formats","title":"var formats: ContentFormatsRef!","type":"property"},{"path":"\/documentation\/gdk\/clipboardref\/islocal","title":"var isLocal: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/clipboardref\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: ClipboardPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ClipboardSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/connect(signal:flags:handler:)","title":"func connect(signal: ClipboardSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/get(property:)","title":"func get(property: ClipboardPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/getcontent()","title":"func getContent() -> ContentProviderRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/getformats()","title":"func getFormats() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/onchanged(flags:handler:)","title":"func onChanged(flags: ConnectFlags, handler: (ClipboardRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/onnotifycontent(flags:handler:)","title":"func onNotifyContent(flags: ConnectFlags, handler: (ClipboardRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/onnotifydisplay(flags:handler:)","title":"func onNotifyDisplay(flags: ConnectFlags, handler: (ClipboardRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/onnotifyformats(flags:handler:)","title":"func onNotifyFormats(flags: ConnectFlags, handler: (ClipboardRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/onnotifylocal(flags:handler:)","title":"func onNotifyLocal(flags: ConnectFlags, handler: (ClipboardRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/readasync(mimetypes:iopriority:cancellable:callback:userdata:)","title":"func readAsync(mimeTypes: UnsafeMutablePointer<UnsafePointer<CChar>?>!, ioPriority: Int, cancellable: CancellableRef?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/readfinish(result:outmimetype:)","title":"func readFinish<GioAsyncResultT>(result: GioAsyncResultT, outMimeType: UnsafeMutablePointer<UnsafePointer<CChar>?>!) throws -> InputStreamRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/readtextasync(cancellable:callback:userdata:)","title":"func readTextAsync(cancellable: CancellableRef?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/readtextfinish(result:)","title":"func readTextFinish<GioAsyncResultT>(result: GioAsyncResultT) throws -> String!","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/readtextureasync(cancellable:callback:userdata:)","title":"func readTextureAsync(cancellable: CancellableRef?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/readtexturefinish(result:)","title":"func readTextureFinish<GioAsyncResultT>(result: GioAsyncResultT) throws -> TextureRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/readvalueasync(type:iopriority:cancellable:callback:userdata:)","title":"func readValueAsync(type: GType, ioPriority: Int, cancellable: CancellableRef?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/readvaluefinish(result:)","title":"func readValueFinish<GioAsyncResultT>(result: GioAsyncResultT) throws -> ValueRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/set(property:value:)","title":"func set(property: ClipboardPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/set(text:)","title":"func set(text: UnsafePointer<CChar>!)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/set(texture:)","title":"func set<TextureT>(texture: TextureT)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/set(value:)","title":"func set<GObjectValueT>(value: GObjectValueT)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/setcontent(provider:)","title":"func setContent(provider: ContentProviderRef?) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/setvalist(type:args:)","title":"func setValist(type: GType, args: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/storeasync(iopriority:cancellable:callback:userdata:)","title":"func storeAsync(ioPriority: Int, cancellable: CancellableRef?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/storefinish(result:)","title":"func storeFinish<GioAsyncResultT>(result: GioAsyncResultT) throws -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/clipboardref\/changedsignal","title":"static var changedSignal: ClipboardSignalName","type":"property"},{"path":"\/documentation\/gdk\/clipboardref\/notifycontentsignal","title":"static var notifyContentSignal: ClipboardSignalName","type":"property"},{"path":"\/documentation\/gdk\/clipboardref\/notifydisplaysignal","title":"static var notifyDisplaySignal: ClipboardSignalName","type":"property"},{"path":"\/documentation\/gdk\/clipboardref\/notifyformatssignal","title":"static var notifyFormatsSignal: ClipboardSignalName","type":"property"},{"path":"\/documentation\/gdk\/clipboardref\/notifylocalsignal","title":"static var notifyLocalSignal: ClipboardSignalName","type":"property"}],"path":"\/documentation\/gdk\/clipboardref\/clipboardprotocol-implementations","title":"ClipboardProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/clipboardref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/clipboardref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/clipboardref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/gdk\/clipboardref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/gdk\/clipboardref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/gdk\/clipboardref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/gdk\/clipboardref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/gdk\/clipboardref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/clipboardref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/bind(_:to:property:flags:convertfrom:convertto:)-7vzcg","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/bind(_:to:property:flags:convertfrom:convertto:)-9s31y","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/clipboardref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/clipboardref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/gdk\/clipboardref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/gdk\/clipboardref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/clipboardref","title":"ClipboardRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentdeserializerref\/init(_:)-1l1hm","title":"init!(UnsafeMutablePointer<GdkContentDeserializer>?)","type":"init"},{"path":"\/documentation\/gdk\/contentdeserializerref\/init(_:)-4nvny","title":"init(UnsafeMutablePointer<GdkContentDeserializer>)","type":"init"},{"path":"\/documentation\/gdk\/contentdeserializerref\/init(_:)-5zuy3","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/contentdeserializerref\/init(_:)-7rs38","title":"init(UnsafePointer<GdkContentDeserializer>)","type":"init"},{"path":"\/documentation\/gdk\/contentdeserializerref\/init(_:)-7ucv4","title":"init!(UnsafePointer<GdkContentDeserializer>?)","type":"init"},{"path":"\/documentation\/gdk\/contentdeserializerref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/contentdeserializerref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/contentdeserializerref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/contentdeserializerref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/contentdeserializerref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/contentdeserializerref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentdeserializerref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentdeserializerref\/unowned(_:)","title":"static func unowned<T>(T) -> ContentDeserializerRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentdeserializerref\/async_result_ptr","title":"var async_result_ptr: UnsafeMutablePointer<GAsyncResult>!","type":"property"},{"path":"\/documentation\/gdk\/contentdeserializerref\/sourceobject","title":"var sourceObject: ObjectRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentdeserializerref\/appinfogetdefaultfortypefinish()","title":"func appInfoGetDefaultForTypeFinish() throws -> AppInfoRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/appinfogetdefaultforurischemefinish()","title":"func appInfoGetDefaultForURISchemeFinish() throws -> AppInfoRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/appinfolaunchdefaultforurifinish()","title":"func appInfoLaunchDefaultForURIFinish() throws -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/busgetfinish()","title":"func busGetFinish() throws -> DBusConnectionRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/dbusaddressgetstreamfinish(outguid:)","title":"func dbusAddressGetStreamFinish(outGuid: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?) throws -> IOStreamRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/filenewtmpdirfinish()","title":"func fileNewTmpDirFinish() throws -> FileRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/filenewtmpfinish(iostream:)","title":"func fileNewTmpFinish(iostream: UnsafeMutablePointer<UnsafeMutablePointer<GFileIOStream>?>!) throws -> FileRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/getsourceobject()","title":"func getSourceObject() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/istagged(sourcetag:)","title":"func isTagged(sourceTag: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/legacypropagateerror()","title":"func legacyPropagateError() throws -> Bool","type":"method"}],"path":"\/documentation\/gdk\/contentdeserializerref\/asyncresultprotocol-implementations","title":"AsyncResultProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentdeserializerref\/cancellable","title":"var cancellable: CancellableRef!","type":"property"},{"path":"\/documentation\/gdk\/contentdeserializerref\/content_deserializer_ptr","title":"var content_deserializer_ptr: UnsafeMutablePointer<GdkContentDeserializer>!","type":"property"},{"path":"\/documentation\/gdk\/contentdeserializerref\/gtype","title":"var gtype: GType","type":"property"},{"path":"\/documentation\/gdk\/contentdeserializerref\/inputstream","title":"var inputStream: InputStreamRef!","type":"property"},{"path":"\/documentation\/gdk\/contentdeserializerref\/mimetype","title":"var mimeType: String!","type":"property"},{"path":"\/documentation\/gdk\/contentdeserializerref\/priority","title":"var priority: Int","type":"property"},{"path":"\/documentation\/gdk\/contentdeserializerref\/taskdata","title":"var taskData: gpointer?","type":"property"},{"path":"\/documentation\/gdk\/contentdeserializerref\/userdata","title":"var userData: gpointer?","type":"property"},{"path":"\/documentation\/gdk\/contentdeserializerref\/value","title":"var value: ValueRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentdeserializerref\/getcancellable()","title":"func getCancellable() -> CancellableRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/getgtype()","title":"func getGtype() -> GType","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/getinputstream()","title":"func getInputStream() -> InputStreamRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/getmimetype()","title":"func getMimeType() -> String!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/getpriority()","title":"func getPriority() -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/gettaskdata()","title":"func getTaskData() -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/getuserdata()","title":"func getUserData() -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/getvalue()","title":"func getValue() -> ValueRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/returnsuccess()","title":"func returnSuccess()","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/return_(error:)","title":"func return_<GLibGLibErrorT>(error: GLibGLibErrorT)","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/settask(data:notify:)","title":"func setTask(data: gpointer?, notify: GDestroyNotify?)","type":"method"}],"path":"\/documentation\/gdk\/contentdeserializerref\/contentdeserializerprotocol-implementations","title":"ContentDeserializerProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentdeserializerref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/contentdeserializerref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentdeserializerref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/gdk\/contentdeserializerref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/gdk\/contentdeserializerref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/gdk\/contentdeserializerref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/gdk\/contentdeserializerref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/gdk\/contentdeserializerref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentdeserializerref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/bind(_:to:property:flags:convertfrom:convertto:)-1m1a3","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/bind(_:to:property:flags:convertfrom:convertto:)-vhas","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/connect(signal:flags:handler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentdeserializerref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentdeserializerref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/gdk\/contentdeserializerref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/gdk\/contentdeserializerref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/contentdeserializerref","title":"ContentDeserializerRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentformatsbuilderref\/init()","title":"init()","type":"init"},{"path":"\/documentation\/gdk\/contentformatsbuilderref\/init(_:)-3onsh","title":"init(UnsafePointer<GdkContentFormatsBuilder>)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsbuilderref\/init(_:)-46uit","title":"init!(UnsafePointer<GdkContentFormatsBuilder>?)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsbuilderref\/init(_:)-48bx4","title":"init!(UnsafeMutablePointer<GdkContentFormatsBuilder>?)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsbuilderref\/init(_:)-5pgps","title":"init(UnsafeMutablePointer<GdkContentFormatsBuilder>)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsbuilderref\/init(_:)-8dgss","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsbuilderref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsbuilderref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsbuilderref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsbuilderref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsbuilderref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsbuilderref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentformatsbuilderref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentformatsbuilderref\/content_formats_builder_ptr","title":"var content_formats_builder_ptr: UnsafeMutablePointer<GdkContentFormatsBuilder>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentformatsbuilderref\/add(formats:)","title":"func add<ContentFormatsT>(formats: ContentFormatsT)","type":"method"},{"path":"\/documentation\/gdk\/contentformatsbuilderref\/add(mimetype:)","title":"func add(mimeType: UnsafePointer<CChar>!)","type":"method"},{"path":"\/documentation\/gdk\/contentformatsbuilderref\/addgtype(type:)","title":"func addGtype(type: GType)","type":"method"},{"path":"\/documentation\/gdk\/contentformatsbuilderref\/freetoformats()","title":"func freeToFormats() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/contentformatsbuilderref\/ref()","title":"func ref() -> ContentFormatsBuilderRef!","type":"method"},{"path":"\/documentation\/gdk\/contentformatsbuilderref\/toformats()","title":"func toFormats() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/contentformatsbuilderref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/gdk\/contentformatsbuilderref\/contentformatsbuilderprotocol-implementations","title":"ContentFormatsBuilderProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentformatsbuilderref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/contentformatsbuilderref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/contentformatsbuilderref","title":"ContentFormatsBuilderRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentformatsref\/init(_:)-286tp","title":"init!(UnsafePointer<GdkContentFormats>?)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsref\/init(_:)-6nt66","title":"init(UnsafeMutablePointer<GdkContentFormats>)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsref\/init(_:)-77x92","title":"init(UnsafePointer<GdkContentFormats>)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsref\/init(_:)-8bd3q","title":"init!(UnsafeMutablePointer<GdkContentFormats>?)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsref\/init(_:)-9bnpd","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsref\/init(gtype:)","title":"init(gtype: GType)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsref\/init(mimetypes:nmimetypes:)","title":"init(mimeTypes: UnsafeMutablePointer<UnsafePointer<CChar>?>!, nMimeTypes: Int)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/contentformatsref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentformatsref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentformatsref\/newforg(gtype:)","title":"static func newForG(gtype: GType) -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/contentformatsref\/parse(string:)","title":"static func parse(string: UnsafePointer<CChar>!) -> ContentFormatsRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentformatsref\/content_formats_ptr","title":"var content_formats_ptr: UnsafeMutablePointer<GdkContentFormats>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentformatsref\/contain(mimetype:)","title":"func contain(mimeType: UnsafePointer<CChar>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentformatsref\/containgtype(type:)","title":"func containGtype(type: GType) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentformatsref\/getgtypes(ngtypes:)","title":"func getGtypes(nGtypes: UnsafeMutablePointer<gsize>!) -> UnsafePointer<GType>!","type":"method"},{"path":"\/documentation\/gdk\/contentformatsref\/getmimetypes(nmimetypes:)","title":"func getMimeTypes(nMimeTypes: UnsafeMutablePointer<gsize>!) -> UnsafePointer<UnsafePointer<CChar>?>!","type":"method"},{"path":"\/documentation\/gdk\/contentformatsref\/match(second:)","title":"func match<ContentFormatsT>(second: ContentFormatsT) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentformatsref\/matchgtype(second:)","title":"func matchGtype<ContentFormatsT>(second: ContentFormatsT) -> GType","type":"method"},{"path":"\/documentation\/gdk\/contentformatsref\/matchmimetype(second:)","title":"func matchMimeType<ContentFormatsT>(second: ContentFormatsT) -> String!","type":"method"},{"path":"\/documentation\/gdk\/contentformatsref\/print(string:)","title":"func print<GLibStringTypeT>(string: GLibStringTypeT)","type":"method"},{"path":"\/documentation\/gdk\/contentformatsref\/ref()","title":"func ref() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/contentformatsref\/tostring()","title":"func toString() -> String!","type":"method"},{"path":"\/documentation\/gdk\/contentformatsref\/union(second:)","title":"func union<ContentFormatsT>(second: ContentFormatsT) -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/contentformatsref\/uniondeserializegtypes()","title":"func unionDeserializeGtypes() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/contentformatsref\/uniondeserializemimetypes()","title":"func unionDeserializeMimeTypes() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/contentformatsref\/unionserializegtypes()","title":"func unionSerializeGtypes() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/contentformatsref\/unionserializemimetypes()","title":"func unionSerializeMimeTypes() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/contentformatsref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/gdk\/contentformatsref\/contentformatsprotocol-implementations","title":"ContentFormatsProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentformatsref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/contentformatsref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/contentformatsref","title":"ContentFormatsRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentproviderclassref\/init(_:)-2f813","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/contentproviderclassref\/init(_:)-2nwqm","title":"init!(UnsafePointer<GdkContentProviderClass>?)","type":"init"},{"path":"\/documentation\/gdk\/contentproviderclassref\/init(_:)-5ebho","title":"init(UnsafePointer<GdkContentProviderClass>)","type":"init"},{"path":"\/documentation\/gdk\/contentproviderclassref\/init(_:)-98mai","title":"init!(UnsafeMutablePointer<GdkContentProviderClass>?)","type":"init"},{"path":"\/documentation\/gdk\/contentproviderclassref\/init(_:)-b5","title":"init(UnsafeMutablePointer<GdkContentProviderClass>)","type":"init"},{"path":"\/documentation\/gdk\/contentproviderclassref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/contentproviderclassref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/contentproviderclassref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/contentproviderclassref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/contentproviderclassref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/contentproviderclassref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentproviderclassref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentproviderclassref\/metatype","title":"static var metatype: GdkContentProviderClass?","type":"property"},{"path":"\/documentation\/gdk\/contentproviderclassref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/gdk\/contentproviderclassref\/wrapper","title":"static var wrapper: ContentProviderClassRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentproviderclassref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> ContentProvider!","type":"method"},{"path":"\/documentation\/gdk\/contentproviderclassref\/newcontentprovider(properties:nproperties:names:values:)","title":"static func newContentProvider(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> ContentProvider!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentproviderclassref\/parentclass","title":"var parentClass: GObjectClass","type":"property"}],"path":"\/documentation\/gdk\/contentproviderclassref\/contentproviderclassprotocol-implementations","title":"ContentProviderClassProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentproviderclassref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/contentproviderclassref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/contentproviderclassref","title":"ContentProviderClassRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentproviderref\/init(_:)-44ol7","title":"init!(UnsafeMutablePointer<GdkContentProvider>?)","type":"init"},{"path":"\/documentation\/gdk\/contentproviderref\/init(_:)-4vgd","title":"init(UnsafePointer<GdkContentProvider>)","type":"init"},{"path":"\/documentation\/gdk\/contentproviderref\/init(_:)-4zeno","title":"init!(UnsafePointer<GdkContentProvider>?)","type":"init"},{"path":"\/documentation\/gdk\/contentproviderref\/init(_:)-6a3kw","title":"init(UnsafeMutablePointer<GdkContentProvider>)","type":"init"},{"path":"\/documentation\/gdk\/contentproviderref\/init(_:)-9togz","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/contentproviderref\/init(bytes:bytes:)","title":"init<GLibBytesT>(bytes: UnsafePointer<CChar>!, bytes: GLibBytesT)","type":"init"},{"path":"\/documentation\/gdk\/contentproviderref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/contentproviderref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/contentproviderref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/contentproviderref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/contentproviderref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/contentproviderref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/contentproviderref\/init(value:)","title":"init<GObjectValueT>(value: GObjectValueT)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentproviderref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentproviderref\/newfor(bytes:bytes:)","title":"static func newFor<GLibBytesT>(bytes: UnsafePointer<CChar>!, bytes: GLibBytesT) -> ContentProviderRef!","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/newfor(value:)","title":"static func newFor<GObjectValueT>(value: GObjectValueT) -> ContentProviderRef!","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/unowned(_:)","title":"static func unowned<T>(T) -> ContentProviderRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentproviderref\/content_provider_ptr","title":"var content_provider_ptr: UnsafeMutablePointer<GdkContentProvider>!","type":"property"},{"path":"\/documentation\/gdk\/contentproviderref\/parent","title":"var parent: GObject","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentproviderref\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: ContentProviderPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ContentProviderSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/connect(signal:flags:handler:)","title":"func connect(signal: ContentProviderSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/contentchanged()","title":"func contentChanged()","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/get(property:)","title":"func get(property: ContentProviderPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/get(value:)","title":"func get<GObjectValueT>(value: GObjectValueT) throws -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/oncontentchanged(flags:handler:)","title":"func onContentChanged(flags: ConnectFlags, handler: (ContentProviderRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/onnotifyformats(flags:handler:)","title":"func onNotifyFormats(flags: ConnectFlags, handler: (ContentProviderRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/onnotifystorableformats(flags:handler:)","title":"func onNotifyStorableFormats(flags: ConnectFlags, handler: (ContentProviderRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/refformats()","title":"func refFormats() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/refstorableformats()","title":"func refStorableFormats() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/set(property:value:)","title":"func set(property: ContentProviderPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/writemimetypeasync(mimetype:stream:iopriority:cancellable:callback:userdata:)-2nk0z","title":"func writeMimeTypeAsync<GioCancellableT, GioOutputStreamT>(mimeType: UnsafePointer<CChar>!, stream: GioOutputStreamT, ioPriority: Int, cancellable: GioCancellableT?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/writemimetypeasync(mimetype:stream:iopriority:cancellable:callback:userdata:)-64lq3","title":"func writeMimeTypeAsync<GioOutputStreamT>(mimeType: UnsafePointer<CChar>!, stream: GioOutputStreamT, ioPriority: Int, cancellable: CancellableRef?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/writemimetypefinish(result:)","title":"func writeMimeTypeFinish<GioAsyncResultT>(result: GioAsyncResultT) throws -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentproviderref\/contentchangedsignal","title":"static var contentChangedSignal: ContentProviderSignalName","type":"property"},{"path":"\/documentation\/gdk\/contentproviderref\/notifyformatssignal","title":"static var notifyFormatsSignal: ContentProviderSignalName","type":"property"},{"path":"\/documentation\/gdk\/contentproviderref\/notifystorableformatssignal","title":"static var notifyStorableFormatsSignal: ContentProviderSignalName","type":"property"}],"path":"\/documentation\/gdk\/contentproviderref\/contentproviderprotocol-implementations","title":"ContentProviderProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentproviderref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/contentproviderref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentproviderref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/gdk\/contentproviderref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/gdk\/contentproviderref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/gdk\/contentproviderref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/gdk\/contentproviderref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/gdk\/contentproviderref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentproviderref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/bind(_:to:property:flags:convertfrom:convertto:)-1sj2c","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/bind(_:to:property:flags:convertfrom:convertto:)-cam5","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentproviderref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentproviderref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/gdk\/contentproviderref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/gdk\/contentproviderref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/contentproviderref","title":"ContentProviderRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentserializerref\/init(_:)-2maa5","title":"init(UnsafeMutablePointer<GdkContentSerializer>)","type":"init"},{"path":"\/documentation\/gdk\/contentserializerref\/init(_:)-2pmy1","title":"init(UnsafePointer<GdkContentSerializer>)","type":"init"},{"path":"\/documentation\/gdk\/contentserializerref\/init(_:)-4fg5f","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/contentserializerref\/init(_:)-7utue","title":"init!(UnsafePointer<GdkContentSerializer>?)","type":"init"},{"path":"\/documentation\/gdk\/contentserializerref\/init(_:)-8wxcm","title":"init!(UnsafeMutablePointer<GdkContentSerializer>?)","type":"init"},{"path":"\/documentation\/gdk\/contentserializerref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/contentserializerref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/contentserializerref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/contentserializerref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/contentserializerref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/contentserializerref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentserializerref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentserializerref\/unowned(_:)","title":"static func unowned<T>(T) -> ContentSerializerRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentserializerref\/async_result_ptr","title":"var async_result_ptr: UnsafeMutablePointer<GAsyncResult>!","type":"property"},{"path":"\/documentation\/gdk\/contentserializerref\/sourceobject","title":"var sourceObject: ObjectRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentserializerref\/appinfogetdefaultfortypefinish()","title":"func appInfoGetDefaultForTypeFinish() throws -> AppInfoRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/appinfogetdefaultforurischemefinish()","title":"func appInfoGetDefaultForURISchemeFinish() throws -> AppInfoRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/appinfolaunchdefaultforurifinish()","title":"func appInfoLaunchDefaultForURIFinish() throws -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/busgetfinish()","title":"func busGetFinish() throws -> DBusConnectionRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/dbusaddressgetstreamfinish(outguid:)","title":"func dbusAddressGetStreamFinish(outGuid: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?) throws -> IOStreamRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/filenewtmpdirfinish()","title":"func fileNewTmpDirFinish() throws -> FileRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/filenewtmpfinish(iostream:)","title":"func fileNewTmpFinish(iostream: UnsafeMutablePointer<UnsafeMutablePointer<GFileIOStream>?>!) throws -> FileRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/getsourceobject()","title":"func getSourceObject() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/istagged(sourcetag:)","title":"func isTagged(sourceTag: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/legacypropagateerror()","title":"func legacyPropagateError() throws -> Bool","type":"method"}],"path":"\/documentation\/gdk\/contentserializerref\/asyncresultprotocol-implementations","title":"AsyncResultProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentserializerref\/cancellable","title":"var cancellable: CancellableRef!","type":"property"},{"path":"\/documentation\/gdk\/contentserializerref\/content_serializer_ptr","title":"var content_serializer_ptr: UnsafeMutablePointer<GdkContentSerializer>!","type":"property"},{"path":"\/documentation\/gdk\/contentserializerref\/gtype","title":"var gtype: GType","type":"property"},{"path":"\/documentation\/gdk\/contentserializerref\/mimetype","title":"var mimeType: String!","type":"property"},{"path":"\/documentation\/gdk\/contentserializerref\/outputstream","title":"var outputStream: OutputStreamRef!","type":"property"},{"path":"\/documentation\/gdk\/contentserializerref\/priority","title":"var priority: Int","type":"property"},{"path":"\/documentation\/gdk\/contentserializerref\/taskdata","title":"var taskData: gpointer?","type":"property"},{"path":"\/documentation\/gdk\/contentserializerref\/userdata","title":"var userData: gpointer?","type":"property"},{"path":"\/documentation\/gdk\/contentserializerref\/value","title":"var value: ValueRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentserializerref\/getcancellable()","title":"func getCancellable() -> CancellableRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/getgtype()","title":"func getGtype() -> GType","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/getmimetype()","title":"func getMimeType() -> String!","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/getoutputstream()","title":"func getOutputStream() -> OutputStreamRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/getpriority()","title":"func getPriority() -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/gettaskdata()","title":"func getTaskData() -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/getuserdata()","title":"func getUserData() -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/getvalue()","title":"func getValue() -> ValueRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/returnsuccess()","title":"func returnSuccess()","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/return_(error:)","title":"func return_<GLibGLibErrorT>(error: GLibGLibErrorT)","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/settask(data:notify:)","title":"func setTask(data: gpointer?, notify: GDestroyNotify?)","type":"method"}],"path":"\/documentation\/gdk\/contentserializerref\/contentserializerprotocol-implementations","title":"ContentSerializerProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentserializerref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/contentserializerref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentserializerref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/gdk\/contentserializerref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/gdk\/contentserializerref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/gdk\/contentserializerref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/gdk\/contentserializerref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/gdk\/contentserializerref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentserializerref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/bind(_:to:property:flags:convertfrom:convertto:)-3kekw","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/bind(_:to:property:flags:convertfrom:convertto:)-5umy2","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/connect(signal:flags:handler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentserializerref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentserializerref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/gdk\/contentserializerref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/gdk\/contentserializerref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/contentserializerref","title":"ContentSerializerRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/crossingeventref\/init(_:)-1swc6","title":"init(UnsafePointer<GdkCrossingEvent>)","type":"init"},{"path":"\/documentation\/gdk\/crossingeventref\/init(_:)-1ye06","title":"init!(UnsafeMutablePointer<GdkCrossingEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/crossingeventref\/init(_:)-4jcdv","title":"init(UnsafeMutablePointer<GdkCrossingEvent>)","type":"init"},{"path":"\/documentation\/gdk\/crossingeventref\/init(_:)-6cgsz","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/crossingeventref\/init(_:)-6ogd1","title":"init!(UnsafePointer<GdkCrossingEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/crossingeventref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/crossingeventref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/crossingeventref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/crossingeventref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/crossingeventref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/crossingeventref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/crossingeventref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/crossingeventref\/crossing_event_ptr","title":"var crossing_event_ptr: UnsafeMutablePointer<GdkCrossingEvent>!","type":"property"},{"path":"\/documentation\/gdk\/crossingeventref\/detail","title":"var detail: GdkNotifyType","type":"property"},{"path":"\/documentation\/gdk\/crossingeventref\/focus","title":"var focus: Bool","type":"property"},{"path":"\/documentation\/gdk\/crossingeventref\/mode","title":"var mode: GdkCrossingMode","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/crossingeventref\/getdetail()","title":"func getDetail() -> GdkNotifyType","type":"method"},{"path":"\/documentation\/gdk\/crossingeventref\/getfocus()","title":"func getFocus() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/crossingeventref\/getmode()","title":"func getMode() -> GdkCrossingMode","type":"method"}],"path":"\/documentation\/gdk\/crossingeventref\/crossingeventprotocol-implementations","title":"CrossingEventProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/crossingeventref\/device","title":"var device: DeviceRef!","type":"property"},{"path":"\/documentation\/gdk\/crossingeventref\/devicetool","title":"var deviceTool: DeviceToolRef!","type":"property"},{"path":"\/documentation\/gdk\/crossingeventref\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/crossingeventref\/eventsequence","title":"var eventSequence: EventSequenceRef!","type":"property"},{"path":"\/documentation\/gdk\/crossingeventref\/eventtype","title":"var eventType: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/crossingeventref\/event_ptr","title":"var event_ptr: UnsafeMutablePointer<GdkEvent>!","type":"property"},{"path":"\/documentation\/gdk\/crossingeventref\/modifierstate","title":"var modifierState: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/crossingeventref\/pointeremulated","title":"var pointerEmulated: Bool","type":"property"},{"path":"\/documentation\/gdk\/crossingeventref\/seat","title":"var seat: SeatRef!","type":"property"},{"path":"\/documentation\/gdk\/crossingeventref\/surface","title":"var surface: SurfaceRef!","type":"property"},{"path":"\/documentation\/gdk\/crossingeventref\/time","title":"var time: guint32","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/crossingeventref\/getangle(event2:angle:)","title":"func GetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/crossingeventref\/getcenter(event2:x:y:)","title":"func GetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/crossingeventref\/getdistance(event2:distance:)","title":"func GetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/crossingeventref\/eventsgetangle(event2:angle:)","title":"func eventsGetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/crossingeventref\/eventsgetcenter(event2:x:y:)","title":"func eventsGetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/crossingeventref\/eventsgetdistance(event2:distance:)","title":"func eventsGetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/crossingeventref\/get(axes:naxes:)","title":"func get(axes: UnsafeMutablePointer<UnsafeMutablePointer<CDouble>?>!, nAxes: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/crossingeventref\/getaxis(axisuse:value:)","title":"func getAxis(axisUse: GdkAxisUse, value: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/crossingeventref\/getdevice()","title":"func getDevice() -> DeviceRef!","type":"method"},{"path":"\/documentation\/gdk\/crossingeventref\/getdevicetool()","title":"func getDeviceTool() -> DeviceToolRef!","type":"method"},{"path":"\/documentation\/gdk\/crossingeventref\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/crossingeventref\/geteventsequence()","title":"func getEventSequence() -> EventSequenceRef!","type":"method"},{"path":"\/documentation\/gdk\/crossingeventref\/geteventtype()","title":"func getEventType() -> GdkEventType","type":"method"},{"path":"\/documentation\/gdk\/crossingeventref\/gethistory(outncoords:)","title":"func getHistory(outNCoords: UnsafeMutablePointer<guint>!) -> UnsafeMutablePointer<GdkTimeCoord>!","type":"method"},{"path":"\/documentation\/gdk\/crossingeventref\/getmodifierstate()","title":"func getModifierState() -> ModifierType","type":"method"},{"path":"\/documentation\/gdk\/crossingeventref\/getpointeremulated()","title":"func getPointerEmulated() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/crossingeventref\/getposition(x:y:)","title":"func getPosition(x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/crossingeventref\/getseat()","title":"func getSeat() -> SeatRef!","type":"method"},{"path":"\/documentation\/gdk\/crossingeventref\/getsurface()","title":"func getSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/crossingeventref\/gettime()","title":"func getTime() -> guint32","type":"method"},{"path":"\/documentation\/gdk\/crossingeventref\/ref()","title":"func ref() -> EventRef!","type":"method"},{"path":"\/documentation\/gdk\/crossingeventref\/triggerscontextmenu()","title":"func triggersContextMenu() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/crossingeventref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/gdk\/crossingeventref\/eventprotocol-implementations","title":"EventProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/crossingeventref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/crossingeventref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/crossingeventref","title":"CrossingEventRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/cursorref\/init(_:)-277do","title":"init!(UnsafePointer<GdkCursor>?)","type":"init"},{"path":"\/documentation\/gdk\/cursorref\/init(_:)-3xm4w","title":"init(UnsafeMutablePointer<GdkCursor>)","type":"init"},{"path":"\/documentation\/gdk\/cursorref\/init(_:)-4ro7u","title":"init(UnsafePointer<GdkCursor>)","type":"init"},{"path":"\/documentation\/gdk\/cursorref\/init(_:)-8cbr3","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/cursorref\/init(_:)-9gi3r","title":"init!(UnsafeMutablePointer<GdkCursor>?)","type":"init"},{"path":"\/documentation\/gdk\/cursorref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/cursorref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/cursorref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/cursorref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/cursorref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/cursorref\/init(name:fallback:)","title":"init<CursorT>(name: UnsafePointer<CChar>!, fallback: CursorT?)","type":"init"},{"path":"\/documentation\/gdk\/cursorref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/cursorref\/init(texture:hotspotx:hotspoty:fallback:)","title":"init<CursorT, TextureT>(texture: TextureT, hotspotX: Int, hotspotY: Int, fallback: CursorT?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cursorref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/cursorref\/newfrom(name:fallback:)","title":"static func newFrom<CursorT>(name: UnsafePointer<CChar>!, fallback: CursorT?) -> CursorRef!","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/newfrom(texture:hotspotx:hotspoty:fallback:)","title":"static func newFrom<CursorT, TextureT>(texture: TextureT, hotspotX: Int, hotspotY: Int, fallback: CursorT?) -> CursorRef!","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/unowned(_:)","title":"static func unowned<T>(T) -> CursorRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cursorref\/cursor_ptr","title":"var cursor_ptr: UnsafeMutablePointer<GdkCursor>!","type":"property"},{"path":"\/documentation\/gdk\/cursorref\/fallback","title":"var fallback: CursorRef!","type":"property"},{"path":"\/documentation\/gdk\/cursorref\/hotspotx","title":"var hotspotX: Int","type":"property"},{"path":"\/documentation\/gdk\/cursorref\/hotspoty","title":"var hotspotY: Int","type":"property"},{"path":"\/documentation\/gdk\/cursorref\/name","title":"var name: String!","type":"property"},{"path":"\/documentation\/gdk\/cursorref\/texture","title":"var texture: TextureRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/cursorref\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: CursorPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/get(property:)","title":"func get(property: CursorPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/getfallback()","title":"func getFallback() -> CursorRef!","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/gethotspotx()","title":"func getHotspotX() -> Int","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/gethotspoty()","title":"func getHotspotY() -> Int","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/getname()","title":"func getName() -> String!","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/gettexture()","title":"func getTexture() -> TextureRef!","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/set(property:value:)","title":"func set(property: CursorPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/gdk\/cursorref\/cursorprotocol-implementations","title":"CursorProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/cursorref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/cursorref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cursorref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/gdk\/cursorref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/gdk\/cursorref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/gdk\/cursorref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/gdk\/cursorref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/gdk\/cursorref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/cursorref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/bind(_:to:property:flags:convertfrom:convertto:)-46xja","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/bind(_:to:property:flags:convertfrom:convertto:)-8n2uj","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/connect(signal:flags:handler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cursorref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/cursorref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/gdk\/cursorref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/gdk\/cursorref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/cursorref","title":"CursorRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/dndeventref\/init(_:)-1er0x","title":"init(UnsafePointer<GdkDNDEvent>)","type":"init"},{"path":"\/documentation\/gdk\/dndeventref\/init(_:)-4v489","title":"init!(UnsafePointer<GdkDNDEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/dndeventref\/init(_:)-71jwg","title":"init(UnsafeMutablePointer<GdkDNDEvent>)","type":"init"},{"path":"\/documentation\/gdk\/dndeventref\/init(_:)-8i94m","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/dndeventref\/init(_:)-91ing","title":"init!(UnsafeMutablePointer<GdkDNDEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/dndeventref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/dndeventref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/dndeventref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/dndeventref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/dndeventref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/dndeventref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dndeventref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dndeventref\/dnd_event_ptr","title":"var dnd_event_ptr: UnsafeMutablePointer<GdkDNDEvent>!","type":"property"},{"path":"\/documentation\/gdk\/dndeventref\/drop","title":"var drop: DropRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/dndeventref\/getdrop()","title":"func getDrop() -> DropRef!","type":"method"}],"path":"\/documentation\/gdk\/dndeventref\/dndeventprotocol-implementations","title":"DNDEventProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dndeventref\/device","title":"var device: DeviceRef!","type":"property"},{"path":"\/documentation\/gdk\/dndeventref\/devicetool","title":"var deviceTool: DeviceToolRef!","type":"property"},{"path":"\/documentation\/gdk\/dndeventref\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/dndeventref\/eventsequence","title":"var eventSequence: EventSequenceRef!","type":"property"},{"path":"\/documentation\/gdk\/dndeventref\/eventtype","title":"var eventType: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/dndeventref\/event_ptr","title":"var event_ptr: UnsafeMutablePointer<GdkEvent>!","type":"property"},{"path":"\/documentation\/gdk\/dndeventref\/modifierstate","title":"var modifierState: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/dndeventref\/pointeremulated","title":"var pointerEmulated: Bool","type":"property"},{"path":"\/documentation\/gdk\/dndeventref\/seat","title":"var seat: SeatRef!","type":"property"},{"path":"\/documentation\/gdk\/dndeventref\/surface","title":"var surface: SurfaceRef!","type":"property"},{"path":"\/documentation\/gdk\/dndeventref\/time","title":"var time: guint32","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/dndeventref\/getangle(event2:angle:)","title":"func GetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dndeventref\/getcenter(event2:x:y:)","title":"func GetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dndeventref\/getdistance(event2:distance:)","title":"func GetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dndeventref\/eventsgetangle(event2:angle:)","title":"func eventsGetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dndeventref\/eventsgetcenter(event2:x:y:)","title":"func eventsGetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dndeventref\/eventsgetdistance(event2:distance:)","title":"func eventsGetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dndeventref\/get(axes:naxes:)","title":"func get(axes: UnsafeMutablePointer<UnsafeMutablePointer<CDouble>?>!, nAxes: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dndeventref\/getaxis(axisuse:value:)","title":"func getAxis(axisUse: GdkAxisUse, value: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dndeventref\/getdevice()","title":"func getDevice() -> DeviceRef!","type":"method"},{"path":"\/documentation\/gdk\/dndeventref\/getdevicetool()","title":"func getDeviceTool() -> DeviceToolRef!","type":"method"},{"path":"\/documentation\/gdk\/dndeventref\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/dndeventref\/geteventsequence()","title":"func getEventSequence() -> EventSequenceRef!","type":"method"},{"path":"\/documentation\/gdk\/dndeventref\/geteventtype()","title":"func getEventType() -> GdkEventType","type":"method"},{"path":"\/documentation\/gdk\/dndeventref\/gethistory(outncoords:)","title":"func getHistory(outNCoords: UnsafeMutablePointer<guint>!) -> UnsafeMutablePointer<GdkTimeCoord>!","type":"method"},{"path":"\/documentation\/gdk\/dndeventref\/getmodifierstate()","title":"func getModifierState() -> ModifierType","type":"method"},{"path":"\/documentation\/gdk\/dndeventref\/getpointeremulated()","title":"func getPointerEmulated() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dndeventref\/getposition(x:y:)","title":"func getPosition(x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dndeventref\/getseat()","title":"func getSeat() -> SeatRef!","type":"method"},{"path":"\/documentation\/gdk\/dndeventref\/getsurface()","title":"func getSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/dndeventref\/gettime()","title":"func getTime() -> guint32","type":"method"},{"path":"\/documentation\/gdk\/dndeventref\/ref()","title":"func ref() -> EventRef!","type":"method"},{"path":"\/documentation\/gdk\/dndeventref\/triggerscontextmenu()","title":"func triggersContextMenu() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dndeventref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/gdk\/dndeventref\/eventprotocol-implementations","title":"EventProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/dndeventref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/dndeventref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/dndeventref","title":"DNDEventRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/deleteeventref\/init(_:)-1izxi","title":"init!(UnsafeMutablePointer<GdkDeleteEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/deleteeventref\/init(_:)-3zmau","title":"init(UnsafeMutablePointer<GdkDeleteEvent>)","type":"init"},{"path":"\/documentation\/gdk\/deleteeventref\/init(_:)-76nx6","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/deleteeventref\/init(_:)-8cyj1","title":"init!(UnsafePointer<GdkDeleteEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/deleteeventref\/init(_:)-v52m","title":"init(UnsafePointer<GdkDeleteEvent>)","type":"init"},{"path":"\/documentation\/gdk\/deleteeventref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/deleteeventref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/deleteeventref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/deleteeventref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/deleteeventref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/deleteeventref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/deleteeventref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/deleteeventref\/delete_event_ptr","title":"var delete_event_ptr: UnsafeMutablePointer<GdkDeleteEvent>!","type":"property"}],"path":"\/documentation\/gdk\/deleteeventref\/deleteeventprotocol-implementations","title":"DeleteEventProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/deleteeventref\/device","title":"var device: DeviceRef!","type":"property"},{"path":"\/documentation\/gdk\/deleteeventref\/devicetool","title":"var deviceTool: DeviceToolRef!","type":"property"},{"path":"\/documentation\/gdk\/deleteeventref\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/deleteeventref\/eventsequence","title":"var eventSequence: EventSequenceRef!","type":"property"},{"path":"\/documentation\/gdk\/deleteeventref\/eventtype","title":"var eventType: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/deleteeventref\/event_ptr","title":"var event_ptr: UnsafeMutablePointer<GdkEvent>!","type":"property"},{"path":"\/documentation\/gdk\/deleteeventref\/modifierstate","title":"var modifierState: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/deleteeventref\/pointeremulated","title":"var pointerEmulated: Bool","type":"property"},{"path":"\/documentation\/gdk\/deleteeventref\/seat","title":"var seat: SeatRef!","type":"property"},{"path":"\/documentation\/gdk\/deleteeventref\/surface","title":"var surface: SurfaceRef!","type":"property"},{"path":"\/documentation\/gdk\/deleteeventref\/time","title":"var time: guint32","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/deleteeventref\/getangle(event2:angle:)","title":"func GetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/deleteeventref\/getcenter(event2:x:y:)","title":"func GetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/deleteeventref\/getdistance(event2:distance:)","title":"func GetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/deleteeventref\/eventsgetangle(event2:angle:)","title":"func eventsGetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/deleteeventref\/eventsgetcenter(event2:x:y:)","title":"func eventsGetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/deleteeventref\/eventsgetdistance(event2:distance:)","title":"func eventsGetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/deleteeventref\/get(axes:naxes:)","title":"func get(axes: UnsafeMutablePointer<UnsafeMutablePointer<CDouble>?>!, nAxes: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/deleteeventref\/getaxis(axisuse:value:)","title":"func getAxis(axisUse: GdkAxisUse, value: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/deleteeventref\/getdevice()","title":"func getDevice() -> DeviceRef!","type":"method"},{"path":"\/documentation\/gdk\/deleteeventref\/getdevicetool()","title":"func getDeviceTool() -> DeviceToolRef!","type":"method"},{"path":"\/documentation\/gdk\/deleteeventref\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/deleteeventref\/geteventsequence()","title":"func getEventSequence() -> EventSequenceRef!","type":"method"},{"path":"\/documentation\/gdk\/deleteeventref\/geteventtype()","title":"func getEventType() -> GdkEventType","type":"method"},{"path":"\/documentation\/gdk\/deleteeventref\/gethistory(outncoords:)","title":"func getHistory(outNCoords: UnsafeMutablePointer<guint>!) -> UnsafeMutablePointer<GdkTimeCoord>!","type":"method"},{"path":"\/documentation\/gdk\/deleteeventref\/getmodifierstate()","title":"func getModifierState() -> ModifierType","type":"method"},{"path":"\/documentation\/gdk\/deleteeventref\/getpointeremulated()","title":"func getPointerEmulated() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/deleteeventref\/getposition(x:y:)","title":"func getPosition(x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/deleteeventref\/getseat()","title":"func getSeat() -> SeatRef!","type":"method"},{"path":"\/documentation\/gdk\/deleteeventref\/getsurface()","title":"func getSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/deleteeventref\/gettime()","title":"func getTime() -> guint32","type":"method"},{"path":"\/documentation\/gdk\/deleteeventref\/ref()","title":"func ref() -> EventRef!","type":"method"},{"path":"\/documentation\/gdk\/deleteeventref\/triggerscontextmenu()","title":"func triggersContextMenu() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/deleteeventref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/gdk\/deleteeventref\/eventprotocol-implementations","title":"EventProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/deleteeventref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/deleteeventref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/deleteeventref","title":"DeleteEventRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepadinterfaceref\/init(_:)-1jhz7","title":"init!(UnsafeMutablePointer<GdkDevicePadInterface>?)","type":"init"},{"path":"\/documentation\/gdk\/devicepadinterfaceref\/init(_:)-1kt7s","title":"init(UnsafeMutablePointer<GdkDevicePadInterface>)","type":"init"},{"path":"\/documentation\/gdk\/devicepadinterfaceref\/init(_:)-2bdtm","title":"init!(UnsafePointer<GdkDevicePadInterface>?)","type":"init"},{"path":"\/documentation\/gdk\/devicepadinterfaceref\/init(_:)-2las1","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/devicepadinterfaceref\/init(_:)-4v5qu","title":"init(UnsafePointer<GdkDevicePadInterface>)","type":"init"},{"path":"\/documentation\/gdk\/devicepadinterfaceref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/devicepadinterfaceref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/devicepadinterfaceref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/devicepadinterfaceref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/devicepadinterfaceref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/devicepadinterfaceref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepadinterfaceref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepadinterfaceref\/metatype","title":"static var metatype: GdkDevicePadInterface?","type":"property"},{"path":"\/documentation\/gdk\/devicepadinterfaceref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/gdk\/devicepadinterfaceref\/wrapper","title":"static var wrapper: DevicePadInterfaceRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepadinterfaceref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> DevicePad!","type":"method"},{"path":"\/documentation\/gdk\/devicepadinterfaceref\/newdevicepad(properties:nproperties:names:values:)","title":"static func newDevicePad(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> DevicePad!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepadinterfaceref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/devicepadinterfaceref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/devicepadinterfaceref","title":"DevicePadInterfaceRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepadref\/init(_:)-1gc2m","title":"init!(UnsafePointer<GdkDevicePad>?)","type":"init"},{"path":"\/documentation\/gdk\/devicepadref\/init(_:)-20rs","title":"init(UnsafePointer<GdkDevicePad>)","type":"init"},{"path":"\/documentation\/gdk\/devicepadref\/init(_:)-4q2s","title":"init(UnsafeMutablePointer<GdkDevicePad>)","type":"init"},{"path":"\/documentation\/gdk\/devicepadref\/init(_:)-5i0hk","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/devicepadref\/init(_:)-6zl","title":"init!(UnsafeMutablePointer<GdkDevicePad>?)","type":"init"},{"path":"\/documentation\/gdk\/devicepadref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/devicepadref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/devicepadref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/devicepadref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/devicepadref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/devicepadref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepadref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepadref\/unowned(_:)","title":"static func unowned<T>(T) -> DevicePadRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepadref\/device_pad_ptr","title":"var device_pad_ptr: UnsafeMutablePointer<GdkDevicePad>!","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/ngroups","title":"var nGroups: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepadref\/bind(property:to:_:flags:transformfrom:transformto:)-4jld2","title":"func bind<Q, T>(property: DevicePadPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/get(property:)","title":"func get(property: DevicePadPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/getfeaturegroup(feature:featureidx:)","title":"func getFeatureGroup(feature: GdkDevicePadFeature, featureIdx: Int) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/getgroupnmodes(groupidx:)","title":"func getGroupNModes(groupIdx: Int) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/getnfeatures(feature:)","title":"func getNFeatures(feature: GdkDevicePadFeature) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/getngroups()","title":"func getNGroups() -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/set(property:value:)","title":"func set(property: DevicePadPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/gdk\/devicepadref\/devicepadprotocol-implementations","title":"DevicePadProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepadref\/capslockstate","title":"var capsLockState: Bool","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/devicetool","title":"var deviceTool: DeviceToolRef!","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/device_ptr","title":"var device_ptr: UnsafeMutablePointer<GdkDevice>!","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/direction","title":"var direction: PangoDirection","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/hascursor","title":"var hasCursor: Bool","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/modifierstate","title":"var modifierState: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/name","title":"var name: String!","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/numlockstate","title":"var numLockState: Bool","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/numtouches","title":"var numTouches: Int","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/productid","title":"var productId: String!","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/scrolllockstate","title":"var scrollLockState: Bool","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/seat","title":"var seat: SeatRef!","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/source","title":"var source: GdkInputSource","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/timestamp","title":"var timestamp: guint32","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/vendorid","title":"var vendorId: String!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepadref\/bind(property:to:_:flags:transformfrom:transformto:)-5zdl9","title":"func bind<Q, T>(property: DevicePropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: DeviceSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/connect(signal:flags:handler:)","title":"func connect(signal: DeviceSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/getcapslockstate()","title":"func getCapsLockState() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/getdevicetool()","title":"func getDeviceTool() -> DeviceToolRef!","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/getdirection()","title":"func getDirection() -> PangoDirection","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/gethascursor()","title":"func getHasCursor() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/getmodifierstate()","title":"func getModifierState() -> ModifierType","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/getname()","title":"func getName() -> String!","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/getnumlockstate()","title":"func getNumLockState() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/getnumtouches()","title":"func getNumTouches() -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/getproductid()","title":"func getProductId() -> String!","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/getscrolllockstate()","title":"func getScrollLockState() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/getseat()","title":"func getSeat() -> SeatRef!","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/getsource()","title":"func getSource() -> GdkInputSource","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/getsurfaceatposition(winx:winy:)","title":"func getSurfaceAtPosition(winX: UnsafeMutablePointer<CDouble>!, winY: UnsafeMutablePointer<CDouble>!) -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/gettimestamp()","title":"func getTimestamp() -> guint32","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/getvendorid()","title":"func getVendorId() -> String!","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/hasbidilayouts()","title":"func hasBidiLayouts() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/onchanged(flags:handler:)","title":"func onChanged(flags: ConnectFlags, handler: (DeviceRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/onnotifycapslockstate(flags:handler:)","title":"func onNotifyCapsLockState(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/onnotifydirection(flags:handler:)","title":"func onNotifyDirection(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/onnotifydisplay(flags:handler:)","title":"func onNotifyDisplay(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/onnotifyhasbidilayouts(flags:handler:)","title":"func onNotifyHasBidiLayouts(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/onnotifyhascursor(flags:handler:)","title":"func onNotifyHasCursor(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/onnotifymodifierstate(flags:handler:)","title":"func onNotifyModifierState(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/onnotifynaxes(flags:handler:)","title":"func onNotifyNAxes(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/onnotifyname(flags:handler:)","title":"func onNotifyName(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/onnotifynumlockstate(flags:handler:)","title":"func onNotifyNumLockState(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/onnotifynumtouches(flags:handler:)","title":"func onNotifyNumTouches(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/onnotifyproductid(flags:handler:)","title":"func onNotifyProductId(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/onnotifyscrolllockstate(flags:handler:)","title":"func onNotifyScrollLockState(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/onnotifyseat(flags:handler:)","title":"func onNotifySeat(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/onnotifysource(flags:handler:)","title":"func onNotifySource(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/onnotifytool(flags:handler:)","title":"func onNotifyTool(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/onnotifyvendorid(flags:handler:)","title":"func onNotifyVendorId(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/ontoolchanged(flags:handler:)","title":"func onToolChanged(flags: ConnectFlags, handler: (DeviceRef, DeviceToolRef) -> Void) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepadref\/changedsignal","title":"static var changedSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/notifycapslockstatesignal","title":"static var notifyCapsLockStateSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/notifydirectionsignal","title":"static var notifyDirectionSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/notifydisplaysignal","title":"static var notifyDisplaySignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/notifyhasbidilayoutssignal","title":"static var notifyHasBidiLayoutsSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/notifyhascursorsignal","title":"static var notifyHasCursorSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/notifymodifierstatesignal","title":"static var notifyModifierStateSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/notifynaxessignal","title":"static var notifyNAxesSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/notifynamesignal","title":"static var notifyNameSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/notifynumlockstatesignal","title":"static var notifyNumLockStateSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/notifynumtouchessignal","title":"static var notifyNumTouchesSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/notifyproductidsignal","title":"static var notifyProductIdSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/notifyscrolllockstatesignal","title":"static var notifyScrollLockStateSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/notifyseatsignal","title":"static var notifySeatSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/notifysourcesignal","title":"static var notifySourceSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/notifytoolsignal","title":"static var notifyToolSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/notifyvendoridsignal","title":"static var notifyVendorIdSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/toolchangedsignal","title":"static var toolChangedSignal: DeviceSignalName","type":"property"}],"path":"\/documentation\/gdk\/devicepadref\/deviceprotocol-implementations","title":"DeviceProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepadref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/devicepadref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepadref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/gdk\/devicepadref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepadref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/bind(_:to:property:flags:convertfrom:convertto:)-61wpi","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/bind(_:to:property:flags:convertfrom:convertto:)-6aipk","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepadref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepadref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/gdk\/devicepadref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/gdk\/devicepadref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/devicepadref","title":"DevicePadRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/deviceref\/init(_:)-1kaqj","title":"init!(UnsafeMutablePointer<GdkDevice>?)","type":"init"},{"path":"\/documentation\/gdk\/deviceref\/init(_:)-2njgd","title":"init!(UnsafePointer<GdkDevice>?)","type":"init"},{"path":"\/documentation\/gdk\/deviceref\/init(_:)-3heqe","title":"init(UnsafePointer<GdkDevice>)","type":"init"},{"path":"\/documentation\/gdk\/deviceref\/init(_:)-6wpln","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/deviceref\/init(_:)-8koy6","title":"init(UnsafeMutablePointer<GdkDevice>)","type":"init"},{"path":"\/documentation\/gdk\/deviceref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/deviceref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/deviceref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/deviceref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/deviceref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/deviceref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/deviceref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/deviceref\/unowned(_:)","title":"static func unowned<T>(T) -> DeviceRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/deviceref\/capslockstate","title":"var capsLockState: Bool","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/devicetool","title":"var deviceTool: DeviceToolRef!","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/device_ptr","title":"var device_ptr: UnsafeMutablePointer<GdkDevice>!","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/direction","title":"var direction: PangoDirection","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/hascursor","title":"var hasCursor: Bool","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/modifierstate","title":"var modifierState: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/name","title":"var name: String!","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/numlockstate","title":"var numLockState: Bool","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/numtouches","title":"var numTouches: Int","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/productid","title":"var productId: String!","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/scrolllockstate","title":"var scrollLockState: Bool","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/seat","title":"var seat: SeatRef!","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/source","title":"var source: GdkInputSource","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/timestamp","title":"var timestamp: guint32","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/vendorid","title":"var vendorId: String!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/deviceref\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: DevicePropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: DeviceSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/connect(signal:flags:handler:)","title":"func connect(signal: DeviceSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/get(property:)","title":"func get(property: DevicePropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/getcapslockstate()","title":"func getCapsLockState() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/getdevicetool()","title":"func getDeviceTool() -> DeviceToolRef!","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/getdirection()","title":"func getDirection() -> PangoDirection","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/gethascursor()","title":"func getHasCursor() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/getmodifierstate()","title":"func getModifierState() -> ModifierType","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/getname()","title":"func getName() -> String!","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/getnumlockstate()","title":"func getNumLockState() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/getnumtouches()","title":"func getNumTouches() -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/getproductid()","title":"func getProductId() -> String!","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/getscrolllockstate()","title":"func getScrollLockState() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/getseat()","title":"func getSeat() -> SeatRef!","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/getsource()","title":"func getSource() -> GdkInputSource","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/getsurfaceatposition(winx:winy:)","title":"func getSurfaceAtPosition(winX: UnsafeMutablePointer<CDouble>!, winY: UnsafeMutablePointer<CDouble>!) -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/gettimestamp()","title":"func getTimestamp() -> guint32","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/getvendorid()","title":"func getVendorId() -> String!","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/hasbidilayouts()","title":"func hasBidiLayouts() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/onchanged(flags:handler:)","title":"func onChanged(flags: ConnectFlags, handler: (DeviceRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/onnotifycapslockstate(flags:handler:)","title":"func onNotifyCapsLockState(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/onnotifydirection(flags:handler:)","title":"func onNotifyDirection(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/onnotifydisplay(flags:handler:)","title":"func onNotifyDisplay(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/onnotifyhasbidilayouts(flags:handler:)","title":"func onNotifyHasBidiLayouts(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/onnotifyhascursor(flags:handler:)","title":"func onNotifyHasCursor(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/onnotifymodifierstate(flags:handler:)","title":"func onNotifyModifierState(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/onnotifynaxes(flags:handler:)","title":"func onNotifyNAxes(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/onnotifyname(flags:handler:)","title":"func onNotifyName(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/onnotifynumlockstate(flags:handler:)","title":"func onNotifyNumLockState(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/onnotifynumtouches(flags:handler:)","title":"func onNotifyNumTouches(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/onnotifyproductid(flags:handler:)","title":"func onNotifyProductId(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/onnotifyscrolllockstate(flags:handler:)","title":"func onNotifyScrollLockState(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/onnotifyseat(flags:handler:)","title":"func onNotifySeat(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/onnotifysource(flags:handler:)","title":"func onNotifySource(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/onnotifytool(flags:handler:)","title":"func onNotifyTool(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/onnotifyvendorid(flags:handler:)","title":"func onNotifyVendorId(flags: ConnectFlags, handler: (DeviceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/ontoolchanged(flags:handler:)","title":"func onToolChanged(flags: ConnectFlags, handler: (DeviceRef, DeviceToolRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/set(property:value:)","title":"func set(property: DevicePropertyName, value: Value)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/deviceref\/changedsignal","title":"static var changedSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/notifycapslockstatesignal","title":"static var notifyCapsLockStateSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/notifydirectionsignal","title":"static var notifyDirectionSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/notifydisplaysignal","title":"static var notifyDisplaySignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/notifyhasbidilayoutssignal","title":"static var notifyHasBidiLayoutsSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/notifyhascursorsignal","title":"static var notifyHasCursorSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/notifymodifierstatesignal","title":"static var notifyModifierStateSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/notifynaxessignal","title":"static var notifyNAxesSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/notifynamesignal","title":"static var notifyNameSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/notifynumlockstatesignal","title":"static var notifyNumLockStateSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/notifynumtouchessignal","title":"static var notifyNumTouchesSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/notifyproductidsignal","title":"static var notifyProductIdSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/notifyscrolllockstatesignal","title":"static var notifyScrollLockStateSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/notifyseatsignal","title":"static var notifySeatSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/notifysourcesignal","title":"static var notifySourceSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/notifytoolsignal","title":"static var notifyToolSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/notifyvendoridsignal","title":"static var notifyVendorIdSignal: DeviceSignalName","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/toolchangedsignal","title":"static var toolChangedSignal: DeviceSignalName","type":"property"}],"path":"\/documentation\/gdk\/deviceref\/deviceprotocol-implementations","title":"DeviceProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/deviceref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/deviceref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/deviceref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/gdk\/deviceref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/deviceref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/bind(_:to:property:flags:convertfrom:convertto:)-48x0d","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/bind(_:to:property:flags:convertfrom:convertto:)-4mr80","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/deviceref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/deviceref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/gdk\/deviceref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/gdk\/deviceref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/deviceref","title":"DeviceRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicetoolref\/init(_:)-1gcgt","title":"init(UnsafeMutablePointer<GdkDeviceTool>)","type":"init"},{"path":"\/documentation\/gdk\/devicetoolref\/init(_:)-2cdpk","title":"init(UnsafePointer<GdkDeviceTool>)","type":"init"},{"path":"\/documentation\/gdk\/devicetoolref\/init(_:)-2x4p7","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/devicetoolref\/init(_:)-4jcbg","title":"init!(UnsafeMutablePointer<GdkDeviceTool>?)","type":"init"},{"path":"\/documentation\/gdk\/devicetoolref\/init(_:)-9c8db","title":"init!(UnsafePointer<GdkDeviceTool>?)","type":"init"},{"path":"\/documentation\/gdk\/devicetoolref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/devicetoolref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/devicetoolref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/devicetoolref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/devicetoolref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/devicetoolref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicetoolref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicetoolref\/unowned(_:)","title":"static func unowned<T>(T) -> DeviceToolRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicetoolref\/axes","title":"var axes: AxisFlags","type":"property"},{"path":"\/documentation\/gdk\/devicetoolref\/device_tool_ptr","title":"var device_tool_ptr: UnsafeMutablePointer<GdkDeviceTool>!","type":"property"},{"path":"\/documentation\/gdk\/devicetoolref\/hardwareid","title":"var hardwareId: guint64","type":"property"},{"path":"\/documentation\/gdk\/devicetoolref\/serial","title":"var serial: guint64","type":"property"},{"path":"\/documentation\/gdk\/devicetoolref\/tooltype","title":"var toolType: GdkDeviceToolType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicetoolref\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: DeviceToolPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/get(property:)","title":"func get(property: DeviceToolPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/getaxes()","title":"func getAxes() -> AxisFlags","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/gethardwareid()","title":"func getHardwareId() -> guint64","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/getserial()","title":"func getSerial() -> guint64","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/gettooltype()","title":"func getToolType() -> GdkDeviceToolType","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/set(property:value:)","title":"func set(property: DeviceToolPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/gdk\/devicetoolref\/devicetoolprotocol-implementations","title":"DeviceToolProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicetoolref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/devicetoolref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicetoolref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/gdk\/devicetoolref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/gdk\/devicetoolref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/gdk\/devicetoolref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/gdk\/devicetoolref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/gdk\/devicetoolref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicetoolref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/bind(_:to:property:flags:convertfrom:convertto:)-31ymx","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/bind(_:to:property:flags:convertfrom:convertto:)-350fk","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/connect(signal:flags:handler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicetoolref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicetoolref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/gdk\/devicetoolref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/gdk\/devicetoolref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/devicetoolref","title":"DeviceToolRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaymanagerref\/init(_:)-2jeu0","title":"init!(UnsafePointer<GdkDisplayManager>?)","type":"init"},{"path":"\/documentation\/gdk\/displaymanagerref\/init(_:)-3lndx","title":"init!(UnsafeMutablePointer<GdkDisplayManager>?)","type":"init"},{"path":"\/documentation\/gdk\/displaymanagerref\/init(_:)-7yxuy","title":"init(UnsafePointer<GdkDisplayManager>)","type":"init"},{"path":"\/documentation\/gdk\/displaymanagerref\/init(_:)-cqps","title":"init(UnsafeMutablePointer<GdkDisplayManager>)","type":"init"},{"path":"\/documentation\/gdk\/displaymanagerref\/init(_:)-wtey","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/displaymanagerref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/displaymanagerref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/displaymanagerref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/displaymanagerref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/displaymanagerref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/displaymanagerref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaymanagerref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaymanagerref\/displaymanagerget()","title":"static func displayManagerGet() -> DisplayManagerRef!","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/unowned(_:)","title":"static func unowned<T>(T) -> DisplayManagerRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaymanagerref\/defaultdisplay","title":"var defaultDisplay: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/displaymanagerref\/display_manager_ptr","title":"var display_manager_ptr: UnsafeMutablePointer<GdkDisplayManager>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaymanagerref\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: DisplayManagerPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: DisplayManagerSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/connect(signal:flags:handler:)","title":"func connect(signal: DisplayManagerSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/get(property:)","title":"func get(property: DisplayManagerPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/getdefaultdisplay()","title":"func getDefaultDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/listdisplays()","title":"func listDisplays() -> RefSListRef<DisplayRef>!","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/ondisplayopened(flags:handler:)","title":"func onDisplayOpened(flags: ConnectFlags, handler: (DisplayManagerRef, DisplayRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/onnotifydefaultdisplay(flags:handler:)","title":"func onNotifyDefaultDisplay(flags: ConnectFlags, handler: (DisplayManagerRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/opendisplay(name:)","title":"func openDisplay(name: UnsafePointer<CChar>?) -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/set(property:value:)","title":"func set(property: DisplayManagerPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/setdefault(display:)","title":"func setDefault<DisplayT>(display: DisplayT)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaymanagerref\/displayopenedsignal","title":"static var displayOpenedSignal: DisplayManagerSignalName","type":"property"},{"path":"\/documentation\/gdk\/displaymanagerref\/notifydefaultdisplaysignal","title":"static var notifyDefaultDisplaySignal: DisplayManagerSignalName","type":"property"}],"path":"\/documentation\/gdk\/displaymanagerref\/displaymanagerprotocol-implementations","title":"DisplayManagerProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaymanagerref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/displaymanagerref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaymanagerref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/gdk\/displaymanagerref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/gdk\/displaymanagerref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/gdk\/displaymanagerref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/gdk\/displaymanagerref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/gdk\/displaymanagerref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaymanagerref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/bind(_:to:property:flags:convertfrom:convertto:)-5b63z","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/bind(_:to:property:flags:convertfrom:convertto:)-nt41","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaymanagerref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaymanagerref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/gdk\/displaymanagerref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/gdk\/displaymanagerref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/displaymanagerref","title":"DisplayManagerRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/displayref\/init(_:)-10g1m","title":"init(UnsafePointer<GdkDisplay>)","type":"init"},{"path":"\/documentation\/gdk\/displayref\/init(_:)-3h0v1","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/displayref\/init(_:)-4pw1z","title":"init!(UnsafeMutablePointer<GdkDisplay>?)","type":"init"},{"path":"\/documentation\/gdk\/displayref\/init(_:)-4pzyk","title":"init(UnsafeMutablePointer<GdkDisplay>)","type":"init"},{"path":"\/documentation\/gdk\/displayref\/init(_:)-6frev","title":"init!(UnsafePointer<GdkDisplay>?)","type":"init"},{"path":"\/documentation\/gdk\/displayref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/displayref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/displayref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/displayref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/displayref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/displayref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/displayref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/displayref\/getdefault()","title":"static func getDefault() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/displayref\/open(displayname:)","title":"static func open(displayName: UnsafePointer<CChar>?) -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/displayref\/unowned(_:)","title":"static func unowned<T>(T) -> DisplayRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/displayref\/applaunchcontext","title":"var appLaunchContext: AppLaunchContextRef!","type":"property"},{"path":"\/documentation\/gdk\/displayref\/clipboard","title":"var clipboard: ClipboardRef!","type":"property"},{"path":"\/documentation\/gdk\/displayref\/defaultseat","title":"var defaultSeat: SeatRef!","type":"property"},{"path":"\/documentation\/gdk\/displayref\/display_ptr","title":"var display_ptr: UnsafeMutablePointer<GdkDisplay>!","type":"property"},{"path":"\/documentation\/gdk\/displayref\/isclosed","title":"var isClosed: Bool","type":"property"},{"path":"\/documentation\/gdk\/displayref\/iscomposited","title":"var isComposited: Bool","type":"property"},{"path":"\/documentation\/gdk\/displayref\/isrgba","title":"var isRgba: Bool","type":"property"},{"path":"\/documentation\/gdk\/displayref\/monitors","title":"var monitors: ListModelRef!","type":"property"},{"path":"\/documentation\/gdk\/displayref\/name","title":"var name: String!","type":"property"},{"path":"\/documentation\/gdk\/displayref\/primaryclipboard","title":"var primaryClipboard: ClipboardRef!","type":"property"},{"path":"\/documentation\/gdk\/displayref\/startupnotificationid","title":"var startupNotificationId: String!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/displayref\/beep()","title":"func beep()","type":"method"},{"path":"\/documentation\/gdk\/displayref\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: DisplayPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/displayref\/close()","title":"func close()","type":"method"},{"path":"\/documentation\/gdk\/displayref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: DisplaySignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displayref\/connect(signal:flags:handler:)","title":"func connect(signal: DisplaySignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displayref\/createglcontext()","title":"func createGlContext() throws -> GLContextRef!","type":"method"},{"path":"\/documentation\/gdk\/displayref\/deviceisgrabbed(device:)","title":"func deviceIsGrabbed<DeviceT>(device: DeviceT) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/displayref\/flush()","title":"func flush()","type":"method"},{"path":"\/documentation\/gdk\/displayref\/get(property:)","title":"func get(property: DisplayPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/displayref\/getapplaunchcontext()","title":"func getAppLaunchContext() -> AppLaunchContextRef!","type":"method"},{"path":"\/documentation\/gdk\/displayref\/getclipboard()","title":"func getClipboard() -> ClipboardRef!","type":"method"},{"path":"\/documentation\/gdk\/displayref\/getdefaultseat()","title":"func getDefaultSeat() -> SeatRef!","type":"method"},{"path":"\/documentation\/gdk\/displayref\/getmonitorat(surface:)","title":"func getMonitorAt<SurfaceT>(surface: SurfaceT) -> MonitorRef!","type":"method"},{"path":"\/documentation\/gdk\/displayref\/getmonitors()","title":"func getMonitors() -> ListModelRef!","type":"method"},{"path":"\/documentation\/gdk\/displayref\/getname()","title":"func getName() -> String!","type":"method"},{"path":"\/documentation\/gdk\/displayref\/getprimaryclipboard()","title":"func getPrimaryClipboard() -> ClipboardRef!","type":"method"},{"path":"\/documentation\/gdk\/displayref\/getsetting(name:value:)","title":"func getSetting<GObjectValueT>(name: UnsafePointer<CChar>!, value: GObjectValueT) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/displayref\/getstartupnotificationid()","title":"func getStartupNotificationId() -> String!","type":"method"},{"path":"\/documentation\/gdk\/displayref\/listseats()","title":"func listSeats() -> RefListRef<SeatRef>!","type":"method"},{"path":"\/documentation\/gdk\/displayref\/map(keycode:keys:keyvals:nentries:)","title":"func map(keycode: Int, keys: UnsafeMutablePointer<UnsafeMutablePointer<GdkKeymapKey>?>!, keyvals: UnsafeMutablePointer<UnsafeMutablePointer<guint>?>!, nEntries: UnsafeMutablePointer<gint>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/displayref\/map(keyval:keys:nkeys:)","title":"func map(keyval: Int, keys: UnsafeMutablePointer<UnsafeMutablePointer<GdkKeymapKey>?>!, nKeys: UnsafeMutablePointer<gint>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/displayref\/notifystartupcomplete(startupid:)","title":"func notifyStartupComplete(startupId: UnsafePointer<CChar>!)","type":"method"},{"path":"\/documentation\/gdk\/displayref\/onclosed(flags:handler:)","title":"func onClosed(flags: ConnectFlags, handler: (DisplayRef, Bool) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displayref\/onnotifycomposited(flags:handler:)","title":"func onNotifyComposited(flags: ConnectFlags, handler: (DisplayRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displayref\/onnotifyinputshapes(flags:handler:)","title":"func onNotifyInputShapes(flags: ConnectFlags, handler: (DisplayRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displayref\/onnotifyrgba(flags:handler:)","title":"func onNotifyRgba(flags: ConnectFlags, handler: (DisplayRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displayref\/onopened(flags:handler:)","title":"func onOpened(flags: ConnectFlags, handler: (DisplayRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displayref\/onseatadded(flags:handler:)","title":"func onSeatAdded(flags: ConnectFlags, handler: (DisplayRef, SeatRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displayref\/onseatremoved(flags:handler:)","title":"func onSeatRemoved(flags: ConnectFlags, handler: (DisplayRef, SeatRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displayref\/onsettingchanged(flags:handler:)","title":"func onSettingChanged(flags: ConnectFlags, handler: (DisplayRef, String) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displayref\/preparegl()","title":"func prepareGl() throws -> Bool","type":"method"},{"path":"\/documentation\/gdk\/displayref\/put(event:)","title":"func put<EventT>(event: EventT)","type":"method"},{"path":"\/documentation\/gdk\/displayref\/set(property:value:)","title":"func set(property: DisplayPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/displayref\/supportsinputshapes()","title":"func supportsInputShapes() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/displayref\/sync()","title":"func sync()","type":"method"},{"path":"\/documentation\/gdk\/displayref\/translatekey(keycode:state:group:keyval:effectivegroup:level:consumed:)","title":"func translateKey(keycode: Int, state: ModifierType, group: Int, keyval: UnsafeMutablePointer<guint>!, effectiveGroup: UnsafeMutablePointer<gint>!, level: UnsafeMutablePointer<gint>!, consumed: UnsafeMutablePointer<GdkModifierType>!) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/displayref\/closedsignal","title":"static var closedSignal: DisplaySignalName","type":"property"},{"path":"\/documentation\/gdk\/displayref\/notifycompositedsignal","title":"static var notifyCompositedSignal: DisplaySignalName","type":"property"},{"path":"\/documentation\/gdk\/displayref\/notifyinputshapessignal","title":"static var notifyInputShapesSignal: DisplaySignalName","type":"property"},{"path":"\/documentation\/gdk\/displayref\/notifyrgbasignal","title":"static var notifyRgbaSignal: DisplaySignalName","type":"property"},{"path":"\/documentation\/gdk\/displayref\/openedsignal","title":"static var openedSignal: DisplaySignalName","type":"property"},{"path":"\/documentation\/gdk\/displayref\/seataddedsignal","title":"static var seatAddedSignal: DisplaySignalName","type":"property"},{"path":"\/documentation\/gdk\/displayref\/seatremovedsignal","title":"static var seatRemovedSignal: DisplaySignalName","type":"property"},{"path":"\/documentation\/gdk\/displayref\/settingchangedsignal","title":"static var settingChangedSignal: DisplaySignalName","type":"property"}],"path":"\/documentation\/gdk\/displayref\/displayprotocol-implementations","title":"DisplayProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/displayref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/displayref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/displayref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/gdk\/displayref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/gdk\/displayref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/gdk\/displayref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/gdk\/displayref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/gdk\/displayref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/displayref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/displayref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/gdk\/displayref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/displayref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/displayref\/bind(_:to:property:flags:convertfrom:convertto:)-1vagq","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/displayref\/bind(_:to:property:flags:convertfrom:convertto:)-5xmi9","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/displayref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/displayref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/displayref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/displayref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/displayref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/displayref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/displayref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/gdk\/displayref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displayref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displayref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/displayref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/displayref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/displayref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/displayref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/displayref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/displayref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/gdk\/displayref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/gdk\/displayref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/gdk\/displayref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/displayref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/displayref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/displayref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/displayref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/displayref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/displayref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/gdk\/displayref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displayref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/displayref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/displayref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/displayref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/displayref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/displayref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/displayref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/gdk\/displayref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/displayref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/displayref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/displayref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/displayref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/displayref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/displayref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/displayref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displayref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displayref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displayref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displayref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/gdk\/displayref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/displayref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/displayref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displayref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/displayref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/displayref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displayref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/gdk\/displayref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displayref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/displayref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/displayref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/gdk\/displayref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/displayref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/displayref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/displayref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/displayref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/gdk\/displayref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/gdk\/displayref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/gdk\/displayref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/gdk\/displayref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/displayref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/displayref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/displayref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/gdk\/displayref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/gdk\/displayref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/gdk\/displayref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/displayref","title":"DisplayRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragaction\/init(_:)-97xm6","title":"init(GdkDragAction)","type":"init"},{"path":"\/documentation\/gdk\/dragaction\/init(_:)-9jdnq","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/gdk\/dragaction\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragaction\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/gdk\/dragaction\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/gdk\/dragaction\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/gdk\/dragaction\/value","title":"var value: GdkDragAction","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragaction\/ask","title":"static let ask: DragAction","type":"property"},{"path":"\/documentation\/gdk\/dragaction\/copy","title":"static let copy: DragAction","type":"property"},{"path":"\/documentation\/gdk\/dragaction\/link","title":"static let link: DragAction","type":"property"},{"path":"\/documentation\/gdk\/dragaction\/move","title":"static let move: DragAction","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragaction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/dragaction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragaction\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragaction\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dragaction\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/gdk\/dragaction\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/gdk\/dragaction\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/gdk\/dragaction\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/gdk\/dragaction\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/gdk\/dragaction\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/gdk\/dragaction\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/gdk\/dragaction\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/gdk\/dragaction\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/gdk\/dragaction\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragaction\/init(_:)-6pebj","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/gdk\/dragaction\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragaction\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragaction\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dragaction\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dragaction\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dragaction\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dragaction\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dragaction\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/gdk\/dragaction\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/gdk\/dragaction\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/dragaction","title":"DragAction","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragref\/init(_:)-1fzo1","title":"init(UnsafeMutablePointer<GdkDrag>)","type":"init"},{"path":"\/documentation\/gdk\/dragref\/init(_:)-2pa40","title":"init!(UnsafePointer<GdkDrag>?)","type":"init"},{"path":"\/documentation\/gdk\/dragref\/init(_:)-3lxgl","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/dragref\/init(_:)-7zsok","title":"init!(UnsafeMutablePointer<GdkDrag>?)","type":"init"},{"path":"\/documentation\/gdk\/dragref\/init(_:)-81r71","title":"init(UnsafePointer<GdkDrag>)","type":"init"},{"path":"\/documentation\/gdk\/dragref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/dragref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/dragref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/dragref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/dragref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/dragref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragref\/begin(surface:device:content:actions:dx:dy:)","title":"static func begin<ContentProviderT, DeviceT, SurfaceT>(surface: SurfaceT, device: DeviceT, content: ContentProviderT, actions: DragAction, dx: CDouble, dy: CDouble) -> DragRef!","type":"method"},{"path":"\/documentation\/gdk\/dragref\/unowned(_:)","title":"static func unowned<T>(T) -> DragRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragref\/actions","title":"var actions: DragAction","type":"property"},{"path":"\/documentation\/gdk\/dragref\/content","title":"var content: ContentProviderRef!","type":"property"},{"path":"\/documentation\/gdk\/dragref\/device","title":"var device: DeviceRef!","type":"property"},{"path":"\/documentation\/gdk\/dragref\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/dragref\/dragsurface","title":"var dragSurface: SurfaceRef!","type":"property"},{"path":"\/documentation\/gdk\/dragref\/drag_ptr","title":"var drag_ptr: UnsafeMutablePointer<GdkDrag>!","type":"property"},{"path":"\/documentation\/gdk\/dragref\/formats","title":"var formats: ContentFormatsRef!","type":"property"},{"path":"\/documentation\/gdk\/dragref\/selectedaction","title":"var selectedAction: DragAction","type":"property"},{"path":"\/documentation\/gdk\/dragref\/surface","title":"var surface: SurfaceRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragref\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: DragPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/dragref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: DragSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragref\/connect(signal:flags:handler:)","title":"func connect(signal: DragSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragref\/dropdone(success:)","title":"func dropDone(success: Bool)","type":"method"},{"path":"\/documentation\/gdk\/dragref\/get(property:)","title":"func get(property: DragPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/dragref\/getactions()","title":"func getActions() -> DragAction","type":"method"},{"path":"\/documentation\/gdk\/dragref\/getcontent()","title":"func getContent() -> ContentProviderRef!","type":"method"},{"path":"\/documentation\/gdk\/dragref\/getdevice()","title":"func getDevice() -> DeviceRef!","type":"method"},{"path":"\/documentation\/gdk\/dragref\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/dragref\/getdragsurface()","title":"func getDragSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/dragref\/getformats()","title":"func getFormats() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/dragref\/getselectedaction()","title":"func getSelectedAction() -> DragAction","type":"method"},{"path":"\/documentation\/gdk\/dragref\/getsurface()","title":"func getSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/dragref\/oncancel(flags:handler:)","title":"func onCancel(flags: ConnectFlags, handler: (DragRef, DragCancelReason) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragref\/ondndfinished(flags:handler:)","title":"func onDndFinished(flags: ConnectFlags, handler: (DragRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragref\/ondropperformed(flags:handler:)","title":"func onDropPerformed(flags: ConnectFlags, handler: (DragRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragref\/onnotifyactions(flags:handler:)","title":"func onNotifyActions(flags: ConnectFlags, handler: (DragRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragref\/onnotifycontent(flags:handler:)","title":"func onNotifyContent(flags: ConnectFlags, handler: (DragRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragref\/onnotifydevice(flags:handler:)","title":"func onNotifyDevice(flags: ConnectFlags, handler: (DragRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragref\/onnotifydisplay(flags:handler:)","title":"func onNotifyDisplay(flags: ConnectFlags, handler: (DragRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragref\/onnotifyformats(flags:handler:)","title":"func onNotifyFormats(flags: ConnectFlags, handler: (DragRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragref\/onnotifyselectedaction(flags:handler:)","title":"func onNotifySelectedAction(flags: ConnectFlags, handler: (DragRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragref\/onnotifysurface(flags:handler:)","title":"func onNotifySurface(flags: ConnectFlags, handler: (DragRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragref\/set(property:value:)","title":"func set(property: DragPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/dragref\/sethotspot(hotx:hoty:)","title":"func setHotspot(hotX: Int, hotY: Int)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragref\/cancelsignal","title":"static var cancelSignal: DragSignalName","type":"property"},{"path":"\/documentation\/gdk\/dragref\/dndfinishedsignal","title":"static var dndFinishedSignal: DragSignalName","type":"property"},{"path":"\/documentation\/gdk\/dragref\/dropperformedsignal","title":"static var dropPerformedSignal: DragSignalName","type":"property"},{"path":"\/documentation\/gdk\/dragref\/notifyactionssignal","title":"static var notifyActionsSignal: DragSignalName","type":"property"},{"path":"\/documentation\/gdk\/dragref\/notifycontentsignal","title":"static var notifyContentSignal: DragSignalName","type":"property"},{"path":"\/documentation\/gdk\/dragref\/notifydevicesignal","title":"static var notifyDeviceSignal: DragSignalName","type":"property"},{"path":"\/documentation\/gdk\/dragref\/notifydisplaysignal","title":"static var notifyDisplaySignal: DragSignalName","type":"property"},{"path":"\/documentation\/gdk\/dragref\/notifyformatssignal","title":"static var notifyFormatsSignal: DragSignalName","type":"property"},{"path":"\/documentation\/gdk\/dragref\/notifyselectedactionsignal","title":"static var notifySelectedActionSignal: DragSignalName","type":"property"},{"path":"\/documentation\/gdk\/dragref\/notifysurfacesignal","title":"static var notifySurfaceSignal: DragSignalName","type":"property"}],"path":"\/documentation\/gdk\/dragref\/dragprotocol-implementations","title":"DragProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/dragref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/gdk\/dragref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/gdk\/dragref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/gdk\/dragref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/gdk\/dragref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/gdk\/dragref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/dragref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/gdk\/dragref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/dragref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/dragref\/bind(_:to:property:flags:convertfrom:convertto:)-2jabw","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/dragref\/bind(_:to:property:flags:convertfrom:convertto:)-2tuit","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/dragref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/dragref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/dragref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/dragref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/dragref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/dragref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/dragref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/gdk\/dragref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/dragref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/dragref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/dragref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/dragref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/dragref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/dragref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/gdk\/dragref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/gdk\/dragref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/gdk\/dragref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/dragref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/dragref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/dragref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/dragref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/dragref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/dragref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/gdk\/dragref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/dragref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/dragref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/dragref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/dragref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dragref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dragref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/gdk\/dragref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/dragref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/dragref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/dragref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/dragref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/dragref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/dragref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/dragref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/gdk\/dragref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/dragref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/dragref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dragref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/dragref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/gdk\/dragref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dragref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/gdk\/dragref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/dragref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/dragref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/dragref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/dragref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/gdk\/dragref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/gdk\/dragref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/gdk\/dragref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/gdk\/dragref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/dragref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/gdk\/dragref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/gdk\/dragref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/gdk\/dragref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/dragref","title":"DragRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfaceinterfaceref\/init(_:)-2b05v","title":"init!(UnsafePointer<GdkDragSurfaceInterface>?)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfaceinterfaceref\/init(_:)-32w5m","title":"init!(UnsafeMutablePointer<GdkDragSurfaceInterface>?)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfaceinterfaceref\/init(_:)-6mygo","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfaceinterfaceref\/init(_:)-78log","title":"init(UnsafePointer<GdkDragSurfaceInterface>)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfaceinterfaceref\/init(_:)-jcul","title":"init(UnsafeMutablePointer<GdkDragSurfaceInterface>)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfaceinterfaceref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfaceinterfaceref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfaceinterfaceref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfaceinterfaceref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfaceinterfaceref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfaceinterfaceref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfaceinterfaceref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfaceinterfaceref\/metatype","title":"static var metatype: GdkDragSurfaceInterface?","type":"property"},{"path":"\/documentation\/gdk\/dragsurfaceinterfaceref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/gdk\/dragsurfaceinterfaceref\/wrapper","title":"static var wrapper: DragSurfaceInterfaceRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfaceinterfaceref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> DragSurface!","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceinterfaceref\/newdragsurface(properties:nproperties:names:values:)","title":"static func newDragSurface(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> DragSurface!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfaceinterfaceref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/dragsurfaceinterfaceref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/dragsurfaceinterfaceref","title":"DragSurfaceInterfaceRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfaceref\/init(_:)-1qpxq","title":"init!(UnsafeMutablePointer<GdkDragSurface>?)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfaceref\/init(_:)-3b30r","title":"init(UnsafePointer<GdkDragSurface>)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfaceref\/init(_:)-7rism","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfaceref\/init(_:)-8v5wa","title":"init(UnsafeMutablePointer<GdkDragSurface>)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfaceref\/init(_:)-aknl","title":"init!(UnsafePointer<GdkDragSurface>?)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfaceref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfaceref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfaceref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfaceref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfaceref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfaceref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfaceref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfaceref\/unowned(_:)","title":"static func unowned<T>(T) -> DragSurfaceRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfaceref\/drag_surface_ptr","title":"var drag_surface_ptr: UnsafeMutablePointer<GdkDragSurface>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfaceref\/bind(property:to:_:flags:transformfrom:transformto:)-54rwy","title":"func bind<Q, T>(property: DragSurfacePropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: DragSurfaceSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/connect(signal:flags:handler:)","title":"func connect(signal: DragSurfaceSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/get(property:)","title":"func get(property: DragSurfacePropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/oncomputesize(flags:handler:)","title":"func onComputeSize(flags: ConnectFlags, handler: (DragSurfaceRef, DragSurfaceSizeRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/present(width:height:)","title":"func present(width: Int, height: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/set(property:value:)","title":"func set(property: DragSurfacePropertyName, value: Value)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfaceref\/computesizesignal","title":"static var computeSizeSignal: DragSurfaceSignalName","type":"property"}],"path":"\/documentation\/gdk\/dragsurfaceref\/dragsurfaceprotocol-implementations","title":"DragSurfaceProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfaceref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/dragsurfaceref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfaceref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/gdk\/dragsurfaceref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/gdk\/dragsurfaceref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/gdk\/dragsurfaceref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/gdk\/dragsurfaceref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/gdk\/dragsurfaceref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfaceref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/bind(_:to:property:flags:convertfrom:convertto:)-2lidf","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/bind(_:to:property:flags:convertfrom:convertto:)-6e6ce","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfaceref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfaceref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/gdk\/dragsurfaceref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfaceref\/cursor","title":"var cursor: CursorRef!","type":"property"},{"path":"\/documentation\/gdk\/dragsurfaceref\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/dragsurfaceref\/frameclock","title":"var frameClock: FrameClockRef!","type":"property"},{"path":"\/documentation\/gdk\/dragsurfaceref\/height","title":"var height: Int","type":"property"},{"path":"\/documentation\/gdk\/dragsurfaceref\/isdestroyed","title":"var isDestroyed: Bool","type":"property"},{"path":"\/documentation\/gdk\/dragsurfaceref\/mapped","title":"var mapped: Bool","type":"property"},{"path":"\/documentation\/gdk\/dragsurfaceref\/scale","title":"var scale: CDouble","type":"property"},{"path":"\/documentation\/gdk\/dragsurfaceref\/scalefactor","title":"var scaleFactor: Int","type":"property"},{"path":"\/documentation\/gdk\/dragsurfaceref\/surface_ptr","title":"var surface_ptr: UnsafeMutablePointer<GdkSurface>!","type":"property"},{"path":"\/documentation\/gdk\/dragsurfaceref\/width","title":"var width: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfaceref\/beep()","title":"func beep()","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/bind(property:to:_:flags:transformfrom:transformto:)-2saus","title":"func bind<Q, T>(property: SurfacePropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/cairodrawfromgl(cr:source:sourcetype:bufferscale:x:y:width:height:)","title":"func cairoDrawFromGl<CairoContextT>(cr: CairoContextT, source: Int, sourceType: Int, bufferScale: Int, x: Int, y: Int, width: Int, height: Int)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/createcairocontext()","title":"func createCairoContext() -> CairoContextRef!","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/createglcontext()","title":"func createGlContext() throws -> GLContextRef!","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/createsimilarsurface(content:width:height:)","title":"func createSimilarSurface(content: cairo_content_t, width: Int, height: Int) -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/createvulkancontext()","title":"func createVulkanContext() throws -> VulkanContextRef!","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/getcursor()","title":"func getCursor() -> CursorRef!","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/getdevicecursor(device:)","title":"func getDeviceCursor<DeviceT>(device: DeviceT) -> CursorRef!","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/getdeviceposition(device:x:y:mask:)","title":"func getDevicePosition<DeviceT>(device: DeviceT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!, mask: UnsafeMutablePointer<GdkModifierType>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/getframeclock()","title":"func getFrameClock() -> FrameClockRef!","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/getheight()","title":"func getHeight() -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/getmapped()","title":"func getMapped() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/getscale()","title":"func getScale() -> CDouble","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/getscalefactor()","title":"func getScaleFactor() -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/getwidth()","title":"func getWidth() -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/hide()","title":"func hide()","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/onentermonitor(flags:handler:)","title":"func onEnterMonitor(flags: ConnectFlags, handler: (SurfaceRef, MonitorRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/onevent(flags:handler:)","title":"func onEvent(flags: ConnectFlags, handler: (SurfaceRef, EventRef) -> Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/onlayout(flags:handler:)","title":"func onLayout(flags: ConnectFlags, handler: (SurfaceRef, Int, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/onleavemonitor(flags:handler:)","title":"func onLeaveMonitor(flags: ConnectFlags, handler: (SurfaceRef, MonitorRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/onnotifycursor(flags:handler:)","title":"func onNotifyCursor(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/onnotifydisplay(flags:handler:)","title":"func onNotifyDisplay(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/onnotifyframeclock(flags:handler:)","title":"func onNotifyFrameClock(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/onnotifyheight(flags:handler:)","title":"func onNotifyHeight(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/onnotifymapped(flags:handler:)","title":"func onNotifyMapped(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/onnotifyscale(flags:handler:)","title":"func onNotifyScale(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/onnotifyscalefactor(flags:handler:)","title":"func onNotifyScaleFactor(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/onnotifywidth(flags:handler:)","title":"func onNotifyWidth(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/onrender(flags:handler:)","title":"func onRender(flags: ConnectFlags, handler: (SurfaceRef, RegionRef) -> Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/queuerender()","title":"func queueRender()","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/requestlayout()","title":"func requestLayout()","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/set(cursor:)","title":"func set(cursor: CursorRef?)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/setdevicecursor(device:cursor:)","title":"func setDeviceCursor<CursorT, DeviceT>(device: DeviceT, cursor: CursorT)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/setinput(region:)","title":"func setInput<cairoRegionT>(region: cairoRegionT)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/setopaque(region:)","title":"func setOpaque(region: RegionRef?)","type":"method"},{"path":"\/documentation\/gdk\/dragsurfaceref\/translatecoordinates(to:x:y:)","title":"func translateCoordinates<SurfaceT>(to: SurfaceT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfaceref\/entermonitorsignal","title":"static var enterMonitorSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/dragsurfaceref\/eventsignal","title":"static var eventSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/dragsurfaceref\/layoutsignal","title":"static var layoutSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/dragsurfaceref\/leavemonitorsignal","title":"static var leaveMonitorSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/dragsurfaceref\/notifycursorsignal","title":"static var notifyCursorSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/dragsurfaceref\/notifydisplaysignal","title":"static var notifyDisplaySignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/dragsurfaceref\/notifyframeclocksignal","title":"static var notifyFrameClockSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/dragsurfaceref\/notifyheightsignal","title":"static var notifyHeightSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/dragsurfaceref\/notifymappedsignal","title":"static var notifyMappedSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/dragsurfaceref\/notifyscalefactorsignal","title":"static var notifyScaleFactorSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/dragsurfaceref\/notifyscalesignal","title":"static var notifyScaleSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/dragsurfaceref\/notifywidthsignal","title":"static var notifyWidthSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/dragsurfaceref\/rendersignal","title":"static var renderSignal: SurfaceSignalName","type":"property"}],"path":"\/documentation\/gdk\/dragsurfaceref\/surfaceprotocol-implementations","title":"SurfaceProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/dragsurfaceref","title":"DragSurfaceRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfacesizeref\/init(_:)-2p2u2","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfacesizeref\/init(_:)-3cc5r","title":"init(UnsafePointer<GdkDragSurfaceSize>)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfacesizeref\/init(_:)-6of4i","title":"init(UnsafeMutablePointer<GdkDragSurfaceSize>)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfacesizeref\/init(_:)-9ung8","title":"init!(UnsafeMutablePointer<GdkDragSurfaceSize>?)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfacesizeref\/init(_:)-a6wh","title":"init!(UnsafePointer<GdkDragSurfaceSize>?)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfacesizeref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfacesizeref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfacesizeref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfacesizeref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfacesizeref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/dragsurfacesizeref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfacesizeref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfacesizeref\/setsize(width:height:)","title":"func setSize(width: Int, height: Int)","type":"method"}],"path":"\/documentation\/gdk\/dragsurfacesizeref\/dragsurfacesizeprotocol-implementations","title":"DragSurfaceSizeProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfacesizeref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/dragsurfacesizeref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/dragsurfacesizeref","title":"DragSurfaceSizeRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/drawcontextref\/init(_:)-17jaa","title":"init!(UnsafePointer<GdkDrawContext>?)","type":"init"},{"path":"\/documentation\/gdk\/drawcontextref\/init(_:)-289v2","title":"init(UnsafePointer<GdkDrawContext>)","type":"init"},{"path":"\/documentation\/gdk\/drawcontextref\/init(_:)-300u2","title":"init!(UnsafeMutablePointer<GdkDrawContext>?)","type":"init"},{"path":"\/documentation\/gdk\/drawcontextref\/init(_:)-52rcl","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/drawcontextref\/init(_:)-6e11x","title":"init(UnsafeMutablePointer<GdkDrawContext>)","type":"init"},{"path":"\/documentation\/gdk\/drawcontextref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/drawcontextref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/drawcontextref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/drawcontextref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/drawcontextref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/drawcontextref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/drawcontextref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/drawcontextref\/unowned(_:)","title":"static func unowned<T>(T) -> DrawContextRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/drawcontextref\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/drawcontextref\/draw_context_ptr","title":"var draw_context_ptr: UnsafeMutablePointer<GdkDrawContext>!","type":"property"},{"path":"\/documentation\/gdk\/drawcontextref\/frameregion","title":"var frameRegion: RegionRef!","type":"property"},{"path":"\/documentation\/gdk\/drawcontextref\/isinframe","title":"var isInFrame: Bool","type":"property"},{"path":"\/documentation\/gdk\/drawcontextref\/surface","title":"var surface: SurfaceRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/drawcontextref\/beginframe(region:)","title":"func beginFrame<cairoRegionT>(region: cairoRegionT)","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: DrawContextPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/endframe()","title":"func endFrame()","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/get(property:)","title":"func get(property: DrawContextPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/getframeregion()","title":"func getFrameRegion() -> RegionRef!","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/getsurface()","title":"func getSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/set(property:value:)","title":"func set(property: DrawContextPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/gdk\/drawcontextref\/drawcontextprotocol-implementations","title":"DrawContextProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/drawcontextref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/drawcontextref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/drawcontextref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/gdk\/drawcontextref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/gdk\/drawcontextref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/gdk\/drawcontextref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/gdk\/drawcontextref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/gdk\/drawcontextref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/drawcontextref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/bind(_:to:property:flags:convertfrom:convertto:)-63qu8","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/bind(_:to:property:flags:convertfrom:convertto:)-xmqc","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/connect(signal:flags:handler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/drawcontextref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/drawcontextref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/gdk\/drawcontextref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/gdk\/drawcontextref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/drawcontextref","title":"DrawContextRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/dropref\/init(_:)-19q9h","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/dropref\/init(_:)-1mh16","title":"init(UnsafeMutablePointer<GdkDrop>)","type":"init"},{"path":"\/documentation\/gdk\/dropref\/init(_:)-3th8j","title":"init!(UnsafePointer<GdkDrop>?)","type":"init"},{"path":"\/documentation\/gdk\/dropref\/init(_:)-6ffgy","title":"init(UnsafePointer<GdkDrop>)","type":"init"},{"path":"\/documentation\/gdk\/dropref\/init(_:)-7eh1k","title":"init!(UnsafeMutablePointer<GdkDrop>?)","type":"init"},{"path":"\/documentation\/gdk\/dropref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/dropref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/dropref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/dropref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/dropref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/dropref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dropref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/dropref\/unowned(_:)","title":"static func unowned<T>(T) -> DropRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dropref\/actions","title":"var actions: DragAction","type":"property"},{"path":"\/documentation\/gdk\/dropref\/device","title":"var device: DeviceRef!","type":"property"},{"path":"\/documentation\/gdk\/dropref\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/dropref\/drag","title":"var drag: DragRef!","type":"property"},{"path":"\/documentation\/gdk\/dropref\/drop_ptr","title":"var drop_ptr: UnsafeMutablePointer<GdkDrop>!","type":"property"},{"path":"\/documentation\/gdk\/dropref\/formats","title":"var formats: ContentFormatsRef!","type":"property"},{"path":"\/documentation\/gdk\/dropref\/surface","title":"var surface: SurfaceRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/dropref\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: DropPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/dropref\/finish(action:)","title":"func finish(action: DragAction)","type":"method"},{"path":"\/documentation\/gdk\/dropref\/get(property:)","title":"func get(property: DropPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/dropref\/getactions()","title":"func getActions() -> DragAction","type":"method"},{"path":"\/documentation\/gdk\/dropref\/getdevice()","title":"func getDevice() -> DeviceRef!","type":"method"},{"path":"\/documentation\/gdk\/dropref\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/dropref\/getdrag()","title":"func getDrag() -> DragRef!","type":"method"},{"path":"\/documentation\/gdk\/dropref\/getformats()","title":"func getFormats() -> ContentFormatsRef!","type":"method"},{"path":"\/documentation\/gdk\/dropref\/getsurface()","title":"func getSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/dropref\/readasync(mimetypes:iopriority:cancellable:callback:userdata:)","title":"func readAsync(mimeTypes: UnsafeMutablePointer<UnsafePointer<CChar>?>!, ioPriority: Int, cancellable: CancellableRef?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/dropref\/readfinish(result:outmimetype:)","title":"func readFinish<GioAsyncResultT>(result: GioAsyncResultT, outMimeType: UnsafeMutablePointer<UnsafePointer<CChar>?>!) throws -> InputStreamRef!","type":"method"},{"path":"\/documentation\/gdk\/dropref\/readvalueasync(type:iopriority:cancellable:callback:userdata:)","title":"func readValueAsync(type: GType, ioPriority: Int, cancellable: CancellableRef?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/dropref\/readvaluefinish(result:)","title":"func readValueFinish<GioAsyncResultT>(result: GioAsyncResultT) throws -> ValueRef!","type":"method"},{"path":"\/documentation\/gdk\/dropref\/set(property:value:)","title":"func set(property: DropPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/dropref\/status(actions:preferred:)","title":"func status(actions: DragAction, preferred: DragAction)","type":"method"}],"path":"\/documentation\/gdk\/dropref\/dropprotocol-implementations","title":"DropProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/dropref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/dropref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dropref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/gdk\/dropref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/gdk\/dropref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/gdk\/dropref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/gdk\/dropref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/gdk\/dropref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/dropref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/dropref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/gdk\/dropref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/dropref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/dropref\/bind(_:to:property:flags:convertfrom:convertto:)-8255k","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/dropref\/bind(_:to:property:flags:convertfrom:convertto:)-96yu3","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/dropref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/dropref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/dropref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/dropref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/dropref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/dropref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/dropref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/gdk\/dropref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dropref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dropref\/connect(signal:flags:handler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dropref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dropref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/dropref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/dropref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/dropref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/dropref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/dropref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/dropref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/gdk\/dropref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/gdk\/dropref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/gdk\/dropref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/dropref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/dropref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/dropref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/dropref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/dropref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/dropref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/gdk\/dropref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dropref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/dropref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/dropref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/dropref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/dropref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dropref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dropref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/gdk\/dropref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/dropref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/dropref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/dropref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/dropref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/dropref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/dropref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/dropref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dropref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dropref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dropref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dropref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/gdk\/dropref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/dropref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/dropref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dropref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dropref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/dropref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dropref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/gdk\/dropref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dropref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/dropref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/dropref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/gdk\/dropref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/dropref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/dropref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/dropref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/dropref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/gdk\/dropref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/gdk\/dropref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/gdk\/dropref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/gdk\/dropref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/dropref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dropref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/dropref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/gdk\/dropref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/gdk\/dropref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/gdk\/dropref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/dropref","title":"DropRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/eventref\/init(_:)-19khy","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/eventref\/init(_:)-5o08w","title":"init!(UnsafeMutablePointer<GdkEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/eventref\/init(_:)-6gqb","title":"init(UnsafePointer<GdkEvent>)","type":"init"},{"path":"\/documentation\/gdk\/eventref\/init(_:)-7ct2v","title":"init!(UnsafePointer<GdkEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/eventref\/init(_:)-9ugh7","title":"init(UnsafeMutablePointer<GdkEvent>)","type":"init"},{"path":"\/documentation\/gdk\/eventref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/eventref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/eventref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/eventref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/eventref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/eventref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/eventref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/eventref\/device","title":"var device: DeviceRef!","type":"property"},{"path":"\/documentation\/gdk\/eventref\/devicetool","title":"var deviceTool: DeviceToolRef!","type":"property"},{"path":"\/documentation\/gdk\/eventref\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/eventref\/eventsequence","title":"var eventSequence: EventSequenceRef!","type":"property"},{"path":"\/documentation\/gdk\/eventref\/eventtype","title":"var eventType: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/eventref\/event_ptr","title":"var event_ptr: UnsafeMutablePointer<GdkEvent>!","type":"property"},{"path":"\/documentation\/gdk\/eventref\/modifierstate","title":"var modifierState: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/eventref\/pointeremulated","title":"var pointerEmulated: Bool","type":"property"},{"path":"\/documentation\/gdk\/eventref\/seat","title":"var seat: SeatRef!","type":"property"},{"path":"\/documentation\/gdk\/eventref\/surface","title":"var surface: SurfaceRef!","type":"property"},{"path":"\/documentation\/gdk\/eventref\/time","title":"var time: guint32","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/eventref\/getangle(event2:angle:)","title":"func GetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/eventref\/getcenter(event2:x:y:)","title":"func GetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/eventref\/getdistance(event2:distance:)","title":"func GetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/eventref\/eventsgetangle(event2:angle:)","title":"func eventsGetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/eventref\/eventsgetcenter(event2:x:y:)","title":"func eventsGetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/eventref\/eventsgetdistance(event2:distance:)","title":"func eventsGetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/eventref\/get(axes:naxes:)","title":"func get(axes: UnsafeMutablePointer<UnsafeMutablePointer<CDouble>?>!, nAxes: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/eventref\/getaxis(axisuse:value:)","title":"func getAxis(axisUse: GdkAxisUse, value: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/eventref\/getdevice()","title":"func getDevice() -> DeviceRef!","type":"method"},{"path":"\/documentation\/gdk\/eventref\/getdevicetool()","title":"func getDeviceTool() -> DeviceToolRef!","type":"method"},{"path":"\/documentation\/gdk\/eventref\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/eventref\/geteventsequence()","title":"func getEventSequence() -> EventSequenceRef!","type":"method"},{"path":"\/documentation\/gdk\/eventref\/geteventtype()","title":"func getEventType() -> GdkEventType","type":"method"},{"path":"\/documentation\/gdk\/eventref\/gethistory(outncoords:)","title":"func getHistory(outNCoords: UnsafeMutablePointer<guint>!) -> UnsafeMutablePointer<GdkTimeCoord>!","type":"method"},{"path":"\/documentation\/gdk\/eventref\/getmodifierstate()","title":"func getModifierState() -> ModifierType","type":"method"},{"path":"\/documentation\/gdk\/eventref\/getpointeremulated()","title":"func getPointerEmulated() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/eventref\/getposition(x:y:)","title":"func getPosition(x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/eventref\/getseat()","title":"func getSeat() -> SeatRef!","type":"method"},{"path":"\/documentation\/gdk\/eventref\/getsurface()","title":"func getSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/eventref\/gettime()","title":"func getTime() -> guint32","type":"method"},{"path":"\/documentation\/gdk\/eventref\/ref()","title":"func ref() -> EventRef!","type":"method"},{"path":"\/documentation\/gdk\/eventref\/triggerscontextmenu()","title":"func triggersContextMenu() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/eventref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/gdk\/eventref\/eventprotocol-implementations","title":"EventProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/eventref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/eventref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/eventref","title":"EventRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/eventsequenceref\/init(_:)-2m9ly","title":"init(UnsafeMutablePointer<GdkEventSequence>)","type":"init"},{"path":"\/documentation\/gdk\/eventsequenceref\/init(_:)-7b5mf","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/eventsequenceref\/init(_:)-7fc9x","title":"init!(UnsafePointer<GdkEventSequence>?)","type":"init"},{"path":"\/documentation\/gdk\/eventsequenceref\/init(_:)-91rbq","title":"init!(UnsafeMutablePointer<GdkEventSequence>?)","type":"init"},{"path":"\/documentation\/gdk\/eventsequenceref\/init(_:)-9zeel","title":"init(UnsafePointer<GdkEventSequence>)","type":"init"},{"path":"\/documentation\/gdk\/eventsequenceref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/eventsequenceref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/eventsequenceref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/eventsequenceref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/eventsequenceref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/eventsequenceref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/eventsequenceref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/eventsequenceref\/event_sequence_ptr","title":"var event_sequence_ptr: UnsafeMutablePointer<GdkEventSequence>!","type":"property"}],"path":"\/documentation\/gdk\/eventsequenceref\/eventsequenceprotocol-implementations","title":"EventSequenceProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/eventsequenceref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/eventsequenceref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/eventsequenceref","title":"EventSequenceRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/filelistref\/init(_:)-2grgb","title":"init(UnsafeMutablePointer<GdkFileList>)","type":"init"},{"path":"\/documentation\/gdk\/filelistref\/init(_:)-2ta4f","title":"init!(UnsafeMutablePointer<GdkFileList>?)","type":"init"},{"path":"\/documentation\/gdk\/filelistref\/init(_:)-5p7q2","title":"init(UnsafePointer<GdkFileList>)","type":"init"},{"path":"\/documentation\/gdk\/filelistref\/init(_:)-6wj51","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/filelistref\/init(_:)-9dfcm","title":"init!(UnsafePointer<GdkFileList>?)","type":"init"},{"path":"\/documentation\/gdk\/filelistref\/init(array:nfiles:)","title":"init(array: UnsafeMutablePointer<UnsafeMutablePointer<GFile>?>!, nFiles: Int)","type":"init"},{"path":"\/documentation\/gdk\/filelistref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/filelistref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/filelistref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/filelistref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/filelistref\/init(list:)","title":"init<GLibSListT>(list: GLibSListT)","type":"init"},{"path":"\/documentation\/gdk\/filelistref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/filelistref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/filelistref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/filelistref\/newfrom(array:nfiles:)","title":"static func newFrom(array: UnsafeMutablePointer<UnsafeMutablePointer<GFile>?>!, nFiles: Int) -> FileListRef!","type":"method"},{"path":"\/documentation\/gdk\/filelistref\/newfrom(list:)","title":"static func newFrom<GLibSListT>(list: GLibSListT) -> FileListRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/filelistref\/file_list_ptr","title":"var file_list_ptr: UnsafeMutablePointer<GdkFileList>!","type":"property"},{"path":"\/documentation\/gdk\/filelistref\/files","title":"var files: RefSListRef<FileRef>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/filelistref\/getfiles()","title":"func getFiles() -> RefSListRef<FileRef>!","type":"method"}],"path":"\/documentation\/gdk\/filelistref\/filelistprotocol-implementations","title":"FileListProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/filelistref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/filelistref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/filelistref","title":"FileListRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/focuseventref\/init(_:)-3000b","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/focuseventref\/init(_:)-4p2rt","title":"init!(UnsafePointer<GdkFocusEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/focuseventref\/init(_:)-8in6v","title":"init(UnsafeMutablePointer<GdkFocusEvent>)","type":"init"},{"path":"\/documentation\/gdk\/focuseventref\/init(_:)-98jbk","title":"init(UnsafePointer<GdkFocusEvent>)","type":"init"},{"path":"\/documentation\/gdk\/focuseventref\/init(_:)-ysro","title":"init!(UnsafeMutablePointer<GdkFocusEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/focuseventref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/focuseventref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/focuseventref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/focuseventref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/focuseventref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/focuseventref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/focuseventref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/focuseventref\/device","title":"var device: DeviceRef!","type":"property"},{"path":"\/documentation\/gdk\/focuseventref\/devicetool","title":"var deviceTool: DeviceToolRef!","type":"property"},{"path":"\/documentation\/gdk\/focuseventref\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/focuseventref\/eventsequence","title":"var eventSequence: EventSequenceRef!","type":"property"},{"path":"\/documentation\/gdk\/focuseventref\/eventtype","title":"var eventType: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/focuseventref\/event_ptr","title":"var event_ptr: UnsafeMutablePointer<GdkEvent>!","type":"property"},{"path":"\/documentation\/gdk\/focuseventref\/modifierstate","title":"var modifierState: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/focuseventref\/pointeremulated","title":"var pointerEmulated: Bool","type":"property"},{"path":"\/documentation\/gdk\/focuseventref\/seat","title":"var seat: SeatRef!","type":"property"},{"path":"\/documentation\/gdk\/focuseventref\/surface","title":"var surface: SurfaceRef!","type":"property"},{"path":"\/documentation\/gdk\/focuseventref\/time","title":"var time: guint32","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/focuseventref\/getangle(event2:angle:)","title":"func GetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/focuseventref\/getcenter(event2:x:y:)","title":"func GetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/focuseventref\/getdistance(event2:distance:)","title":"func GetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/focuseventref\/eventsgetangle(event2:angle:)","title":"func eventsGetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/focuseventref\/eventsgetcenter(event2:x:y:)","title":"func eventsGetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/focuseventref\/eventsgetdistance(event2:distance:)","title":"func eventsGetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/focuseventref\/get(axes:naxes:)","title":"func get(axes: UnsafeMutablePointer<UnsafeMutablePointer<CDouble>?>!, nAxes: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/focuseventref\/getaxis(axisuse:value:)","title":"func getAxis(axisUse: GdkAxisUse, value: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/focuseventref\/getdevice()","title":"func getDevice() -> DeviceRef!","type":"method"},{"path":"\/documentation\/gdk\/focuseventref\/getdevicetool()","title":"func getDeviceTool() -> DeviceToolRef!","type":"method"},{"path":"\/documentation\/gdk\/focuseventref\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/focuseventref\/geteventsequence()","title":"func getEventSequence() -> EventSequenceRef!","type":"method"},{"path":"\/documentation\/gdk\/focuseventref\/geteventtype()","title":"func getEventType() -> GdkEventType","type":"method"},{"path":"\/documentation\/gdk\/focuseventref\/gethistory(outncoords:)","title":"func getHistory(outNCoords: UnsafeMutablePointer<guint>!) -> UnsafeMutablePointer<GdkTimeCoord>!","type":"method"},{"path":"\/documentation\/gdk\/focuseventref\/getmodifierstate()","title":"func getModifierState() -> ModifierType","type":"method"},{"path":"\/documentation\/gdk\/focuseventref\/getpointeremulated()","title":"func getPointerEmulated() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/focuseventref\/getposition(x:y:)","title":"func getPosition(x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/focuseventref\/getseat()","title":"func getSeat() -> SeatRef!","type":"method"},{"path":"\/documentation\/gdk\/focuseventref\/getsurface()","title":"func getSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/focuseventref\/gettime()","title":"func getTime() -> guint32","type":"method"},{"path":"\/documentation\/gdk\/focuseventref\/ref()","title":"func ref() -> EventRef!","type":"method"},{"path":"\/documentation\/gdk\/focuseventref\/triggerscontextmenu()","title":"func triggersContextMenu() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/focuseventref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/gdk\/focuseventref\/eventprotocol-implementations","title":"EventProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/focuseventref\/focus_event_ptr","title":"var focus_event_ptr: UnsafeMutablePointer<GdkFocusEvent>!","type":"property"},{"path":"\/documentation\/gdk\/focuseventref\/in","title":"var `in`: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/focuseventref\/getin()","title":"func getIn() -> Bool","type":"method"}],"path":"\/documentation\/gdk\/focuseventref\/focuseventprotocol-implementations","title":"FocusEventProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/focuseventref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/focuseventref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/focuseventref","title":"FocusEventRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclockclassref\/init(_:)-3qdpq","title":"init!(UnsafePointer<GdkFrameClockClass>?)","type":"init"},{"path":"\/documentation\/gdk\/frameclockclassref\/init(_:)-5sm7s","title":"init!(UnsafeMutablePointer<GdkFrameClockClass>?)","type":"init"},{"path":"\/documentation\/gdk\/frameclockclassref\/init(_:)-6433i","title":"init(UnsafePointer<GdkFrameClockClass>)","type":"init"},{"path":"\/documentation\/gdk\/frameclockclassref\/init(_:)-95908","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/frameclockclassref\/init(_:)-fke8","title":"init(UnsafeMutablePointer<GdkFrameClockClass>)","type":"init"},{"path":"\/documentation\/gdk\/frameclockclassref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/frameclockclassref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/frameclockclassref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/frameclockclassref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/frameclockclassref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/frameclockclassref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclockclassref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclockclassref\/metatype","title":"static var metatype: GdkFrameClockClass?","type":"property"},{"path":"\/documentation\/gdk\/frameclockclassref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/gdk\/frameclockclassref\/wrapper","title":"static var wrapper: FrameClockClassRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclockclassref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> FrameClock!","type":"method"},{"path":"\/documentation\/gdk\/frameclockclassref\/newframeclock(properties:nproperties:names:values:)","title":"static func newFrameClock(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> FrameClock!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclockclassref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/frameclockclassref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/frameclockclassref","title":"FrameClockClassRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclockphase\/init(_:)-2zog9","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/gdk\/frameclockphase\/init(_:)-iyhd","title":"init(GdkFrameClockPhase)","type":"init"},{"path":"\/documentation\/gdk\/frameclockphase\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclockphase\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/gdk\/frameclockphase\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/gdk\/frameclockphase\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/gdk\/frameclockphase\/value","title":"var value: GdkFrameClockPhase","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclockphase\/afterpaint","title":"static let afterPaint: FrameClockPhase","type":"property"},{"path":"\/documentation\/gdk\/frameclockphase\/beforepaint","title":"static let beforePaint: FrameClockPhase","type":"property"},{"path":"\/documentation\/gdk\/frameclockphase\/flushevents","title":"static let flushEvents: FrameClockPhase","type":"property"},{"path":"\/documentation\/gdk\/frameclockphase\/layout","title":"static let layout: FrameClockPhase","type":"property"},{"path":"\/documentation\/gdk\/frameclockphase\/none","title":"static let none: FrameClockPhase","type":"property"},{"path":"\/documentation\/gdk\/frameclockphase\/paint","title":"static let paint: FrameClockPhase","type":"property"},{"path":"\/documentation\/gdk\/frameclockphase\/resumeevents","title":"static let resumeEvents: FrameClockPhase","type":"property"},{"path":"\/documentation\/gdk\/frameclockphase\/update","title":"static let update: FrameClockPhase","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclockphase\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/frameclockphase\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclockphase\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclockphase\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/frameclockphase\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/gdk\/frameclockphase\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/gdk\/frameclockphase\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/gdk\/frameclockphase\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/gdk\/frameclockphase\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/gdk\/frameclockphase\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/gdk\/frameclockphase\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/gdk\/frameclockphase\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/gdk\/frameclockphase\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/gdk\/frameclockphase\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclockphase\/init(_:)-7ip5w","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/gdk\/frameclockphase\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclockphase\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclockphase\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/frameclockphase\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/frameclockphase\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/frameclockphase\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/frameclockphase\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/frameclockphase\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/gdk\/frameclockphase\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/gdk\/frameclockphase\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/frameclockphase","title":"FrameClockPhase","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclockref\/init(_:)-3asr9","title":"init(UnsafePointer<GdkFrameClock>)","type":"init"},{"path":"\/documentation\/gdk\/frameclockref\/init(_:)-3ctdy","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/frameclockref\/init(_:)-3qcxe","title":"init(UnsafeMutablePointer<GdkFrameClock>)","type":"init"},{"path":"\/documentation\/gdk\/frameclockref\/init(_:)-9hhoo","title":"init!(UnsafeMutablePointer<GdkFrameClock>?)","type":"init"},{"path":"\/documentation\/gdk\/frameclockref\/init(_:)-9l7zp","title":"init!(UnsafePointer<GdkFrameClock>?)","type":"init"},{"path":"\/documentation\/gdk\/frameclockref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/frameclockref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/frameclockref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/frameclockref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/frameclockref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/frameclockref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclockref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclockref\/unowned(_:)","title":"static func unowned<T>(T) -> FrameClockRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclockref\/currenttimings","title":"var currentTimings: FrameTimingsRef!","type":"property"},{"path":"\/documentation\/gdk\/frameclockref\/fps","title":"var fps: CDouble","type":"property"},{"path":"\/documentation\/gdk\/frameclockref\/framecounter","title":"var frameCounter: gint64","type":"property"},{"path":"\/documentation\/gdk\/frameclockref\/frametime","title":"var frameTime: gint64","type":"property"},{"path":"\/documentation\/gdk\/frameclockref\/frame_clock_ptr","title":"var frame_clock_ptr: UnsafeMutablePointer<GdkFrameClock>!","type":"property"},{"path":"\/documentation\/gdk\/frameclockref\/historystart","title":"var historyStart: gint64","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclockref\/beginupdating()","title":"func beginUpdating()","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: FrameClockSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/connect(signal:flags:handler:)","title":"func connect(signal: FrameClockSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/endupdating()","title":"func endUpdating()","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/getcurrenttimings()","title":"func getCurrentTimings() -> FrameTimingsRef!","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/getfps()","title":"func getFps() -> CDouble","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/getframecounter()","title":"func getFrameCounter() -> gint64","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/getframetime()","title":"func getFrameTime() -> gint64","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/gethistorystart()","title":"func getHistoryStart() -> gint64","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/getrefreshinfo(basetime:refreshintervalreturn:presentationtimereturn:)","title":"func getRefreshInfo(baseTime: gint64, refreshIntervalReturn: UnsafeMutablePointer<gint64>!, presentationTimeReturn: UnsafeMutablePointer<gint64>!)","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/gettimings(framecounter:)","title":"func getTimings(frameCounter: gint64) -> FrameTimingsRef!","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/onafterpaint(flags:handler:)","title":"func onAfterPaint(flags: ConnectFlags, handler: (FrameClockRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/onbeforepaint(flags:handler:)","title":"func onBeforePaint(flags: ConnectFlags, handler: (FrameClockRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/onflushevents(flags:handler:)","title":"func onFlushEvents(flags: ConnectFlags, handler: (FrameClockRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/onlayout(flags:handler:)","title":"func onLayout(flags: ConnectFlags, handler: (FrameClockRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/onpaint(flags:handler:)","title":"func onPaint(flags: ConnectFlags, handler: (FrameClockRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/onresumeevents(flags:handler:)","title":"func onResumeEvents(flags: ConnectFlags, handler: (FrameClockRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/onupdate(flags:handler:)","title":"func onUpdate(flags: ConnectFlags, handler: (FrameClockRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/request(phase:)","title":"func request(phase: FrameClockPhase)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclockref\/afterpaintsignal","title":"static var afterPaintSignal: FrameClockSignalName","type":"property"},{"path":"\/documentation\/gdk\/frameclockref\/beforepaintsignal","title":"static var beforePaintSignal: FrameClockSignalName","type":"property"},{"path":"\/documentation\/gdk\/frameclockref\/flusheventssignal","title":"static var flushEventsSignal: FrameClockSignalName","type":"property"},{"path":"\/documentation\/gdk\/frameclockref\/layoutsignal","title":"static var layoutSignal: FrameClockSignalName","type":"property"},{"path":"\/documentation\/gdk\/frameclockref\/paintsignal","title":"static var paintSignal: FrameClockSignalName","type":"property"},{"path":"\/documentation\/gdk\/frameclockref\/resumeeventssignal","title":"static var resumeEventsSignal: FrameClockSignalName","type":"property"},{"path":"\/documentation\/gdk\/frameclockref\/updatesignal","title":"static var updateSignal: FrameClockSignalName","type":"property"}],"path":"\/documentation\/gdk\/frameclockref\/frameclockprotocol-implementations","title":"FrameClockProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclockref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/frameclockref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclockref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/gdk\/frameclockref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/gdk\/frameclockref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/gdk\/frameclockref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/gdk\/frameclockref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/gdk\/frameclockref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclockref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/bind(_:to:property:flags:convertfrom:convertto:)-3cbzy","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/bind(_:to:property:flags:convertfrom:convertto:)-8oasr","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclockref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclockref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/gdk\/frameclockref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/gdk\/frameclockref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/frameclockref","title":"FrameClockRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/frametimingsref\/init(_:)-1vd0k","title":"init(UnsafePointer<GdkFrameTimings>)","type":"init"},{"path":"\/documentation\/gdk\/frametimingsref\/init(_:)-37ueu","title":"init!(UnsafePointer<GdkFrameTimings>?)","type":"init"},{"path":"\/documentation\/gdk\/frametimingsref\/init(_:)-5rshl","title":"init(UnsafeMutablePointer<GdkFrameTimings>)","type":"init"},{"path":"\/documentation\/gdk\/frametimingsref\/init(_:)-kohl","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/frametimingsref\/init(_:)-znih","title":"init!(UnsafeMutablePointer<GdkFrameTimings>?)","type":"init"},{"path":"\/documentation\/gdk\/frametimingsref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/frametimingsref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/frametimingsref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/frametimingsref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/frametimingsref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/frametimingsref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/frametimingsref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/frametimingsref\/complete","title":"var complete: Bool","type":"property"},{"path":"\/documentation\/gdk\/frametimingsref\/framecounter","title":"var frameCounter: gint64","type":"property"},{"path":"\/documentation\/gdk\/frametimingsref\/frametime","title":"var frameTime: gint64","type":"property"},{"path":"\/documentation\/gdk\/frametimingsref\/frame_timings_ptr","title":"var frame_timings_ptr: UnsafeMutablePointer<GdkFrameTimings>!","type":"property"},{"path":"\/documentation\/gdk\/frametimingsref\/predictedpresentationtime","title":"var predictedPresentationTime: gint64","type":"property"},{"path":"\/documentation\/gdk\/frametimingsref\/presentationtime","title":"var presentationTime: gint64","type":"property"},{"path":"\/documentation\/gdk\/frametimingsref\/refreshinterval","title":"var refreshInterval: gint64","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/frametimingsref\/getcomplete()","title":"func getComplete() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/frametimingsref\/getframecounter()","title":"func getFrameCounter() -> gint64","type":"method"},{"path":"\/documentation\/gdk\/frametimingsref\/getframetime()","title":"func getFrameTime() -> gint64","type":"method"},{"path":"\/documentation\/gdk\/frametimingsref\/getpredictedpresentationtime()","title":"func getPredictedPresentationTime() -> gint64","type":"method"},{"path":"\/documentation\/gdk\/frametimingsref\/getpresentationtime()","title":"func getPresentationTime() -> gint64","type":"method"},{"path":"\/documentation\/gdk\/frametimingsref\/getrefreshinterval()","title":"func getRefreshInterval() -> gint64","type":"method"},{"path":"\/documentation\/gdk\/frametimingsref\/ref()","title":"func ref() -> FrameTimingsRef!","type":"method"},{"path":"\/documentation\/gdk\/frametimingsref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/gdk\/frametimingsref\/frametimingsprotocol-implementations","title":"FrameTimingsProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/frametimingsref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/frametimingsref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/frametimingsref","title":"FrameTimingsRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/glapi\/init(_:)-1mkvf","title":"init(GdkGLAPI)","type":"init"},{"path":"\/documentation\/gdk\/glapi\/init(_:)-6p8p5","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/gdk\/glapi\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/glapi\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/gdk\/glapi\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/gdk\/glapi\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/gdk\/glapi\/value","title":"var value: GdkGLAPI","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/glapi\/gl","title":"static let gl: GLAPI","type":"property"},{"path":"\/documentation\/gdk\/glapi\/gles","title":"static let gles: GLAPI","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/glapi\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/glapi\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/glapi\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/glapi\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/glapi\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/gdk\/glapi\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/gdk\/glapi\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/gdk\/glapi\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/gdk\/glapi\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/gdk\/glapi\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/gdk\/glapi\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/gdk\/glapi\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/gdk\/glapi\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/gdk\/glapi\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/glapi\/init(_:)-3nta","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/gdk\/glapi\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/glapi\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/glapi\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/glapi\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/glapi\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/glapi\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/glapi\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/glapi\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/gdk\/glapi\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/gdk\/glapi\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/glapi","title":"GLAPI","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/glcontextref\/init(_:)-246c4","title":"init!(UnsafePointer<GdkGLContext>?)","type":"init"},{"path":"\/documentation\/gdk\/glcontextref\/init(_:)-40e3y","title":"init(UnsafePointer<GdkGLContext>)","type":"init"},{"path":"\/documentation\/gdk\/glcontextref\/init(_:)-4g161","title":"init(UnsafeMutablePointer<GdkGLContext>)","type":"init"},{"path":"\/documentation\/gdk\/glcontextref\/init(_:)-5qwl","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/glcontextref\/init(_:)-767mt","title":"init!(UnsafeMutablePointer<GdkGLContext>?)","type":"init"},{"path":"\/documentation\/gdk\/glcontextref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/glcontextref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/glcontextref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/glcontextref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/glcontextref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/glcontextref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/glcontextref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/glcontextref\/getcurrent()","title":"static func getCurrent() -> GLContextRef!","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/unowned(_:)","title":"static func unowned<T>(T) -> GLContextRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/glcontextref\/draw_context_ptr","title":"var draw_context_ptr: UnsafeMutablePointer<GdkDrawContext>!","type":"property"},{"path":"\/documentation\/gdk\/glcontextref\/frameregion","title":"var frameRegion: RegionRef!","type":"property"},{"path":"\/documentation\/gdk\/glcontextref\/isinframe","title":"var isInFrame: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/glcontextref\/beginframe(region:)","title":"func beginFrame<cairoRegionT>(region: cairoRegionT)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/bind(property:to:_:flags:transformfrom:transformto:)-6l4q","title":"func bind<Q, T>(property: DrawContextPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/endframe()","title":"func endFrame()","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/getframeregion()","title":"func getFrameRegion() -> RegionRef!","type":"method"}],"path":"\/documentation\/gdk\/glcontextref\/drawcontextprotocol-implementations","title":"DrawContextProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/glcontextref\/allowedapis","title":"var allowedApis: GLAPI","type":"property"},{"path":"\/documentation\/gdk\/glcontextref\/api","title":"var api: GLAPI","type":"property"},{"path":"\/documentation\/gdk\/glcontextref\/debugenabled","title":"var debugEnabled: Bool","type":"property"},{"path":"\/documentation\/gdk\/glcontextref\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/glcontextref\/forwardcompatible","title":"var forwardCompatible: Bool","type":"property"},{"path":"\/documentation\/gdk\/glcontextref\/gl_context_ptr","title":"var gl_context_ptr: UnsafeMutablePointer<GdkGLContext>!","type":"property"},{"path":"\/documentation\/gdk\/glcontextref\/islegacy","title":"var isLegacy: Bool","type":"property"},{"path":"\/documentation\/gdk\/glcontextref\/sharedcontext","title":"var sharedContext: GLContextRef!","type":"property"},{"path":"\/documentation\/gdk\/glcontextref\/surface","title":"var surface: SurfaceRef!","type":"property"},{"path":"\/documentation\/gdk\/glcontextref\/usees","title":"var useEs: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/glcontextref\/bind(property:to:_:flags:transformfrom:transformto:)-13dni","title":"func bind<Q, T>(property: GLContextPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/get(property:)","title":"func get(property: GLContextPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/getallowedapis()","title":"func getAllowedApis() -> GLAPI","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/getapi()","title":"func getApi() -> GLAPI","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/getdebugenabled()","title":"func getDebugEnabled() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/getforwardcompatible()","title":"func getForwardCompatible() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/getrequiredversion(major:minor:)","title":"func getRequiredVersion(major: UnsafeMutablePointer<gint>?, minor: UnsafeMutablePointer<gint>?)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/getsharedcontext()","title":"func getSharedContext() -> GLContextRef!","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/getsurface()","title":"func getSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/getusees()","title":"func getUseEs() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/getversion(major:minor:)","title":"func getVersion(major: UnsafeMutablePointer<gint>!, minor: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/isshared(other:)","title":"func isShared<GLContextT>(other: GLContextT) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/makecurrent()","title":"func makeCurrent()","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/realize()","title":"func realize() throws -> Bool","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/set(property:value:)","title":"func set(property: GLContextPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/set(usees:)","title":"func set(useEs: Int)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/setallowed(apis:)","title":"func setAllowed(apis: GLAPI)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/setdebug(enabled:)","title":"func setDebug(enabled: Bool)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/setforward(compatible:)","title":"func setForward(compatible: Bool)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/setrequiredversion(major:minor:)","title":"func setRequiredVersion(major: Int, minor: Int)","type":"method"}],"path":"\/documentation\/gdk\/glcontextref\/glcontextprotocol-implementations","title":"GLContextProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/glcontextref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/glcontextref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/glcontextref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/gdk\/glcontextref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/gdk\/glcontextref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/gdk\/glcontextref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/gdk\/glcontextref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/gdk\/glcontextref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/glcontextref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/bind(_:to:property:flags:convertfrom:convertto:)-2bghr","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/bind(_:to:property:flags:convertfrom:convertto:)-6ekfe","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/connect(signal:flags:handler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/glcontextref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/glcontextref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/gdk\/glcontextref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/gdk\/glcontextref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/glcontextref","title":"GLContextRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuilderclassref\/init(_:)-1scar","title":"init(UnsafeMutablePointer<GdkGLTextureBuilderClass>)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilderclassref\/init(_:)-218ib","title":"init!(UnsafeMutablePointer<GdkGLTextureBuilderClass>?)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilderclassref\/init(_:)-2f8o2","title":"init(UnsafePointer<GdkGLTextureBuilderClass>)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilderclassref\/init(_:)-8m1eo","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilderclassref\/init(_:)-vnbb","title":"init!(UnsafePointer<GdkGLTextureBuilderClass>?)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilderclassref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilderclassref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilderclassref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilderclassref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilderclassref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilderclassref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuilderclassref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuilderclassref\/metatype","title":"static var metatype: GdkGLTextureBuilderClass?","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilderclassref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilderclassref\/wrapper","title":"static var wrapper: GLTextureBuilderClassRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuilderclassref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> GLTextureBuilder!","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderclassref\/newgltexturebuilder(properties:nproperties:names:values:)","title":"static func newGLTextureBuilder(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> GLTextureBuilder!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuilderclassref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/gltexturebuilderclassref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/gltexturebuilderclassref","title":"GLTextureBuilderClassRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/init()","title":"init()","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/init(_:)-5nmrg","title":"init!(UnsafeMutablePointer<GdkGLTextureBuilder>?)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/init(_:)-691do","title":"init(UnsafeMutablePointer<GdkGLTextureBuilder>)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/init(_:)-6brr5","title":"init(UnsafePointer<GdkGLTextureBuilder>)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/init(_:)-6w2or","title":"init!(UnsafePointer<GdkGLTextureBuilder>?)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/init(_:)-c7fm","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/unowned(_:)","title":"static func unowned<T>(T) -> GLTextureBuilderRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/context","title":"var context: GLContextRef!","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/format","title":"var format: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/gl_texture_builder_ptr","title":"var gl_texture_builder_ptr: UnsafeMutablePointer<GdkGLTextureBuilder>!","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/hasmipmap","title":"var hasMipmap: Bool","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/height","title":"var height: Int","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/id","title":"var id: Int","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/sync","title":"var sync: gpointer?","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/updateregion","title":"var updateRegion: RegionRef!","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/updatetexture","title":"var updateTexture: TextureRef!","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/width","title":"var width: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: GLTextureBuilderPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/build(destroy:data:)","title":"func build(destroy: GDestroyNotify?, data: gpointer?) -> TextureRef!","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/get(property:)","title":"func get(property: GLTextureBuilderPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/getcontext()","title":"func getContext() -> GLContextRef!","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/getformat()","title":"func getFormat() -> GdkMemoryFormat","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/gethasmipmap()","title":"func getHasMipmap() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/getheight()","title":"func getHeight() -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/getid()","title":"func getId() -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/getsync()","title":"func getSync() -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/getupdateregion()","title":"func getUpdateRegion() -> RegionRef!","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/getupdatetexture()","title":"func getUpdateTexture() -> TextureRef!","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/getwidth()","title":"func getWidth() -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/set(context:)","title":"func set(context: GLContextRef?)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/set(format:)","title":"func set(format: GdkMemoryFormat)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/set(hasmipmap:)","title":"func set(hasMipmap: Bool)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/set(height:)","title":"func set(height: Int)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/set(id:)","title":"func set(id: Int)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/set(property:value:)","title":"func set(property: GLTextureBuilderPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/set(sync:)","title":"func set(sync: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/set(width:)","title":"func set(width: Int)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/setupdate(region:)","title":"func setUpdate(region: RegionRef?)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/setupdate(texture:)","title":"func setUpdate(texture: TextureRef?)","type":"method"}],"path":"\/documentation\/gdk\/gltexturebuilderref\/gltexturebuilderprotocol-implementations","title":"GLTextureBuilderProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/gltexturebuilderref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/bind(_:to:property:flags:convertfrom:convertto:)-1439a","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/bind(_:to:property:flags:convertfrom:convertto:)-6m2sg","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/connect(signal:flags:handler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/gdk\/gltexturebuilderref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/gdk\/gltexturebuilderref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/gltexturebuilderref","title":"GLTextureBuilderRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltextureclassref\/init(_:)-41urw","title":"init!(UnsafeMutablePointer<GdkGLTextureClass>?)","type":"init"},{"path":"\/documentation\/gdk\/gltextureclassref\/init(_:)-5w2nf","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/gltextureclassref\/init(_:)-800ub","title":"init(UnsafeMutablePointer<GdkGLTextureClass>)","type":"init"},{"path":"\/documentation\/gdk\/gltextureclassref\/init(_:)-q33b","title":"init(UnsafePointer<GdkGLTextureClass>)","type":"init"},{"path":"\/documentation\/gdk\/gltextureclassref\/init(_:)-wwn3","title":"init!(UnsafePointer<GdkGLTextureClass>?)","type":"init"},{"path":"\/documentation\/gdk\/gltextureclassref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/gltextureclassref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/gltextureclassref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/gltextureclassref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/gltextureclassref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/gltextureclassref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltextureclassref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltextureclassref\/metatype","title":"static var metatype: GdkGLTextureClass?","type":"property"},{"path":"\/documentation\/gdk\/gltextureclassref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/gdk\/gltextureclassref\/wrapper","title":"static var wrapper: GLTextureClassRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltextureclassref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> GLTexture!","type":"method"},{"path":"\/documentation\/gdk\/gltextureclassref\/newgltexture(properties:nproperties:names:values:)","title":"static func newGLTexture(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> GLTexture!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltextureclassref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/gltextureclassref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/gltextureclassref","title":"GLTextureClassRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltextureref\/init(_:)-1noq9","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/gltextureref\/init(_:)-2akbb","title":"init(UnsafePointer<GdkGLTexture>)","type":"init"},{"path":"\/documentation\/gdk\/gltextureref\/init(_:)-30mau","title":"init!(UnsafePointer<GdkGLTexture>?)","type":"init"},{"path":"\/documentation\/gdk\/gltextureref\/init(_:)-6ffxj","title":"init(UnsafeMutablePointer<GdkGLTexture>)","type":"init"},{"path":"\/documentation\/gdk\/gltextureref\/init(_:)-9c0ii","title":"init!(UnsafeMutablePointer<GdkGLTexture>?)","type":"init"},{"path":"\/documentation\/gdk\/gltextureref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/gltextureref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/gltextureref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/gltextureref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/gltextureref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/gltextureref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltextureref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltextureref\/unowned(_:)","title":"static func unowned<T>(T) -> GLTextureRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltextureref\/gl_texture_ptr","title":"var gl_texture_ptr: UnsafeMutablePointer<GdkGLTexture>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltextureref\/bind(property:to:_:flags:transformfrom:transformto:)-7txgs","title":"func bind<Q, T>(property: GLTexturePropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/get(property:)","title":"func get(property: GLTexturePropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/release()","title":"func release()","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/set(property:value:)","title":"func set(property: GLTexturePropertyName, value: Value)","type":"method"}],"path":"\/documentation\/gdk\/gltextureref\/gltextureprotocol-implementations","title":"GLTextureProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltextureref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/gltextureref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltextureref\/icon_ptr","title":"var icon_ptr: UnsafeMutablePointer<GIcon>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltextureref\/equal(icon2:)","title":"func equal(icon2: IconRef?) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/hash()","title":"func hash() -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/serialize()","title":"func serialize() -> VariantRef!","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/tostring()","title":"func toString() -> String!","type":"method"}],"path":"\/documentation\/gdk\/gltextureref\/iconprotocol-implementations","title":"IconProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltextureref\/loadable_icon_ptr","title":"var loadable_icon_ptr: UnsafeMutablePointer<GLoadableIcon>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltextureref\/load(size:type:cancellable:)","title":"func load(size: Int, type: UnsafeMutablePointer<UnsafeMutablePointer<CChar>?>!, cancellable: CancellableRef?) throws -> InputStreamRef!","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/loadasync(size:cancellable:callback:userdata:)","title":"func loadAsync(size: Int, cancellable: CancellableRef?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/loadfinish(res:type:)","title":"func loadFinish<AsyncResultT>(res: AsyncResultT, type: UnsafeMutablePointer<UnsafeMutablePointer<CChar>?>!) throws -> InputStreamRef!","type":"method"}],"path":"\/documentation\/gdk\/gltextureref\/loadableiconprotocol-implementations","title":"LoadableIconProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltextureref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/gdk\/gltextureref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/gdk\/gltextureref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/gdk\/gltextureref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/gdk\/gltextureref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/gdk\/gltextureref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltextureref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/bind(_:to:property:flags:convertfrom:convertto:)-380nu","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/bind(_:to:property:flags:convertfrom:convertto:)-4hgga","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/connect(signal:flags:data:destroydata:signalhandler:)-6ulfy","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/connect(signal:flags:handler:)-1i0l3","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltextureref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltextureref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/gdk\/gltextureref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltextureref\/currentimage","title":"var currentImage: PaintableRef!","type":"property"},{"path":"\/documentation\/gdk\/gltextureref\/flags","title":"var flags: PaintableFlags","type":"property"},{"path":"\/documentation\/gdk\/gltextureref\/intrinsicaspectratio","title":"var intrinsicAspectRatio: CDouble","type":"property"},{"path":"\/documentation\/gdk\/gltextureref\/intrinsicheight","title":"var intrinsicHeight: Int","type":"property"},{"path":"\/documentation\/gdk\/gltextureref\/intrinsicwidth","title":"var intrinsicWidth: Int","type":"property"},{"path":"\/documentation\/gdk\/gltextureref\/paintable_ptr","title":"var paintable_ptr: UnsafeMutablePointer<GdkPaintable>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltextureref\/computeconcretesize(specifiedwidth:specifiedheight:defaultwidth:defaultheight:concretewidth:concreteheight:)","title":"func computeConcreteSize(specifiedWidth: CDouble, specifiedHeight: CDouble, defaultWidth: CDouble, defaultHeight: CDouble, concreteWidth: UnsafeMutablePointer<CDouble>!, concreteHeight: UnsafeMutablePointer<CDouble>!)","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/connect(signal:flags:data:destroydata:signalhandler:)-26kfw","title":"func connect(signal: PaintableSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/connect(signal:flags:handler:)-3gys4","title":"func connect(signal: PaintableSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/getcurrentimage()","title":"func getCurrentImage() -> PaintableRef!","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/getflags()","title":"func getFlags() -> PaintableFlags","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/getintrinsicaspectratio()","title":"func getIntrinsicAspectRatio() -> CDouble","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/getintrinsicheight()","title":"func getIntrinsicHeight() -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/getintrinsicwidth()","title":"func getIntrinsicWidth() -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/invalidatecontents()","title":"func invalidateContents()","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/invalidatesize()","title":"func invalidateSize()","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/oninvalidatecontents(flags:handler:)","title":"func onInvalidateContents(flags: ConnectFlags, handler: (PaintableRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/oninvalidatesize(flags:handler:)","title":"func onInvalidateSize(flags: ConnectFlags, handler: (PaintableRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/snapshot(snapshot:width:height:)","title":"func snapshot<SnapshotT>(snapshot: SnapshotT, width: CDouble, height: CDouble)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltextureref\/invalidatecontentssignal","title":"static var invalidateContentsSignal: PaintableSignalName","type":"property"},{"path":"\/documentation\/gdk\/gltextureref\/invalidatesizesignal","title":"static var invalidateSizeSignal: PaintableSignalName","type":"property"}],"path":"\/documentation\/gdk\/gltextureref\/paintableprotocol-implementations","title":"PaintableProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltextureref\/format","title":"var format: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/gltextureref\/height","title":"var height: Int","type":"property"},{"path":"\/documentation\/gdk\/gltextureref\/texture_ptr","title":"var texture_ptr: UnsafeMutablePointer<GdkTexture>!","type":"property"},{"path":"\/documentation\/gdk\/gltextureref\/width","title":"var width: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltextureref\/bind(property:to:_:flags:transformfrom:transformto:)-9al3r","title":"func bind<Q, T>(property: TexturePropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/download(data:stride:)","title":"func download(data: UnsafeMutablePointer<guchar>!, stride: Int)","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/getformat()","title":"func getFormat() -> GdkMemoryFormat","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/getheight()","title":"func getHeight() -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/getwidth()","title":"func getWidth() -> Int","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/pixbufgetfromtexture()","title":"func pixbufGetFromTexture() -> PixbufRef!","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/savetopng(filename:)","title":"func saveToPng(filename: UnsafePointer<CChar>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/savetopngbytes()","title":"func saveToPngBytes() -> BytesRef!","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/savetotiff(filename:)","title":"func saveToTiff(filename: UnsafePointer<CChar>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/gltextureref\/savetotiffbytes()","title":"func saveToTiffBytes() -> BytesRef!","type":"method"}],"path":"\/documentation\/gdk\/gltextureref\/textureprotocol-implementations","title":"TextureProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/gltextureref","title":"GLTextureRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/init(_:)-13n6o","title":"init!(UnsafeMutablePointer<GdkGrabBrokenEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/init(_:)-2o3i","title":"init(UnsafePointer<GdkGrabBrokenEvent>)","type":"init"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/init(_:)-2zdqa","title":"init(UnsafeMutablePointer<GdkGrabBrokenEvent>)","type":"init"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/init(_:)-7m62v","title":"init!(UnsafePointer<GdkGrabBrokenEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/init(_:)-7u3l0","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/device","title":"var device: DeviceRef!","type":"property"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/devicetool","title":"var deviceTool: DeviceToolRef!","type":"property"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/eventsequence","title":"var eventSequence: EventSequenceRef!","type":"property"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/eventtype","title":"var eventType: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/event_ptr","title":"var event_ptr: UnsafeMutablePointer<GdkEvent>!","type":"property"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/modifierstate","title":"var modifierState: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/pointeremulated","title":"var pointerEmulated: Bool","type":"property"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/seat","title":"var seat: SeatRef!","type":"property"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/surface","title":"var surface: SurfaceRef!","type":"property"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/time","title":"var time: guint32","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/getangle(event2:angle:)","title":"func GetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/getcenter(event2:x:y:)","title":"func GetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/getdistance(event2:distance:)","title":"func GetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/eventsgetangle(event2:angle:)","title":"func eventsGetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/eventsgetcenter(event2:x:y:)","title":"func eventsGetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/eventsgetdistance(event2:distance:)","title":"func eventsGetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/get(axes:naxes:)","title":"func get(axes: UnsafeMutablePointer<UnsafeMutablePointer<CDouble>?>!, nAxes: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/getaxis(axisuse:value:)","title":"func getAxis(axisUse: GdkAxisUse, value: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/getdevice()","title":"func getDevice() -> DeviceRef!","type":"method"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/getdevicetool()","title":"func getDeviceTool() -> DeviceToolRef!","type":"method"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/geteventsequence()","title":"func getEventSequence() -> EventSequenceRef!","type":"method"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/geteventtype()","title":"func getEventType() -> GdkEventType","type":"method"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/gethistory(outncoords:)","title":"func getHistory(outNCoords: UnsafeMutablePointer<guint>!) -> UnsafeMutablePointer<GdkTimeCoord>!","type":"method"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/getmodifierstate()","title":"func getModifierState() -> ModifierType","type":"method"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/getpointeremulated()","title":"func getPointerEmulated() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/getposition(x:y:)","title":"func getPosition(x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/getseat()","title":"func getSeat() -> SeatRef!","type":"method"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/getsurface()","title":"func getSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/gettime()","title":"func getTime() -> guint32","type":"method"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/ref()","title":"func ref() -> EventRef!","type":"method"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/triggerscontextmenu()","title":"func triggersContextMenu() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/gdk\/grabbrokeneventref\/eventprotocol-implementations","title":"EventProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/grabsurface","title":"var grabSurface: SurfaceRef!","type":"property"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/grab_broken_event_ptr","title":"var grab_broken_event_ptr: UnsafeMutablePointer<GdkGrabBrokenEvent>!","type":"property"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/implicit","title":"var implicit: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/getgrabsurface()","title":"func getGrabSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/getimplicit()","title":"func getImplicit() -> Bool","type":"method"}],"path":"\/documentation\/gdk\/grabbrokeneventref\/grabbrokeneventprotocol-implementations","title":"GrabBrokenEventProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/grabbrokeneventref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/grabbrokeneventref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/grabbrokeneventref","title":"GrabBrokenEventRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/keyeventref\/init(_:)-5sn77","title":"init(UnsafePointer<GdkKeyEvent>)","type":"init"},{"path":"\/documentation\/gdk\/keyeventref\/init(_:)-8iunr","title":"init!(UnsafeMutablePointer<GdkKeyEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/keyeventref\/init(_:)-9lp9p","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/keyeventref\/init(_:)-fej1","title":"init!(UnsafePointer<GdkKeyEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/keyeventref\/init(_:)-rasw","title":"init(UnsafeMutablePointer<GdkKeyEvent>)","type":"init"},{"path":"\/documentation\/gdk\/keyeventref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/keyeventref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/keyeventref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/keyeventref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/keyeventref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/keyeventref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/keyeventref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/keyeventref\/device","title":"var device: DeviceRef!","type":"property"},{"path":"\/documentation\/gdk\/keyeventref\/devicetool","title":"var deviceTool: DeviceToolRef!","type":"property"},{"path":"\/documentation\/gdk\/keyeventref\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/keyeventref\/eventsequence","title":"var eventSequence: EventSequenceRef!","type":"property"},{"path":"\/documentation\/gdk\/keyeventref\/eventtype","title":"var eventType: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/keyeventref\/event_ptr","title":"var event_ptr: UnsafeMutablePointer<GdkEvent>!","type":"property"},{"path":"\/documentation\/gdk\/keyeventref\/modifierstate","title":"var modifierState: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/keyeventref\/pointeremulated","title":"var pointerEmulated: Bool","type":"property"},{"path":"\/documentation\/gdk\/keyeventref\/seat","title":"var seat: SeatRef!","type":"property"},{"path":"\/documentation\/gdk\/keyeventref\/surface","title":"var surface: SurfaceRef!","type":"property"},{"path":"\/documentation\/gdk\/keyeventref\/time","title":"var time: guint32","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/keyeventref\/getangle(event2:angle:)","title":"func GetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/keyeventref\/getcenter(event2:x:y:)","title":"func GetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/keyeventref\/getdistance(event2:distance:)","title":"func GetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/keyeventref\/eventsgetangle(event2:angle:)","title":"func eventsGetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/keyeventref\/eventsgetcenter(event2:x:y:)","title":"func eventsGetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/keyeventref\/eventsgetdistance(event2:distance:)","title":"func eventsGetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/keyeventref\/get(axes:naxes:)","title":"func get(axes: UnsafeMutablePointer<UnsafeMutablePointer<CDouble>?>!, nAxes: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/keyeventref\/getaxis(axisuse:value:)","title":"func getAxis(axisUse: GdkAxisUse, value: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/keyeventref\/getdevice()","title":"func getDevice() -> DeviceRef!","type":"method"},{"path":"\/documentation\/gdk\/keyeventref\/getdevicetool()","title":"func getDeviceTool() -> DeviceToolRef!","type":"method"},{"path":"\/documentation\/gdk\/keyeventref\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/keyeventref\/geteventsequence()","title":"func getEventSequence() -> EventSequenceRef!","type":"method"},{"path":"\/documentation\/gdk\/keyeventref\/geteventtype()","title":"func getEventType() -> GdkEventType","type":"method"},{"path":"\/documentation\/gdk\/keyeventref\/gethistory(outncoords:)","title":"func getHistory(outNCoords: UnsafeMutablePointer<guint>!) -> UnsafeMutablePointer<GdkTimeCoord>!","type":"method"},{"path":"\/documentation\/gdk\/keyeventref\/getmodifierstate()","title":"func getModifierState() -> ModifierType","type":"method"},{"path":"\/documentation\/gdk\/keyeventref\/getpointeremulated()","title":"func getPointerEmulated() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/keyeventref\/getposition(x:y:)","title":"func getPosition(x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/keyeventref\/getseat()","title":"func getSeat() -> SeatRef!","type":"method"},{"path":"\/documentation\/gdk\/keyeventref\/getsurface()","title":"func getSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/keyeventref\/gettime()","title":"func getTime() -> guint32","type":"method"},{"path":"\/documentation\/gdk\/keyeventref\/ref()","title":"func ref() -> EventRef!","type":"method"},{"path":"\/documentation\/gdk\/keyeventref\/triggerscontextmenu()","title":"func triggersContextMenu() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/keyeventref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/gdk\/keyeventref\/eventprotocol-implementations","title":"EventProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/keyeventref\/consumedmodifiers","title":"var consumedModifiers: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/keyeventref\/ismodifier","title":"var isModifier: Bool","type":"property"},{"path":"\/documentation\/gdk\/keyeventref\/key_event_ptr","title":"var key_event_ptr: UnsafeMutablePointer<GdkKeyEvent>!","type":"property"},{"path":"\/documentation\/gdk\/keyeventref\/keycode","title":"var keycode: Int","type":"property"},{"path":"\/documentation\/gdk\/keyeventref\/keyval","title":"var keyval: Int","type":"property"},{"path":"\/documentation\/gdk\/keyeventref\/layout","title":"var layout: Int","type":"property"},{"path":"\/documentation\/gdk\/keyeventref\/level","title":"var level: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/keyeventref\/getconsumedmodifiers()","title":"func getConsumedModifiers() -> ModifierType","type":"method"},{"path":"\/documentation\/gdk\/keyeventref\/getkeycode()","title":"func getKeycode() -> Int","type":"method"},{"path":"\/documentation\/gdk\/keyeventref\/getkeyval()","title":"func getKeyval() -> Int","type":"method"},{"path":"\/documentation\/gdk\/keyeventref\/getlayout()","title":"func getLayout() -> Int","type":"method"},{"path":"\/documentation\/gdk\/keyeventref\/getlevel()","title":"func getLevel() -> Int","type":"method"},{"path":"\/documentation\/gdk\/keyeventref\/getmatch(keyval:modifiers:)","title":"func getMatch(keyval: UnsafeMutablePointer<guint>!, modifiers: UnsafeMutablePointer<GdkModifierType>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/keyeventref\/matches(keyval:modifiers:)","title":"func matches(keyval: Int, modifiers: ModifierType) -> GdkKeyMatch","type":"method"}],"path":"\/documentation\/gdk\/keyeventref\/keyeventprotocol-implementations","title":"KeyEventProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/keyeventref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/keyeventref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/keyeventref","title":"KeyEventRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/keymapkeyref\/init(_:)-2v5ir","title":"init(UnsafeMutablePointer<GdkKeymapKey>)","type":"init"},{"path":"\/documentation\/gdk\/keymapkeyref\/init(_:)-2yi5b","title":"init(UnsafePointer<GdkKeymapKey>)","type":"init"},{"path":"\/documentation\/gdk\/keymapkeyref\/init(_:)-4dyga","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/keymapkeyref\/init(_:)-8x702","title":"init!(UnsafePointer<GdkKeymapKey>?)","type":"init"},{"path":"\/documentation\/gdk\/keymapkeyref\/init(_:)-9zagi","title":"init!(UnsafeMutablePointer<GdkKeymapKey>?)","type":"init"},{"path":"\/documentation\/gdk\/keymapkeyref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/keymapkeyref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/keymapkeyref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/keymapkeyref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/keymapkeyref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/keymapkeyref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/keymapkeyref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/keymapkeyref\/group","title":"var group: gint","type":"property"},{"path":"\/documentation\/gdk\/keymapkeyref\/keycode","title":"var keycode: guint","type":"property"},{"path":"\/documentation\/gdk\/keymapkeyref\/level","title":"var level: gint","type":"property"}],"path":"\/documentation\/gdk\/keymapkeyref\/keymapkeyprotocol-implementations","title":"KeymapKeyProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/keymapkeyref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/keymapkeyref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/keymapkeyref","title":"KeymapKeyRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytextureclassref\/init(_:)-1w1k9","title":"init(UnsafePointer<GdkMemoryTextureClass>)","type":"init"},{"path":"\/documentation\/gdk\/memorytextureclassref\/init(_:)-21exu","title":"init!(UnsafePointer<GdkMemoryTextureClass>?)","type":"init"},{"path":"\/documentation\/gdk\/memorytextureclassref\/init(_:)-32bv8","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/memorytextureclassref\/init(_:)-74uu6","title":"init!(UnsafeMutablePointer<GdkMemoryTextureClass>?)","type":"init"},{"path":"\/documentation\/gdk\/memorytextureclassref\/init(_:)-95pii","title":"init(UnsafeMutablePointer<GdkMemoryTextureClass>)","type":"init"},{"path":"\/documentation\/gdk\/memorytextureclassref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/memorytextureclassref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/memorytextureclassref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/memorytextureclassref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/memorytextureclassref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/memorytextureclassref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytextureclassref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytextureclassref\/metatype","title":"static var metatype: GdkMemoryTextureClass?","type":"property"},{"path":"\/documentation\/gdk\/memorytextureclassref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/gdk\/memorytextureclassref\/wrapper","title":"static var wrapper: MemoryTextureClassRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytextureclassref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> MemoryTexture!","type":"method"},{"path":"\/documentation\/gdk\/memorytextureclassref\/newmemorytexture(properties:nproperties:names:values:)","title":"static func newMemoryTexture(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> MemoryTexture!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytextureclassref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/memorytextureclassref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/memorytextureclassref","title":"MemoryTextureClassRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytextureref\/init(_:)-6pwxy","title":"init(UnsafePointer<GdkMemoryTexture>)","type":"init"},{"path":"\/documentation\/gdk\/memorytextureref\/init(_:)-7f6ti","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/memorytextureref\/init(_:)-83z74","title":"init!(UnsafePointer<GdkMemoryTexture>?)","type":"init"},{"path":"\/documentation\/gdk\/memorytextureref\/init(_:)-9683r","title":"init!(UnsafeMutablePointer<GdkMemoryTexture>?)","type":"init"},{"path":"\/documentation\/gdk\/memorytextureref\/init(_:)-ix17","title":"init(UnsafeMutablePointer<GdkMemoryTexture>)","type":"init"},{"path":"\/documentation\/gdk\/memorytextureref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/memorytextureref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/memorytextureref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/memorytextureref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/memorytextureref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/memorytextureref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytextureref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytextureref\/unowned(_:)","title":"static func unowned<T>(T) -> MemoryTextureRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytextureref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/memorytextureref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytextureref\/icon_ptr","title":"var icon_ptr: UnsafeMutablePointer<GIcon>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytextureref\/equal(icon2:)","title":"func equal(icon2: IconRef?) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/hash()","title":"func hash() -> Int","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/serialize()","title":"func serialize() -> VariantRef!","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/tostring()","title":"func toString() -> String!","type":"method"}],"path":"\/documentation\/gdk\/memorytextureref\/iconprotocol-implementations","title":"IconProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytextureref\/loadable_icon_ptr","title":"var loadable_icon_ptr: UnsafeMutablePointer<GLoadableIcon>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytextureref\/load(size:type:cancellable:)","title":"func load(size: Int, type: UnsafeMutablePointer<UnsafeMutablePointer<CChar>?>!, cancellable: CancellableRef?) throws -> InputStreamRef!","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/loadasync(size:cancellable:callback:userdata:)","title":"func loadAsync(size: Int, cancellable: CancellableRef?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/loadfinish(res:type:)","title":"func loadFinish<AsyncResultT>(res: AsyncResultT, type: UnsafeMutablePointer<UnsafeMutablePointer<CChar>?>!) throws -> InputStreamRef!","type":"method"}],"path":"\/documentation\/gdk\/memorytextureref\/loadableiconprotocol-implementations","title":"LoadableIconProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytextureref\/memory_texture_ptr","title":"var memory_texture_ptr: UnsafeMutablePointer<GdkMemoryTexture>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytextureref\/bind(property:to:_:flags:transformfrom:transformto:)-4lhf5","title":"func bind<Q, T>(property: MemoryTexturePropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/get(property:)","title":"func get(property: MemoryTexturePropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/set(property:value:)","title":"func set(property: MemoryTexturePropertyName, value: Value)","type":"method"}],"path":"\/documentation\/gdk\/memorytextureref\/memorytextureprotocol-implementations","title":"MemoryTextureProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytextureref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/gdk\/memorytextureref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/gdk\/memorytextureref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/gdk\/memorytextureref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/gdk\/memorytextureref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/gdk\/memorytextureref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytextureref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/bind(_:to:property:flags:convertfrom:convertto:)-38a4k","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/bind(_:to:property:flags:convertfrom:convertto:)-bicc","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/connect(signal:flags:data:destroydata:signalhandler:)-3c0nm","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/connect(signal:flags:handler:)-17xer","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytextureref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytextureref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/gdk\/memorytextureref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytextureref\/currentimage","title":"var currentImage: PaintableRef!","type":"property"},{"path":"\/documentation\/gdk\/memorytextureref\/flags","title":"var flags: PaintableFlags","type":"property"},{"path":"\/documentation\/gdk\/memorytextureref\/intrinsicaspectratio","title":"var intrinsicAspectRatio: CDouble","type":"property"},{"path":"\/documentation\/gdk\/memorytextureref\/intrinsicheight","title":"var intrinsicHeight: Int","type":"property"},{"path":"\/documentation\/gdk\/memorytextureref\/intrinsicwidth","title":"var intrinsicWidth: Int","type":"property"},{"path":"\/documentation\/gdk\/memorytextureref\/paintable_ptr","title":"var paintable_ptr: UnsafeMutablePointer<GdkPaintable>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytextureref\/computeconcretesize(specifiedwidth:specifiedheight:defaultwidth:defaultheight:concretewidth:concreteheight:)","title":"func computeConcreteSize(specifiedWidth: CDouble, specifiedHeight: CDouble, defaultWidth: CDouble, defaultHeight: CDouble, concreteWidth: UnsafeMutablePointer<CDouble>!, concreteHeight: UnsafeMutablePointer<CDouble>!)","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/connect(signal:flags:data:destroydata:signalhandler:)-25pbj","title":"func connect(signal: PaintableSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/connect(signal:flags:handler:)-5b30h","title":"func connect(signal: PaintableSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/getcurrentimage()","title":"func getCurrentImage() -> PaintableRef!","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/getflags()","title":"func getFlags() -> PaintableFlags","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/getintrinsicaspectratio()","title":"func getIntrinsicAspectRatio() -> CDouble","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/getintrinsicheight()","title":"func getIntrinsicHeight() -> Int","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/getintrinsicwidth()","title":"func getIntrinsicWidth() -> Int","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/invalidatecontents()","title":"func invalidateContents()","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/invalidatesize()","title":"func invalidateSize()","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/oninvalidatecontents(flags:handler:)","title":"func onInvalidateContents(flags: ConnectFlags, handler: (PaintableRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/oninvalidatesize(flags:handler:)","title":"func onInvalidateSize(flags: ConnectFlags, handler: (PaintableRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/snapshot(snapshot:width:height:)","title":"func snapshot<SnapshotT>(snapshot: SnapshotT, width: CDouble, height: CDouble)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytextureref\/invalidatecontentssignal","title":"static var invalidateContentsSignal: PaintableSignalName","type":"property"},{"path":"\/documentation\/gdk\/memorytextureref\/invalidatesizesignal","title":"static var invalidateSizeSignal: PaintableSignalName","type":"property"}],"path":"\/documentation\/gdk\/memorytextureref\/paintableprotocol-implementations","title":"PaintableProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytextureref\/format","title":"var format: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/memorytextureref\/height","title":"var height: Int","type":"property"},{"path":"\/documentation\/gdk\/memorytextureref\/texture_ptr","title":"var texture_ptr: UnsafeMutablePointer<GdkTexture>!","type":"property"},{"path":"\/documentation\/gdk\/memorytextureref\/width","title":"var width: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytextureref\/bind(property:to:_:flags:transformfrom:transformto:)-7cgy9","title":"func bind<Q, T>(property: TexturePropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/download(data:stride:)","title":"func download(data: UnsafeMutablePointer<guchar>!, stride: Int)","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/getformat()","title":"func getFormat() -> GdkMemoryFormat","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/getheight()","title":"func getHeight() -> Int","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/getwidth()","title":"func getWidth() -> Int","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/pixbufgetfromtexture()","title":"func pixbufGetFromTexture() -> PixbufRef!","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/savetopng(filename:)","title":"func saveToPng(filename: UnsafePointer<CChar>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/savetopngbytes()","title":"func saveToPngBytes() -> BytesRef!","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/savetotiff(filename:)","title":"func saveToTiff(filename: UnsafePointer<CChar>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/memorytextureref\/savetotiffbytes()","title":"func saveToTiffBytes() -> BytesRef!","type":"method"}],"path":"\/documentation\/gdk\/memorytextureref\/textureprotocol-implementations","title":"TextureProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/memorytextureref","title":"MemoryTextureRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/modifiertype\/init(_:)-2d6re","title":"init(GdkModifierType)","type":"init"},{"path":"\/documentation\/gdk\/modifiertype\/init(_:)-4d04s","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/gdk\/modifiertype\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/modifiertype\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/gdk\/modifiertype\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/gdk\/modifiertype\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/gdk\/modifiertype\/value","title":"var value: GdkModifierType","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/modifiertype\/altmask","title":"static let altMask: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/modifiertype\/button1mask","title":"static let button1Mask: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/modifiertype\/button2mask","title":"static let button2Mask: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/modifiertype\/button3mask","title":"static let button3Mask: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/modifiertype\/button4mask","title":"static let button4Mask: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/modifiertype\/button5mask","title":"static let button5Mask: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/modifiertype\/controlmask","title":"static let controlMask: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/modifiertype\/hypermask","title":"static let hyperMask: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/modifiertype\/lockmask","title":"static let lockMask: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/modifiertype\/metamask","title":"static let metaMask: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/modifiertype\/shiftmask","title":"static let shiftMask: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/modifiertype\/supermask","title":"static let superMask: ModifierType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/modifiertype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/modifiertype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/modifiertype\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/modifiertype\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/modifiertype\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/gdk\/modifiertype\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/gdk\/modifiertype\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/gdk\/modifiertype\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/gdk\/modifiertype\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/gdk\/modifiertype\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/gdk\/modifiertype\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/gdk\/modifiertype\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/gdk\/modifiertype\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/gdk\/modifiertype\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/modifiertype\/init(_:)-4z9cz","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/gdk\/modifiertype\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/modifiertype\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/modifiertype\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/modifiertype\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/modifiertype\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/modifiertype\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/modifiertype\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/modifiertype\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/gdk\/modifiertype\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/gdk\/modifiertype\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/modifiertype","title":"ModifierType","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitorclassref\/init(_:)-37ndo","title":"init!(UnsafeMutablePointer<GdkMonitorClass>?)","type":"init"},{"path":"\/documentation\/gdk\/monitorclassref\/init(_:)-3frat","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/monitorclassref\/init(_:)-4t5p7","title":"init(UnsafePointer<GdkMonitorClass>)","type":"init"},{"path":"\/documentation\/gdk\/monitorclassref\/init(_:)-55abk","title":"init(UnsafeMutablePointer<GdkMonitorClass>)","type":"init"},{"path":"\/documentation\/gdk\/monitorclassref\/init(_:)-75ycr","title":"init!(UnsafePointer<GdkMonitorClass>?)","type":"init"},{"path":"\/documentation\/gdk\/monitorclassref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/monitorclassref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/monitorclassref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/monitorclassref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/monitorclassref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/monitorclassref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitorclassref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitorclassref\/metatype","title":"static var metatype: GdkMonitorClass?","type":"property"},{"path":"\/documentation\/gdk\/monitorclassref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/gdk\/monitorclassref\/wrapper","title":"static var wrapper: MonitorClassRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitorclassref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> Monitor!","type":"method"},{"path":"\/documentation\/gdk\/monitorclassref\/newmonitor(properties:nproperties:names:values:)","title":"static func newMonitor(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> Monitor!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitorclassref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/monitorclassref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/monitorclassref","title":"MonitorClassRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitorref\/init(_:)-1b7pg","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/monitorref\/init(_:)-2ytkw","title":"init(UnsafeMutablePointer<GdkMonitor>)","type":"init"},{"path":"\/documentation\/gdk\/monitorref\/init(_:)-5td8a","title":"init!(UnsafePointer<GdkMonitor>?)","type":"init"},{"path":"\/documentation\/gdk\/monitorref\/init(_:)-6pukf","title":"init!(UnsafeMutablePointer<GdkMonitor>?)","type":"init"},{"path":"\/documentation\/gdk\/monitorref\/init(_:)-yn1s","title":"init(UnsafePointer<GdkMonitor>)","type":"init"},{"path":"\/documentation\/gdk\/monitorref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/monitorref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/monitorref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/monitorref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/monitorref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/monitorref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitorref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitorref\/unowned(_:)","title":"static func unowned<T>(T) -> MonitorRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitorref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/monitorref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitorref\/connector","title":"var connector: String!","type":"property"},{"path":"\/documentation\/gdk\/monitorref\/description","title":"var description: String!","type":"property"},{"path":"\/documentation\/gdk\/monitorref\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/monitorref\/heightmm","title":"var heightMm: Int","type":"property"},{"path":"\/documentation\/gdk\/monitorref\/isvalid","title":"var isValid: Bool","type":"property"},{"path":"\/documentation\/gdk\/monitorref\/manufacturer","title":"var manufacturer: String!","type":"property"},{"path":"\/documentation\/gdk\/monitorref\/model","title":"var model: String!","type":"property"},{"path":"\/documentation\/gdk\/monitorref\/monitor_ptr","title":"var monitor_ptr: UnsafeMutablePointer<GdkMonitor>!","type":"property"},{"path":"\/documentation\/gdk\/monitorref\/refreshrate","title":"var refreshRate: Int","type":"property"},{"path":"\/documentation\/gdk\/monitorref\/scalefactor","title":"var scaleFactor: Int","type":"property"},{"path":"\/documentation\/gdk\/monitorref\/subpixellayout","title":"var subpixelLayout: GdkSubpixelLayout","type":"property"},{"path":"\/documentation\/gdk\/monitorref\/widthmm","title":"var widthMm: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitorref\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: MonitorPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: MonitorSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/connect(signal:flags:handler:)","title":"func connect(signal: MonitorSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/get(geometry:)","title":"func get<RectangleT>(geometry: RectangleT)","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/get(property:)","title":"func get(property: MonitorPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/getconnector()","title":"func getConnector() -> String!","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/getdescription()","title":"func getDescription() -> String!","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/getheightmm()","title":"func getHeightMm() -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/getmanufacturer()","title":"func getManufacturer() -> String!","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/getmodel()","title":"func getModel() -> String!","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/getrefreshrate()","title":"func getRefreshRate() -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/getscalefactor()","title":"func getScaleFactor() -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/getsubpixellayout()","title":"func getSubpixelLayout() -> GdkSubpixelLayout","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/getwidthmm()","title":"func getWidthMm() -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/oninvalidate(flags:handler:)","title":"func onInvalidate(flags: ConnectFlags, handler: (MonitorRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/onnotifyconnector(flags:handler:)","title":"func onNotifyConnector(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/onnotifydescription(flags:handler:)","title":"func onNotifyDescription(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/onnotifydisplay(flags:handler:)","title":"func onNotifyDisplay(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/onnotifygeometry(flags:handler:)","title":"func onNotifyGeometry(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/onnotifyheightmm(flags:handler:)","title":"func onNotifyHeightMm(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/onnotifymanufacturer(flags:handler:)","title":"func onNotifyManufacturer(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/onnotifymodel(flags:handler:)","title":"func onNotifyModel(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/onnotifyrefreshrate(flags:handler:)","title":"func onNotifyRefreshRate(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/onnotifyscalefactor(flags:handler:)","title":"func onNotifyScaleFactor(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/onnotifysubpixellayout(flags:handler:)","title":"func onNotifySubpixelLayout(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/onnotifyvalid(flags:handler:)","title":"func onNotifyValid(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/onnotifywidthmm(flags:handler:)","title":"func onNotifyWidthMm(flags: ConnectFlags, handler: (MonitorRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/set(property:value:)","title":"func set(property: MonitorPropertyName, value: Value)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitorref\/invalidatesignal","title":"static var invalidateSignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitorref\/notifyconnectorsignal","title":"static var notifyConnectorSignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitorref\/notifydescriptionsignal","title":"static var notifyDescriptionSignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitorref\/notifydisplaysignal","title":"static var notifyDisplaySignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitorref\/notifygeometrysignal","title":"static var notifyGeometrySignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitorref\/notifyheightmmsignal","title":"static var notifyHeightMmSignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitorref\/notifymanufacturersignal","title":"static var notifyManufacturerSignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitorref\/notifymodelsignal","title":"static var notifyModelSignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitorref\/notifyrefreshratesignal","title":"static var notifyRefreshRateSignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitorref\/notifyscalefactorsignal","title":"static var notifyScaleFactorSignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitorref\/notifysubpixellayoutsignal","title":"static var notifySubpixelLayoutSignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitorref\/notifyvalidsignal","title":"static var notifyValidSignal: MonitorSignalName","type":"property"},{"path":"\/documentation\/gdk\/monitorref\/notifywidthmmsignal","title":"static var notifyWidthMmSignal: MonitorSignalName","type":"property"}],"path":"\/documentation\/gdk\/monitorref\/monitorprotocol-implementations","title":"MonitorProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitorref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/gdk\/monitorref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/gdk\/monitorref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/gdk\/monitorref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/gdk\/monitorref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/gdk\/monitorref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitorref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/bind(_:to:property:flags:convertfrom:convertto:)-4cubn","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/bind(_:to:property:flags:convertfrom:convertto:)-94z5l","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitorref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitorref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/gdk\/monitorref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/gdk\/monitorref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/monitorref","title":"MonitorRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/motioneventref\/init(_:)-4unzv","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/motioneventref\/init(_:)-71wtr","title":"init!(UnsafeMutablePointer<GdkMotionEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/motioneventref\/init(_:)-8g3z9","title":"init(UnsafeMutablePointer<GdkMotionEvent>)","type":"init"},{"path":"\/documentation\/gdk\/motioneventref\/init(_:)-gae2","title":"init!(UnsafePointer<GdkMotionEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/motioneventref\/init(_:)-peyq","title":"init(UnsafePointer<GdkMotionEvent>)","type":"init"},{"path":"\/documentation\/gdk\/motioneventref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/motioneventref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/motioneventref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/motioneventref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/motioneventref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/motioneventref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/motioneventref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/motioneventref\/device","title":"var device: DeviceRef!","type":"property"},{"path":"\/documentation\/gdk\/motioneventref\/devicetool","title":"var deviceTool: DeviceToolRef!","type":"property"},{"path":"\/documentation\/gdk\/motioneventref\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/motioneventref\/eventsequence","title":"var eventSequence: EventSequenceRef!","type":"property"},{"path":"\/documentation\/gdk\/motioneventref\/eventtype","title":"var eventType: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/motioneventref\/event_ptr","title":"var event_ptr: UnsafeMutablePointer<GdkEvent>!","type":"property"},{"path":"\/documentation\/gdk\/motioneventref\/modifierstate","title":"var modifierState: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/motioneventref\/pointeremulated","title":"var pointerEmulated: Bool","type":"property"},{"path":"\/documentation\/gdk\/motioneventref\/seat","title":"var seat: SeatRef!","type":"property"},{"path":"\/documentation\/gdk\/motioneventref\/surface","title":"var surface: SurfaceRef!","type":"property"},{"path":"\/documentation\/gdk\/motioneventref\/time","title":"var time: guint32","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/motioneventref\/getangle(event2:angle:)","title":"func GetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/motioneventref\/getcenter(event2:x:y:)","title":"func GetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/motioneventref\/getdistance(event2:distance:)","title":"func GetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/motioneventref\/eventsgetangle(event2:angle:)","title":"func eventsGetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/motioneventref\/eventsgetcenter(event2:x:y:)","title":"func eventsGetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/motioneventref\/eventsgetdistance(event2:distance:)","title":"func eventsGetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/motioneventref\/get(axes:naxes:)","title":"func get(axes: UnsafeMutablePointer<UnsafeMutablePointer<CDouble>?>!, nAxes: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/motioneventref\/getaxis(axisuse:value:)","title":"func getAxis(axisUse: GdkAxisUse, value: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/motioneventref\/getdevice()","title":"func getDevice() -> DeviceRef!","type":"method"},{"path":"\/documentation\/gdk\/motioneventref\/getdevicetool()","title":"func getDeviceTool() -> DeviceToolRef!","type":"method"},{"path":"\/documentation\/gdk\/motioneventref\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/motioneventref\/geteventsequence()","title":"func getEventSequence() -> EventSequenceRef!","type":"method"},{"path":"\/documentation\/gdk\/motioneventref\/geteventtype()","title":"func getEventType() -> GdkEventType","type":"method"},{"path":"\/documentation\/gdk\/motioneventref\/gethistory(outncoords:)","title":"func getHistory(outNCoords: UnsafeMutablePointer<guint>!) -> UnsafeMutablePointer<GdkTimeCoord>!","type":"method"},{"path":"\/documentation\/gdk\/motioneventref\/getmodifierstate()","title":"func getModifierState() -> ModifierType","type":"method"},{"path":"\/documentation\/gdk\/motioneventref\/getpointeremulated()","title":"func getPointerEmulated() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/motioneventref\/getposition(x:y:)","title":"func getPosition(x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/motioneventref\/getseat()","title":"func getSeat() -> SeatRef!","type":"method"},{"path":"\/documentation\/gdk\/motioneventref\/getsurface()","title":"func getSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/motioneventref\/gettime()","title":"func getTime() -> guint32","type":"method"},{"path":"\/documentation\/gdk\/motioneventref\/ref()","title":"func ref() -> EventRef!","type":"method"},{"path":"\/documentation\/gdk\/motioneventref\/triggerscontextmenu()","title":"func triggersContextMenu() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/motioneventref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/gdk\/motioneventref\/eventprotocol-implementations","title":"EventProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/motioneventref\/motion_event_ptr","title":"var motion_event_ptr: UnsafeMutablePointer<GdkMotionEvent>!","type":"property"}],"path":"\/documentation\/gdk\/motioneventref\/motioneventprotocol-implementations","title":"MotionEventProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/motioneventref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/motioneventref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/motioneventref","title":"MotionEventRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/padeventref\/init(_:)-3br7m","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/padeventref\/init(_:)-3ekni","title":"init!(UnsafeMutablePointer<GdkPadEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/padeventref\/init(_:)-4gtej","title":"init!(UnsafePointer<GdkPadEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/padeventref\/init(_:)-4wytd","title":"init(UnsafeMutablePointer<GdkPadEvent>)","type":"init"},{"path":"\/documentation\/gdk\/padeventref\/init(_:)-7ad4s","title":"init(UnsafePointer<GdkPadEvent>)","type":"init"},{"path":"\/documentation\/gdk\/padeventref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/padeventref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/padeventref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/padeventref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/padeventref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/padeventref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/padeventref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/padeventref\/device","title":"var device: DeviceRef!","type":"property"},{"path":"\/documentation\/gdk\/padeventref\/devicetool","title":"var deviceTool: DeviceToolRef!","type":"property"},{"path":"\/documentation\/gdk\/padeventref\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/padeventref\/eventsequence","title":"var eventSequence: EventSequenceRef!","type":"property"},{"path":"\/documentation\/gdk\/padeventref\/eventtype","title":"var eventType: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/padeventref\/event_ptr","title":"var event_ptr: UnsafeMutablePointer<GdkEvent>!","type":"property"},{"path":"\/documentation\/gdk\/padeventref\/modifierstate","title":"var modifierState: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/padeventref\/pointeremulated","title":"var pointerEmulated: Bool","type":"property"},{"path":"\/documentation\/gdk\/padeventref\/seat","title":"var seat: SeatRef!","type":"property"},{"path":"\/documentation\/gdk\/padeventref\/surface","title":"var surface: SurfaceRef!","type":"property"},{"path":"\/documentation\/gdk\/padeventref\/time","title":"var time: guint32","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/padeventref\/getangle(event2:angle:)","title":"func GetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/padeventref\/getcenter(event2:x:y:)","title":"func GetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/padeventref\/getdistance(event2:distance:)","title":"func GetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/padeventref\/eventsgetangle(event2:angle:)","title":"func eventsGetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/padeventref\/eventsgetcenter(event2:x:y:)","title":"func eventsGetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/padeventref\/eventsgetdistance(event2:distance:)","title":"func eventsGetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/padeventref\/get(axes:naxes:)","title":"func get(axes: UnsafeMutablePointer<UnsafeMutablePointer<CDouble>?>!, nAxes: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/padeventref\/getaxis(axisuse:value:)","title":"func getAxis(axisUse: GdkAxisUse, value: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/padeventref\/getdevice()","title":"func getDevice() -> DeviceRef!","type":"method"},{"path":"\/documentation\/gdk\/padeventref\/getdevicetool()","title":"func getDeviceTool() -> DeviceToolRef!","type":"method"},{"path":"\/documentation\/gdk\/padeventref\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/padeventref\/geteventsequence()","title":"func getEventSequence() -> EventSequenceRef!","type":"method"},{"path":"\/documentation\/gdk\/padeventref\/geteventtype()","title":"func getEventType() -> GdkEventType","type":"method"},{"path":"\/documentation\/gdk\/padeventref\/gethistory(outncoords:)","title":"func getHistory(outNCoords: UnsafeMutablePointer<guint>!) -> UnsafeMutablePointer<GdkTimeCoord>!","type":"method"},{"path":"\/documentation\/gdk\/padeventref\/getmodifierstate()","title":"func getModifierState() -> ModifierType","type":"method"},{"path":"\/documentation\/gdk\/padeventref\/getpointeremulated()","title":"func getPointerEmulated() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/padeventref\/getposition(x:y:)","title":"func getPosition(x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/padeventref\/getseat()","title":"func getSeat() -> SeatRef!","type":"method"},{"path":"\/documentation\/gdk\/padeventref\/getsurface()","title":"func getSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/padeventref\/gettime()","title":"func getTime() -> guint32","type":"method"},{"path":"\/documentation\/gdk\/padeventref\/ref()","title":"func ref() -> EventRef!","type":"method"},{"path":"\/documentation\/gdk\/padeventref\/triggerscontextmenu()","title":"func triggersContextMenu() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/padeventref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/gdk\/padeventref\/eventprotocol-implementations","title":"EventProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/padeventref\/button","title":"var button: Int","type":"property"},{"path":"\/documentation\/gdk\/padeventref\/pad_event_ptr","title":"var pad_event_ptr: UnsafeMutablePointer<GdkPadEvent>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/padeventref\/getaxisvalue(index:value:)","title":"func getAxisValue(index: UnsafeMutablePointer<guint>!, value: UnsafeMutablePointer<CDouble>!)","type":"method"},{"path":"\/documentation\/gdk\/padeventref\/getbutton()","title":"func getButton() -> Int","type":"method"},{"path":"\/documentation\/gdk\/padeventref\/getgroupmode(group:mode:)","title":"func getGroupMode(group: UnsafeMutablePointer<guint>!, mode: UnsafeMutablePointer<guint>!)","type":"method"}],"path":"\/documentation\/gdk\/padeventref\/padeventprotocol-implementations","title":"PadEventProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/padeventref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/padeventref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/padeventref","title":"PadEventRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintableflags\/init(_:)-17blz","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/gdk\/paintableflags\/init(_:)-4psq3","title":"init(GdkPaintableFlags)","type":"init"},{"path":"\/documentation\/gdk\/paintableflags\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintableflags\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/gdk\/paintableflags\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/gdk\/paintableflags\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/gdk\/paintableflags\/value","title":"var value: GdkPaintableFlags","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintableflags\/contents","title":"static let contents: PaintableFlags","type":"property"},{"path":"\/documentation\/gdk\/paintableflags\/size","title":"static let size: PaintableFlags","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintableflags\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/paintableflags\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintableflags\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintableflags\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/paintableflags\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/gdk\/paintableflags\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/gdk\/paintableflags\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/gdk\/paintableflags\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/gdk\/paintableflags\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/gdk\/paintableflags\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/gdk\/paintableflags\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/gdk\/paintableflags\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/gdk\/paintableflags\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/gdk\/paintableflags\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintableflags\/init(_:)-7glih","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/gdk\/paintableflags\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintableflags\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintableflags\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/paintableflags\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/paintableflags\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/paintableflags\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/paintableflags\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/paintableflags\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/gdk\/paintableflags\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/gdk\/paintableflags\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/paintableflags","title":"PaintableFlags","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintableinterfaceref\/init(_:)-1605j","title":"init(UnsafeMutablePointer<GdkPaintableInterface>)","type":"init"},{"path":"\/documentation\/gdk\/paintableinterfaceref\/init(_:)-3sh0f","title":"init(UnsafePointer<GdkPaintableInterface>)","type":"init"},{"path":"\/documentation\/gdk\/paintableinterfaceref\/init(_:)-53ipr","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/paintableinterfaceref\/init(_:)-5h28x","title":"init!(UnsafeMutablePointer<GdkPaintableInterface>?)","type":"init"},{"path":"\/documentation\/gdk\/paintableinterfaceref\/init(_:)-73hea","title":"init!(UnsafePointer<GdkPaintableInterface>?)","type":"init"},{"path":"\/documentation\/gdk\/paintableinterfaceref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/paintableinterfaceref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/paintableinterfaceref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/paintableinterfaceref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/paintableinterfaceref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/paintableinterfaceref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintableinterfaceref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintableinterfaceref\/metatype","title":"static var metatype: GdkPaintableInterface?","type":"property"},{"path":"\/documentation\/gdk\/paintableinterfaceref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/gdk\/paintableinterfaceref\/wrapper","title":"static var wrapper: PaintableInterfaceRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintableinterfaceref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> Paintable!","type":"method"},{"path":"\/documentation\/gdk\/paintableinterfaceref\/newpaintable(properties:nproperties:names:values:)","title":"static func newPaintable(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> Paintable!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintableinterfaceref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/paintableinterfaceref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/paintableinterfaceref","title":"PaintableInterfaceRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintableref\/init(_:)-2mt8x","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/paintableref\/init(_:)-62l0t","title":"init(UnsafePointer<GdkPaintable>)","type":"init"},{"path":"\/documentation\/gdk\/paintableref\/init(_:)-96fcn","title":"init!(UnsafeMutablePointer<GdkPaintable>?)","type":"init"},{"path":"\/documentation\/gdk\/paintableref\/init(_:)-9s4rr","title":"init(UnsafeMutablePointer<GdkPaintable>)","type":"init"},{"path":"\/documentation\/gdk\/paintableref\/init(_:)-wph0","title":"init!(UnsafePointer<GdkPaintable>?)","type":"init"},{"path":"\/documentation\/gdk\/paintableref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/paintableref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/paintableref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/paintableref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/paintableref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/paintableref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintableref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintableref\/new(empty:intrinsicheight:)","title":"static func new(empty: Int, intrinsicHeight: Int) -> PaintableRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintableref\/currentimage","title":"var currentImage: PaintableRef!","type":"property"},{"path":"\/documentation\/gdk\/paintableref\/flags","title":"var flags: PaintableFlags","type":"property"},{"path":"\/documentation\/gdk\/paintableref\/intrinsicaspectratio","title":"var intrinsicAspectRatio: CDouble","type":"property"},{"path":"\/documentation\/gdk\/paintableref\/intrinsicheight","title":"var intrinsicHeight: Int","type":"property"},{"path":"\/documentation\/gdk\/paintableref\/intrinsicwidth","title":"var intrinsicWidth: Int","type":"property"},{"path":"\/documentation\/gdk\/paintableref\/paintable_ptr","title":"var paintable_ptr: UnsafeMutablePointer<GdkPaintable>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintableref\/computeconcretesize(specifiedwidth:specifiedheight:defaultwidth:defaultheight:concretewidth:concreteheight:)","title":"func computeConcreteSize(specifiedWidth: CDouble, specifiedHeight: CDouble, defaultWidth: CDouble, defaultHeight: CDouble, concreteWidth: UnsafeMutablePointer<CDouble>!, concreteHeight: UnsafeMutablePointer<CDouble>!)","type":"method"},{"path":"\/documentation\/gdk\/paintableref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: PaintableSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/paintableref\/connect(signal:flags:handler:)","title":"func connect(signal: PaintableSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/paintableref\/getcurrentimage()","title":"func getCurrentImage() -> PaintableRef!","type":"method"},{"path":"\/documentation\/gdk\/paintableref\/getflags()","title":"func getFlags() -> PaintableFlags","type":"method"},{"path":"\/documentation\/gdk\/paintableref\/getintrinsicaspectratio()","title":"func getIntrinsicAspectRatio() -> CDouble","type":"method"},{"path":"\/documentation\/gdk\/paintableref\/getintrinsicheight()","title":"func getIntrinsicHeight() -> Int","type":"method"},{"path":"\/documentation\/gdk\/paintableref\/getintrinsicwidth()","title":"func getIntrinsicWidth() -> Int","type":"method"},{"path":"\/documentation\/gdk\/paintableref\/invalidatecontents()","title":"func invalidateContents()","type":"method"},{"path":"\/documentation\/gdk\/paintableref\/invalidatesize()","title":"func invalidateSize()","type":"method"},{"path":"\/documentation\/gdk\/paintableref\/oninvalidatecontents(flags:handler:)","title":"func onInvalidateContents(flags: ConnectFlags, handler: (PaintableRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/paintableref\/oninvalidatesize(flags:handler:)","title":"func onInvalidateSize(flags: ConnectFlags, handler: (PaintableRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/paintableref\/snapshot(snapshot:width:height:)","title":"func snapshot<SnapshotT>(snapshot: SnapshotT, width: CDouble, height: CDouble)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintableref\/invalidatecontentssignal","title":"static var invalidateContentsSignal: PaintableSignalName","type":"property"},{"path":"\/documentation\/gdk\/paintableref\/invalidatesizesignal","title":"static var invalidateSizeSignal: PaintableSignalName","type":"property"}],"path":"\/documentation\/gdk\/paintableref\/paintableprotocol-implementations","title":"PaintableProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintableref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/paintableref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/paintableref","title":"PaintableRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/popupinterfaceref\/init(_:)-1pndu","title":"init!(UnsafePointer<GdkPopupInterface>?)","type":"init"},{"path":"\/documentation\/gdk\/popupinterfaceref\/init(_:)-1zyhr","title":"init!(UnsafeMutablePointer<GdkPopupInterface>?)","type":"init"},{"path":"\/documentation\/gdk\/popupinterfaceref\/init(_:)-4pa7x","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/popupinterfaceref\/init(_:)-7uh3e","title":"init(UnsafeMutablePointer<GdkPopupInterface>)","type":"init"},{"path":"\/documentation\/gdk\/popupinterfaceref\/init(_:)-l1ag","title":"init(UnsafePointer<GdkPopupInterface>)","type":"init"},{"path":"\/documentation\/gdk\/popupinterfaceref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/popupinterfaceref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/popupinterfaceref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/popupinterfaceref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/popupinterfaceref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/popupinterfaceref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/popupinterfaceref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/popupinterfaceref\/metatype","title":"static var metatype: GdkPopupInterface?","type":"property"},{"path":"\/documentation\/gdk\/popupinterfaceref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/gdk\/popupinterfaceref\/wrapper","title":"static var wrapper: PopupInterfaceRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/popupinterfaceref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> Popup!","type":"method"},{"path":"\/documentation\/gdk\/popupinterfaceref\/newpopup(properties:nproperties:names:values:)","title":"static func newPopup(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> Popup!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/popupinterfaceref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/popupinterfaceref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/popupinterfaceref","title":"PopupInterfaceRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/popuplayoutref\/init(_:)-31fey","title":"init(UnsafeMutablePointer<GdkPopupLayout>)","type":"init"},{"path":"\/documentation\/gdk\/popuplayoutref\/init(_:)-5dqwa","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/popuplayoutref\/init(_:)-86keg","title":"init(UnsafePointer<GdkPopupLayout>)","type":"init"},{"path":"\/documentation\/gdk\/popuplayoutref\/init(_:)-9121o","title":"init!(UnsafeMutablePointer<GdkPopupLayout>?)","type":"init"},{"path":"\/documentation\/gdk\/popuplayoutref\/init(_:)-rtoj","title":"init!(UnsafePointer<GdkPopupLayout>?)","type":"init"},{"path":"\/documentation\/gdk\/popuplayoutref\/init(anchorrect:rectanchor:surfaceanchor:)","title":"init<RectangleT>(anchorRect: RectangleT, rectAnchor: GdkGravity, surfaceAnchor: GdkGravity)","type":"init"},{"path":"\/documentation\/gdk\/popuplayoutref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/popuplayoutref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/popuplayoutref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/popuplayoutref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/popuplayoutref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/popuplayoutref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/popuplayoutref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/popuplayoutref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/popuplayoutref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/popuplayoutref\/anchorhints","title":"var anchorHints: AnchorHints","type":"property"},{"path":"\/documentation\/gdk\/popuplayoutref\/anchorrect","title":"var anchorRect: RectangleRef!","type":"property"},{"path":"\/documentation\/gdk\/popuplayoutref\/popup_layout_ptr","title":"var popup_layout_ptr: UnsafeMutablePointer<GdkPopupLayout>!","type":"property"},{"path":"\/documentation\/gdk\/popuplayoutref\/rectanchor","title":"var rectAnchor: GdkGravity","type":"property"},{"path":"\/documentation\/gdk\/popuplayoutref\/surfaceanchor","title":"var surfaceAnchor: GdkGravity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/popuplayoutref\/copy()","title":"func copy() -> PopupLayoutRef!","type":"method"},{"path":"\/documentation\/gdk\/popuplayoutref\/equal(other:)","title":"func equal<PopupLayoutT>(other: PopupLayoutT) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/popuplayoutref\/getanchorhints()","title":"func getAnchorHints() -> AnchorHints","type":"method"},{"path":"\/documentation\/gdk\/popuplayoutref\/getanchorrect()","title":"func getAnchorRect() -> RectangleRef!","type":"method"},{"path":"\/documentation\/gdk\/popuplayoutref\/getoffset(dx:dy:)","title":"func getOffset(dx: UnsafeMutablePointer<gint>!, dy: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/gdk\/popuplayoutref\/getrectanchor()","title":"func getRectAnchor() -> GdkGravity","type":"method"},{"path":"\/documentation\/gdk\/popuplayoutref\/getshadowwidth(left:right:top:bottom:)","title":"func getShadowWidth(left: UnsafeMutablePointer<gint>!, right: UnsafeMutablePointer<gint>!, top: UnsafeMutablePointer<gint>!, bottom: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/gdk\/popuplayoutref\/getsurfaceanchor()","title":"func getSurfaceAnchor() -> GdkGravity","type":"method"},{"path":"\/documentation\/gdk\/popuplayoutref\/ref()","title":"func ref() -> PopupLayoutRef!","type":"method"},{"path":"\/documentation\/gdk\/popuplayoutref\/set(anchorhints:)","title":"func set(anchorHints: AnchorHints)","type":"method"},{"path":"\/documentation\/gdk\/popuplayoutref\/set(anchorrect:)","title":"func set<RectangleT>(anchorRect: RectangleT)","type":"method"},{"path":"\/documentation\/gdk\/popuplayoutref\/setoffset(dx:dy:)","title":"func setOffset(dx: Int, dy: Int)","type":"method"},{"path":"\/documentation\/gdk\/popuplayoutref\/setrect(anchor:)","title":"func setRect(anchor: GdkGravity)","type":"method"},{"path":"\/documentation\/gdk\/popuplayoutref\/setshadowwidth(left:right:top:bottom:)","title":"func setShadowWidth(left: Int, right: Int, top: Int, bottom: Int)","type":"method"},{"path":"\/documentation\/gdk\/popuplayoutref\/setsurface(anchor:)","title":"func setSurface(anchor: GdkGravity)","type":"method"},{"path":"\/documentation\/gdk\/popuplayoutref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/gdk\/popuplayoutref\/popuplayoutprotocol-implementations","title":"PopupLayoutProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/popuplayoutref","title":"PopupLayoutRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/popupref\/init(_:)-35pa","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/popupref\/init(_:)-58qxw","title":"init(UnsafeMutablePointer<GdkPopup>)","type":"init"},{"path":"\/documentation\/gdk\/popupref\/init(_:)-5g6um","title":"init!(UnsafePointer<GdkPopup>?)","type":"init"},{"path":"\/documentation\/gdk\/popupref\/init(_:)-6ugjj","title":"init!(UnsafeMutablePointer<GdkPopup>?)","type":"init"},{"path":"\/documentation\/gdk\/popupref\/init(_:)-78wp7","title":"init(UnsafePointer<GdkPopup>)","type":"init"},{"path":"\/documentation\/gdk\/popupref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/popupref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/popupref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/popupref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/popupref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/popupref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/popupref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/popupref\/unowned(_:)","title":"static func unowned<T>(T) -> PopupRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/popupref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/popupref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/popupref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/gdk\/popupref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/gdk\/popupref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/gdk\/popupref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/gdk\/popupref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/gdk\/popupref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/popupref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/gdk\/popupref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/popupref\/bind(_:to:property:flags:convertfrom:convertto:)-557up","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/popupref\/bind(_:to:property:flags:convertfrom:convertto:)-5m3vb","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/popupref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/popupref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/popupref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/popupref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/popupref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/popupref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/popupref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/popupref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/popupref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/popupref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/popupref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/gdk\/popupref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/gdk\/popupref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/gdk\/popupref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/popupref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/popupref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/popupref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/popupref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/popupref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/popupref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/gdk\/popupref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/gdk\/popupref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/popupref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/gdk\/popupref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/popupref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/popupref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/popupref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/popupref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/gdk\/popupref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/gdk\/popupref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/popupref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/popupref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/gdk\/popupref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/gdk\/popupref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/gdk\/popupref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/popupref\/autohide","title":"var autohide: Bool","type":"property"},{"path":"\/documentation\/gdk\/popupref\/parent","title":"var parent: SurfaceRef!","type":"property"},{"path":"\/documentation\/gdk\/popupref\/popup_ptr","title":"var popup_ptr: UnsafeMutablePointer<GdkPopup>!","type":"property"},{"path":"\/documentation\/gdk\/popupref\/positionx","title":"var positionX: Int","type":"property"},{"path":"\/documentation\/gdk\/popupref\/positiony","title":"var positionY: Int","type":"property"},{"path":"\/documentation\/gdk\/popupref\/rectanchor","title":"var rectAnchor: GdkGravity","type":"property"},{"path":"\/documentation\/gdk\/popupref\/surfaceanchor","title":"var surfaceAnchor: GdkGravity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/popupref\/bind(property:to:_:flags:transformfrom:transformto:)-6ljp","title":"func bind<Q, T>(property: PopupPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/popupref\/get(property:)","title":"func get(property: PopupPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/popupref\/getautohide()","title":"func getAutohide() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/popupref\/getparent()","title":"func getParent() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/popupref\/getpositionx()","title":"func getPositionX() -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupref\/getpositiony()","title":"func getPositionY() -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupref\/getrectanchor()","title":"func getRectAnchor() -> GdkGravity","type":"method"},{"path":"\/documentation\/gdk\/popupref\/getsurfaceanchor()","title":"func getSurfaceAnchor() -> GdkGravity","type":"method"},{"path":"\/documentation\/gdk\/popupref\/present(width:height:layout:)","title":"func present<PopupLayoutT>(width: Int, height: Int, layout: PopupLayoutT) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/popupref\/set(property:value:)","title":"func set(property: PopupPropertyName, value: Value)","type":"method"}],"path":"\/documentation\/gdk\/popupref\/popupprotocol-implementations","title":"PopupProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/popupref\/cursor","title":"var cursor: CursorRef!","type":"property"},{"path":"\/documentation\/gdk\/popupref\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/popupref\/frameclock","title":"var frameClock: FrameClockRef!","type":"property"},{"path":"\/documentation\/gdk\/popupref\/height","title":"var height: Int","type":"property"},{"path":"\/documentation\/gdk\/popupref\/isdestroyed","title":"var isDestroyed: Bool","type":"property"},{"path":"\/documentation\/gdk\/popupref\/mapped","title":"var mapped: Bool","type":"property"},{"path":"\/documentation\/gdk\/popupref\/scale","title":"var scale: CDouble","type":"property"},{"path":"\/documentation\/gdk\/popupref\/scalefactor","title":"var scaleFactor: Int","type":"property"},{"path":"\/documentation\/gdk\/popupref\/surface_ptr","title":"var surface_ptr: UnsafeMutablePointer<GdkSurface>!","type":"property"},{"path":"\/documentation\/gdk\/popupref\/width","title":"var width: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/popupref\/beep()","title":"func beep()","type":"method"},{"path":"\/documentation\/gdk\/popupref\/bind(property:to:_:flags:transformfrom:transformto:)-3jk6r","title":"func bind<Q, T>(property: SurfacePropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/popupref\/cairodrawfromgl(cr:source:sourcetype:bufferscale:x:y:width:height:)","title":"func cairoDrawFromGl<CairoContextT>(cr: CairoContextT, source: Int, sourceType: Int, bufferScale: Int, x: Int, y: Int, width: Int, height: Int)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: SurfaceSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupref\/connect(signal:flags:handler:)","title":"func connect(signal: SurfaceSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupref\/createcairocontext()","title":"func createCairoContext() -> CairoContextRef!","type":"method"},{"path":"\/documentation\/gdk\/popupref\/createglcontext()","title":"func createGlContext() throws -> GLContextRef!","type":"method"},{"path":"\/documentation\/gdk\/popupref\/createsimilarsurface(content:width:height:)","title":"func createSimilarSurface(content: cairo_content_t, width: Int, height: Int) -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/popupref\/createvulkancontext()","title":"func createVulkanContext() throws -> VulkanContextRef!","type":"method"},{"path":"\/documentation\/gdk\/popupref\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/gdk\/popupref\/getcursor()","title":"func getCursor() -> CursorRef!","type":"method"},{"path":"\/documentation\/gdk\/popupref\/getdevicecursor(device:)","title":"func getDeviceCursor<DeviceT>(device: DeviceT) -> CursorRef!","type":"method"},{"path":"\/documentation\/gdk\/popupref\/getdeviceposition(device:x:y:mask:)","title":"func getDevicePosition<DeviceT>(device: DeviceT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!, mask: UnsafeMutablePointer<GdkModifierType>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/popupref\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/popupref\/getframeclock()","title":"func getFrameClock() -> FrameClockRef!","type":"method"},{"path":"\/documentation\/gdk\/popupref\/getheight()","title":"func getHeight() -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupref\/getmapped()","title":"func getMapped() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/popupref\/getscale()","title":"func getScale() -> CDouble","type":"method"},{"path":"\/documentation\/gdk\/popupref\/getscalefactor()","title":"func getScaleFactor() -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupref\/getwidth()","title":"func getWidth() -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupref\/hide()","title":"func hide()","type":"method"},{"path":"\/documentation\/gdk\/popupref\/onentermonitor(flags:handler:)","title":"func onEnterMonitor(flags: ConnectFlags, handler: (SurfaceRef, MonitorRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupref\/onevent(flags:handler:)","title":"func onEvent(flags: ConnectFlags, handler: (SurfaceRef, EventRef) -> Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupref\/onlayout(flags:handler:)","title":"func onLayout(flags: ConnectFlags, handler: (SurfaceRef, Int, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupref\/onleavemonitor(flags:handler:)","title":"func onLeaveMonitor(flags: ConnectFlags, handler: (SurfaceRef, MonitorRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupref\/onnotifycursor(flags:handler:)","title":"func onNotifyCursor(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupref\/onnotifydisplay(flags:handler:)","title":"func onNotifyDisplay(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupref\/onnotifyframeclock(flags:handler:)","title":"func onNotifyFrameClock(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupref\/onnotifyheight(flags:handler:)","title":"func onNotifyHeight(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupref\/onnotifymapped(flags:handler:)","title":"func onNotifyMapped(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupref\/onnotifyscale(flags:handler:)","title":"func onNotifyScale(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupref\/onnotifyscalefactor(flags:handler:)","title":"func onNotifyScaleFactor(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupref\/onnotifywidth(flags:handler:)","title":"func onNotifyWidth(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupref\/onrender(flags:handler:)","title":"func onRender(flags: ConnectFlags, handler: (SurfaceRef, RegionRef) -> Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/popupref\/queuerender()","title":"func queueRender()","type":"method"},{"path":"\/documentation\/gdk\/popupref\/requestlayout()","title":"func requestLayout()","type":"method"},{"path":"\/documentation\/gdk\/popupref\/set(cursor:)","title":"func set(cursor: CursorRef?)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/setdevicecursor(device:cursor:)","title":"func setDeviceCursor<CursorT, DeviceT>(device: DeviceT, cursor: CursorT)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/setinput(region:)","title":"func setInput<cairoRegionT>(region: cairoRegionT)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/setopaque(region:)","title":"func setOpaque(region: RegionRef?)","type":"method"},{"path":"\/documentation\/gdk\/popupref\/translatecoordinates(to:x:y:)","title":"func translateCoordinates<SurfaceT>(to: SurfaceT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/popupref\/entermonitorsignal","title":"static var enterMonitorSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/popupref\/eventsignal","title":"static var eventSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/popupref\/layoutsignal","title":"static var layoutSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/popupref\/leavemonitorsignal","title":"static var leaveMonitorSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/popupref\/notifycursorsignal","title":"static var notifyCursorSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/popupref\/notifydisplaysignal","title":"static var notifyDisplaySignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/popupref\/notifyframeclocksignal","title":"static var notifyFrameClockSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/popupref\/notifyheightsignal","title":"static var notifyHeightSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/popupref\/notifymappedsignal","title":"static var notifyMappedSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/popupref\/notifyscalefactorsignal","title":"static var notifyScaleFactorSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/popupref\/notifyscalesignal","title":"static var notifyScaleSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/popupref\/notifywidthsignal","title":"static var notifyWidthSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/popupref\/rendersignal","title":"static var renderSignal: SurfaceSignalName","type":"property"}],"path":"\/documentation\/gdk\/popupref\/surfaceprotocol-implementations","title":"SurfaceProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/popupref","title":"PopupRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/proximityeventref\/init(_:)-1hn8b","title":"init!(UnsafeMutablePointer<GdkProximityEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/proximityeventref\/init(_:)-4pb96","title":"init!(UnsafePointer<GdkProximityEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/proximityeventref\/init(_:)-8hcrb","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/proximityeventref\/init(_:)-8s30h","title":"init(UnsafeMutablePointer<GdkProximityEvent>)","type":"init"},{"path":"\/documentation\/gdk\/proximityeventref\/init(_:)-9aq4y","title":"init(UnsafePointer<GdkProximityEvent>)","type":"init"},{"path":"\/documentation\/gdk\/proximityeventref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/proximityeventref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/proximityeventref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/proximityeventref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/proximityeventref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/proximityeventref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/proximityeventref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/proximityeventref\/device","title":"var device: DeviceRef!","type":"property"},{"path":"\/documentation\/gdk\/proximityeventref\/devicetool","title":"var deviceTool: DeviceToolRef!","type":"property"},{"path":"\/documentation\/gdk\/proximityeventref\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/proximityeventref\/eventsequence","title":"var eventSequence: EventSequenceRef!","type":"property"},{"path":"\/documentation\/gdk\/proximityeventref\/eventtype","title":"var eventType: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/proximityeventref\/event_ptr","title":"var event_ptr: UnsafeMutablePointer<GdkEvent>!","type":"property"},{"path":"\/documentation\/gdk\/proximityeventref\/modifierstate","title":"var modifierState: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/proximityeventref\/pointeremulated","title":"var pointerEmulated: Bool","type":"property"},{"path":"\/documentation\/gdk\/proximityeventref\/seat","title":"var seat: SeatRef!","type":"property"},{"path":"\/documentation\/gdk\/proximityeventref\/surface","title":"var surface: SurfaceRef!","type":"property"},{"path":"\/documentation\/gdk\/proximityeventref\/time","title":"var time: guint32","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/proximityeventref\/getangle(event2:angle:)","title":"func GetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/proximityeventref\/getcenter(event2:x:y:)","title":"func GetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/proximityeventref\/getdistance(event2:distance:)","title":"func GetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/proximityeventref\/eventsgetangle(event2:angle:)","title":"func eventsGetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/proximityeventref\/eventsgetcenter(event2:x:y:)","title":"func eventsGetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/proximityeventref\/eventsgetdistance(event2:distance:)","title":"func eventsGetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/proximityeventref\/get(axes:naxes:)","title":"func get(axes: UnsafeMutablePointer<UnsafeMutablePointer<CDouble>?>!, nAxes: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/proximityeventref\/getaxis(axisuse:value:)","title":"func getAxis(axisUse: GdkAxisUse, value: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/proximityeventref\/getdevice()","title":"func getDevice() -> DeviceRef!","type":"method"},{"path":"\/documentation\/gdk\/proximityeventref\/getdevicetool()","title":"func getDeviceTool() -> DeviceToolRef!","type":"method"},{"path":"\/documentation\/gdk\/proximityeventref\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/proximityeventref\/geteventsequence()","title":"func getEventSequence() -> EventSequenceRef!","type":"method"},{"path":"\/documentation\/gdk\/proximityeventref\/geteventtype()","title":"func getEventType() -> GdkEventType","type":"method"},{"path":"\/documentation\/gdk\/proximityeventref\/gethistory(outncoords:)","title":"func getHistory(outNCoords: UnsafeMutablePointer<guint>!) -> UnsafeMutablePointer<GdkTimeCoord>!","type":"method"},{"path":"\/documentation\/gdk\/proximityeventref\/getmodifierstate()","title":"func getModifierState() -> ModifierType","type":"method"},{"path":"\/documentation\/gdk\/proximityeventref\/getpointeremulated()","title":"func getPointerEmulated() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/proximityeventref\/getposition(x:y:)","title":"func getPosition(x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/proximityeventref\/getseat()","title":"func getSeat() -> SeatRef!","type":"method"},{"path":"\/documentation\/gdk\/proximityeventref\/getsurface()","title":"func getSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/proximityeventref\/gettime()","title":"func getTime() -> guint32","type":"method"},{"path":"\/documentation\/gdk\/proximityeventref\/ref()","title":"func ref() -> EventRef!","type":"method"},{"path":"\/documentation\/gdk\/proximityeventref\/triggerscontextmenu()","title":"func triggersContextMenu() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/proximityeventref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/gdk\/proximityeventref\/eventprotocol-implementations","title":"EventProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/proximityeventref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/proximityeventref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/proximityeventref\/proximity_event_ptr","title":"var proximity_event_ptr: UnsafeMutablePointer<GdkProximityEvent>!","type":"property"}],"path":"\/documentation\/gdk\/proximityeventref\/proximityeventprotocol-implementations","title":"ProximityEventProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/proximityeventref","title":"ProximityEventRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/rgbaref\/init(_:)-2nyor","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/rgbaref\/init(_:)-3631v","title":"init(UnsafePointer<GdkRGBA>)","type":"init"},{"path":"\/documentation\/gdk\/rgbaref\/init(_:)-4a67f","title":"init(UnsafeMutablePointer<GdkRGBA>)","type":"init"},{"path":"\/documentation\/gdk\/rgbaref\/init(_:)-6xi87","title":"init!(UnsafePointer<GdkRGBA>?)","type":"init"},{"path":"\/documentation\/gdk\/rgbaref\/init(_:)-8hu5z","title":"init!(UnsafeMutablePointer<GdkRGBA>?)","type":"init"},{"path":"\/documentation\/gdk\/rgbaref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/rgbaref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/rgbaref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/rgbaref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/rgbaref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/rgbaref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/rgbaref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/rgbaref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/rgbaref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/rgbaref\/alpha","title":"var alpha: CFloat","type":"property"},{"path":"\/documentation\/gdk\/rgbaref\/blue","title":"var blue: CFloat","type":"property"},{"path":"\/documentation\/gdk\/rgbaref\/green","title":"var green: CFloat","type":"property"},{"path":"\/documentation\/gdk\/rgbaref\/isclear","title":"var isClear: Bool","type":"property"},{"path":"\/documentation\/gdk\/rgbaref\/isopaque","title":"var isOpaque: Bool","type":"property"},{"path":"\/documentation\/gdk\/rgbaref\/red","title":"var red: CFloat","type":"property"},{"path":"\/documentation\/gdk\/rgbaref\/rgba_ptr","title":"var rgba_ptr: UnsafeMutablePointer<GdkRGBA>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/rgbaref\/cairosetsourcergba(cr:)","title":"func cairoSetSourceRgba<CairoContextT>(cr: CairoContextT)","type":"method"},{"path":"\/documentation\/gdk\/rgbaref\/copy()","title":"func copy() -> RGBARef!","type":"method"},{"path":"\/documentation\/gdk\/rgbaref\/equal(p2:)","title":"func equal<RGBAT>(p2: RGBAT) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/rgbaref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/gdk\/rgbaref\/hash()","title":"func hash() -> Int","type":"method"},{"path":"\/documentation\/gdk\/rgbaref\/parse(spec:)","title":"func parse(spec: UnsafePointer<CChar>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/rgbaref\/tostring()","title":"func toString() -> String!","type":"method"}],"path":"\/documentation\/gdk\/rgbaref\/rgbaprotocol-implementations","title":"RGBAProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/rgbaref","title":"RGBARef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/rectangleref\/init(_:)-1hwmo","title":"init(UnsafePointer<GdkRectangle>)","type":"init"},{"path":"\/documentation\/gdk\/rectangleref\/init(_:)-4ogak","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/rectangleref\/init(_:)-4x1vt","title":"init!(UnsafeMutablePointer<GdkRectangle>?)","type":"init"},{"path":"\/documentation\/gdk\/rectangleref\/init(_:)-7uh7b","title":"init!(UnsafePointer<GdkRectangle>?)","type":"init"},{"path":"\/documentation\/gdk\/rectangleref\/init(_:)-o32l","title":"init(UnsafeMutablePointer<GdkRectangle>)","type":"init"},{"path":"\/documentation\/gdk\/rectangleref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/rectangleref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/rectangleref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/rectangleref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/rectangleref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/rectangleref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/rectangleref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/rectangleref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/rectangleref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/rectangleref\/height","title":"var height: gint","type":"property"},{"path":"\/documentation\/gdk\/rectangleref\/rectangle_ptr","title":"var rectangle_ptr: UnsafeMutablePointer<GdkRectangle>!","type":"property"},{"path":"\/documentation\/gdk\/rectangleref\/width","title":"var width: gint","type":"property"},{"path":"\/documentation\/gdk\/rectangleref\/x","title":"var x: gint","type":"property"},{"path":"\/documentation\/gdk\/rectangleref\/y","title":"var y: gint","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/rectangleref\/cairorectangle(cr:)","title":"func cairoRectangle<CairoContextT>(cr: CairoContextT)","type":"method"},{"path":"\/documentation\/gdk\/rectangleref\/containspoint(x:y:)","title":"func containsPoint(x: Int, y: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/rectangleref\/equal(rect2:)","title":"func equal<RectangleT>(rect2: RectangleT) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/rectangleref\/intersect(src2:dest:)","title":"func intersect<RectangleT>(src2: RectangleT, dest: RectangleT?) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/rectangleref\/union(src2:dest:)","title":"func union<RectangleT>(src2: RectangleT, dest: RectangleT)","type":"method"}],"path":"\/documentation\/gdk\/rectangleref\/rectangleprotocol-implementations","title":"RectangleProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/rectangleref","title":"RectangleRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/scrolleventref\/init(_:)-17sld","title":"init(UnsafeMutablePointer<GdkScrollEvent>)","type":"init"},{"path":"\/documentation\/gdk\/scrolleventref\/init(_:)-2jfhb","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/scrolleventref\/init(_:)-3u9cp","title":"init(UnsafePointer<GdkScrollEvent>)","type":"init"},{"path":"\/documentation\/gdk\/scrolleventref\/init(_:)-7cngl","title":"init!(UnsafeMutablePointer<GdkScrollEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/scrolleventref\/init(_:)-8z2d2","title":"init!(UnsafePointer<GdkScrollEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/scrolleventref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/scrolleventref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/scrolleventref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/scrolleventref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/scrolleventref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/scrolleventref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/scrolleventref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/scrolleventref\/device","title":"var device: DeviceRef!","type":"property"},{"path":"\/documentation\/gdk\/scrolleventref\/devicetool","title":"var deviceTool: DeviceToolRef!","type":"property"},{"path":"\/documentation\/gdk\/scrolleventref\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/scrolleventref\/eventsequence","title":"var eventSequence: EventSequenceRef!","type":"property"},{"path":"\/documentation\/gdk\/scrolleventref\/eventtype","title":"var eventType: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/scrolleventref\/event_ptr","title":"var event_ptr: UnsafeMutablePointer<GdkEvent>!","type":"property"},{"path":"\/documentation\/gdk\/scrolleventref\/modifierstate","title":"var modifierState: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/scrolleventref\/pointeremulated","title":"var pointerEmulated: Bool","type":"property"},{"path":"\/documentation\/gdk\/scrolleventref\/seat","title":"var seat: SeatRef!","type":"property"},{"path":"\/documentation\/gdk\/scrolleventref\/surface","title":"var surface: SurfaceRef!","type":"property"},{"path":"\/documentation\/gdk\/scrolleventref\/time","title":"var time: guint32","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/scrolleventref\/getangle(event2:angle:)","title":"func GetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/scrolleventref\/getcenter(event2:x:y:)","title":"func GetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/scrolleventref\/getdistance(event2:distance:)","title":"func GetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/scrolleventref\/eventsgetangle(event2:angle:)","title":"func eventsGetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/scrolleventref\/eventsgetcenter(event2:x:y:)","title":"func eventsGetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/scrolleventref\/eventsgetdistance(event2:distance:)","title":"func eventsGetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/scrolleventref\/get(axes:naxes:)","title":"func get(axes: UnsafeMutablePointer<UnsafeMutablePointer<CDouble>?>!, nAxes: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/scrolleventref\/getaxis(axisuse:value:)","title":"func getAxis(axisUse: GdkAxisUse, value: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/scrolleventref\/getdevice()","title":"func getDevice() -> DeviceRef!","type":"method"},{"path":"\/documentation\/gdk\/scrolleventref\/getdevicetool()","title":"func getDeviceTool() -> DeviceToolRef!","type":"method"},{"path":"\/documentation\/gdk\/scrolleventref\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/scrolleventref\/geteventsequence()","title":"func getEventSequence() -> EventSequenceRef!","type":"method"},{"path":"\/documentation\/gdk\/scrolleventref\/geteventtype()","title":"func getEventType() -> GdkEventType","type":"method"},{"path":"\/documentation\/gdk\/scrolleventref\/gethistory(outncoords:)","title":"func getHistory(outNCoords: UnsafeMutablePointer<guint>!) -> UnsafeMutablePointer<GdkTimeCoord>!","type":"method"},{"path":"\/documentation\/gdk\/scrolleventref\/getmodifierstate()","title":"func getModifierState() -> ModifierType","type":"method"},{"path":"\/documentation\/gdk\/scrolleventref\/getpointeremulated()","title":"func getPointerEmulated() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/scrolleventref\/getposition(x:y:)","title":"func getPosition(x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/scrolleventref\/getseat()","title":"func getSeat() -> SeatRef!","type":"method"},{"path":"\/documentation\/gdk\/scrolleventref\/getsurface()","title":"func getSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/scrolleventref\/gettime()","title":"func getTime() -> guint32","type":"method"},{"path":"\/documentation\/gdk\/scrolleventref\/ref()","title":"func ref() -> EventRef!","type":"method"},{"path":"\/documentation\/gdk\/scrolleventref\/triggerscontextmenu()","title":"func triggersContextMenu() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/scrolleventref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/gdk\/scrolleventref\/eventprotocol-implementations","title":"EventProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/scrolleventref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/scrolleventref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/scrolleventref\/direction","title":"var direction: GdkScrollDirection","type":"property"},{"path":"\/documentation\/gdk\/scrolleventref\/isstop","title":"var isStop: Bool","type":"property"},{"path":"\/documentation\/gdk\/scrolleventref\/scroll_event_ptr","title":"var scroll_event_ptr: UnsafeMutablePointer<GdkScrollEvent>!","type":"property"},{"path":"\/documentation\/gdk\/scrolleventref\/unit","title":"var unit: GdkScrollUnit","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/scrolleventref\/getdeltas(deltax:deltay:)","title":"func getDeltas(deltaX: UnsafeMutablePointer<CDouble>!, deltaY: UnsafeMutablePointer<CDouble>!)","type":"method"},{"path":"\/documentation\/gdk\/scrolleventref\/getdirection()","title":"func getDirection() -> GdkScrollDirection","type":"method"},{"path":"\/documentation\/gdk\/scrolleventref\/getunit()","title":"func getUnit() -> GdkScrollUnit","type":"method"}],"path":"\/documentation\/gdk\/scrolleventref\/scrolleventprotocol-implementations","title":"ScrollEventProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/scrolleventref","title":"ScrollEventRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatcapabilities\/init(_:)-240vi","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/gdk\/seatcapabilities\/init(_:)-9vyz3","title":"init(GdkSeatCapabilities)","type":"init"},{"path":"\/documentation\/gdk\/seatcapabilities\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatcapabilities\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/gdk\/seatcapabilities\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/gdk\/seatcapabilities\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/gdk\/seatcapabilities\/value","title":"var value: GdkSeatCapabilities","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatcapabilities\/all","title":"static let all: SeatCapabilities","type":"property"},{"path":"\/documentation\/gdk\/seatcapabilities\/allpointing","title":"static let allPointing: SeatCapabilities","type":"property"},{"path":"\/documentation\/gdk\/seatcapabilities\/keyboard","title":"static let keyboard: SeatCapabilities","type":"property"},{"path":"\/documentation\/gdk\/seatcapabilities\/none","title":"static let none: SeatCapabilities","type":"property"},{"path":"\/documentation\/gdk\/seatcapabilities\/pointer","title":"static let pointer: SeatCapabilities","type":"property"},{"path":"\/documentation\/gdk\/seatcapabilities\/tabletpad","title":"static let tabletPad: SeatCapabilities","type":"property"},{"path":"\/documentation\/gdk\/seatcapabilities\/tabletstylus","title":"static let tabletStylus: SeatCapabilities","type":"property"},{"path":"\/documentation\/gdk\/seatcapabilities\/touch","title":"static let touch: SeatCapabilities","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatcapabilities\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/seatcapabilities\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatcapabilities\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatcapabilities\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/seatcapabilities\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/gdk\/seatcapabilities\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/gdk\/seatcapabilities\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/gdk\/seatcapabilities\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/gdk\/seatcapabilities\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/gdk\/seatcapabilities\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/gdk\/seatcapabilities\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/gdk\/seatcapabilities\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/gdk\/seatcapabilities\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/gdk\/seatcapabilities\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatcapabilities\/init(_:)-877kw","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/gdk\/seatcapabilities\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatcapabilities\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatcapabilities\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/seatcapabilities\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/seatcapabilities\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/seatcapabilities\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/seatcapabilities\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/seatcapabilities\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/gdk\/seatcapabilities\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/gdk\/seatcapabilities\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/seatcapabilities","title":"SeatCapabilities","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatref\/init(_:)-18wvx","title":"init!(UnsafeMutablePointer<GdkSeat>?)","type":"init"},{"path":"\/documentation\/gdk\/seatref\/init(_:)-6o9vg","title":"init(UnsafeMutablePointer<GdkSeat>)","type":"init"},{"path":"\/documentation\/gdk\/seatref\/init(_:)-8wytw","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/seatref\/init(_:)-dq3m","title":"init!(UnsafePointer<GdkSeat>?)","type":"init"},{"path":"\/documentation\/gdk\/seatref\/init(_:)-t1n6","title":"init(UnsafePointer<GdkSeat>)","type":"init"},{"path":"\/documentation\/gdk\/seatref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/seatref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/seatref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/seatref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/seatref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/seatref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatref\/unowned(_:)","title":"static func unowned<T>(T) -> SeatRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/seatref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/gdk\/seatref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/gdk\/seatref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/gdk\/seatref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/gdk\/seatref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/gdk\/seatref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/seatref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/gdk\/seatref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/seatref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/seatref\/bind(_:to:property:flags:convertfrom:convertto:)-2tzvt","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/seatref\/bind(_:to:property:flags:convertfrom:convertto:)-5kf9x","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/seatref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/seatref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/seatref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/seatref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/seatref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/seatref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/seatref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/gdk\/seatref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seatref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seatref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/seatref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/seatref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/seatref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/seatref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/seatref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/seatref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/gdk\/seatref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/gdk\/seatref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/gdk\/seatref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/seatref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/seatref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/seatref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/seatref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/seatref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/seatref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/gdk\/seatref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seatref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/seatref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/seatref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/seatref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/seatref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/seatref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/seatref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/gdk\/seatref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/seatref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/seatref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/seatref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/seatref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/seatref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/seatref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/seatref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seatref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seatref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seatref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seatref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/gdk\/seatref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/seatref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/seatref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seatref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/seatref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/seatref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seatref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/gdk\/seatref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seatref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seatref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/seatref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/gdk\/seatref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/seatref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/seatref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/seatref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/seatref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/gdk\/seatref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/gdk\/seatref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/gdk\/seatref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/gdk\/seatref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/seatref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/gdk\/seatref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/gdk\/seatref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/gdk\/seatref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatref\/capabilities","title":"var capabilities: SeatCapabilities","type":"property"},{"path":"\/documentation\/gdk\/seatref\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/seatref\/keyboard","title":"var keyboard: DeviceRef!","type":"property"},{"path":"\/documentation\/gdk\/seatref\/parentinstance","title":"var parentInstance: GObject","type":"property"},{"path":"\/documentation\/gdk\/seatref\/pointer","title":"var pointer: DeviceRef!","type":"property"},{"path":"\/documentation\/gdk\/seatref\/seat_ptr","title":"var seat_ptr: UnsafeMutablePointer<GdkSeat>!","type":"property"},{"path":"\/documentation\/gdk\/seatref\/tools","title":"var tools: RefListRef<DeviceToolRef>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatref\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: SeatPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/seatref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: SeatSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seatref\/connect(signal:flags:handler:)","title":"func connect(signal: SeatSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seatref\/get(property:)","title":"func get(property: SeatPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/seatref\/getcapabilities()","title":"func getCapabilities() -> SeatCapabilities","type":"method"},{"path":"\/documentation\/gdk\/seatref\/getdevices(capabilities:)","title":"func getDevices(capabilities: SeatCapabilities) -> RefListRef<DeviceRef>!","type":"method"},{"path":"\/documentation\/gdk\/seatref\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/seatref\/getkeyboard()","title":"func getKeyboard() -> DeviceRef!","type":"method"},{"path":"\/documentation\/gdk\/seatref\/getpointer()","title":"func getPointer() -> DeviceRef!","type":"method"},{"path":"\/documentation\/gdk\/seatref\/gettools()","title":"func getTools() -> RefListRef<DeviceToolRef>!","type":"method"},{"path":"\/documentation\/gdk\/seatref\/ondeviceadded(flags:handler:)","title":"func onDeviceAdded(flags: ConnectFlags, handler: (SeatRef, DeviceRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seatref\/ondeviceremoved(flags:handler:)","title":"func onDeviceRemoved(flags: ConnectFlags, handler: (SeatRef, DeviceRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seatref\/onnotifydisplay(flags:handler:)","title":"func onNotifyDisplay(flags: ConnectFlags, handler: (SeatRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seatref\/ontooladded(flags:handler:)","title":"func onToolAdded(flags: ConnectFlags, handler: (SeatRef, DeviceToolRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seatref\/ontoolremoved(flags:handler:)","title":"func onToolRemoved(flags: ConnectFlags, handler: (SeatRef, DeviceToolRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/seatref\/set(property:value:)","title":"func set(property: SeatPropertyName, value: Value)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatref\/deviceaddedsignal","title":"static var deviceAddedSignal: SeatSignalName","type":"property"},{"path":"\/documentation\/gdk\/seatref\/deviceremovedsignal","title":"static var deviceRemovedSignal: SeatSignalName","type":"property"},{"path":"\/documentation\/gdk\/seatref\/notifydisplaysignal","title":"static var notifyDisplaySignal: SeatSignalName","type":"property"},{"path":"\/documentation\/gdk\/seatref\/tooladdedsignal","title":"static var toolAddedSignal: SeatSignalName","type":"property"},{"path":"\/documentation\/gdk\/seatref\/toolremovedsignal","title":"static var toolRemovedSignal: SeatSignalName","type":"property"}],"path":"\/documentation\/gdk\/seatref\/seatprotocol-implementations","title":"SeatProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/seatref","title":"SeatRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/snapshotclassref\/init(_:)-2xcrz","title":"init!(UnsafePointer<GdkSnapshotClass>?)","type":"init"},{"path":"\/documentation\/gdk\/snapshotclassref\/init(_:)-3w1vz","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/snapshotclassref\/init(_:)-650r2","title":"init!(UnsafeMutablePointer<GdkSnapshotClass>?)","type":"init"},{"path":"\/documentation\/gdk\/snapshotclassref\/init(_:)-79pop","title":"init(UnsafePointer<GdkSnapshotClass>)","type":"init"},{"path":"\/documentation\/gdk\/snapshotclassref\/init(_:)-7sct6","title":"init(UnsafeMutablePointer<GdkSnapshotClass>)","type":"init"},{"path":"\/documentation\/gdk\/snapshotclassref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/snapshotclassref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/snapshotclassref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/snapshotclassref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/snapshotclassref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/snapshotclassref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/snapshotclassref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/snapshotclassref\/metatype","title":"static var metatype: GdkSnapshotClass?","type":"property"},{"path":"\/documentation\/gdk\/snapshotclassref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/gdk\/snapshotclassref\/wrapper","title":"static var wrapper: SnapshotClassRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/snapshotclassref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> Snapshot!","type":"method"},{"path":"\/documentation\/gdk\/snapshotclassref\/newsnapshot(properties:nproperties:names:values:)","title":"static func newSnapshot(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> Snapshot!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/snapshotclassref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/snapshotclassref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/snapshotclassref","title":"SnapshotClassRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/snapshotref\/init(_:)-29x47","title":"init!(UnsafeMutablePointer<GdkSnapshot>?)","type":"init"},{"path":"\/documentation\/gdk\/snapshotref\/init(_:)-2cp88","title":"init!(UnsafePointer<GdkSnapshot>?)","type":"init"},{"path":"\/documentation\/gdk\/snapshotref\/init(_:)-3541k","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/snapshotref\/init(_:)-6qo74","title":"init(UnsafePointer<GdkSnapshot>)","type":"init"},{"path":"\/documentation\/gdk\/snapshotref\/init(_:)-8qtx3","title":"init(UnsafeMutablePointer<GdkSnapshot>)","type":"init"},{"path":"\/documentation\/gdk\/snapshotref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/snapshotref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/snapshotref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/snapshotref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/snapshotref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/snapshotref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/snapshotref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/snapshotref\/unowned(_:)","title":"static func unowned<T>(T) -> SnapshotRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/snapshotref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/snapshotref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/snapshotref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/gdk\/snapshotref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/gdk\/snapshotref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/gdk\/snapshotref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/gdk\/snapshotref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/gdk\/snapshotref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/snapshotref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/bind(_:to:property:flags:convertfrom:convertto:)-19e4d","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/bind(_:to:property:flags:convertfrom:convertto:)-2aqax","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/connect(signal:flags:handler:)","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/snapshotref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/snapshotref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/gdk\/snapshotref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/gdk\/snapshotref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/snapshotref\/snapshot_ptr","title":"var snapshot_ptr: UnsafeMutablePointer<GdkSnapshot>!","type":"property"}],"path":"\/documentation\/gdk\/snapshotref\/snapshotprotocol-implementations","title":"SnapshotProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/snapshotref","title":"SnapshotRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/surfaceclassref\/init(_:)-4juwr","title":"init(UnsafePointer<GdkSurfaceClass>)","type":"init"},{"path":"\/documentation\/gdk\/surfaceclassref\/init(_:)-54yri","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/surfaceclassref\/init(_:)-69lg8","title":"init(UnsafeMutablePointer<GdkSurfaceClass>)","type":"init"},{"path":"\/documentation\/gdk\/surfaceclassref\/init(_:)-6d1nc","title":"init!(UnsafeMutablePointer<GdkSurfaceClass>?)","type":"init"},{"path":"\/documentation\/gdk\/surfaceclassref\/init(_:)-7xvgo","title":"init!(UnsafePointer<GdkSurfaceClass>?)","type":"init"},{"path":"\/documentation\/gdk\/surfaceclassref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/surfaceclassref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/surfaceclassref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/surfaceclassref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/surfaceclassref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/surfaceclassref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/surfaceclassref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/surfaceclassref\/metatype","title":"static var metatype: GdkSurfaceClass?","type":"property"},{"path":"\/documentation\/gdk\/surfaceclassref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/gdk\/surfaceclassref\/wrapper","title":"static var wrapper: SurfaceClassRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/surfaceclassref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> Surface!","type":"method"},{"path":"\/documentation\/gdk\/surfaceclassref\/newsurface(properties:nproperties:names:values:)","title":"static func newSurface(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> Surface!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/surfaceclassref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/surfaceclassref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/surfaceclassref","title":"SurfaceClassRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/surfaceref\/init(_:)-25701","title":"init!(UnsafeMutablePointer<GdkSurface>?)","type":"init"},{"path":"\/documentation\/gdk\/surfaceref\/init(_:)-3whoi","title":"init(UnsafePointer<GdkSurface>)","type":"init"},{"path":"\/documentation\/gdk\/surfaceref\/init(_:)-4nlg1","title":"init(UnsafeMutablePointer<GdkSurface>)","type":"init"},{"path":"\/documentation\/gdk\/surfaceref\/init(_:)-6m0ju","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/surfaceref\/init(_:)-90x59","title":"init!(UnsafePointer<GdkSurface>?)","type":"init"},{"path":"\/documentation\/gdk\/surfaceref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/surfaceref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/surfaceref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/surfaceref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/surfaceref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/surfaceref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/surfaceref\/init(toplevel:)","title":"init<DisplayT>(toplevel: DisplayT)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/surfaceref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/surfaceref\/new(toplevel:)","title":"static func new<DisplayT>(toplevel: DisplayT) -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/unowned(_:)","title":"static func unowned<T>(T) -> SurfaceRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/surfaceref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/surfaceref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/surfaceref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/gdk\/surfaceref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/gdk\/surfaceref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/gdk\/surfaceref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/gdk\/surfaceref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/gdk\/surfaceref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/surfaceref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/bind(_:to:property:flags:convertfrom:convertto:)-5dsa7","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/bind(_:to:property:flags:convertfrom:convertto:)-5woii","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/surfaceref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/surfaceref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/gdk\/surfaceref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/surfaceref\/cursor","title":"var cursor: CursorRef!","type":"property"},{"path":"\/documentation\/gdk\/surfaceref\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/surfaceref\/frameclock","title":"var frameClock: FrameClockRef!","type":"property"},{"path":"\/documentation\/gdk\/surfaceref\/height","title":"var height: Int","type":"property"},{"path":"\/documentation\/gdk\/surfaceref\/isdestroyed","title":"var isDestroyed: Bool","type":"property"},{"path":"\/documentation\/gdk\/surfaceref\/mapped","title":"var mapped: Bool","type":"property"},{"path":"\/documentation\/gdk\/surfaceref\/scale","title":"var scale: CDouble","type":"property"},{"path":"\/documentation\/gdk\/surfaceref\/scalefactor","title":"var scaleFactor: Int","type":"property"},{"path":"\/documentation\/gdk\/surfaceref\/surface_ptr","title":"var surface_ptr: UnsafeMutablePointer<GdkSurface>!","type":"property"},{"path":"\/documentation\/gdk\/surfaceref\/width","title":"var width: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/surfaceref\/beep()","title":"func beep()","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: SurfacePropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/cairodrawfromgl(cr:source:sourcetype:bufferscale:x:y:width:height:)","title":"func cairoDrawFromGl<CairoContextT>(cr: CairoContextT, source: Int, sourceType: Int, bufferScale: Int, x: Int, y: Int, width: Int, height: Int)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: SurfaceSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/connect(signal:flags:handler:)","title":"func connect(signal: SurfaceSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/createcairocontext()","title":"func createCairoContext() -> CairoContextRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/createglcontext()","title":"func createGlContext() throws -> GLContextRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/createsimilarsurface(content:width:height:)","title":"func createSimilarSurface(content: cairo_content_t, width: Int, height: Int) -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/createvulkancontext()","title":"func createVulkanContext() throws -> VulkanContextRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/get(property:)","title":"func get(property: SurfacePropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/getcursor()","title":"func getCursor() -> CursorRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/getdevicecursor(device:)","title":"func getDeviceCursor<DeviceT>(device: DeviceT) -> CursorRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/getdeviceposition(device:x:y:mask:)","title":"func getDevicePosition<DeviceT>(device: DeviceT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!, mask: UnsafeMutablePointer<GdkModifierType>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/getframeclock()","title":"func getFrameClock() -> FrameClockRef!","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/getheight()","title":"func getHeight() -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/getmapped()","title":"func getMapped() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/getscale()","title":"func getScale() -> CDouble","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/getscalefactor()","title":"func getScaleFactor() -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/getwidth()","title":"func getWidth() -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/hide()","title":"func hide()","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/onentermonitor(flags:handler:)","title":"func onEnterMonitor(flags: ConnectFlags, handler: (SurfaceRef, MonitorRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/onevent(flags:handler:)","title":"func onEvent(flags: ConnectFlags, handler: (SurfaceRef, EventRef) -> Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/onlayout(flags:handler:)","title":"func onLayout(flags: ConnectFlags, handler: (SurfaceRef, Int, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/onleavemonitor(flags:handler:)","title":"func onLeaveMonitor(flags: ConnectFlags, handler: (SurfaceRef, MonitorRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/onnotifycursor(flags:handler:)","title":"func onNotifyCursor(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/onnotifydisplay(flags:handler:)","title":"func onNotifyDisplay(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/onnotifyframeclock(flags:handler:)","title":"func onNotifyFrameClock(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/onnotifyheight(flags:handler:)","title":"func onNotifyHeight(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/onnotifymapped(flags:handler:)","title":"func onNotifyMapped(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/onnotifyscale(flags:handler:)","title":"func onNotifyScale(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/onnotifyscalefactor(flags:handler:)","title":"func onNotifyScaleFactor(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/onnotifywidth(flags:handler:)","title":"func onNotifyWidth(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/onrender(flags:handler:)","title":"func onRender(flags: ConnectFlags, handler: (SurfaceRef, RegionRef) -> Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/queuerender()","title":"func queueRender()","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/requestlayout()","title":"func requestLayout()","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/set(cursor:)","title":"func set(cursor: CursorRef?)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/set(property:value:)","title":"func set(property: SurfacePropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/setdevicecursor(device:cursor:)","title":"func setDeviceCursor<CursorT, DeviceT>(device: DeviceT, cursor: CursorT)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/setinput(region:)","title":"func setInput<cairoRegionT>(region: cairoRegionT)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/setopaque(region:)","title":"func setOpaque(region: RegionRef?)","type":"method"},{"path":"\/documentation\/gdk\/surfaceref\/translatecoordinates(to:x:y:)","title":"func translateCoordinates<SurfaceT>(to: SurfaceT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/surfaceref\/entermonitorsignal","title":"static var enterMonitorSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surfaceref\/eventsignal","title":"static var eventSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surfaceref\/layoutsignal","title":"static var layoutSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surfaceref\/leavemonitorsignal","title":"static var leaveMonitorSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surfaceref\/notifycursorsignal","title":"static var notifyCursorSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surfaceref\/notifydisplaysignal","title":"static var notifyDisplaySignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surfaceref\/notifyframeclocksignal","title":"static var notifyFrameClockSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surfaceref\/notifyheightsignal","title":"static var notifyHeightSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surfaceref\/notifymappedsignal","title":"static var notifyMappedSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surfaceref\/notifyscalefactorsignal","title":"static var notifyScaleFactorSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surfaceref\/notifyscalesignal","title":"static var notifyScaleSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surfaceref\/notifywidthsignal","title":"static var notifyWidthSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/surfaceref\/rendersignal","title":"static var renderSignal: SurfaceSignalName","type":"property"}],"path":"\/documentation\/gdk\/surfaceref\/surfaceprotocol-implementations","title":"SurfaceProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/surfaceref","title":"SurfaceRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/textureclassref\/init(_:)-7ixgg","title":"init!(UnsafePointer<GdkTextureClass>?)","type":"init"},{"path":"\/documentation\/gdk\/textureclassref\/init(_:)-8jujz","title":"init(UnsafePointer<GdkTextureClass>)","type":"init"},{"path":"\/documentation\/gdk\/textureclassref\/init(_:)-92hio","title":"init(UnsafeMutablePointer<GdkTextureClass>)","type":"init"},{"path":"\/documentation\/gdk\/textureclassref\/init(_:)-9iwnh","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/textureclassref\/init(_:)-r01y","title":"init!(UnsafeMutablePointer<GdkTextureClass>?)","type":"init"},{"path":"\/documentation\/gdk\/textureclassref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/textureclassref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/textureclassref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/textureclassref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/textureclassref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/textureclassref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/textureclassref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/textureclassref\/metatype","title":"static var metatype: GdkTextureClass?","type":"property"},{"path":"\/documentation\/gdk\/textureclassref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/gdk\/textureclassref\/wrapper","title":"static var wrapper: TextureClassRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/textureclassref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> Texture!","type":"method"},{"path":"\/documentation\/gdk\/textureclassref\/newtexture(properties:nproperties:names:values:)","title":"static func newTexture(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> Texture!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/textureclassref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/textureclassref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/textureclassref","title":"TextureClassRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/texturedownloaderref\/init(_:)-1v6nb","title":"init!(UnsafePointer<GdkTextureDownloader>?)","type":"init"},{"path":"\/documentation\/gdk\/texturedownloaderref\/init(_:)-1wjsk","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/texturedownloaderref\/init(_:)-6iey3","title":"init(UnsafePointer<GdkTextureDownloader>)","type":"init"},{"path":"\/documentation\/gdk\/texturedownloaderref\/init(_:)-6l4g7","title":"init(UnsafeMutablePointer<GdkTextureDownloader>)","type":"init"},{"path":"\/documentation\/gdk\/texturedownloaderref\/init(_:)-f1im","title":"init!(UnsafeMutablePointer<GdkTextureDownloader>?)","type":"init"},{"path":"\/documentation\/gdk\/texturedownloaderref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/texturedownloaderref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/texturedownloaderref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/texturedownloaderref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/texturedownloaderref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/texturedownloaderref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/texturedownloaderref\/init(texture:)","title":"init<TextureT>(texture: TextureT)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/texturedownloaderref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/texturedownloaderref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/texturedownloaderref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/texturedownloaderref\/format","title":"var format: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/texturedownloaderref\/texture","title":"var texture: TextureRef!","type":"property"},{"path":"\/documentation\/gdk\/texturedownloaderref\/texture_downloader_ptr","title":"var texture_downloader_ptr: UnsafeMutablePointer<GdkTextureDownloader>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/texturedownloaderref\/copy()","title":"func copy() -> TextureDownloaderRef!","type":"method"},{"path":"\/documentation\/gdk\/texturedownloaderref\/downloadbytes(outstride:)","title":"func downloadBytes(outStride: UnsafeMutablePointer<gsize>!) -> BytesRef!","type":"method"},{"path":"\/documentation\/gdk\/texturedownloaderref\/downloadinto(data:stride:)","title":"func downloadInto(data: UnsafeMutablePointer<guchar>!, stride: Int)","type":"method"},{"path":"\/documentation\/gdk\/texturedownloaderref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/gdk\/texturedownloaderref\/getformat()","title":"func getFormat() -> GdkMemoryFormat","type":"method"},{"path":"\/documentation\/gdk\/texturedownloaderref\/gettexture()","title":"func getTexture() -> TextureRef!","type":"method"},{"path":"\/documentation\/gdk\/texturedownloaderref\/set(format:)","title":"func set(format: GdkMemoryFormat)","type":"method"},{"path":"\/documentation\/gdk\/texturedownloaderref\/set(texture:)","title":"func set<TextureT>(texture: TextureT)","type":"method"}],"path":"\/documentation\/gdk\/texturedownloaderref\/texturedownloaderprotocol-implementations","title":"TextureDownloaderProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/texturedownloaderref","title":"TextureDownloaderRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/textureref\/init(string:)","title":"init(String: UnsafePointer<CChar>!) throws","type":"init"},{"path":"\/documentation\/gdk\/textureref\/init(_:)-2zpgo","title":"init(UnsafePointer<GdkTexture>)","type":"init"},{"path":"\/documentation\/gdk\/textureref\/init(_:)-3dgrp","title":"init!(UnsafeMutablePointer<GdkTexture>?)","type":"init"},{"path":"\/documentation\/gdk\/textureref\/init(_:)-9zjmu","title":"init!(UnsafePointer<GdkTexture>?)","type":"init"},{"path":"\/documentation\/gdk\/textureref\/init(_:)-i0ja","title":"init(UnsafeMutablePointer<GdkTexture>)","type":"init"},{"path":"\/documentation\/gdk\/textureref\/init(_:)-k2n6","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/textureref\/init(bytes:)","title":"init<GLibBytesT>(bytes: GLibBytesT) throws","type":"init"},{"path":"\/documentation\/gdk\/textureref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/textureref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/textureref\/init(file:)","title":"init<GioFileT>(file: GioFileT) throws","type":"init"},{"path":"\/documentation\/gdk\/textureref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/textureref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/textureref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/textureref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/gdk\/textureref\/init(pixbuf:)","title":"init<GdkPixbufPixbufT>(pixbuf: GdkPixbufPixbufT)","type":"init"},{"path":"\/documentation\/gdk\/textureref\/init(resource:)","title":"init(resource: UnsafePointer<CChar>!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/textureref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/textureref\/newfor(pixbuf:)","title":"static func newFor<GdkPixbufPixbufT>(pixbuf: GdkPixbufPixbufT) -> TextureRef!","type":"method"},{"path":"\/documentation\/gdk\/textureref\/newfrom(bytes:)","title":"static func newFrom<GLibBytesT>(bytes: GLibBytesT) throws -> TextureRef!","type":"method"},{"path":"\/documentation\/gdk\/textureref\/newfrom(file:)","title":"static func newFrom<GioFileT>(file: GioFileT) throws -> TextureRef!","type":"method"},{"path":"\/documentation\/gdk\/textureref\/newfrom(resource:)","title":"static func newFrom(resource: UnsafePointer<CChar>!) -> TextureRef!","type":"method"},{"path":"\/documentation\/gdk\/textureref\/newfromfilename(string:)","title":"static func newFromFilename(String: UnsafePointer<CChar>!) throws -> TextureRef!","type":"method"},{"path":"\/documentation\/gdk\/textureref\/unowned(_:)","title":"static func unowned<T>(T) -> TextureRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/textureref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/textureref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/textureref\/icon_ptr","title":"var icon_ptr: UnsafeMutablePointer<GIcon>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/textureref\/equal(icon2:)","title":"func equal(icon2: IconRef?) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/textureref\/hash()","title":"func hash() -> Int","type":"method"},{"path":"\/documentation\/gdk\/textureref\/serialize()","title":"func serialize() -> VariantRef!","type":"method"},{"path":"\/documentation\/gdk\/textureref\/tostring()","title":"func toString() -> String!","type":"method"}],"path":"\/documentation\/gdk\/textureref\/iconprotocol-implementations","title":"IconProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/textureref\/loadable_icon_ptr","title":"var loadable_icon_ptr: UnsafeMutablePointer<GLoadableIcon>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/textureref\/load(size:type:cancellable:)","title":"func load(size: Int, type: UnsafeMutablePointer<UnsafeMutablePointer<CChar>?>!, cancellable: CancellableRef?) throws -> InputStreamRef!","type":"method"},{"path":"\/documentation\/gdk\/textureref\/loadasync(size:cancellable:callback:userdata:)","title":"func loadAsync(size: Int, cancellable: CancellableRef?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/textureref\/loadfinish(res:type:)","title":"func loadFinish<AsyncResultT>(res: AsyncResultT, type: UnsafeMutablePointer<UnsafeMutablePointer<CChar>?>!) throws -> InputStreamRef!","type":"method"}],"path":"\/documentation\/gdk\/textureref\/loadableiconprotocol-implementations","title":"LoadableIconProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/textureref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/gdk\/textureref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/gdk\/textureref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/gdk\/textureref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/gdk\/textureref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/gdk\/textureref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/textureref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/textureref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/gdk\/textureref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/textureref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/textureref\/bind(_:to:property:flags:convertfrom:convertto:)-1054s","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/textureref\/bind(_:to:property:flags:convertfrom:convertto:)-ya5n","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/textureref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/textureref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/textureref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/textureref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/textureref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/textureref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/textureref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/gdk\/textureref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/textureref\/connect(signal:flags:data:destroydata:signalhandler:)-qaee","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/textureref\/connect(signal:flags:handler:)-71s2z","title":"func connect(signal: ObjectSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/textureref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/textureref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/textureref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/textureref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/textureref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/textureref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/textureref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/textureref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/gdk\/textureref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/gdk\/textureref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/gdk\/textureref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/textureref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/textureref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/textureref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/textureref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/textureref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/textureref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/gdk\/textureref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/textureref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/textureref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/textureref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/textureref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/textureref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/textureref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/textureref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/gdk\/textureref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/textureref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/textureref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/textureref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/textureref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/textureref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/textureref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/textureref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/textureref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/textureref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/textureref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/textureref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/gdk\/textureref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/textureref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/textureref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/textureref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/textureref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/textureref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/textureref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/gdk\/textureref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/textureref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/textureref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/textureref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/gdk\/textureref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/textureref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/textureref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/textureref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/textureref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/gdk\/textureref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/gdk\/textureref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/gdk\/textureref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/gdk\/textureref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/textureref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/textureref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/textureref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/gdk\/textureref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/gdk\/textureref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/gdk\/textureref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/textureref\/currentimage","title":"var currentImage: PaintableRef!","type":"property"},{"path":"\/documentation\/gdk\/textureref\/flags","title":"var flags: PaintableFlags","type":"property"},{"path":"\/documentation\/gdk\/textureref\/intrinsicaspectratio","title":"var intrinsicAspectRatio: CDouble","type":"property"},{"path":"\/documentation\/gdk\/textureref\/intrinsicheight","title":"var intrinsicHeight: Int","type":"property"},{"path":"\/documentation\/gdk\/textureref\/intrinsicwidth","title":"var intrinsicWidth: Int","type":"property"},{"path":"\/documentation\/gdk\/textureref\/paintable_ptr","title":"var paintable_ptr: UnsafeMutablePointer<GdkPaintable>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/textureref\/computeconcretesize(specifiedwidth:specifiedheight:defaultwidth:defaultheight:concretewidth:concreteheight:)","title":"func computeConcreteSize(specifiedWidth: CDouble, specifiedHeight: CDouble, defaultWidth: CDouble, defaultHeight: CDouble, concreteWidth: UnsafeMutablePointer<CDouble>!, concreteHeight: UnsafeMutablePointer<CDouble>!)","type":"method"},{"path":"\/documentation\/gdk\/textureref\/connect(signal:flags:data:destroydata:signalhandler:)-6uhyw","title":"func connect(signal: PaintableSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/textureref\/connect(signal:flags:handler:)-ubnx","title":"func connect(signal: PaintableSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/textureref\/getcurrentimage()","title":"func getCurrentImage() -> PaintableRef!","type":"method"},{"path":"\/documentation\/gdk\/textureref\/getflags()","title":"func getFlags() -> PaintableFlags","type":"method"},{"path":"\/documentation\/gdk\/textureref\/getintrinsicaspectratio()","title":"func getIntrinsicAspectRatio() -> CDouble","type":"method"},{"path":"\/documentation\/gdk\/textureref\/getintrinsicheight()","title":"func getIntrinsicHeight() -> Int","type":"method"},{"path":"\/documentation\/gdk\/textureref\/getintrinsicwidth()","title":"func getIntrinsicWidth() -> Int","type":"method"},{"path":"\/documentation\/gdk\/textureref\/invalidatecontents()","title":"func invalidateContents()","type":"method"},{"path":"\/documentation\/gdk\/textureref\/invalidatesize()","title":"func invalidateSize()","type":"method"},{"path":"\/documentation\/gdk\/textureref\/oninvalidatecontents(flags:handler:)","title":"func onInvalidateContents(flags: ConnectFlags, handler: (PaintableRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/textureref\/oninvalidatesize(flags:handler:)","title":"func onInvalidateSize(flags: ConnectFlags, handler: (PaintableRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/textureref\/snapshot(snapshot:width:height:)","title":"func snapshot<SnapshotT>(snapshot: SnapshotT, width: CDouble, height: CDouble)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/textureref\/invalidatecontentssignal","title":"static var invalidateContentsSignal: PaintableSignalName","type":"property"},{"path":"\/documentation\/gdk\/textureref\/invalidatesizesignal","title":"static var invalidateSizeSignal: PaintableSignalName","type":"property"}],"path":"\/documentation\/gdk\/textureref\/paintableprotocol-implementations","title":"PaintableProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/textureref\/format","title":"var format: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/textureref\/height","title":"var height: Int","type":"property"},{"path":"\/documentation\/gdk\/textureref\/texture_ptr","title":"var texture_ptr: UnsafeMutablePointer<GdkTexture>!","type":"property"},{"path":"\/documentation\/gdk\/textureref\/width","title":"var width: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/textureref\/bind(property:to:_:flags:transformfrom:transformto:)","title":"func bind<Q, T>(property: TexturePropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/textureref\/download(data:stride:)","title":"func download(data: UnsafeMutablePointer<guchar>!, stride: Int)","type":"method"},{"path":"\/documentation\/gdk\/textureref\/get(property:)","title":"func get(property: TexturePropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/textureref\/getformat()","title":"func getFormat() -> GdkMemoryFormat","type":"method"},{"path":"\/documentation\/gdk\/textureref\/getheight()","title":"func getHeight() -> Int","type":"method"},{"path":"\/documentation\/gdk\/textureref\/getwidth()","title":"func getWidth() -> Int","type":"method"},{"path":"\/documentation\/gdk\/textureref\/pixbufgetfromtexture()","title":"func pixbufGetFromTexture() -> PixbufRef!","type":"method"},{"path":"\/documentation\/gdk\/textureref\/savetopng(filename:)","title":"func saveToPng(filename: UnsafePointer<CChar>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/textureref\/savetopngbytes()","title":"func saveToPngBytes() -> BytesRef!","type":"method"},{"path":"\/documentation\/gdk\/textureref\/savetotiff(filename:)","title":"func saveToTiff(filename: UnsafePointer<CChar>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/textureref\/savetotiffbytes()","title":"func saveToTiffBytes() -> BytesRef!","type":"method"},{"path":"\/documentation\/gdk\/textureref\/set(property:value:)","title":"func set(property: TexturePropertyName, value: Value)","type":"method"}],"path":"\/documentation\/gdk\/textureref\/textureprotocol-implementations","title":"TextureProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/textureref","title":"TextureRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/timecoordref\/init(_:)-271e3","title":"init!(UnsafeMutablePointer<GdkTimeCoord>?)","type":"init"},{"path":"\/documentation\/gdk\/timecoordref\/init(_:)-390ik","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/timecoordref\/init(_:)-39s72","title":"init(UnsafeMutablePointer<GdkTimeCoord>)","type":"init"},{"path":"\/documentation\/gdk\/timecoordref\/init(_:)-67hjz","title":"init(UnsafePointer<GdkTimeCoord>)","type":"init"},{"path":"\/documentation\/gdk\/timecoordref\/init(_:)-6r1or","title":"init!(UnsafePointer<GdkTimeCoord>?)","type":"init"},{"path":"\/documentation\/gdk\/timecoordref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/timecoordref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/timecoordref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/timecoordref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/timecoordref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/timecoordref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/timecoordref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/timecoordref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/timecoordref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/timecoordref\/axes","title":"var axes: (CDouble, CDouble, CDouble, CDouble, CDouble, CDouble, CDouble, CDouble, CDouble, CDouble, CDouble, CDouble)","type":"property"},{"path":"\/documentation\/gdk\/timecoordref\/flags","title":"var flags: AxisFlags","type":"property"},{"path":"\/documentation\/gdk\/timecoordref\/time","title":"var time: guint32","type":"property"}],"path":"\/documentation\/gdk\/timecoordref\/timecoordprotocol-implementations","title":"TimeCoordProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/timecoordref","title":"TimeCoordRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelinterfaceref\/init(_:)-2fhby","title":"init(UnsafeMutablePointer<GdkToplevelInterface>)","type":"init"},{"path":"\/documentation\/gdk\/toplevelinterfaceref\/init(_:)-2rgvk","title":"init!(UnsafeMutablePointer<GdkToplevelInterface>?)","type":"init"},{"path":"\/documentation\/gdk\/toplevelinterfaceref\/init(_:)-2vv3f","title":"init(UnsafePointer<GdkToplevelInterface>)","type":"init"},{"path":"\/documentation\/gdk\/toplevelinterfaceref\/init(_:)-4x0f6","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/toplevelinterfaceref\/init(_:)-8g4gm","title":"init!(UnsafePointer<GdkToplevelInterface>?)","type":"init"},{"path":"\/documentation\/gdk\/toplevelinterfaceref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/toplevelinterfaceref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/toplevelinterfaceref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/toplevelinterfaceref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/toplevelinterfaceref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/toplevelinterfaceref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelinterfaceref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelinterfaceref\/metatype","title":"static var metatype: GdkToplevelInterface?","type":"property"},{"path":"\/documentation\/gdk\/toplevelinterfaceref\/metatypereference","title":"static var metatypeReference: GType","type":"property"},{"path":"\/documentation\/gdk\/toplevelinterfaceref\/wrapper","title":"static var wrapper: ToplevelInterfaceRef?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelinterfaceref\/newclassinstance(with:)","title":"static func newClassInstance(with: [String : Any]) -> Toplevel!","type":"method"},{"path":"\/documentation\/gdk\/toplevelinterfaceref\/newtoplevel(properties:nproperties:names:values:)","title":"static func newToplevel(properties: GType, nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<CChar>?>!, values: UnsafePointer<GValue>!) -> Toplevel!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelinterfaceref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/toplevelinterfaceref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/toplevelinterfaceref","title":"ToplevelInterfaceRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevellayoutref\/init()","title":"init()","type":"init"},{"path":"\/documentation\/gdk\/toplevellayoutref\/init(_:)-4u3t6","title":"init(UnsafeMutablePointer<GdkToplevelLayout>)","type":"init"},{"path":"\/documentation\/gdk\/toplevellayoutref\/init(_:)-55uzf","title":"init(UnsafePointer<GdkToplevelLayout>)","type":"init"},{"path":"\/documentation\/gdk\/toplevellayoutref\/init(_:)-6wr2d","title":"init!(UnsafeMutablePointer<GdkToplevelLayout>?)","type":"init"},{"path":"\/documentation\/gdk\/toplevellayoutref\/init(_:)-7ctq1","title":"init!(UnsafePointer<GdkToplevelLayout>?)","type":"init"},{"path":"\/documentation\/gdk\/toplevellayoutref\/init(_:)-9b2zx","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/toplevellayoutref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/toplevellayoutref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/toplevellayoutref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/toplevellayoutref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/toplevellayoutref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/toplevellayoutref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevellayoutref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevellayoutref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/toplevellayoutref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevellayoutref\/fullscreenmonitor","title":"var fullscreenMonitor: MonitorRef!","type":"property"},{"path":"\/documentation\/gdk\/toplevellayoutref\/resizable","title":"var resizable: Bool","type":"property"},{"path":"\/documentation\/gdk\/toplevellayoutref\/toplevel_layout_ptr","title":"var toplevel_layout_ptr: UnsafeMutablePointer<GdkToplevelLayout>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevellayoutref\/copy()","title":"func copy() -> ToplevelLayoutRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevellayoutref\/equal(other:)","title":"func equal<ToplevelLayoutT>(other: ToplevelLayoutT) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevellayoutref\/get(fullscreen:)","title":"func get(fullscreen: UnsafeMutablePointer<gboolean>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevellayoutref\/get(maximized:)","title":"func get(maximized: UnsafeMutablePointer<gboolean>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevellayoutref\/getfullscreenmonitor()","title":"func getFullscreenMonitor() -> MonitorRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevellayoutref\/getresizable()","title":"func getResizable() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevellayoutref\/ref()","title":"func ref() -> ToplevelLayoutRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevellayoutref\/set(fullscreen:monitor:)","title":"func set(fullscreen: Bool, monitor: MonitorRef?)","type":"method"},{"path":"\/documentation\/gdk\/toplevellayoutref\/set(maximized:)","title":"func set(maximized: Bool)","type":"method"},{"path":"\/documentation\/gdk\/toplevellayoutref\/set(resizable:)","title":"func set(resizable: Bool)","type":"method"},{"path":"\/documentation\/gdk\/toplevellayoutref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/gdk\/toplevellayoutref\/toplevellayoutprotocol-implementations","title":"ToplevelLayoutProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/toplevellayoutref","title":"ToplevelLayoutRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelref\/init(_:)-1674","title":"init(UnsafePointer<GdkToplevel>)","type":"init"},{"path":"\/documentation\/gdk\/toplevelref\/init(_:)-1a6m2","title":"init(UnsafeMutablePointer<GdkToplevel>)","type":"init"},{"path":"\/documentation\/gdk\/toplevelref\/init(_:)-2l3yd","title":"init!(UnsafeMutablePointer<GdkToplevel>?)","type":"init"},{"path":"\/documentation\/gdk\/toplevelref\/init(_:)-6ji1n","title":"init!(UnsafePointer<GdkToplevel>?)","type":"init"},{"path":"\/documentation\/gdk\/toplevelref\/init(_:)-9jwm9","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/toplevelref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/toplevelref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/toplevelref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/toplevelref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/toplevelref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/toplevelref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelref\/unowned(_:)","title":"static func unowned<T>(T) -> ToplevelRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/toplevelref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/bind(_:to:property:flags:convertfrom:convertto:)-2acal","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/bind(_:to:property:flags:convertfrom:convertto:)-3mb46","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/gdk\/toplevelref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelref\/cursor","title":"var cursor: CursorRef!","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/frameclock","title":"var frameClock: FrameClockRef!","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/height","title":"var height: Int","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/isdestroyed","title":"var isDestroyed: Bool","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/mapped","title":"var mapped: Bool","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/scale","title":"var scale: CDouble","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/scalefactor","title":"var scaleFactor: Int","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/surface_ptr","title":"var surface_ptr: UnsafeMutablePointer<GdkSurface>!","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/width","title":"var width: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelref\/beep()","title":"func beep()","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/bind(property:to:_:flags:transformfrom:transformto:)-9btb4","title":"func bind<Q, T>(property: SurfacePropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/cairodrawfromgl(cr:source:sourcetype:bufferscale:x:y:width:height:)","title":"func cairoDrawFromGl<CairoContextT>(cr: CairoContextT, source: Int, sourceType: Int, bufferScale: Int, x: Int, y: Int, width: Int, height: Int)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/createcairocontext()","title":"func createCairoContext() -> CairoContextRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/createglcontext()","title":"func createGlContext() throws -> GLContextRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/createsimilarsurface(content:width:height:)","title":"func createSimilarSurface(content: cairo_content_t, width: Int, height: Int) -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/createvulkancontext()","title":"func createVulkanContext() throws -> VulkanContextRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/getcursor()","title":"func getCursor() -> CursorRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/getdevicecursor(device:)","title":"func getDeviceCursor<DeviceT>(device: DeviceT) -> CursorRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/getdeviceposition(device:x:y:mask:)","title":"func getDevicePosition<DeviceT>(device: DeviceT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!, mask: UnsafeMutablePointer<GdkModifierType>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/getframeclock()","title":"func getFrameClock() -> FrameClockRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/getheight()","title":"func getHeight() -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/getmapped()","title":"func getMapped() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/getscale()","title":"func getScale() -> CDouble","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/getscalefactor()","title":"func getScaleFactor() -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/getwidth()","title":"func getWidth() -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/hide()","title":"func hide()","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/onentermonitor(flags:handler:)","title":"func onEnterMonitor(flags: ConnectFlags, handler: (SurfaceRef, MonitorRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/onevent(flags:handler:)","title":"func onEvent(flags: ConnectFlags, handler: (SurfaceRef, EventRef) -> Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/onlayout(flags:handler:)","title":"func onLayout(flags: ConnectFlags, handler: (SurfaceRef, Int, Int) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/onleavemonitor(flags:handler:)","title":"func onLeaveMonitor(flags: ConnectFlags, handler: (SurfaceRef, MonitorRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/onnotifycursor(flags:handler:)","title":"func onNotifyCursor(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/onnotifydisplay(flags:handler:)","title":"func onNotifyDisplay(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/onnotifyframeclock(flags:handler:)","title":"func onNotifyFrameClock(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/onnotifyheight(flags:handler:)","title":"func onNotifyHeight(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/onnotifymapped(flags:handler:)","title":"func onNotifyMapped(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/onnotifyscale(flags:handler:)","title":"func onNotifyScale(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/onnotifyscalefactor(flags:handler:)","title":"func onNotifyScaleFactor(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/onnotifywidth(flags:handler:)","title":"func onNotifyWidth(flags: ConnectFlags, handler: (SurfaceRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/onrender(flags:handler:)","title":"func onRender(flags: ConnectFlags, handler: (SurfaceRef, RegionRef) -> Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/queuerender()","title":"func queueRender()","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/requestlayout()","title":"func requestLayout()","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/set(cursor:)","title":"func set(cursor: CursorRef?)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/setdevicecursor(device:cursor:)","title":"func setDeviceCursor<CursorT, DeviceT>(device: DeviceT, cursor: CursorT)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/setinput(region:)","title":"func setInput<cairoRegionT>(region: cairoRegionT)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/setopaque(region:)","title":"func setOpaque(region: RegionRef?)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/translatecoordinates(to:x:y:)","title":"func translateCoordinates<SurfaceT>(to: SurfaceT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelref\/entermonitorsignal","title":"static var enterMonitorSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/eventsignal","title":"static var eventSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/layoutsignal","title":"static var layoutSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/leavemonitorsignal","title":"static var leaveMonitorSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/notifycursorsignal","title":"static var notifyCursorSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/notifydisplaysignal","title":"static var notifyDisplaySignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/notifyframeclocksignal","title":"static var notifyFrameClockSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/notifyheightsignal","title":"static var notifyHeightSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/notifymappedsignal","title":"static var notifyMappedSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/notifyscalefactorsignal","title":"static var notifyScaleFactorSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/notifyscalesignal","title":"static var notifyScaleSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/notifywidthsignal","title":"static var notifyWidthSignal: SurfaceSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/rendersignal","title":"static var renderSignal: SurfaceSignalName","type":"property"}],"path":"\/documentation\/gdk\/toplevelref\/surfaceprotocol-implementations","title":"SurfaceProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelref\/state","title":"var state: ToplevelState","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/toplevel_ptr","title":"var toplevel_ptr: UnsafeMutablePointer<GdkToplevel>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelref\/beginmove(device:button:x:y:timestamp:)","title":"func beginMove<DeviceT>(device: DeviceT, button: Int, x: CDouble, y: CDouble, timestamp: guint32)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/beginresize(edge:device:button:x:y:timestamp:)","title":"func beginResize(edge: GdkSurfaceEdge, device: DeviceRef?, button: Int, x: CDouble, y: CDouble, timestamp: guint32)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/bind(property:to:_:flags:transformfrom:transformto:)-3387b","title":"func bind<Q, T>(property: ToplevelPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: ToplevelSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/connect(signal:flags:handler:)","title":"func connect(signal: ToplevelSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/focus(timestamp:)","title":"func focus(timestamp: guint32)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/get(property:)","title":"func get(property: ToplevelPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/getstate()","title":"func getState() -> ToplevelState","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/inhibitsystemshortcuts(event:)","title":"func inhibitSystemShortcuts(event: EventRef?)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/lower()","title":"func lower() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/minimize()","title":"func minimize() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/oncomputesize(flags:handler:)","title":"func onComputeSize(flags: ConnectFlags, handler: (ToplevelRef, ToplevelSizeRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/onnotifydecorated(flags:handler:)","title":"func onNotifyDecorated(flags: ConnectFlags, handler: (ToplevelRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/onnotifydeletable(flags:handler:)","title":"func onNotifyDeletable(flags: ConnectFlags, handler: (ToplevelRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/onnotifyfullscreenmode(flags:handler:)","title":"func onNotifyFullscreenMode(flags: ConnectFlags, handler: (ToplevelRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/onnotifyiconlist(flags:handler:)","title":"func onNotifyIconList(flags: ConnectFlags, handler: (ToplevelRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/onnotifymodal(flags:handler:)","title":"func onNotifyModal(flags: ConnectFlags, handler: (ToplevelRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/onnotifyshortcutsinhibited(flags:handler:)","title":"func onNotifyShortcutsInhibited(flags: ConnectFlags, handler: (ToplevelRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/onnotifystartupid(flags:handler:)","title":"func onNotifyStartupId(flags: ConnectFlags, handler: (ToplevelRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/onnotifystate(flags:handler:)","title":"func onNotifyState(flags: ConnectFlags, handler: (ToplevelRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/onnotifytitle(flags:handler:)","title":"func onNotifyTitle(flags: ConnectFlags, handler: (ToplevelRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/onnotifytransientfor(flags:handler:)","title":"func onNotifyTransientFor(flags: ConnectFlags, handler: (ToplevelRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/present(layout:)","title":"func present<ToplevelLayoutT>(layout: ToplevelLayoutT)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/restoresystemshortcuts()","title":"func restoreSystemShortcuts()","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/set(decorated:)","title":"func set(decorated: Bool)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/set(deletable:)","title":"func set(deletable: Bool)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/set(modal:)","title":"func set(modal: Bool)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/set(property:value:)","title":"func set(property: ToplevelPropertyName, value: Value)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/set(startupid:)","title":"func set(startupId: UnsafePointer<CChar>!)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/set(title:)","title":"func set(title: UnsafePointer<CChar>!)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/seticonlist(surfaces:)","title":"func setIconList<GLibListT>(surfaces: GLibListT)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/settransientfor(parent:)","title":"func setTransientFor<SurfaceT>(parent: SurfaceT)","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/showwindowmenu(event:)","title":"func showWindowMenu<EventT>(event: EventT) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/supportsedgeconstraints()","title":"func supportsEdgeConstraints() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevelref\/titlebar(gesture:)","title":"func titlebar(gesture: GdkTitlebarGesture) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelref\/computesizesignal","title":"static var computeSizeSignal: ToplevelSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/notifydecoratedsignal","title":"static var notifyDecoratedSignal: ToplevelSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/notifydeletablesignal","title":"static var notifyDeletableSignal: ToplevelSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/notifyfullscreenmodesignal","title":"static var notifyFullscreenModeSignal: ToplevelSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/notifyiconlistsignal","title":"static var notifyIconListSignal: ToplevelSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/notifymodalsignal","title":"static var notifyModalSignal: ToplevelSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/notifyshortcutsinhibitedsignal","title":"static var notifyShortcutsInhibitedSignal: ToplevelSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/notifystartupidsignal","title":"static var notifyStartupIdSignal: ToplevelSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/notifystatesignal","title":"static var notifyStateSignal: ToplevelSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/notifytitlesignal","title":"static var notifyTitleSignal: ToplevelSignalName","type":"property"},{"path":"\/documentation\/gdk\/toplevelref\/notifytransientforsignal","title":"static var notifyTransientForSignal: ToplevelSignalName","type":"property"}],"path":"\/documentation\/gdk\/toplevelref\/toplevelprotocol-implementations","title":"ToplevelProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/toplevelref","title":"ToplevelRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelsizeref\/init(_:)-1rirm","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/toplevelsizeref\/init(_:)-32nrr","title":"init!(UnsafePointer<GdkToplevelSize>?)","type":"init"},{"path":"\/documentation\/gdk\/toplevelsizeref\/init(_:)-43jay","title":"init(UnsafeMutablePointer<GdkToplevelSize>)","type":"init"},{"path":"\/documentation\/gdk\/toplevelsizeref\/init(_:)-6sxmg","title":"init!(UnsafeMutablePointer<GdkToplevelSize>?)","type":"init"},{"path":"\/documentation\/gdk\/toplevelsizeref\/init(_:)-77fj4","title":"init(UnsafePointer<GdkToplevelSize>)","type":"init"},{"path":"\/documentation\/gdk\/toplevelsizeref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/toplevelsizeref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/toplevelsizeref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/toplevelsizeref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/toplevelsizeref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/toplevelsizeref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelsizeref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelsizeref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/toplevelsizeref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelsizeref\/getbounds(boundswidth:boundsheight:)","title":"func getBounds(boundsWidth: UnsafeMutablePointer<gint>!, boundsHeight: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/gdk\/toplevelsizeref\/setminsize(minwidth:minheight:)","title":"func setMinSize(minWidth: Int, minHeight: Int)","type":"method"},{"path":"\/documentation\/gdk\/toplevelsizeref\/setshadowwidth(left:right:top:bottom:)","title":"func setShadowWidth(left: Int, right: Int, top: Int, bottom: Int)","type":"method"},{"path":"\/documentation\/gdk\/toplevelsizeref\/setsize(width:height:)","title":"func setSize(width: Int, height: Int)","type":"method"}],"path":"\/documentation\/gdk\/toplevelsizeref\/toplevelsizeprotocol-implementations","title":"ToplevelSizeProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/toplevelsizeref","title":"ToplevelSizeRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelstate\/init(_:)-5w40e","title":"init(GdkToplevelState)","type":"init"},{"path":"\/documentation\/gdk\/toplevelstate\/init(_:)-8dmmr","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/gdk\/toplevelstate\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelstate\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/gdk\/toplevelstate\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/gdk\/toplevelstate\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/gdk\/toplevelstate\/value","title":"var value: GdkToplevelState","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelstate\/above","title":"static let above: ToplevelState","type":"property"},{"path":"\/documentation\/gdk\/toplevelstate\/below","title":"static let below: ToplevelState","type":"property"},{"path":"\/documentation\/gdk\/toplevelstate\/bottomresizable","title":"static let bottomResizable: ToplevelState","type":"property"},{"path":"\/documentation\/gdk\/toplevelstate\/bottomtiled","title":"static let bottomTiled: ToplevelState","type":"property"},{"path":"\/documentation\/gdk\/toplevelstate\/focused","title":"static let focused: ToplevelState","type":"property"},{"path":"\/documentation\/gdk\/toplevelstate\/fullscreen","title":"static let fullscreen: ToplevelState","type":"property"},{"path":"\/documentation\/gdk\/toplevelstate\/leftresizable","title":"static let leftResizable: ToplevelState","type":"property"},{"path":"\/documentation\/gdk\/toplevelstate\/lefttiled","title":"static let leftTiled: ToplevelState","type":"property"},{"path":"\/documentation\/gdk\/toplevelstate\/maximized","title":"static let maximized: ToplevelState","type":"property"},{"path":"\/documentation\/gdk\/toplevelstate\/minimized","title":"static let minimized: ToplevelState","type":"property"},{"path":"\/documentation\/gdk\/toplevelstate\/rightresizable","title":"static let rightResizable: ToplevelState","type":"property"},{"path":"\/documentation\/gdk\/toplevelstate\/righttiled","title":"static let rightTiled: ToplevelState","type":"property"},{"path":"\/documentation\/gdk\/toplevelstate\/sticky","title":"static let sticky: ToplevelState","type":"property"},{"path":"\/documentation\/gdk\/toplevelstate\/suspended","title":"static let suspended: ToplevelState","type":"property"},{"path":"\/documentation\/gdk\/toplevelstate\/tiled","title":"static let tiled: ToplevelState","type":"property"},{"path":"\/documentation\/gdk\/toplevelstate\/topresizable","title":"static let topResizable: ToplevelState","type":"property"},{"path":"\/documentation\/gdk\/toplevelstate\/toptiled","title":"static let topTiled: ToplevelState","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/toplevelstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelstate\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelstate\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevelstate\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/gdk\/toplevelstate\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/gdk\/toplevelstate\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/gdk\/toplevelstate\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/gdk\/toplevelstate\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/gdk\/toplevelstate\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/gdk\/toplevelstate\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/gdk\/toplevelstate\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/gdk\/toplevelstate\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/gdk\/toplevelstate\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelstate\/init(_:)-20266","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/gdk\/toplevelstate\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelstate\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelstate\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevelstate\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevelstate\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevelstate\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevelstate\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toplevelstate\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/gdk\/toplevelstate\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/gdk\/toplevelstate\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/toplevelstate","title":"ToplevelState","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/toucheventref\/init(_:)-2c4x7","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/toucheventref\/init(_:)-4bhbl","title":"init(UnsafePointer<GdkTouchEvent>)","type":"init"},{"path":"\/documentation\/gdk\/toucheventref\/init(_:)-4omnr","title":"init!(UnsafePointer<GdkTouchEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/toucheventref\/init(_:)-796om","title":"init(UnsafeMutablePointer<GdkTouchEvent>)","type":"init"},{"path":"\/documentation\/gdk\/toucheventref\/init(_:)-98n07","title":"init!(UnsafeMutablePointer<GdkTouchEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/toucheventref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/toucheventref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/toucheventref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/toucheventref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/toucheventref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/toucheventref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toucheventref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toucheventref\/device","title":"var device: DeviceRef!","type":"property"},{"path":"\/documentation\/gdk\/toucheventref\/devicetool","title":"var deviceTool: DeviceToolRef!","type":"property"},{"path":"\/documentation\/gdk\/toucheventref\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/toucheventref\/eventsequence","title":"var eventSequence: EventSequenceRef!","type":"property"},{"path":"\/documentation\/gdk\/toucheventref\/eventtype","title":"var eventType: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/toucheventref\/event_ptr","title":"var event_ptr: UnsafeMutablePointer<GdkEvent>!","type":"property"},{"path":"\/documentation\/gdk\/toucheventref\/modifierstate","title":"var modifierState: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/toucheventref\/pointeremulated","title":"var pointerEmulated: Bool","type":"property"},{"path":"\/documentation\/gdk\/toucheventref\/seat","title":"var seat: SeatRef!","type":"property"},{"path":"\/documentation\/gdk\/toucheventref\/surface","title":"var surface: SurfaceRef!","type":"property"},{"path":"\/documentation\/gdk\/toucheventref\/time","title":"var time: guint32","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/toucheventref\/getangle(event2:angle:)","title":"func GetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toucheventref\/getcenter(event2:x:y:)","title":"func GetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toucheventref\/getdistance(event2:distance:)","title":"func GetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toucheventref\/eventsgetangle(event2:angle:)","title":"func eventsGetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toucheventref\/eventsgetcenter(event2:x:y:)","title":"func eventsGetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toucheventref\/eventsgetdistance(event2:distance:)","title":"func eventsGetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toucheventref\/get(axes:naxes:)","title":"func get(axes: UnsafeMutablePointer<UnsafeMutablePointer<CDouble>?>!, nAxes: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toucheventref\/getaxis(axisuse:value:)","title":"func getAxis(axisUse: GdkAxisUse, value: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toucheventref\/getdevice()","title":"func getDevice() -> DeviceRef!","type":"method"},{"path":"\/documentation\/gdk\/toucheventref\/getdevicetool()","title":"func getDeviceTool() -> DeviceToolRef!","type":"method"},{"path":"\/documentation\/gdk\/toucheventref\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/toucheventref\/geteventsequence()","title":"func getEventSequence() -> EventSequenceRef!","type":"method"},{"path":"\/documentation\/gdk\/toucheventref\/geteventtype()","title":"func getEventType() -> GdkEventType","type":"method"},{"path":"\/documentation\/gdk\/toucheventref\/gethistory(outncoords:)","title":"func getHistory(outNCoords: UnsafeMutablePointer<guint>!) -> UnsafeMutablePointer<GdkTimeCoord>!","type":"method"},{"path":"\/documentation\/gdk\/toucheventref\/getmodifierstate()","title":"func getModifierState() -> ModifierType","type":"method"},{"path":"\/documentation\/gdk\/toucheventref\/getpointeremulated()","title":"func getPointerEmulated() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toucheventref\/getposition(x:y:)","title":"func getPosition(x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toucheventref\/getseat()","title":"func getSeat() -> SeatRef!","type":"method"},{"path":"\/documentation\/gdk\/toucheventref\/getsurface()","title":"func getSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/toucheventref\/gettime()","title":"func getTime() -> guint32","type":"method"},{"path":"\/documentation\/gdk\/toucheventref\/ref()","title":"func ref() -> EventRef!","type":"method"},{"path":"\/documentation\/gdk\/toucheventref\/triggerscontextmenu()","title":"func triggersContextMenu() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/toucheventref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/gdk\/toucheventref\/eventprotocol-implementations","title":"EventProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/toucheventref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/toucheventref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toucheventref\/emulatingpointer","title":"var emulatingPointer: Bool","type":"property"},{"path":"\/documentation\/gdk\/toucheventref\/touch_event_ptr","title":"var touch_event_ptr: UnsafeMutablePointer<GdkTouchEvent>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/toucheventref\/getemulatingpointer()","title":"func getEmulatingPointer() -> Bool","type":"method"}],"path":"\/documentation\/gdk\/toucheventref\/toucheventprotocol-implementations","title":"TouchEventProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/toucheventref","title":"TouchEventRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/touchpadeventref\/init(_:)-2qp4i","title":"init(UnsafeMutablePointer<GdkTouchpadEvent>)","type":"init"},{"path":"\/documentation\/gdk\/touchpadeventref\/init(_:)-2rq29","title":"init!(UnsafeMutablePointer<GdkTouchpadEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/touchpadeventref\/init(_:)-4nvig","title":"init!(UnsafePointer<GdkTouchpadEvent>?)","type":"init"},{"path":"\/documentation\/gdk\/touchpadeventref\/init(_:)-7s185","title":"init(UnsafePointer<GdkTouchpadEvent>)","type":"init"},{"path":"\/documentation\/gdk\/touchpadeventref\/init(_:)-8c78f","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/touchpadeventref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/touchpadeventref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/touchpadeventref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/touchpadeventref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/touchpadeventref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/touchpadeventref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/touchpadeventref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/touchpadeventref\/device","title":"var device: DeviceRef!","type":"property"},{"path":"\/documentation\/gdk\/touchpadeventref\/devicetool","title":"var deviceTool: DeviceToolRef!","type":"property"},{"path":"\/documentation\/gdk\/touchpadeventref\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/touchpadeventref\/eventsequence","title":"var eventSequence: EventSequenceRef!","type":"property"},{"path":"\/documentation\/gdk\/touchpadeventref\/eventtype","title":"var eventType: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/touchpadeventref\/event_ptr","title":"var event_ptr: UnsafeMutablePointer<GdkEvent>!","type":"property"},{"path":"\/documentation\/gdk\/touchpadeventref\/modifierstate","title":"var modifierState: ModifierType","type":"property"},{"path":"\/documentation\/gdk\/touchpadeventref\/pointeremulated","title":"var pointerEmulated: Bool","type":"property"},{"path":"\/documentation\/gdk\/touchpadeventref\/seat","title":"var seat: SeatRef!","type":"property"},{"path":"\/documentation\/gdk\/touchpadeventref\/surface","title":"var surface: SurfaceRef!","type":"property"},{"path":"\/documentation\/gdk\/touchpadeventref\/time","title":"var time: guint32","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/touchpadeventref\/getangle(event2:angle:)","title":"func GetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/touchpadeventref\/getcenter(event2:x:y:)","title":"func GetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/touchpadeventref\/getdistance(event2:distance:)","title":"func GetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/touchpadeventref\/eventsgetangle(event2:angle:)","title":"func eventsGetAngle<EventT>(event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/touchpadeventref\/eventsgetcenter(event2:x:y:)","title":"func eventsGetCenter<EventT>(event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/touchpadeventref\/eventsgetdistance(event2:distance:)","title":"func eventsGetDistance<EventT>(event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/touchpadeventref\/get(axes:naxes:)","title":"func get(axes: UnsafeMutablePointer<UnsafeMutablePointer<CDouble>?>!, nAxes: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/touchpadeventref\/getaxis(axisuse:value:)","title":"func getAxis(axisUse: GdkAxisUse, value: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/touchpadeventref\/getdevice()","title":"func getDevice() -> DeviceRef!","type":"method"},{"path":"\/documentation\/gdk\/touchpadeventref\/getdevicetool()","title":"func getDeviceTool() -> DeviceToolRef!","type":"method"},{"path":"\/documentation\/gdk\/touchpadeventref\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/touchpadeventref\/geteventsequence()","title":"func getEventSequence() -> EventSequenceRef!","type":"method"},{"path":"\/documentation\/gdk\/touchpadeventref\/geteventtype()","title":"func getEventType() -> GdkEventType","type":"method"},{"path":"\/documentation\/gdk\/touchpadeventref\/gethistory(outncoords:)","title":"func getHistory(outNCoords: UnsafeMutablePointer<guint>!) -> UnsafeMutablePointer<GdkTimeCoord>!","type":"method"},{"path":"\/documentation\/gdk\/touchpadeventref\/getmodifierstate()","title":"func getModifierState() -> ModifierType","type":"method"},{"path":"\/documentation\/gdk\/touchpadeventref\/getpointeremulated()","title":"func getPointerEmulated() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/touchpadeventref\/getposition(x:y:)","title":"func getPosition(x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/touchpadeventref\/getseat()","title":"func getSeat() -> SeatRef!","type":"method"},{"path":"\/documentation\/gdk\/touchpadeventref\/getsurface()","title":"func getSurface() -> SurfaceRef!","type":"method"},{"path":"\/documentation\/gdk\/touchpadeventref\/gettime()","title":"func getTime() -> guint32","type":"method"},{"path":"\/documentation\/gdk\/touchpadeventref\/ref()","title":"func ref() -> EventRef!","type":"method"},{"path":"\/documentation\/gdk\/touchpadeventref\/triggerscontextmenu()","title":"func triggersContextMenu() -> Bool","type":"method"},{"path":"\/documentation\/gdk\/touchpadeventref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/gdk\/touchpadeventref\/eventprotocol-implementations","title":"EventProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/touchpadeventref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/touchpadeventref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/touchpadeventref\/gesturephase","title":"var gesturePhase: GdkTouchpadGesturePhase","type":"property"},{"path":"\/documentation\/gdk\/touchpadeventref\/nfingers","title":"var nFingers: Int","type":"property"},{"path":"\/documentation\/gdk\/touchpadeventref\/pinchangledelta","title":"var pinchAngleDelta: CDouble","type":"property"},{"path":"\/documentation\/gdk\/touchpadeventref\/pinchscale","title":"var pinchScale: CDouble","type":"property"},{"path":"\/documentation\/gdk\/touchpadeventref\/touchpad_event_ptr","title":"var touchpad_event_ptr: UnsafeMutablePointer<GdkTouchpadEvent>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/touchpadeventref\/getdeltas(dx:dy:)","title":"func getDeltas(dx: UnsafeMutablePointer<CDouble>!, dy: UnsafeMutablePointer<CDouble>!)","type":"method"},{"path":"\/documentation\/gdk\/touchpadeventref\/getgesturephase()","title":"func getGesturePhase() -> GdkTouchpadGesturePhase","type":"method"},{"path":"\/documentation\/gdk\/touchpadeventref\/getnfingers()","title":"func getNFingers() -> Int","type":"method"},{"path":"\/documentation\/gdk\/touchpadeventref\/getpinchangledelta()","title":"func getPinchAngleDelta() -> CDouble","type":"method"},{"path":"\/documentation\/gdk\/touchpadeventref\/getpinchscale()","title":"func getPinchScale() -> CDouble","type":"method"}],"path":"\/documentation\/gdk\/touchpadeventref\/touchpadeventprotocol-implementations","title":"TouchpadEventProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/touchpadeventref","title":"TouchpadEventRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontextref\/init(_:)-4ru26","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/gdk\/vulkancontextref\/init(_:)-717qy","title":"init(UnsafePointer<GdkVulkanContext>)","type":"init"},{"path":"\/documentation\/gdk\/vulkancontextref\/init(_:)-7ywsn","title":"init!(UnsafeMutablePointer<GdkVulkanContext>?)","type":"init"},{"path":"\/documentation\/gdk\/vulkancontextref\/init(_:)-84og1","title":"init(UnsafeMutablePointer<GdkVulkanContext>)","type":"init"},{"path":"\/documentation\/gdk\/vulkancontextref\/init(_:)-nexa","title":"init!(UnsafePointer<GdkVulkanContext>?)","type":"init"},{"path":"\/documentation\/gdk\/vulkancontextref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/vulkancontextref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/gdk\/vulkancontextref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/gdk\/vulkancontextref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/gdk\/vulkancontextref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/gdk\/vulkancontextref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontextref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontextref\/unowned(_:)","title":"static func unowned<T>(T) -> VulkanContextRef","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontextref\/display","title":"var display: DisplayRef!","type":"property"},{"path":"\/documentation\/gdk\/vulkancontextref\/draw_context_ptr","title":"var draw_context_ptr: UnsafeMutablePointer<GdkDrawContext>!","type":"property"},{"path":"\/documentation\/gdk\/vulkancontextref\/frameregion","title":"var frameRegion: RegionRef!","type":"property"},{"path":"\/documentation\/gdk\/vulkancontextref\/isinframe","title":"var isInFrame: Bool","type":"property"},{"path":"\/documentation\/gdk\/vulkancontextref\/surface","title":"var surface: SurfaceRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontextref\/beginframe(region:)","title":"func beginFrame<cairoRegionT>(region: cairoRegionT)","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/bind(property:to:_:flags:transformfrom:transformto:)-6pihc","title":"func bind<Q, T>(property: DrawContextPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/endframe()","title":"func endFrame()","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/getdisplay()","title":"func getDisplay() -> DisplayRef!","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/getframeregion()","title":"func getFrameRegion() -> RegionRef!","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/getsurface()","title":"func getSurface() -> SurfaceRef!","type":"method"}],"path":"\/documentation\/gdk\/vulkancontextref\/drawcontextprotocol-implementations","title":"DrawContextProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontextref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/gdk\/vulkancontextref\/gweakcapturing-implementations","title":"GWeakCapturing Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontextref\/initable_ptr","title":"var initable_ptr: UnsafeMutablePointer<GInitable>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontextref\/init_(cancellable:)","title":"func init_(cancellable: CancellableRef?) throws -> Bool","type":"method"}],"path":"\/documentation\/gdk\/vulkancontextref\/initableprotocol-implementations","title":"InitableProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontextref\/gtypeinstance","title":"var gTypeInstance: GTypeInstance","type":"property"},{"path":"\/documentation\/gdk\/vulkancontextref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/gdk\/vulkancontextref\/object_ptr","title":"var object_ptr: UnsafeMutablePointer<GObject>!","type":"property"},{"path":"\/documentation\/gdk\/vulkancontextref\/swiftobj","title":"var swiftObj: AnyObject?","type":"property"},{"path":"\/documentation\/gdk\/vulkancontextref\/type","title":"var type: GType","type":"property"},{"path":"\/documentation\/gdk\/vulkancontextref\/typename","title":"var typeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontextref\/addtoggleref(notify:data:)","title":"func addToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/addweakobserver(_:)","title":"func addWeakObserver((gpointer) -> Void) -> AnyObject","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/addweakpointer(weakpointerlocation:)","title":"func addWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/bind(_:target:property:flags:)","title":"func bind<P, Q, T>(P, target: T, property: Q, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/bind(_:to:property:flags:convertfrom:convertto:)-2r17f","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U) -> V?, convertTo: (V) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/bind(_:to:property:flags:convertfrom:convertto:)-5t47f","title":"func bind<P, Q, T, U, V>(P, to: T, property: Q, flags: BindingFlags, convertFrom: (U?) -> V?, convertTo: (V?) -> U?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/bind(_:to:property:flags:transformfrom:transformto:)","title":"func bind<P, Q, T>(P, to: T, property: Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/bindproperty(sourceproperty:target:targetproperty:flags:)","title":"func bindProperty<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/bindpropertyfull(sourceproperty:target:targetproperty:flags:transformto:transformfrom:userdata:notify:)","title":"func bindPropertyFull<ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: GBindingTransformFunc?, transformFrom: GBindingTransformFunc?, userData: gpointer?, notify: GDestroyNotify?) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/bindpropertywithclosures(sourceproperty:target:targetproperty:flags:transformto:transformfrom:)","title":"func bindPropertyWithClosures<ClosureT, ObjectT>(sourceProperty: UnsafePointer<gchar>!, target: ObjectT, targetProperty: UnsafePointer<gchar>!, flags: BindingFlags, transformTo: ClosureT, transformFrom: ClosureT) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/cclosurenewobject(callbackfunc:)","title":"func cclosureNewObject(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/cclosurenewobjectswap(callbackfunc:)","title":"func cclosureNewObjectSwap(callbackFunc: GCallback) -> ClosureRef!","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/clearsignalhandler(handleridptr:)","title":"func clearSignalHandler(handlerIDPtr: UnsafeMutablePointer<gulong>!)","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/connect(_:flags:handler:)","title":"func connect<S>(S, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/connectsignal(_:flags:data:destroydata:handler:)","title":"func connectSignal<S>(S, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, handler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/dupdata(key:dupfunc:userdata:)","title":"func dupData(key: UnsafePointer<gchar>!, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/dupqdata(quark:dupfunc:userdata:)","title":"func dupQdata(quark: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/emit(_:_:)","title":"func emit<S>(S, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/emit(_:arguments:)","title":"func emit<S>(S, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/emit(signal:detail:_:)","title":"func emit(signal: Int, detail: GQuark, CVarArg...)","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/emit(signal:detail:arguments:)","title":"func emit(signal: Int, detail: GQuark, arguments: [CVarArg])","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/forcefloating()","title":"func forceFloating()","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/freeze(context:)","title":"func freeze(context: UnsafeMutablePointer<GObjectNotifyContext>?) -> UnsafeMutablePointer<GObjectNotifyQueue>?","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/freezenotify()","title":"func freezeNotify()","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/getdata(key:)","title":"func getData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/getproperty(propertyname:value:)","title":"func getProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/getqdata(quark:)","title":"func getQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/getvalist(firstpropertyname:varargs:)","title":"func getValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/getv(nproperties:names:values:)","title":"func getv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafeMutablePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/notify(propertyname:)","title":"func notify(propertyName: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/notifyby(pspec:)","title":"func notifyBy<ParamSpecT>(pspec: ParamSpecT)","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/onnotify(flags:handler:)","title":"func onNotify(flags: ConnectFlags, handler: (ObjectRef, ParamSpecRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/ref()","title":"func ref() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/refsink()","title":"func refSink() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/removetoggleref(notify:data:)","title":"func removeToggleRef(notify: GToggleNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/removeweakpointer(weakpointerlocation:)","title":"func removeWeakPointer(weakPointerLocation: UnsafeMutablePointer<gpointer?>!)","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/replacedata(key:oldval:newval:destroy:olddestroy:)","title":"func replaceData(key: UnsafePointer<gchar>!, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/replaceqdata(quark:oldval:newval:destroy:olddestroy:)","title":"func replaceQdata(quark: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/rundispose()","title":"func runDispose()","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/setdata(key:data:)","title":"func setData(key: UnsafePointer<gchar>!, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/setdatafull(key:data:destroy:)","title":"func setDataFull(key: UnsafePointer<gchar>!, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/setproperty(propertyname:value:)","title":"func setProperty<ValueT>(propertyName: UnsafePointer<gchar>!, value: ValueT)","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/setqdata(quark:data:)","title":"func setQdata(quark: GQuark, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/setqdatafull(quark:data:destroy:)","title":"func setQdataFull(quark: GQuark, data: gpointer?, destroy: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/setvalist(firstpropertyname:varargs:)","title":"func setValist(firstPropertyName: UnsafePointer<gchar>!, varArgs: CVaListPointer)","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/setv(nproperties:names:values:)","title":"func setv(nProperties: Int, names: UnsafeMutablePointer<UnsafePointer<gchar>?>!, values: UnsafePointer<GValue>!)","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/signalconnectclosure(detailedsignal:closure:after:)","title":"func signalConnectClosure<ClosureT>(detailedSignal: UnsafePointer<gchar>!, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/signalconnectclosurebyid(signalid:detail:closure:after:)","title":"func signalConnectClosureByID<ClosureT>(signalID: Int, detail: GQuark, closure: ClosureT, after: Bool) -> Int","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/signalconnectdata(detailedsignal:chandler:data:destroydata:connectflags:)","title":"func signalConnectData(detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, data: gpointer?, destroyData: GClosureNotify?, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/signalconnectobject(instance:detailedsignal:chandler:connectflags:)","title":"func signalConnectObject<TypeInstanceT>(instance: TypeInstanceT, detailedSignal: UnsafePointer<gchar>!, cHandler: GCallback, connectFlags: ConnectFlags) -> Int","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/signalgetinvocationhint()","title":"func signalGetInvocationHint() -> SignalInvocationHintRef!","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/signalhandlerblock(handlerid:)","title":"func signalHandlerBlock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/signalhandlerdisconnect(handlerid:)","title":"func signalHandlerDisconnect(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/signalhandlerfind(mask:signalid:detail:closure:func:data:)","title":"func signalHandlerFind(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/signalhandlerisconnected(handlerid:)","title":"func signalHandlerIsConnected(handlerID: Int) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/signalhandlerunblock(handlerid:)","title":"func signalHandlerUnblock(handlerID: Int)","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/signalhandlersblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersBlockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/signalhandlersdestroy()","title":"func signalHandlersDestroy()","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/signalhandlersdisconnectmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersDisconnectMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/signalhandlersunblockmatched(mask:signalid:detail:closure:func:data:)","title":"func signalHandlersUnblockMatched(mask: SignalMatchType, signalID: Int, detail: GQuark, closure: ClosureRef?, func: gpointer?, data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/signalhashandlerpending(signalid:detail:maybeblocked:)","title":"func signalHasHandlerPending(signalID: Int, detail: GQuark, mayBeBlocked: Bool) -> Bool","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/signalstopemission(signalid:detail:)","title":"func signalStopEmission(signalID: Int, detail: GQuark)","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/signalstopemissionbyname(detailedsignal:)","title":"func signalStopEmissionByName(detailedSignal: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/stealdata(key:)","title":"func stealData(key: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/stealqdata(quark:)","title":"func stealQdata(quark: GQuark) -> gpointer?","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/takeref()","title":"func takeRef() -> ObjectRef!","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/thaw(queue:)","title":"func thaw(queue: UnsafeMutablePointer<GObjectNotifyQueue>)","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/thawnotify()","title":"func thawNotify()","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/watch(closure:)","title":"func watch<ClosureT>(closure: ClosureT)","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/weakref(notify:data:)","title":"func weakRef(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/weakunref(notify:data:)","title":"func weakUnref(notify: GWeakNotify?, data: gpointer?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontextref\/notifysignal","title":"static var notifySignal: ObjectSignalName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontextref\/new(_:)","title":"static func new(GType) -> Object!","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/new(type:)","title":"static func new(type: GType) -> gpointer!","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/newreferenceto(instanceof:)","title":"static func newReferenceTo(instanceOf: GType) -> ObjectRef!","type":"method"}],"path":"\/documentation\/gdk\/vulkancontextref\/objectprotocol-implementations","title":"ObjectProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontextref\/vulkan_context_ptr","title":"var vulkan_context_ptr: UnsafeMutablePointer<GdkVulkanContext>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontextref\/bind(property:to:_:flags:transformfrom:transformto:)-3kmv2","title":"func bind<Q, T>(property: VulkanContextPropertyName, to: T, Q, flags: BindingFlags, transformFrom: ValueTransformer, transformTo: ValueTransformer) -> BindingRef!","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/connect(signal:flags:data:destroydata:signalhandler:)","title":"func connect(signal: VulkanContextSignalName, flags: ConnectFlags, data: gpointer!, destroyData: GClosureNotify?, signalHandler: GCallback) -> Int","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/connect(signal:flags:handler:)","title":"func connect(signal: VulkanContextSignalName, flags: ConnectFlags, handler: SignalHandler) -> Int","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/get(property:)","title":"func get(property: VulkanContextPropertyName) -> Value","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/onimagesupdated(flags:handler:)","title":"func onImagesUpdated(flags: ConnectFlags, handler: (VulkanContextRef) -> Void) -> Int","type":"method"},{"path":"\/documentation\/gdk\/vulkancontextref\/set(property:value:)","title":"func set(property: VulkanContextPropertyName, value: Value)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontextref\/imagesupdatedsignal","title":"static var imagesUpdatedSignal: VulkanContextSignalName","type":"property"}],"path":"\/documentation\/gdk\/vulkancontextref\/vulkancontextprotocol-implementations","title":"VulkanContextProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/vulkancontextref","title":"VulkanContextRef","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/gdk\/action_all","title":"let ACTION_ALL: Int32","type":"var"},{"path":"\/documentation\/gdk\/button_middle","title":"let BUTTON_MIDDLE: Int32","type":"var"},{"path":"\/documentation\/gdk\/button_primary","title":"let BUTTON_PRIMARY: Int32","type":"var"},{"path":"\/documentation\/gdk\/button_secondary","title":"let BUTTON_SECONDARY: Int32","type":"var"},{"path":"\/documentation\/gdk\/current_time","title":"let CURRENT_TIME: Int","type":"var"},{"path":"\/documentation\/gdk\/event_propagate","title":"let EVENT_PROPAGATE: Int32","type":"var"},{"path":"\/documentation\/gdk\/event_stop","title":"let EVENT_STOP: Int","type":"var"},{"path":"\/documentation\/gdk\/key_0","title":"let KEY_0: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_1","title":"let KEY_1: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_2","title":"let KEY_2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_3","title":"let KEY_3: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_3270_altcursor","title":"let KEY_3270_AltCursor: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_3270_attn","title":"let KEY_3270_Attn: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_3270_backtab","title":"let KEY_3270_BackTab: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_3270_changescreen","title":"let KEY_3270_ChangeScreen: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_3270_copy","title":"let KEY_3270_Copy: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_3270_cursorblink","title":"let KEY_3270_CursorBlink: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_3270_cursorselect","title":"let KEY_3270_CursorSelect: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_3270_deleteword","title":"let KEY_3270_DeleteWord: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_3270_duplicate","title":"let KEY_3270_Duplicate: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_3270_enter","title":"let KEY_3270_Enter: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_3270_eraseeof","title":"let KEY_3270_EraseEOF: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_3270_eraseinput","title":"let KEY_3270_EraseInput: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_3270_exselect","title":"let KEY_3270_ExSelect: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_3270_fieldmark","title":"let KEY_3270_FieldMark: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_3270_ident","title":"let KEY_3270_Ident: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_3270_jump","title":"let KEY_3270_Jump: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_3270_keyclick","title":"let KEY_3270_KeyClick: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_3270_left2","title":"let KEY_3270_Left2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_3270_pa1","title":"let KEY_3270_PA1: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_3270_pa2","title":"let KEY_3270_PA2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_3270_pa3","title":"let KEY_3270_PA3: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_3270_play","title":"let KEY_3270_Play: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_3270_printscreen","title":"let KEY_3270_PrintScreen: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_3270_quit","title":"let KEY_3270_Quit: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_3270_record","title":"let KEY_3270_Record: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_3270_reset","title":"let KEY_3270_Reset: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_3270_right2","title":"let KEY_3270_Right2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_3270_rule","title":"let KEY_3270_Rule: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_3270_setup","title":"let KEY_3270_Setup: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_3270_test","title":"let KEY_3270_Test: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_4","title":"let KEY_4: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_5","title":"let KEY_5: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_6","title":"let KEY_6: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_7","title":"let KEY_7: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_8","title":"let KEY_8: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_9","title":"let KEY_9: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_a-36dpx","title":"let KEY_A: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ae-5bpyx","title":"let KEY_AE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_aacute-35zi8","title":"let KEY_Aacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_abelowdot-68ssr","title":"let KEY_Abelowdot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_abreve-97fl1","title":"let KEY_Abreve: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_abreveacute-49kb3","title":"let KEY_Abreveacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_abrevebelowdot-8qehn","title":"let KEY_Abrevebelowdot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_abrevegrave-w25o","title":"let KEY_Abrevegrave: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_abrevehook-33f37","title":"let KEY_Abrevehook: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_abrevetilde-iomt","title":"let KEY_Abrevetilde: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_accessx_enable","title":"let KEY_AccessX_Enable: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_accessx_feedback_enable","title":"let KEY_AccessX_Feedback_Enable: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_acircumflex-23o3g","title":"let KEY_Acircumflex: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_acircumflexacute-2cb30","title":"let KEY_Acircumflexacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_acircumflexbelowdot-9x85o","title":"let KEY_Acircumflexbelowdot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_acircumflexgrave-5b3cs","title":"let KEY_Acircumflexgrave: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_acircumflexhook-xmvb","title":"let KEY_Acircumflexhook: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_acircumflextilde-7tdub","title":"let KEY_Acircumflextilde: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_addfavorite","title":"let KEY_AddFavorite: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_adiaeresis-6a670","title":"let KEY_Adiaeresis: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_agrave-4m0y1","title":"let KEY_Agrave: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ahook-6ar6c","title":"let KEY_Ahook: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_alt_l","title":"let KEY_Alt_L: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_alt_r","title":"let KEY_Alt_R: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_amacron-9kbq","title":"let KEY_Amacron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_aogonek-14lau","title":"let KEY_Aogonek: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_applicationleft","title":"let KEY_ApplicationLeft: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_applicationright","title":"let KEY_ApplicationRight: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_0","title":"let KEY_Arabic_0: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_1","title":"let KEY_Arabic_1: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_2","title":"let KEY_Arabic_2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_3","title":"let KEY_Arabic_3: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_4","title":"let KEY_Arabic_4: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_5","title":"let KEY_Arabic_5: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_6","title":"let KEY_Arabic_6: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_7","title":"let KEY_Arabic_7: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_8","title":"let KEY_Arabic_8: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_9","title":"let KEY_Arabic_9: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_ain","title":"let KEY_Arabic_ain: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_alef","title":"let KEY_Arabic_alef: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_alefmaksura","title":"let KEY_Arabic_alefmaksura: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_beh","title":"let KEY_Arabic_beh: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_comma","title":"let KEY_Arabic_comma: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_dad","title":"let KEY_Arabic_dad: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_dal","title":"let KEY_Arabic_dal: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_damma","title":"let KEY_Arabic_damma: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_dammatan","title":"let KEY_Arabic_dammatan: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_ddal","title":"let KEY_Arabic_ddal: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_farsi_yeh","title":"let KEY_Arabic_farsi_yeh: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_fatha","title":"let KEY_Arabic_fatha: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_fathatan","title":"let KEY_Arabic_fathatan: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_feh","title":"let KEY_Arabic_feh: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_fullstop","title":"let KEY_Arabic_fullstop: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_gaf","title":"let KEY_Arabic_gaf: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_ghain","title":"let KEY_Arabic_ghain: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_ha","title":"let KEY_Arabic_ha: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_hah","title":"let KEY_Arabic_hah: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_hamza","title":"let KEY_Arabic_hamza: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_hamza_above","title":"let KEY_Arabic_hamza_above: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_hamza_below","title":"let KEY_Arabic_hamza_below: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_hamzaonalef","title":"let KEY_Arabic_hamzaonalef: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_hamzaonwaw","title":"let KEY_Arabic_hamzaonwaw: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_hamzaonyeh","title":"let KEY_Arabic_hamzaonyeh: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_hamzaunderalef","title":"let KEY_Arabic_hamzaunderalef: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_heh","title":"let KEY_Arabic_heh: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_heh_doachashmee","title":"let KEY_Arabic_heh_doachashmee: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_heh_goal","title":"let KEY_Arabic_heh_goal: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_jeem","title":"let KEY_Arabic_jeem: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_jeh","title":"let KEY_Arabic_jeh: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_kaf","title":"let KEY_Arabic_kaf: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_kasra","title":"let KEY_Arabic_kasra: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_kasratan","title":"let KEY_Arabic_kasratan: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_keheh","title":"let KEY_Arabic_keheh: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_khah","title":"let KEY_Arabic_khah: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_lam","title":"let KEY_Arabic_lam: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_madda_above","title":"let KEY_Arabic_madda_above: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_maddaonalef","title":"let KEY_Arabic_maddaonalef: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_meem","title":"let KEY_Arabic_meem: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_noon","title":"let KEY_Arabic_noon: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_noon_ghunna","title":"let KEY_Arabic_noon_ghunna: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_peh","title":"let KEY_Arabic_peh: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_percent","title":"let KEY_Arabic_percent: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_qaf","title":"let KEY_Arabic_qaf: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_question_mark","title":"let KEY_Arabic_question_mark: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_ra","title":"let KEY_Arabic_ra: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_rreh","title":"let KEY_Arabic_rreh: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_sad","title":"let KEY_Arabic_sad: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_seen","title":"let KEY_Arabic_seen: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_semicolon","title":"let KEY_Arabic_semicolon: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_shadda","title":"let KEY_Arabic_shadda: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_sheen","title":"let KEY_Arabic_sheen: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_sukun","title":"let KEY_Arabic_sukun: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_superscript_alef","title":"let KEY_Arabic_superscript_alef: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_switch","title":"let KEY_Arabic_switch: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_tah","title":"let KEY_Arabic_tah: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_tatweel","title":"let KEY_Arabic_tatweel: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_tcheh","title":"let KEY_Arabic_tcheh: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_teh","title":"let KEY_Arabic_teh: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_tehmarbuta","title":"let KEY_Arabic_tehmarbuta: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_thal","title":"let KEY_Arabic_thal: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_theh","title":"let KEY_Arabic_theh: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_tteh","title":"let KEY_Arabic_tteh: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_veh","title":"let KEY_Arabic_veh: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_waw","title":"let KEY_Arabic_waw: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_yeh","title":"let KEY_Arabic_yeh: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_yeh_baree","title":"let KEY_Arabic_yeh_baree: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_zah","title":"let KEY_Arabic_zah: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_arabic_zain","title":"let KEY_Arabic_zain: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_aring-7xcpz","title":"let KEY_Aring: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_at-2g1te","title":"let KEY_Armenian_AT: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_ayb-2jww6","title":"let KEY_Armenian_AYB: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_ben-lz1n","title":"let KEY_Armenian_BEN: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_cha-1z783","title":"let KEY_Armenian_CHA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_da-6bsc1","title":"let KEY_Armenian_DA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_dza-3w2c8","title":"let KEY_Armenian_DZA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_e-34j5r","title":"let KEY_Armenian_E: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_fe-7xdsn","title":"let KEY_Armenian_FE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_ghat-8dfpd","title":"let KEY_Armenian_GHAT: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_gim-9g2un","title":"let KEY_Armenian_GIM: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_hi-5sqwa","title":"let KEY_Armenian_HI: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_ho-71lwg","title":"let KEY_Armenian_HO: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_ini-1yu9q","title":"let KEY_Armenian_INI: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_je-3tvfb","title":"let KEY_Armenian_JE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_ke-60gnp","title":"let KEY_Armenian_KE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_ken-8y6b0","title":"let KEY_Armenian_KEN: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_khe-7ktn7","title":"let KEY_Armenian_KHE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_lyun-2vwwv","title":"let KEY_Armenian_LYUN: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_men-6j54k","title":"let KEY_Armenian_MEN: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_nu-5jy3s","title":"let KEY_Armenian_NU: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_o-4g01t","title":"let KEY_Armenian_O: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_pe-8ej9e","title":"let KEY_Armenian_PE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_pyur-hxde","title":"let KEY_Armenian_PYUR: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_ra-8c9v4","title":"let KEY_Armenian_RA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_re-4x5ln","title":"let KEY_Armenian_RE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_se-82op8","title":"let KEY_Armenian_SE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_sha-8psc8","title":"let KEY_Armenian_SHA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_tche-6827c","title":"let KEY_Armenian_TCHE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_to-xh9i","title":"let KEY_Armenian_TO: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_tsa-g7sw","title":"let KEY_Armenian_TSA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_tso-36rpo","title":"let KEY_Armenian_TSO: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_tyun-2fd8d","title":"let KEY_Armenian_TYUN: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_vev-4zlug","title":"let KEY_Armenian_VEV: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_vo-rwta","title":"let KEY_Armenian_VO: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_vyun-8yfto","title":"let KEY_Armenian_VYUN: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_yech-8u9tf","title":"let KEY_Armenian_YECH: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_za-35vz8","title":"let KEY_Armenian_ZA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_zhe-92pwy","title":"let KEY_Armenian_ZHE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_accent","title":"let KEY_Armenian_accent: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_amanak","title":"let KEY_Armenian_amanak: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_apostrophe","title":"let KEY_Armenian_apostrophe: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_at-7xt9g","title":"let KEY_Armenian_at: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_ayb-4ubx7","title":"let KEY_Armenian_ayb: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_ben-2g06v","title":"let KEY_Armenian_ben: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_but","title":"let KEY_Armenian_but: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_cha-335k5","title":"let KEY_Armenian_cha: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_da-76q3s","title":"let KEY_Armenian_da: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_dza-63b6k","title":"let KEY_Armenian_dza: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_e-8vi72","title":"let KEY_Armenian_e: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_exclam","title":"let KEY_Armenian_exclam: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_fe-6hf3n","title":"let KEY_Armenian_fe: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_full_stop","title":"let KEY_Armenian_full_stop: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_ghat-2mljc","title":"let KEY_Armenian_ghat: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_gim-jv4","title":"let KEY_Armenian_gim: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_hi-6tu74","title":"let KEY_Armenian_hi: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_ho-2tsv7","title":"let KEY_Armenian_ho: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_hyphen","title":"let KEY_Armenian_hyphen: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_ini-3b9en","title":"let KEY_Armenian_ini: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_je-4ot72","title":"let KEY_Armenian_je: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_ke-5qjl7","title":"let KEY_Armenian_ke: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_ken-6q93r","title":"let KEY_Armenian_ken: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_khe-88i1j","title":"let KEY_Armenian_khe: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_ligature_ew","title":"let KEY_Armenian_ligature_ew: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_lyun-4zx5h","title":"let KEY_Armenian_lyun: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_men-6qsc6","title":"let KEY_Armenian_men: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_nu-6evpz","title":"let KEY_Armenian_nu: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_o-5aecl","title":"let KEY_Armenian_o: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_paruyk","title":"let KEY_Armenian_paruyk: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_pe-99hb9","title":"let KEY_Armenian_pe: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_pyur-32ufi","title":"let KEY_Armenian_pyur: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_question","title":"let KEY_Armenian_question: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_ra-26kr6","title":"let KEY_Armenian_ra: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_re-74ak3","title":"let KEY_Armenian_re: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_se-8xmad","title":"let KEY_Armenian_se: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_separation_mark","title":"let KEY_Armenian_separation_mark: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_sha-4da8r","title":"let KEY_Armenian_sha: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_shesht","title":"let KEY_Armenian_shesht: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_tche-7gyqy","title":"let KEY_Armenian_tche: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_to-1sev1","title":"let KEY_Armenian_to: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_tsa-4fdxx","title":"let KEY_Armenian_tsa: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_tso-2mskn","title":"let KEY_Armenian_tso: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_tyun-788x6","title":"let KEY_Armenian_tyun: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_verjaket","title":"let KEY_Armenian_verjaket: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_vev-3kcxp","title":"let KEY_Armenian_vev: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_vo-2ppg4","title":"let KEY_Armenian_vo: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_vyun-waa9","title":"let KEY_Armenian_vyun: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_yech-10wov","title":"let KEY_Armenian_yech: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_yentamna","title":"let KEY_Armenian_yentamna: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_za-40tvn","title":"let KEY_Armenian_za: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_armenian_zhe-qtw0","title":"let KEY_Armenian_zhe: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_atilde-5h5oc","title":"let KEY_Atilde: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_audiblebell_enable","title":"let KEY_AudibleBell_Enable: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_audiocycletrack","title":"let KEY_AudioCycleTrack: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_audioforward","title":"let KEY_AudioForward: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_audiolowervolume","title":"let KEY_AudioLowerVolume: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_audiomedia","title":"let KEY_AudioMedia: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_audiomicmute","title":"let KEY_AudioMicMute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_audiomute","title":"let KEY_AudioMute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_audionext","title":"let KEY_AudioNext: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_audiopause","title":"let KEY_AudioPause: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_audioplay","title":"let KEY_AudioPlay: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_audiopreset","title":"let KEY_AudioPreset: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_audioprev","title":"let KEY_AudioPrev: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_audioraisevolume","title":"let KEY_AudioRaiseVolume: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_audiorandomplay","title":"let KEY_AudioRandomPlay: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_audiorecord","title":"let KEY_AudioRecord: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_audiorepeat","title":"let KEY_AudioRepeat: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_audiorewind","title":"let KEY_AudioRewind: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_audiostop","title":"let KEY_AudioStop: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_away","title":"let KEY_Away: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_b-8thp0","title":"let KEY_B: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_babovedot-2ad6h","title":"let KEY_Babovedot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_back","title":"let KEY_Back: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_backforward","title":"let KEY_BackForward: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_backspace","title":"let KEY_BackSpace: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_battery","title":"let KEY_Battery: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_begin","title":"let KEY_Begin: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_blue","title":"let KEY_Blue: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_bluetooth","title":"let KEY_Bluetooth: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_book","title":"let KEY_Book: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_bouncekeys_enable","title":"let KEY_BounceKeys_Enable: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_break","title":"let KEY_Break: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_brightnessadjust","title":"let KEY_BrightnessAdjust: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_byelorussian_shortu-19cpz","title":"let KEY_Byelorussian_SHORTU: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_byelorussian_shortu-6tlgu","title":"let KEY_Byelorussian_shortu: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_c-68hcd","title":"let KEY_C: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cd","title":"let KEY_CD: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ch-8c8n9","title":"let KEY_CH: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_c_h-4gn5e","title":"let KEY_C_H: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_c_h-4r4vy","title":"let KEY_C_h: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cabovedot-7c0h7","title":"let KEY_Cabovedot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cacute-1uu7e","title":"let KEY_Cacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_calculator","title":"let KEY_Calculator: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_calendar","title":"let KEY_Calendar: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cancel","title":"let KEY_Cancel: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_caps_lock","title":"let KEY_Caps_Lock: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ccaron-1d0z4","title":"let KEY_Ccaron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ccedilla-4cyr7","title":"let KEY_Ccedilla: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ccircumflex-2ier9","title":"let KEY_Ccircumflex: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ch-33t9r","title":"let KEY_Ch: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_clear","title":"let KEY_Clear: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cleargrab","title":"let KEY_ClearGrab: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_close","title":"let KEY_Close: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_codeinput","title":"let KEY_Codeinput: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_colonsign","title":"let KEY_ColonSign: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_community","title":"let KEY_Community: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_contrastadjust","title":"let KEY_ContrastAdjust: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_control_l","title":"let KEY_Control_L: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_control_r","title":"let KEY_Control_R: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_copy","title":"let KEY_Copy: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cruzeirosign","title":"let KEY_CruzeiroSign: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cut","title":"let KEY_Cut: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cycleangle","title":"let KEY_CycleAngle: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_a-34vj7","title":"let KEY_Cyrillic_A: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_be-4mm8k","title":"let KEY_Cyrillic_BE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_che-90a2i","title":"let KEY_Cyrillic_CHE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_che_descender-642f1","title":"let KEY_Cyrillic_CHE_descender: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_che_vertstroke-3cutu","title":"let KEY_Cyrillic_CHE_vertstroke: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_de-5ylwb","title":"let KEY_Cyrillic_DE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_dzhe-6pq34","title":"let KEY_Cyrillic_DZHE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_e-it3w","title":"let KEY_Cyrillic_E: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_ef-4p7w5","title":"let KEY_Cyrillic_EF: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_el-3zkj0","title":"let KEY_Cyrillic_EL: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_em-1vil6","title":"let KEY_Cyrillic_EM: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_en-ty21","title":"let KEY_Cyrillic_EN: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_en_descender-9exin","title":"let KEY_Cyrillic_EN_descender: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_er-9k6rq","title":"let KEY_Cyrillic_ER: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_es-5c9yp","title":"let KEY_Cyrillic_ES: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_ghe-2byw9","title":"let KEY_Cyrillic_GHE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_ghe_bar-8anmc","title":"let KEY_Cyrillic_GHE_bar: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_ha-72x5q","title":"let KEY_Cyrillic_HA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_hardsign-21fbx","title":"let KEY_Cyrillic_HARDSIGN: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_ha_descender-19sw6","title":"let KEY_Cyrillic_HA_descender: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_i-1g7ni","title":"let KEY_Cyrillic_I: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_ie-6rhz8","title":"let KEY_Cyrillic_IE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_io-887ut","title":"let KEY_Cyrillic_IO: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_i_macron-5b8t4","title":"let KEY_Cyrillic_I_macron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_je-5uei","title":"let KEY_Cyrillic_JE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_ka-3sn8g","title":"let KEY_Cyrillic_KA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_ka_descender-63ki1","title":"let KEY_Cyrillic_KA_descender: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_ka_vertstroke-oh59","title":"let KEY_Cyrillic_KA_vertstroke: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_lje-9s394","title":"let KEY_Cyrillic_LJE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_nje-19gra","title":"let KEY_Cyrillic_NJE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_o-ri0e","title":"let KEY_Cyrillic_O: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_o_bar-2q91p","title":"let KEY_Cyrillic_O_bar: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_pe-9ezy3","title":"let KEY_Cyrillic_PE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_schwa-3jyyd","title":"let KEY_Cyrillic_SCHWA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_sha-92uf","title":"let KEY_Cyrillic_SHA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_shcha-66yj9","title":"let KEY_Cyrillic_SHCHA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_shha-7yycy","title":"let KEY_Cyrillic_SHHA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_shorti-2ddwp","title":"let KEY_Cyrillic_SHORTI: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_softsign-5rx5c","title":"let KEY_Cyrillic_SOFTSIGN: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_te-5j5nh","title":"let KEY_Cyrillic_TE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_tse-38uuz","title":"let KEY_Cyrillic_TSE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_u-9pask","title":"let KEY_Cyrillic_U: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_u_macron-ieh3","title":"let KEY_Cyrillic_U_macron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_u_straight-24kwu","title":"let KEY_Cyrillic_U_straight: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_u_straight_bar-4le6k","title":"let KEY_Cyrillic_U_straight_bar: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_ve-7nkkq","title":"let KEY_Cyrillic_VE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_ya-2832y","title":"let KEY_Cyrillic_YA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_yeru-3lmho","title":"let KEY_Cyrillic_YERU: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_yu-7su8z","title":"let KEY_Cyrillic_YU: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_ze-4y3wl","title":"let KEY_Cyrillic_ZE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_zhe-3xtck","title":"let KEY_Cyrillic_ZHE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_zhe_descender-2nwvb","title":"let KEY_Cyrillic_ZHE_descender: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_a-1xiwz","title":"let KEY_Cyrillic_a: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_be-5stgo","title":"let KEY_Cyrillic_be: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_che-9mysr","title":"let KEY_Cyrillic_che: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_che_descender-7bv9s","title":"let KEY_Cyrillic_che_descender: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_che_vertstroke-3wddw","title":"let KEY_Cyrillic_che_vertstroke: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_de-6tjoy","title":"let KEY_Cyrillic_de: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_dzhe-5tuwm","title":"let KEY_Cyrillic_dzhe: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_e-16uae","title":"let KEY_Cyrillic_e: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_ef-5k5ss","title":"let KEY_Cyrillic_ef: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_el-4ui47","title":"let KEY_Cyrillic_el: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_em-2qgcj","title":"let KEY_Cyrillic_em: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_en-1ovnk","title":"let KEY_Cyrillic_en: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_en_descender-8fcz8","title":"let KEY_Cyrillic_en_descender: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_er-fj5a","title":"let KEY_Cyrillic_er: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_es-677ku","title":"let KEY_Cyrillic_es: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_ghe-6ah1c","title":"let KEY_Cyrillic_ghe: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_ghe_bar-5yngc","title":"let KEY_Cyrillic_ghe_bar: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_ha-2l341","title":"let KEY_Cyrillic_ha: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_ha_descender-2dswp","title":"let KEY_Cyrillic_ha_descender: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_hardsign-3alwp","title":"let KEY_Cyrillic_hardsign: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_i-28kgx","title":"let KEY_Cyrillic_i: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_i_macron-u0hk","title":"let KEY_Cyrillic_i_macron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_ie-5u2gs","title":"let KEY_Cyrillic_ie: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_io-80i2v","title":"let KEY_Cyrillic_io: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_je-10sed","title":"let KEY_Cyrillic_je: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_ka-4nl55","title":"let KEY_Cyrillic_ka: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_ka_descender-5r0xi","title":"let KEY_Cyrillic_ka_descender: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_ka_vertstroke-8zg0u","title":"let KEY_Cyrillic_ka_vertstroke: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_lje-2dz67","title":"let KEY_Cyrillic_lje: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_nje-8rr0c","title":"let KEY_Cyrillic_nje: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_o-1vaaz","title":"let KEY_Cyrillic_o: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_o_bar-1rw3q","title":"let KEY_Cyrillic_o_bar: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_pe-acg3","title":"let KEY_Cyrillic_pe: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_schwa-4zofh","title":"let KEY_Cyrillic_schwa: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_sha-47kvy","title":"let KEY_Cyrillic_sha: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_shcha-576ca","title":"let KEY_Cyrillic_shcha: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_shha-1sbx7","title":"let KEY_Cyrillic_shha: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_shorti-3pivn","title":"let KEY_Cyrillic_shorti: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_softsign-1zd6a","title":"let KEY_Cyrillic_softsign: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_te-6e3n8","title":"let KEY_Cyrillic_te: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_tse-85hk7","title":"let KEY_Cyrillic_tse: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_u-4gurl","title":"let KEY_Cyrillic_u: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_u_macron-4ys3o","title":"let KEY_Cyrillic_u_macron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_u_straight-7vag6","title":"let KEY_Cyrillic_u_straight: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_u_straight_bar-4otz1","title":"let KEY_Cyrillic_u_straight_bar: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_ve-3oc9m","title":"let KEY_Cyrillic_ve: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_ya-330wz","title":"let KEY_Cyrillic_ya: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_yeru-7yq95","title":"let KEY_Cyrillic_yeru: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_yu-8ns64","title":"let KEY_Cyrillic_yu: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_ze-5t1x8","title":"let KEY_Cyrillic_ze: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_zhe-8zop5","title":"let KEY_Cyrillic_zhe: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cyrillic_zhe_descender-81o8s","title":"let KEY_Cyrillic_zhe_descender: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_d-40b7u","title":"let KEY_D: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dos","title":"let KEY_DOS: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dabovedot-60q9o","title":"let KEY_Dabovedot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dcaron-5ai5y","title":"let KEY_Dcaron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_delete","title":"let KEY_Delete: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_display","title":"let KEY_Display: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_documents","title":"let KEY_Documents: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dongsign","title":"let KEY_DongSign: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_down","title":"let KEY_Down: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dstroke-3h7gr","title":"let KEY_Dstroke: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_e-821zr","title":"let KEY_E: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_eng-1ij0g","title":"let KEY_ENG: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_eth-2hadw","title":"let KEY_ETH: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ezh-6tgzy","title":"let KEY_EZH: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_eabovedot-6td5j","title":"let KEY_Eabovedot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_eacute-4rkt4","title":"let KEY_Eacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ebelowdot-534sd","title":"let KEY_Ebelowdot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ecaron-zske","title":"let KEY_Ecaron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ecircumflex-75jk7","title":"let KEY_Ecircumflex: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ecircumflexacute-6872v","title":"let KEY_Ecircumflexacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ecircumflexbelowdot-1aitm","title":"let KEY_Ecircumflexbelowdot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ecircumflexgrave-39xu0","title":"let KEY_Ecircumflexgrave: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ecircumflexhook-5pkfs","title":"let KEY_Ecircumflexhook: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ecircumflextilde-9h2l5","title":"let KEY_Ecircumflextilde: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ecusign","title":"let KEY_EcuSign: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ediaeresis-2xsc7","title":"let KEY_Ediaeresis: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_egrave-1a2xd","title":"let KEY_Egrave: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ehook-45xov","title":"let KEY_Ehook: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_eisu_shift","title":"let KEY_Eisu_Shift: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_eisu_toggle","title":"let KEY_Eisu_toggle: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_eject","title":"let KEY_Eject: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_emacron-5z7zm","title":"let KEY_Emacron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_end","title":"let KEY_End: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_eogonek-2i2g8","title":"let KEY_Eogonek: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_escape","title":"let KEY_Escape: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_eth-4hd9r","title":"let KEY_Eth: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_etilde-6kwe6","title":"let KEY_Etilde: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_eurosign","title":"let KEY_EuroSign: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_excel","title":"let KEY_Excel: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_execute","title":"let KEY_Execute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_explorer","title":"let KEY_Explorer: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f-5m7dl","title":"let KEY_F: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f1","title":"let KEY_F1: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f10","title":"let KEY_F10: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f11","title":"let KEY_F11: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f12","title":"let KEY_F12: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f13","title":"let KEY_F13: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f14","title":"let KEY_F14: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f15","title":"let KEY_F15: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f16","title":"let KEY_F16: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f17","title":"let KEY_F17: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f18","title":"let KEY_F18: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f19","title":"let KEY_F19: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f2","title":"let KEY_F2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f20","title":"let KEY_F20: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f21","title":"let KEY_F21: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f22","title":"let KEY_F22: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f23","title":"let KEY_F23: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f24","title":"let KEY_F24: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f25","title":"let KEY_F25: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f26","title":"let KEY_F26: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f27","title":"let KEY_F27: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f28","title":"let KEY_F28: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f29","title":"let KEY_F29: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f3","title":"let KEY_F3: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f30","title":"let KEY_F30: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f31","title":"let KEY_F31: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f32","title":"let KEY_F32: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f33","title":"let KEY_F33: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f34","title":"let KEY_F34: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f35","title":"let KEY_F35: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f4","title":"let KEY_F4: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f5","title":"let KEY_F5: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f6","title":"let KEY_F6: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f7","title":"let KEY_F7: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f8","title":"let KEY_F8: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f9","title":"let KEY_F9: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ffrancsign","title":"let KEY_FFrancSign: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_fabovedot-555b3","title":"let KEY_Fabovedot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_farsi_0","title":"let KEY_Farsi_0: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_farsi_1","title":"let KEY_Farsi_1: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_farsi_2","title":"let KEY_Farsi_2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_farsi_3","title":"let KEY_Farsi_3: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_farsi_4","title":"let KEY_Farsi_4: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_farsi_5","title":"let KEY_Farsi_5: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_farsi_6","title":"let KEY_Farsi_6: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_farsi_7","title":"let KEY_Farsi_7: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_farsi_8","title":"let KEY_Farsi_8: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_farsi_9","title":"let KEY_Farsi_9: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_farsi_yeh","title":"let KEY_Farsi_yeh: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_favorites","title":"let KEY_Favorites: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_finance","title":"let KEY_Finance: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_find","title":"let KEY_Find: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_first_virtual_screen","title":"let KEY_First_Virtual_Screen: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_forward","title":"let KEY_Forward: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_frameback","title":"let KEY_FrameBack: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_frameforward","title":"let KEY_FrameForward: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_g-3jnp3","title":"let KEY_G: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_gabovedot-8lfg5","title":"let KEY_Gabovedot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_game","title":"let KEY_Game: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_gbreve-4nccx","title":"let KEY_Gbreve: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_gcaron-97yjq","title":"let KEY_Gcaron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_gcedilla-57kw0","title":"let KEY_Gcedilla: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_gcircumflex-5a7bj","title":"let KEY_Gcircumflex: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_an","title":"let KEY_Georgian_an: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_ban","title":"let KEY_Georgian_ban: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_can","title":"let KEY_Georgian_can: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_char","title":"let KEY_Georgian_char: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_chin","title":"let KEY_Georgian_chin: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_cil","title":"let KEY_Georgian_cil: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_don","title":"let KEY_Georgian_don: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_en","title":"let KEY_Georgian_en: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_fi","title":"let KEY_Georgian_fi: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_gan","title":"let KEY_Georgian_gan: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_ghan","title":"let KEY_Georgian_ghan: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_hae","title":"let KEY_Georgian_hae: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_har","title":"let KEY_Georgian_har: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_he","title":"let KEY_Georgian_he: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_hie","title":"let KEY_Georgian_hie: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_hoe","title":"let KEY_Georgian_hoe: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_in","title":"let KEY_Georgian_in: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_jhan","title":"let KEY_Georgian_jhan: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_jil","title":"let KEY_Georgian_jil: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_kan","title":"let KEY_Georgian_kan: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_khar","title":"let KEY_Georgian_khar: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_las","title":"let KEY_Georgian_las: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_man","title":"let KEY_Georgian_man: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_nar","title":"let KEY_Georgian_nar: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_on","title":"let KEY_Georgian_on: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_par","title":"let KEY_Georgian_par: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_phar","title":"let KEY_Georgian_phar: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_qar","title":"let KEY_Georgian_qar: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_rae","title":"let KEY_Georgian_rae: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_san","title":"let KEY_Georgian_san: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_shin","title":"let KEY_Georgian_shin: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_tan","title":"let KEY_Georgian_tan: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_tar","title":"let KEY_Georgian_tar: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_un","title":"let KEY_Georgian_un: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_vin","title":"let KEY_Georgian_vin: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_we","title":"let KEY_Georgian_we: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_xan","title":"let KEY_Georgian_xan: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_zen","title":"let KEY_Georgian_zen: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_georgian_zhar","title":"let KEY_Georgian_zhar: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_go","title":"let KEY_Go: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_alpha-7s5bs","title":"let KEY_Greek_ALPHA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_alphaaccent-5890n","title":"let KEY_Greek_ALPHAaccent: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_beta-48lvf","title":"let KEY_Greek_BETA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_chi-9ebcc","title":"let KEY_Greek_CHI: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_delta-4cs29","title":"let KEY_Greek_DELTA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_epsilon-4waml","title":"let KEY_Greek_EPSILON: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_epsilonaccent-2scch","title":"let KEY_Greek_EPSILONaccent: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_eta-3fgde","title":"let KEY_Greek_ETA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_etaaccent-3h4xf","title":"let KEY_Greek_ETAaccent: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_gamma-1e6ce","title":"let KEY_Greek_GAMMA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_iota-53zo2","title":"let KEY_Greek_IOTA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_iotaaccent-7obup","title":"let KEY_Greek_IOTAaccent: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_iotadiaeresis","title":"let KEY_Greek_IOTAdiaeresis: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_iotadieresis-5bd1h","title":"let KEY_Greek_IOTAdieresis: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_kappa-3ljvt","title":"let KEY_Greek_KAPPA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_lambda-1iesi","title":"let KEY_Greek_LAMBDA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_lamda-69jrg","title":"let KEY_Greek_LAMDA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_mu-byhk","title":"let KEY_Greek_MU: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_nu-4zb7i","title":"let KEY_Greek_NU: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_omega-5esd5","title":"let KEY_Greek_OMEGA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_omegaaccent-6kt9q","title":"let KEY_Greek_OMEGAaccent: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_omicron-83n9h","title":"let KEY_Greek_OMICRON: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_omicronaccent-25r8x","title":"let KEY_Greek_OMICRONaccent: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_phi-9ef79","title":"let KEY_Greek_PHI: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_pi-dyre","title":"let KEY_Greek_PI: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_psi-3irf4","title":"let KEY_Greek_PSI: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_rho-4gtv0","title":"let KEY_Greek_RHO: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_sigma-55bdb","title":"let KEY_Greek_SIGMA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_tau-3ldo6","title":"let KEY_Greek_TAU: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_theta-87bki","title":"let KEY_Greek_THETA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_upsilon-3u3p7","title":"let KEY_Greek_UPSILON: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_upsilonaccent-3zxt0","title":"let KEY_Greek_UPSILONaccent: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_upsilondieresis-82gdk","title":"let KEY_Greek_UPSILONdieresis: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_xi-2cjcx","title":"let KEY_Greek_XI: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_zeta-86hyv","title":"let KEY_Greek_ZETA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_accentdieresis","title":"let KEY_Greek_accentdieresis: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_alpha-s217","title":"let KEY_Greek_alpha: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_alphaaccent-63zki","title":"let KEY_Greek_alphaaccent: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_beta-1tbnv","title":"let KEY_Greek_beta: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_chi-73wjv","title":"let KEY_Greek_chi: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_delta-6t1yh","title":"let KEY_Greek_delta: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_epsilon-6115b","title":"let KEY_Greek_epsilon: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_epsilonaccent-4jyuo","title":"let KEY_Greek_epsilonaccent: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_eta-7hgwg","title":"let KEY_Greek_eta: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_etaaccent-5k81o","title":"let KEY_Greek_etaaccent: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_finalsmallsigma","title":"let KEY_Greek_finalsmallsigma: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_gamma-4c6n9","title":"let KEY_Greek_gamma: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_horizbar","title":"let KEY_Greek_horizbar: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_iota-6h8qh","title":"let KEY_Greek_iota: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_iotaaccent-1r649","title":"let KEY_Greek_iotaaccent: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_iotaaccentdieresis","title":"let KEY_Greek_iotaaccentdieresis: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_iotadieresis-8wsax","title":"let KEY_Greek_iotadieresis: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_kappa-350oe","title":"let KEY_Greek_kappa: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_lambda-8nd6k","title":"let KEY_Greek_lambda: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_lamda-9hgzt","title":"let KEY_Greek_lamda: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_mu-6504k","title":"let KEY_Greek_mu: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_nu-8qzxb","title":"let KEY_Greek_nu: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_omega-2now0","title":"let KEY_Greek_omega: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_omegaaccent-3rsvl","title":"let KEY_Greek_omegaaccent: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_omicron-ffvx","title":"let KEY_Greek_omicron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_omicronaccent-3mcop","title":"let KEY_Greek_omicronaccent: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_phi-43jtf","title":"let KEY_Greek_phi: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_pi-16or0","title":"let KEY_Greek_pi: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_psi-6hxuk","title":"let KEY_Greek_psi: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_rho-7rn68","title":"let KEY_Greek_rho: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_sigma-maxq","title":"let KEY_Greek_sigma: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_switch","title":"let KEY_Greek_switch: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_tau-dfj0","title":"let KEY_Greek_tau: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_theta-o7ml","title":"let KEY_Greek_theta: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_upsilon-11s63","title":"let KEY_Greek_upsilon: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_upsilonaccent-8ipwm","title":"let KEY_Greek_upsilonaccent: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_upsilonaccentdieresis","title":"let KEY_Greek_upsilonaccentdieresis: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_upsilondieresis-8x5dv","title":"let KEY_Greek_upsilondieresis: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_xi-9k76g","title":"let KEY_Greek_xi: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greek_zeta-8zmaz","title":"let KEY_Greek_zeta: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_green","title":"let KEY_Green: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_h-85eqy","title":"let KEY_H: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul","title":"let KEY_Hangul: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_a","title":"let KEY_Hangul_A: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_ae","title":"let KEY_Hangul_AE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_araea","title":"let KEY_Hangul_AraeA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_araeae","title":"let KEY_Hangul_AraeAE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_banja","title":"let KEY_Hangul_Banja: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_cieuc","title":"let KEY_Hangul_Cieuc: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_codeinput","title":"let KEY_Hangul_Codeinput: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_dikeud","title":"let KEY_Hangul_Dikeud: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_e","title":"let KEY_Hangul_E: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_eo","title":"let KEY_Hangul_EO: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_eu","title":"let KEY_Hangul_EU: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_end","title":"let KEY_Hangul_End: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_hanja","title":"let KEY_Hangul_Hanja: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_hieuh","title":"let KEY_Hangul_Hieuh: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_i","title":"let KEY_Hangul_I: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_ieung","title":"let KEY_Hangul_Ieung: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_j_cieuc","title":"let KEY_Hangul_J_Cieuc: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_j_dikeud","title":"let KEY_Hangul_J_Dikeud: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_j_hieuh","title":"let KEY_Hangul_J_Hieuh: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_j_ieung","title":"let KEY_Hangul_J_Ieung: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_j_jieuj","title":"let KEY_Hangul_J_Jieuj: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_j_khieuq","title":"let KEY_Hangul_J_Khieuq: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_j_kiyeog","title":"let KEY_Hangul_J_Kiyeog: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_j_kiyeogsios","title":"let KEY_Hangul_J_KiyeogSios: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_j_kkogjidalrinieung","title":"let KEY_Hangul_J_KkogjiDalrinIeung: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_j_mieum","title":"let KEY_Hangul_J_Mieum: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_j_nieun","title":"let KEY_Hangul_J_Nieun: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_j_nieunhieuh","title":"let KEY_Hangul_J_NieunHieuh: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_j_nieunjieuj","title":"let KEY_Hangul_J_NieunJieuj: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_j_pansios","title":"let KEY_Hangul_J_PanSios: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_j_phieuf","title":"let KEY_Hangul_J_Phieuf: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_j_pieub","title":"let KEY_Hangul_J_Pieub: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_j_pieubsios","title":"let KEY_Hangul_J_PieubSios: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_j_rieul","title":"let KEY_Hangul_J_Rieul: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_j_rieulhieuh","title":"let KEY_Hangul_J_RieulHieuh: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_j_rieulkiyeog","title":"let KEY_Hangul_J_RieulKiyeog: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_j_rieulmieum","title":"let KEY_Hangul_J_RieulMieum: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_j_rieulphieuf","title":"let KEY_Hangul_J_RieulPhieuf: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_j_rieulpieub","title":"let KEY_Hangul_J_RieulPieub: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_j_rieulsios","title":"let KEY_Hangul_J_RieulSios: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_j_rieultieut","title":"let KEY_Hangul_J_RieulTieut: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_j_sios","title":"let KEY_Hangul_J_Sios: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_j_ssangkiyeog","title":"let KEY_Hangul_J_SsangKiyeog: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_j_ssangsios","title":"let KEY_Hangul_J_SsangSios: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_j_tieut","title":"let KEY_Hangul_J_Tieut: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_j_yeorinhieuh","title":"let KEY_Hangul_J_YeorinHieuh: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_jamo","title":"let KEY_Hangul_Jamo: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_jeonja","title":"let KEY_Hangul_Jeonja: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_jieuj","title":"let KEY_Hangul_Jieuj: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_khieuq","title":"let KEY_Hangul_Khieuq: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_kiyeog","title":"let KEY_Hangul_Kiyeog: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_kiyeogsios","title":"let KEY_Hangul_KiyeogSios: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_kkogjidalrinieung","title":"let KEY_Hangul_KkogjiDalrinIeung: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_mieum","title":"let KEY_Hangul_Mieum: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_multiplecandidate","title":"let KEY_Hangul_MultipleCandidate: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_nieun","title":"let KEY_Hangul_Nieun: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_nieunhieuh","title":"let KEY_Hangul_NieunHieuh: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_nieunjieuj","title":"let KEY_Hangul_NieunJieuj: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_o","title":"let KEY_Hangul_O: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_oe","title":"let KEY_Hangul_OE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_pansios","title":"let KEY_Hangul_PanSios: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_phieuf","title":"let KEY_Hangul_Phieuf: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_pieub","title":"let KEY_Hangul_Pieub: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_pieubsios","title":"let KEY_Hangul_PieubSios: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_posthanja","title":"let KEY_Hangul_PostHanja: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_prehanja","title":"let KEY_Hangul_PreHanja: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_previouscandidate","title":"let KEY_Hangul_PreviousCandidate: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_rieul","title":"let KEY_Hangul_Rieul: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_rieulhieuh","title":"let KEY_Hangul_RieulHieuh: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_rieulkiyeog","title":"let KEY_Hangul_RieulKiyeog: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_rieulmieum","title":"let KEY_Hangul_RieulMieum: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_rieulphieuf","title":"let KEY_Hangul_RieulPhieuf: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_rieulpieub","title":"let KEY_Hangul_RieulPieub: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_rieulsios","title":"let KEY_Hangul_RieulSios: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_rieultieut","title":"let KEY_Hangul_RieulTieut: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_rieulyeorinhieuh","title":"let KEY_Hangul_RieulYeorinHieuh: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_romaja","title":"let KEY_Hangul_Romaja: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_singlecandidate","title":"let KEY_Hangul_SingleCandidate: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_sios","title":"let KEY_Hangul_Sios: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_special","title":"let KEY_Hangul_Special: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_ssangdikeud","title":"let KEY_Hangul_SsangDikeud: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_ssangjieuj","title":"let KEY_Hangul_SsangJieuj: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_ssangkiyeog","title":"let KEY_Hangul_SsangKiyeog: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_ssangpieub","title":"let KEY_Hangul_SsangPieub: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_ssangsios","title":"let KEY_Hangul_SsangSios: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_start","title":"let KEY_Hangul_Start: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_sunkyeongeummieum","title":"let KEY_Hangul_SunkyeongeumMieum: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_sunkyeongeumphieuf","title":"let KEY_Hangul_SunkyeongeumPhieuf: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_sunkyeongeumpieub","title":"let KEY_Hangul_SunkyeongeumPieub: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_tieut","title":"let KEY_Hangul_Tieut: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_u","title":"let KEY_Hangul_U: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_wa","title":"let KEY_Hangul_WA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_wae","title":"let KEY_Hangul_WAE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_we","title":"let KEY_Hangul_WE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_weo","title":"let KEY_Hangul_WEO: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_wi","title":"let KEY_Hangul_WI: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_ya","title":"let KEY_Hangul_YA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_yae","title":"let KEY_Hangul_YAE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_ye","title":"let KEY_Hangul_YE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_yeo","title":"let KEY_Hangul_YEO: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_yi","title":"let KEY_Hangul_YI: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_yo","title":"let KEY_Hangul_YO: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_yu","title":"let KEY_Hangul_YU: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_yeorinhieuh","title":"let KEY_Hangul_YeorinHieuh: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hangul_switch","title":"let KEY_Hangul_switch: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hankaku","title":"let KEY_Hankaku: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hcircumflex-7hqvv","title":"let KEY_Hcircumflex: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_switch","title":"let KEY_Hebrew_switch: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_help","title":"let KEY_Help: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_henkan","title":"let KEY_Henkan: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_henkan_mode","title":"let KEY_Henkan_Mode: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hibernate","title":"let KEY_Hibernate: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hiragana","title":"let KEY_Hiragana: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hiragana_katakana","title":"let KEY_Hiragana_Katakana: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_history","title":"let KEY_History: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_home","title":"let KEY_Home: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_homepage","title":"let KEY_HomePage: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hotlinks","title":"let KEY_HotLinks: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hstroke-9t1cg","title":"let KEY_Hstroke: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hyper_l","title":"let KEY_Hyper_L: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hyper_r","title":"let KEY_Hyper_R: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_i-7p73m","title":"let KEY_I: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_center_object","title":"let KEY_ISO_Center_Object: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_continuous_underline","title":"let KEY_ISO_Continuous_Underline: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_discontinuous_underline","title":"let KEY_ISO_Discontinuous_Underline: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_emphasize","title":"let KEY_ISO_Emphasize: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_enter","title":"let KEY_ISO_Enter: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_fast_cursor_down","title":"let KEY_ISO_Fast_Cursor_Down: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_fast_cursor_left","title":"let KEY_ISO_Fast_Cursor_Left: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_fast_cursor_right","title":"let KEY_ISO_Fast_Cursor_Right: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_fast_cursor_up","title":"let KEY_ISO_Fast_Cursor_Up: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_first_group","title":"let KEY_ISO_First_Group: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_first_group_lock","title":"let KEY_ISO_First_Group_Lock: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_group_latch","title":"let KEY_ISO_Group_Latch: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_group_lock","title":"let KEY_ISO_Group_Lock: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_group_shift","title":"let KEY_ISO_Group_Shift: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_last_group","title":"let KEY_ISO_Last_Group: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_last_group_lock","title":"let KEY_ISO_Last_Group_Lock: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_left_tab","title":"let KEY_ISO_Left_Tab: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_level2_latch","title":"let KEY_ISO_Level2_Latch: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_level3_latch","title":"let KEY_ISO_Level3_Latch: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_level3_lock","title":"let KEY_ISO_Level3_Lock: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_level3_shift","title":"let KEY_ISO_Level3_Shift: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_level5_latch","title":"let KEY_ISO_Level5_Latch: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_level5_lock","title":"let KEY_ISO_Level5_Lock: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_level5_shift","title":"let KEY_ISO_Level5_Shift: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_lock","title":"let KEY_ISO_Lock: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_move_line_down","title":"let KEY_ISO_Move_Line_Down: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_move_line_up","title":"let KEY_ISO_Move_Line_Up: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_next_group","title":"let KEY_ISO_Next_Group: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_next_group_lock","title":"let KEY_ISO_Next_Group_Lock: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_partial_line_down","title":"let KEY_ISO_Partial_Line_Down: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_partial_line_up","title":"let KEY_ISO_Partial_Line_Up: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_partial_space_left","title":"let KEY_ISO_Partial_Space_Left: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_partial_space_right","title":"let KEY_ISO_Partial_Space_Right: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_prev_group","title":"let KEY_ISO_Prev_Group: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_prev_group_lock","title":"let KEY_ISO_Prev_Group_Lock: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_release_both_margins","title":"let KEY_ISO_Release_Both_Margins: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_release_margin_left","title":"let KEY_ISO_Release_Margin_Left: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_release_margin_right","title":"let KEY_ISO_Release_Margin_Right: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_set_margin_left","title":"let KEY_ISO_Set_Margin_Left: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iso_set_margin_right","title":"let KEY_ISO_Set_Margin_Right: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iabovedot","title":"let KEY_Iabovedot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iacute-1ryn8","title":"let KEY_Iacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ibelowdot-22wy0","title":"let KEY_Ibelowdot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ibreve-4dsl5","title":"let KEY_Ibreve: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_icircumflex-vy2l","title":"let KEY_Icircumflex: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_idiaeresis-1vgzk","title":"let KEY_Idiaeresis: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_igrave-4imsr","title":"let KEY_Igrave: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ihook-4na0e","title":"let KEY_Ihook: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_imacron-7a5d4","title":"let KEY_Imacron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_insert","title":"let KEY_Insert: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iogonek-5vogm","title":"let KEY_Iogonek: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_itilde-2qec6","title":"let KEY_Itilde: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_j-3slig","title":"let KEY_J: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_jcircumflex-8623h","title":"let KEY_Jcircumflex: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_k-2hxpg","title":"let KEY_K: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_0","title":"let KEY_KP_0: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_1","title":"let KEY_KP_1: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_2","title":"let KEY_KP_2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_3","title":"let KEY_KP_3: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_4","title":"let KEY_KP_4: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_5","title":"let KEY_KP_5: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_6","title":"let KEY_KP_6: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_7","title":"let KEY_KP_7: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_8","title":"let KEY_KP_8: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_9","title":"let KEY_KP_9: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_add","title":"let KEY_KP_Add: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_begin","title":"let KEY_KP_Begin: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_decimal","title":"let KEY_KP_Decimal: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_delete","title":"let KEY_KP_Delete: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_divide","title":"let KEY_KP_Divide: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_down","title":"let KEY_KP_Down: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_end","title":"let KEY_KP_End: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_enter","title":"let KEY_KP_Enter: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_equal","title":"let KEY_KP_Equal: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_f1","title":"let KEY_KP_F1: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_f2","title":"let KEY_KP_F2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_f3","title":"let KEY_KP_F3: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_f4","title":"let KEY_KP_F4: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_home","title":"let KEY_KP_Home: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_insert","title":"let KEY_KP_Insert: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_left","title":"let KEY_KP_Left: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_multiply","title":"let KEY_KP_Multiply: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_next","title":"let KEY_KP_Next: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_page_down","title":"let KEY_KP_Page_Down: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_page_up","title":"let KEY_KP_Page_Up: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_prior","title":"let KEY_KP_Prior: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_right","title":"let KEY_KP_Right: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_separator","title":"let KEY_KP_Separator: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_space","title":"let KEY_KP_Space: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_subtract","title":"let KEY_KP_Subtract: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_tab","title":"let KEY_KP_Tab: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kp_up","title":"let KEY_KP_Up: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_lock","title":"let KEY_Kana_Lock: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_shift","title":"let KEY_Kana_Shift: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kanji","title":"let KEY_Kanji: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kanji_bangou","title":"let KEY_Kanji_Bangou: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_katakana","title":"let KEY_Katakana: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kbdbrightnessdown","title":"let KEY_KbdBrightnessDown: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kbdbrightnessup","title":"let KEY_KbdBrightnessUp: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kbdlightonoff","title":"let KEY_KbdLightOnOff: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kcedilla-4w13k","title":"let KEY_Kcedilla: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_keyboard","title":"let KEY_Keyboard: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_korean_won","title":"let KEY_Korean_Won: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_l-qays","title":"let KEY_L: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_l1","title":"let KEY_L1: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_l10","title":"let KEY_L10: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_l2","title":"let KEY_L2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_l3","title":"let KEY_L3: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_l4","title":"let KEY_L4: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_l5","title":"let KEY_L5: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_l6","title":"let KEY_L6: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_l7","title":"let KEY_L7: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_l8","title":"let KEY_L8: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_l9","title":"let KEY_L9: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_lacute-2kxf3","title":"let KEY_Lacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_last_virtual_screen","title":"let KEY_Last_Virtual_Screen: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_launch0","title":"let KEY_Launch0: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_launch1","title":"let KEY_Launch1: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_launch2","title":"let KEY_Launch2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_launch3","title":"let KEY_Launch3: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_launch4","title":"let KEY_Launch4: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_launch5","title":"let KEY_Launch5: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_launch6","title":"let KEY_Launch6: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_launch7","title":"let KEY_Launch7: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_launch8","title":"let KEY_Launch8: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_launch9","title":"let KEY_Launch9: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_launcha","title":"let KEY_LaunchA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_launchb","title":"let KEY_LaunchB: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_launchc","title":"let KEY_LaunchC: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_launchd","title":"let KEY_LaunchD: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_launche","title":"let KEY_LaunchE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_launchf","title":"let KEY_LaunchF: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_lbelowdot-43byx","title":"let KEY_Lbelowdot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_lcaron-1cjuy","title":"let KEY_Lcaron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_lcedilla-8ehue","title":"let KEY_Lcedilla: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_left","title":"let KEY_Left: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_lightbulb","title":"let KEY_LightBulb: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_linefeed","title":"let KEY_Linefeed: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_lirasign","title":"let KEY_LiraSign: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_loggrabinfo","title":"let KEY_LogGrabInfo: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_logoff","title":"let KEY_LogOff: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_logwindowtree","title":"let KEY_LogWindowTree: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_lstroke-7u8c9","title":"let KEY_Lstroke: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_m-j7va","title":"let KEY_M: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_mabovedot-2na9s","title":"let KEY_Mabovedot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_macedonia_dse-6vu0b","title":"let KEY_Macedonia_DSE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_macedonia_gje-5i90a","title":"let KEY_Macedonia_GJE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_macedonia_kje-373np","title":"let KEY_Macedonia_KJE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_macedonia_dse-9u1x7","title":"let KEY_Macedonia_dse: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_macedonia_gje-7pn6n","title":"let KEY_Macedonia_gje: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_macedonia_kje-5skr9","title":"let KEY_Macedonia_kje: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_mae_koho","title":"let KEY_Mae_Koho: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_mail","title":"let KEY_Mail: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_mailforward","title":"let KEY_MailForward: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_market","title":"let KEY_Market: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_massyo","title":"let KEY_Massyo: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_meeting","title":"let KEY_Meeting: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_memo","title":"let KEY_Memo: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_menu","title":"let KEY_Menu: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_menukb","title":"let KEY_MenuKB: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_menupb","title":"let KEY_MenuPB: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_messenger","title":"let KEY_Messenger: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_meta_l","title":"let KEY_Meta_L: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_meta_r","title":"let KEY_Meta_R: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_millsign","title":"let KEY_MillSign: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_modelock","title":"let KEY_ModeLock: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_mode_switch","title":"let KEY_Mode_switch: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_monbrightnessdown","title":"let KEY_MonBrightnessDown: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_monbrightnessup","title":"let KEY_MonBrightnessUp: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_mousekeys_accel_enable","title":"let KEY_MouseKeys_Accel_Enable: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_mousekeys_enable","title":"let KEY_MouseKeys_Enable: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_muhenkan","title":"let KEY_Muhenkan: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_multi_key","title":"let KEY_Multi_key: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_multiplecandidate","title":"let KEY_MultipleCandidate: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_music","title":"let KEY_Music: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_mycomputer","title":"let KEY_MyComputer: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_mysites","title":"let KEY_MySites: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_n-3o347","title":"let KEY_N: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_nacute-47kax","title":"let KEY_Nacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_nairasign","title":"let KEY_NairaSign: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ncaron-16r8u","title":"let KEY_Ncaron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ncedilla-qd41","title":"let KEY_Ncedilla: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_new","title":"let KEY_New: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_newsheqelsign","title":"let KEY_NewSheqelSign: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_news","title":"let KEY_News: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_next","title":"let KEY_Next: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_next_vmode","title":"let KEY_Next_VMode: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_next_virtual_screen","title":"let KEY_Next_Virtual_Screen: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ntilde-6v962","title":"let KEY_Ntilde: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_num_lock","title":"let KEY_Num_Lock: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_o-38mb5","title":"let KEY_O: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_oe-8dnmg","title":"let KEY_OE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_oacute-4fi33","title":"let KEY_Oacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_obarred-5fnj4","title":"let KEY_Obarred: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_obelowdot-aj5d","title":"let KEY_Obelowdot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ocaron-5hc0t","title":"let KEY_Ocaron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ocircumflex-8fvze","title":"let KEY_Ocircumflex: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ocircumflexacute-1mapi","title":"let KEY_Ocircumflexacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ocircumflexbelowdot-4sopt","title":"let KEY_Ocircumflexbelowdot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ocircumflexgrave-4to6f","title":"let KEY_Ocircumflexgrave: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ocircumflexhook-8cqkh","title":"let KEY_Ocircumflexhook: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ocircumflextilde-5nb4u","title":"let KEY_Ocircumflextilde: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_odiaeresis-6nm4e","title":"let KEY_Odiaeresis: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_odoubleacute-6c09t","title":"let KEY_Odoubleacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_officehome","title":"let KEY_OfficeHome: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ograve-86nlr","title":"let KEY_Ograve: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ohook-47dn7","title":"let KEY_Ohook: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ohorn-1q70a","title":"let KEY_Ohorn: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ohornacute-1ksxm","title":"let KEY_Ohornacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ohornbelowdot-8adu9","title":"let KEY_Ohornbelowdot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ohorngrave-86w3e","title":"let KEY_Ohorngrave: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ohornhook-2ci67","title":"let KEY_Ohornhook: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ohorntilde-7tiqj","title":"let KEY_Ohorntilde: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_omacron-77v6k","title":"let KEY_Omacron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ooblique-5yvrm","title":"let KEY_Ooblique: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_open","title":"let KEY_Open: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_openurl","title":"let KEY_OpenURL: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_option","title":"let KEY_Option: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_oslash-82zw7","title":"let KEY_Oslash: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_otilde-3h63j","title":"let KEY_Otilde: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_overlay1_enable","title":"let KEY_Overlay1_Enable: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_overlay2_enable","title":"let KEY_Overlay2_Enable: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_p-e8oh","title":"let KEY_P: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pabovedot-8nt27","title":"let KEY_Pabovedot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_page_down","title":"let KEY_Page_Down: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_page_up","title":"let KEY_Page_Up: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_paste","title":"let KEY_Paste: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pause","title":"let KEY_Pause: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pesetasign","title":"let KEY_PesetaSign: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_phone","title":"let KEY_Phone: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pictures","title":"let KEY_Pictures: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pointer_accelerate","title":"let KEY_Pointer_Accelerate: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pointer_button1","title":"let KEY_Pointer_Button1: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pointer_button2","title":"let KEY_Pointer_Button2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pointer_button3","title":"let KEY_Pointer_Button3: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pointer_button4","title":"let KEY_Pointer_Button4: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pointer_button5","title":"let KEY_Pointer_Button5: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pointer_button_dflt","title":"let KEY_Pointer_Button_Dflt: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pointer_dblclick1","title":"let KEY_Pointer_DblClick1: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pointer_dblclick2","title":"let KEY_Pointer_DblClick2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pointer_dblclick3","title":"let KEY_Pointer_DblClick3: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pointer_dblclick4","title":"let KEY_Pointer_DblClick4: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pointer_dblclick5","title":"let KEY_Pointer_DblClick5: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pointer_dblclick_dflt","title":"let KEY_Pointer_DblClick_Dflt: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pointer_dfltbtnnext","title":"let KEY_Pointer_DfltBtnNext: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pointer_dfltbtnprev","title":"let KEY_Pointer_DfltBtnPrev: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pointer_down","title":"let KEY_Pointer_Down: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pointer_downleft","title":"let KEY_Pointer_DownLeft: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pointer_downright","title":"let KEY_Pointer_DownRight: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pointer_drag1","title":"let KEY_Pointer_Drag1: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pointer_drag2","title":"let KEY_Pointer_Drag2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pointer_drag3","title":"let KEY_Pointer_Drag3: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pointer_drag4","title":"let KEY_Pointer_Drag4: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pointer_drag5","title":"let KEY_Pointer_Drag5: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pointer_drag_dflt","title":"let KEY_Pointer_Drag_Dflt: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pointer_enablekeys","title":"let KEY_Pointer_EnableKeys: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pointer_left","title":"let KEY_Pointer_Left: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pointer_right","title":"let KEY_Pointer_Right: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pointer_up","title":"let KEY_Pointer_Up: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pointer_upleft","title":"let KEY_Pointer_UpLeft: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pointer_upright","title":"let KEY_Pointer_UpRight: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_powerdown","title":"let KEY_PowerDown: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_poweroff","title":"let KEY_PowerOff: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_prev_vmode","title":"let KEY_Prev_VMode: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_prev_virtual_screen","title":"let KEY_Prev_Virtual_Screen: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_previouscandidate","title":"let KEY_PreviousCandidate: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_print","title":"let KEY_Print: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_prior","title":"let KEY_Prior: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_q-6o24n","title":"let KEY_Q: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_r-14s6b","title":"let KEY_R: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_r1","title":"let KEY_R1: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_r10","title":"let KEY_R10: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_r11","title":"let KEY_R11: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_r12","title":"let KEY_R12: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_r13","title":"let KEY_R13: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_r14","title":"let KEY_R14: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_r15","title":"let KEY_R15: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_r2","title":"let KEY_R2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_r3","title":"let KEY_R3: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_r4","title":"let KEY_R4: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_r5","title":"let KEY_R5: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_r6","title":"let KEY_R6: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_r7","title":"let KEY_R7: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_r8","title":"let KEY_R8: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_r9","title":"let KEY_R9: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_rfkill","title":"let KEY_RFKill: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_racute-2ri5v","title":"let KEY_Racute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_rcaron-4weyz","title":"let KEY_Rcaron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_rcedilla-1cns1","title":"let KEY_Rcedilla: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_red","title":"let KEY_Red: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_redo","title":"let KEY_Redo: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_refresh","title":"let KEY_Refresh: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_reload","title":"let KEY_Reload: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_repeatkeys_enable","title":"let KEY_RepeatKeys_Enable: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_reply","title":"let KEY_Reply: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_return","title":"let KEY_Return: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_right","title":"let KEY_Right: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_rockerdown","title":"let KEY_RockerDown: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_rockerenter","title":"let KEY_RockerEnter: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_rockerup","title":"let KEY_RockerUp: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_romaji","title":"let KEY_Romaji: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_rotatewindows","title":"let KEY_RotateWindows: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_rotationkb","title":"let KEY_RotationKB: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_rotationpb","title":"let KEY_RotationPB: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_rupeesign","title":"let KEY_RupeeSign: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_s-9f0gw","title":"let KEY_S: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_schwa-7duv9","title":"let KEY_SCHWA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sabovedot-5wqsy","title":"let KEY_Sabovedot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sacute-52h0s","title":"let KEY_Sacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_save","title":"let KEY_Save: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_scaron-2444j","title":"let KEY_Scaron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_scedilla-6mtle","title":"let KEY_Scedilla: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_scircumflex-5w43c","title":"let KEY_Scircumflex: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_screensaver","title":"let KEY_ScreenSaver: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_scrollclick","title":"let KEY_ScrollClick: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_scrolldown","title":"let KEY_ScrollDown: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_scrollup","title":"let KEY_ScrollUp: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_scroll_lock","title":"let KEY_Scroll_Lock: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_search","title":"let KEY_Search: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_select","title":"let KEY_Select: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_selectbutton","title":"let KEY_SelectButton: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_send","title":"let KEY_Send: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_serbian_dje-5uy3b","title":"let KEY_Serbian_DJE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_serbian_dze-5zkd1","title":"let KEY_Serbian_DZE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_serbian_je-8lm3p","title":"let KEY_Serbian_JE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_serbian_lje-8x6em","title":"let KEY_Serbian_LJE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_serbian_nje-2yylh","title":"let KEY_Serbian_NJE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_serbian_tshe-5xd88","title":"let KEY_Serbian_TSHE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_serbian_dje-fznc","title":"let KEY_Serbian_dje: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_serbian_dze-4fkv2","title":"let KEY_Serbian_dze: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_serbian_je-94ln1","title":"let KEY_Serbian_je: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_serbian_lje-5ddbo","title":"let KEY_Serbian_lje: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_serbian_nje-7v7j","title":"let KEY_Serbian_nje: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_serbian_tshe-83lkl","title":"let KEY_Serbian_tshe: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_shift_l","title":"let KEY_Shift_L: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_shift_lock","title":"let KEY_Shift_Lock: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_shift_r","title":"let KEY_Shift_R: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_shop","title":"let KEY_Shop: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_singlecandidate","title":"let KEY_SingleCandidate: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_a","title":"let KEY_Sinh_a: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_aa","title":"let KEY_Sinh_aa: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_aa2","title":"let KEY_Sinh_aa2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_ae","title":"let KEY_Sinh_ae: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_ae2","title":"let KEY_Sinh_ae2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_aee","title":"let KEY_Sinh_aee: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_aee2","title":"let KEY_Sinh_aee2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_ai","title":"let KEY_Sinh_ai: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_ai2","title":"let KEY_Sinh_ai2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_al","title":"let KEY_Sinh_al: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_au","title":"let KEY_Sinh_au: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_au2","title":"let KEY_Sinh_au2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_ba","title":"let KEY_Sinh_ba: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_bha","title":"let KEY_Sinh_bha: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_ca","title":"let KEY_Sinh_ca: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_cha","title":"let KEY_Sinh_cha: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_dda","title":"let KEY_Sinh_dda: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_ddha","title":"let KEY_Sinh_ddha: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_dha","title":"let KEY_Sinh_dha: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_dhha","title":"let KEY_Sinh_dhha: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_e","title":"let KEY_Sinh_e: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_e2","title":"let KEY_Sinh_e2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_ee","title":"let KEY_Sinh_ee: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_ee2","title":"let KEY_Sinh_ee2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_fa","title":"let KEY_Sinh_fa: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_ga","title":"let KEY_Sinh_ga: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_gha","title":"let KEY_Sinh_gha: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_h2","title":"let KEY_Sinh_h2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_ha","title":"let KEY_Sinh_ha: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_i","title":"let KEY_Sinh_i: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_i2","title":"let KEY_Sinh_i2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_ii","title":"let KEY_Sinh_ii: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_ii2","title":"let KEY_Sinh_ii2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_ja","title":"let KEY_Sinh_ja: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_jha","title":"let KEY_Sinh_jha: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_jnya","title":"let KEY_Sinh_jnya: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_ka","title":"let KEY_Sinh_ka: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_kha","title":"let KEY_Sinh_kha: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_kunddaliya","title":"let KEY_Sinh_kunddaliya: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_la","title":"let KEY_Sinh_la: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_lla","title":"let KEY_Sinh_lla: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_lu","title":"let KEY_Sinh_lu: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_lu2","title":"let KEY_Sinh_lu2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_luu","title":"let KEY_Sinh_luu: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_luu2","title":"let KEY_Sinh_luu2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_ma","title":"let KEY_Sinh_ma: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_mba","title":"let KEY_Sinh_mba: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_na","title":"let KEY_Sinh_na: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_ndda","title":"let KEY_Sinh_ndda: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_ndha","title":"let KEY_Sinh_ndha: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_ng","title":"let KEY_Sinh_ng: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_ng2","title":"let KEY_Sinh_ng2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_nga","title":"let KEY_Sinh_nga: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_nja","title":"let KEY_Sinh_nja: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_nna","title":"let KEY_Sinh_nna: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_nya","title":"let KEY_Sinh_nya: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_o","title":"let KEY_Sinh_o: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_o2","title":"let KEY_Sinh_o2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_oo","title":"let KEY_Sinh_oo: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_oo2","title":"let KEY_Sinh_oo2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_pa","title":"let KEY_Sinh_pa: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_pha","title":"let KEY_Sinh_pha: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_ra","title":"let KEY_Sinh_ra: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_ri","title":"let KEY_Sinh_ri: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_rii","title":"let KEY_Sinh_rii: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_ru2","title":"let KEY_Sinh_ru2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_ruu2","title":"let KEY_Sinh_ruu2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_sa","title":"let KEY_Sinh_sa: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_sha","title":"let KEY_Sinh_sha: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_ssha","title":"let KEY_Sinh_ssha: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_tha","title":"let KEY_Sinh_tha: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_thha","title":"let KEY_Sinh_thha: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_tta","title":"let KEY_Sinh_tta: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_ttha","title":"let KEY_Sinh_ttha: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_u","title":"let KEY_Sinh_u: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_u2","title":"let KEY_Sinh_u2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_uu","title":"let KEY_Sinh_uu: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_uu2","title":"let KEY_Sinh_uu2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_va","title":"let KEY_Sinh_va: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sinh_ya","title":"let KEY_Sinh_ya: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sleep","title":"let KEY_Sleep: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_slowkeys_enable","title":"let KEY_SlowKeys_Enable: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_spell","title":"let KEY_Spell: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_splitscreen","title":"let KEY_SplitScreen: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_standby","title":"let KEY_Standby: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_start","title":"let KEY_Start: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_stickykeys_enable","title":"let KEY_StickyKeys_Enable: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_stop","title":"let KEY_Stop: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_subtitle","title":"let KEY_Subtitle: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_super_l","title":"let KEY_Super_L: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_super_r","title":"let KEY_Super_R: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_support","title":"let KEY_Support: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_suspend","title":"let KEY_Suspend: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_switch_vt_1","title":"let KEY_Switch_VT_1: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_switch_vt_10","title":"let KEY_Switch_VT_10: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_switch_vt_11","title":"let KEY_Switch_VT_11: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_switch_vt_12","title":"let KEY_Switch_VT_12: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_switch_vt_2","title":"let KEY_Switch_VT_2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_switch_vt_3","title":"let KEY_Switch_VT_3: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_switch_vt_4","title":"let KEY_Switch_VT_4: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_switch_vt_5","title":"let KEY_Switch_VT_5: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_switch_vt_6","title":"let KEY_Switch_VT_6: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_switch_vt_7","title":"let KEY_Switch_VT_7: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_switch_vt_8","title":"let KEY_Switch_VT_8: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_switch_vt_9","title":"let KEY_Switch_VT_9: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sys_req","title":"let KEY_Sys_Req: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_t-2ha59","title":"let KEY_T: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thorn-79v0c","title":"let KEY_THORN: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_tab","title":"let KEY_Tab: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_tabovedot-10r5h","title":"let KEY_Tabovedot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_taskpane","title":"let KEY_TaskPane: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_tcaron-1d2gq","title":"let KEY_Tcaron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_tcedilla-5r7gq","title":"let KEY_Tcedilla: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_terminal","title":"let KEY_Terminal: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_terminate_server","title":"let KEY_Terminate_Server: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_baht","title":"let KEY_Thai_baht: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_bobaimai","title":"let KEY_Thai_bobaimai: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_chochan","title":"let KEY_Thai_chochan: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_chochang","title":"let KEY_Thai_chochang: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_choching","title":"let KEY_Thai_choching: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_chochoe","title":"let KEY_Thai_chochoe: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_dochada","title":"let KEY_Thai_dochada: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_dodek","title":"let KEY_Thai_dodek: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_fofa","title":"let KEY_Thai_fofa: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_fofan","title":"let KEY_Thai_fofan: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_hohip","title":"let KEY_Thai_hohip: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_honokhuk","title":"let KEY_Thai_honokhuk: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_khokhai","title":"let KEY_Thai_khokhai: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_khokhon","title":"let KEY_Thai_khokhon: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_khokhuat","title":"let KEY_Thai_khokhuat: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_khokhwai","title":"let KEY_Thai_khokhwai: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_khorakhang","title":"let KEY_Thai_khorakhang: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_kokai","title":"let KEY_Thai_kokai: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_lakkhangyao","title":"let KEY_Thai_lakkhangyao: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_lekchet","title":"let KEY_Thai_lekchet: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_lekha","title":"let KEY_Thai_lekha: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_lekhok","title":"let KEY_Thai_lekhok: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_lekkao","title":"let KEY_Thai_lekkao: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_leknung","title":"let KEY_Thai_leknung: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_lekpaet","title":"let KEY_Thai_lekpaet: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_leksam","title":"let KEY_Thai_leksam: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_leksi","title":"let KEY_Thai_leksi: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_leksong","title":"let KEY_Thai_leksong: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_leksun","title":"let KEY_Thai_leksun: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_lochula","title":"let KEY_Thai_lochula: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_loling","title":"let KEY_Thai_loling: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_lu","title":"let KEY_Thai_lu: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_maichattawa","title":"let KEY_Thai_maichattawa: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_maiek","title":"let KEY_Thai_maiek: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_maihanakat","title":"let KEY_Thai_maihanakat: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_maihanakat_maitho","title":"let KEY_Thai_maihanakat_maitho: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_maitaikhu","title":"let KEY_Thai_maitaikhu: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_maitho","title":"let KEY_Thai_maitho: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_maitri","title":"let KEY_Thai_maitri: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_maiyamok","title":"let KEY_Thai_maiyamok: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_moma","title":"let KEY_Thai_moma: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_ngongu","title":"let KEY_Thai_ngongu: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_nikhahit","title":"let KEY_Thai_nikhahit: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_nonen","title":"let KEY_Thai_nonen: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_nonu","title":"let KEY_Thai_nonu: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_oang","title":"let KEY_Thai_oang: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_paiyannoi","title":"let KEY_Thai_paiyannoi: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_phinthu","title":"let KEY_Thai_phinthu: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_phophan","title":"let KEY_Thai_phophan: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_phophung","title":"let KEY_Thai_phophung: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_phosamphao","title":"let KEY_Thai_phosamphao: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_popla","title":"let KEY_Thai_popla: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_rorua","title":"let KEY_Thai_rorua: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_ru","title":"let KEY_Thai_ru: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_saraa","title":"let KEY_Thai_saraa: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_saraaa","title":"let KEY_Thai_saraaa: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_saraae","title":"let KEY_Thai_saraae: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_saraaimaimalai","title":"let KEY_Thai_saraaimaimalai: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_saraaimaimuan","title":"let KEY_Thai_saraaimaimuan: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_saraam","title":"let KEY_Thai_saraam: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_sarae","title":"let KEY_Thai_sarae: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_sarai","title":"let KEY_Thai_sarai: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_saraii","title":"let KEY_Thai_saraii: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_sarao","title":"let KEY_Thai_sarao: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_sarau","title":"let KEY_Thai_sarau: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_saraue","title":"let KEY_Thai_saraue: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_sarauee","title":"let KEY_Thai_sarauee: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_sarauu","title":"let KEY_Thai_sarauu: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_sorusi","title":"let KEY_Thai_sorusi: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_sosala","title":"let KEY_Thai_sosala: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_soso","title":"let KEY_Thai_soso: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_sosua","title":"let KEY_Thai_sosua: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_thanthakhat","title":"let KEY_Thai_thanthakhat: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_thonangmontho","title":"let KEY_Thai_thonangmontho: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_thophuthao","title":"let KEY_Thai_thophuthao: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_thothahan","title":"let KEY_Thai_thothahan: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_thothan","title":"let KEY_Thai_thothan: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_thothong","title":"let KEY_Thai_thothong: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_thothung","title":"let KEY_Thai_thothung: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_topatak","title":"let KEY_Thai_topatak: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_totao","title":"let KEY_Thai_totao: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_wowaen","title":"let KEY_Thai_wowaen: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_yoyak","title":"let KEY_Thai_yoyak: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thai_yoying","title":"let KEY_Thai_yoying: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thorn-1eldr","title":"let KEY_Thorn: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_time","title":"let KEY_Time: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_todolist","title":"let KEY_ToDoList: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_tools","title":"let KEY_Tools: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_topmenu","title":"let KEY_TopMenu: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_touchpadoff","title":"let KEY_TouchpadOff: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_touchpadon","title":"let KEY_TouchpadOn: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_touchpadtoggle","title":"let KEY_TouchpadToggle: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_touroku","title":"let KEY_Touroku: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_travel","title":"let KEY_Travel: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_tslash-5ytlt","title":"let KEY_Tslash: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_u-6zlr1","title":"let KEY_U: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_uwb","title":"let KEY_UWB: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_uacute-3ahbe","title":"let KEY_Uacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ubelowdot-5hyjq","title":"let KEY_Ubelowdot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ubreve-1orw0","title":"let KEY_Ubreve: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ucircumflex-5032e","title":"let KEY_Ucircumflex: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_udiaeresis-1quwv","title":"let KEY_Udiaeresis: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_udoubleacute-47o52","title":"let KEY_Udoubleacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ugrave-8g0uk","title":"let KEY_Ugrave: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_uhook-1hc37","title":"let KEY_Uhook: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_uhorn-7br4z","title":"let KEY_Uhorn: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_uhornacute-37fur","title":"let KEY_Uhornacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_uhornbelowdot-5zr88","title":"let KEY_Uhornbelowdot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_uhorngrave-5ctty","title":"let KEY_Uhorngrave: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_uhornhook-39w7v","title":"let KEY_Uhornhook: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_uhorntilde-957dh","title":"let KEY_Uhorntilde: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ukrainian_ghe_with_upturn-9fxwt","title":"let KEY_Ukrainian_GHE_WITH_UPTURN: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ukrainian_i-8riu6","title":"let KEY_Ukrainian_I: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ukrainian_ie-chkd","title":"let KEY_Ukrainian_IE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ukrainian_yi-8f359","title":"let KEY_Ukrainian_YI: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ukrainian_ghe_with_upturn-pkps","title":"let KEY_Ukrainian_ghe_with_upturn: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ukrainian_i-30jsv","title":"let KEY_Ukrainian_i: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ukrainian_ie-2chwn","title":"let KEY_Ukrainian_ie: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ukrainian_yi-9a0wa","title":"let KEY_Ukrainian_yi: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ukranian_i-8tm9y","title":"let KEY_Ukranian_I: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ukranian_je-7b5mh","title":"let KEY_Ukranian_JE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ukranian_yi-1je2x","title":"let KEY_Ukranian_YI: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ukranian_i-6z7cd","title":"let KEY_Ukranian_i: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ukranian_je-3uqsy","title":"let KEY_Ukranian_je: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ukranian_yi-617x8","title":"let KEY_Ukranian_yi: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_umacron-2uzvm","title":"let KEY_Umacron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_undo","title":"let KEY_Undo: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ungrab","title":"let KEY_Ungrab: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_uogonek-uhlz","title":"let KEY_Uogonek: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_up","title":"let KEY_Up: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_uring-2zx1x","title":"let KEY_Uring: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_user1kb","title":"let KEY_User1KB: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_user2kb","title":"let KEY_User2KB: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_userpb","title":"let KEY_UserPB: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_utilde-6583c","title":"let KEY_Utilde: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_v-7bvll","title":"let KEY_V: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_vendorhome","title":"let KEY_VendorHome: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_video","title":"let KEY_Video: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_view","title":"let KEY_View: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_voidsymbol","title":"let KEY_VoidSymbol: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_w-7em1m","title":"let KEY_W: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_wlan","title":"let KEY_WLAN: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_wwan","title":"let KEY_WWAN: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_www","title":"let KEY_WWW: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_wacute-4rin2","title":"let KEY_Wacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_wakeup","title":"let KEY_WakeUp: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_wcircumflex-7o196","title":"let KEY_Wcircumflex: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_wdiaeresis-3m8dp","title":"let KEY_Wdiaeresis: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_webcam","title":"let KEY_WebCam: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_wgrave-717c","title":"let KEY_Wgrave: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_wheelbutton","title":"let KEY_WheelButton: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_windowclear","title":"let KEY_WindowClear: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_wonsign","title":"let KEY_WonSign: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_word","title":"let KEY_Word: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_x-g7ta","title":"let KEY_X: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_xabovedot-8sef6","title":"let KEY_Xabovedot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_xfer","title":"let KEY_Xfer: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_y-2mct2","title":"let KEY_Y: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_yacute-46k6x","title":"let KEY_Yacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ybelowdot-6wwxz","title":"let KEY_Ybelowdot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ycircumflex-5dvyp","title":"let KEY_Ycircumflex: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ydiaeresis-1k02q","title":"let KEY_Ydiaeresis: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_yellow","title":"let KEY_Yellow: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ygrave-8bvyw","title":"let KEY_Ygrave: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_yhook-1uqfm","title":"let KEY_Yhook: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ytilde-8os9q","title":"let KEY_Ytilde: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_z-4218a","title":"let KEY_Z: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_zabovedot-7zmps","title":"let KEY_Zabovedot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_zacute-4obga","title":"let KEY_Zacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_zcaron-8834","title":"let KEY_Zcaron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_zen_koho","title":"let KEY_Zen_Koho: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_zenkaku","title":"let KEY_Zenkaku: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_zenkaku_hankaku","title":"let KEY_Zenkaku_Hankaku: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_zoomin","title":"let KEY_ZoomIn: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_zoomout","title":"let KEY_ZoomOut: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_zstroke-7bz2z","title":"let KEY_Zstroke: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_a-22l88","title":"let KEY_a: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_aacute-1l81q","title":"let KEY_aacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_abelowdot-2t7uq","title":"let KEY_abelowdot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_abovedot","title":"let KEY_abovedot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_abreve-9n166","title":"let KEY_abreve: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_abreveacute-7c9jy","title":"let KEY_abreveacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_abrevebelowdot-71uxe","title":"let KEY_abrevebelowdot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_abrevegrave-6bz6e","title":"let KEY_abrevegrave: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_abrevehook-47869","title":"let KEY_abrevehook: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_abrevetilde-ngpu","title":"let KEY_abrevetilde: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_acircumflex-4ysv4","title":"let KEY_acircumflex: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_acircumflexacute-1qorr","title":"let KEY_acircumflexacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_acircumflexbelowdot-3liax","title":"let KEY_acircumflexbelowdot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_acircumflexgrave-277vf","title":"let KEY_acircumflexgrave: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_acircumflexhook-3xl94","title":"let KEY_acircumflexhook: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_acircumflextilde-2oihl","title":"let KEY_acircumflextilde: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_acute","title":"let KEY_acute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_adiaeresis-5jxwo","title":"let KEY_adiaeresis: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ae-9tjrg","title":"let KEY_ae: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_agrave-2eht0","title":"let KEY_agrave: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ahook-74jd0","title":"let KEY_ahook: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_amacron-29bjg","title":"let KEY_amacron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ampersand","title":"let KEY_ampersand: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_aogonek-2db8m","title":"let KEY_aogonek: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_apostrophe","title":"let KEY_apostrophe: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_approxeq","title":"let KEY_approxeq: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_approximate","title":"let KEY_approximate: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_aring-4x037","title":"let KEY_aring: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_asciicircum","title":"let KEY_asciicircum: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_asciitilde","title":"let KEY_asciitilde: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_asterisk","title":"let KEY_asterisk: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_at","title":"let KEY_at: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_atilde-90025","title":"let KEY_atilde: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_b-8x7yg","title":"let KEY_b: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_babovedot-93qy2","title":"let KEY_babovedot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_backslash","title":"let KEY_backslash: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ballotcross","title":"let KEY_ballotcross: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_bar","title":"let KEY_bar: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_because","title":"let KEY_because: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_blank","title":"let KEY_blank: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_botintegral","title":"let KEY_botintegral: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_botleftparens","title":"let KEY_botleftparens: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_botleftsqbracket","title":"let KEY_botleftsqbracket: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_botleftsummation","title":"let KEY_botleftsummation: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_botrightparens","title":"let KEY_botrightparens: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_botrightsqbracket","title":"let KEY_botrightsqbracket: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_botrightsummation","title":"let KEY_botrightsummation: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_bott","title":"let KEY_bott: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_botvertsummationconnector","title":"let KEY_botvertsummationconnector: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braceleft","title":"let KEY_braceleft: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braceright","title":"let KEY_braceright: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_bracketleft","title":"let KEY_bracketleft: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_bracketright","title":"let KEY_bracketright: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_blank","title":"let KEY_braille_blank: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dot_1","title":"let KEY_braille_dot_1: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dot_10","title":"let KEY_braille_dot_10: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dot_2","title":"let KEY_braille_dot_2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dot_3","title":"let KEY_braille_dot_3: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dot_4","title":"let KEY_braille_dot_4: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dot_5","title":"let KEY_braille_dot_5: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dot_6","title":"let KEY_braille_dot_6: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dot_7","title":"let KEY_braille_dot_7: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dot_8","title":"let KEY_braille_dot_8: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dot_9","title":"let KEY_braille_dot_9: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1","title":"let KEY_braille_dots_1: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_12","title":"let KEY_braille_dots_12: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_123","title":"let KEY_braille_dots_123: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1234","title":"let KEY_braille_dots_1234: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_12345","title":"let KEY_braille_dots_12345: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_123456","title":"let KEY_braille_dots_123456: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1234567","title":"let KEY_braille_dots_1234567: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_12345678","title":"let KEY_braille_dots_12345678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1234568","title":"let KEY_braille_dots_1234568: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_123457","title":"let KEY_braille_dots_123457: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1234578","title":"let KEY_braille_dots_1234578: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_123458","title":"let KEY_braille_dots_123458: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_12346","title":"let KEY_braille_dots_12346: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_123467","title":"let KEY_braille_dots_123467: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1234678","title":"let KEY_braille_dots_1234678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_123468","title":"let KEY_braille_dots_123468: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_12347","title":"let KEY_braille_dots_12347: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_123478","title":"let KEY_braille_dots_123478: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_12348","title":"let KEY_braille_dots_12348: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1235","title":"let KEY_braille_dots_1235: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_12356","title":"let KEY_braille_dots_12356: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_123567","title":"let KEY_braille_dots_123567: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1235678","title":"let KEY_braille_dots_1235678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_123568","title":"let KEY_braille_dots_123568: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_12357","title":"let KEY_braille_dots_12357: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_123578","title":"let KEY_braille_dots_123578: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_12358","title":"let KEY_braille_dots_12358: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1236","title":"let KEY_braille_dots_1236: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_12367","title":"let KEY_braille_dots_12367: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_123678","title":"let KEY_braille_dots_123678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_12368","title":"let KEY_braille_dots_12368: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1237","title":"let KEY_braille_dots_1237: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_12378","title":"let KEY_braille_dots_12378: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1238","title":"let KEY_braille_dots_1238: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_124","title":"let KEY_braille_dots_124: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1245","title":"let KEY_braille_dots_1245: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_12456","title":"let KEY_braille_dots_12456: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_124567","title":"let KEY_braille_dots_124567: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1245678","title":"let KEY_braille_dots_1245678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_124568","title":"let KEY_braille_dots_124568: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_12457","title":"let KEY_braille_dots_12457: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_124578","title":"let KEY_braille_dots_124578: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_12458","title":"let KEY_braille_dots_12458: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1246","title":"let KEY_braille_dots_1246: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_12467","title":"let KEY_braille_dots_12467: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_124678","title":"let KEY_braille_dots_124678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_12468","title":"let KEY_braille_dots_12468: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1247","title":"let KEY_braille_dots_1247: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_12478","title":"let KEY_braille_dots_12478: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1248","title":"let KEY_braille_dots_1248: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_125","title":"let KEY_braille_dots_125: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1256","title":"let KEY_braille_dots_1256: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_12567","title":"let KEY_braille_dots_12567: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_125678","title":"let KEY_braille_dots_125678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_12568","title":"let KEY_braille_dots_12568: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1257","title":"let KEY_braille_dots_1257: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_12578","title":"let KEY_braille_dots_12578: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1258","title":"let KEY_braille_dots_1258: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_126","title":"let KEY_braille_dots_126: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1267","title":"let KEY_braille_dots_1267: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_12678","title":"let KEY_braille_dots_12678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1268","title":"let KEY_braille_dots_1268: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_127","title":"let KEY_braille_dots_127: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1278","title":"let KEY_braille_dots_1278: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_128","title":"let KEY_braille_dots_128: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_13","title":"let KEY_braille_dots_13: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_134","title":"let KEY_braille_dots_134: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1345","title":"let KEY_braille_dots_1345: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_13456","title":"let KEY_braille_dots_13456: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_134567","title":"let KEY_braille_dots_134567: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1345678","title":"let KEY_braille_dots_1345678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_134568","title":"let KEY_braille_dots_134568: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_13457","title":"let KEY_braille_dots_13457: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_134578","title":"let KEY_braille_dots_134578: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_13458","title":"let KEY_braille_dots_13458: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1346","title":"let KEY_braille_dots_1346: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_13467","title":"let KEY_braille_dots_13467: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_134678","title":"let KEY_braille_dots_134678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_13468","title":"let KEY_braille_dots_13468: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1347","title":"let KEY_braille_dots_1347: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_13478","title":"let KEY_braille_dots_13478: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1348","title":"let KEY_braille_dots_1348: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_135","title":"let KEY_braille_dots_135: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1356","title":"let KEY_braille_dots_1356: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_13567","title":"let KEY_braille_dots_13567: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_135678","title":"let KEY_braille_dots_135678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_13568","title":"let KEY_braille_dots_13568: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1357","title":"let KEY_braille_dots_1357: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_13578","title":"let KEY_braille_dots_13578: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1358","title":"let KEY_braille_dots_1358: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_136","title":"let KEY_braille_dots_136: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1367","title":"let KEY_braille_dots_1367: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_13678","title":"let KEY_braille_dots_13678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1368","title":"let KEY_braille_dots_1368: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_137","title":"let KEY_braille_dots_137: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1378","title":"let KEY_braille_dots_1378: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_138","title":"let KEY_braille_dots_138: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_14","title":"let KEY_braille_dots_14: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_145","title":"let KEY_braille_dots_145: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1456","title":"let KEY_braille_dots_1456: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_14567","title":"let KEY_braille_dots_14567: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_145678","title":"let KEY_braille_dots_145678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_14568","title":"let KEY_braille_dots_14568: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1457","title":"let KEY_braille_dots_1457: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_14578","title":"let KEY_braille_dots_14578: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1458","title":"let KEY_braille_dots_1458: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_146","title":"let KEY_braille_dots_146: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1467","title":"let KEY_braille_dots_1467: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_14678","title":"let KEY_braille_dots_14678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1468","title":"let KEY_braille_dots_1468: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_147","title":"let KEY_braille_dots_147: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1478","title":"let KEY_braille_dots_1478: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_148","title":"let KEY_braille_dots_148: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_15","title":"let KEY_braille_dots_15: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_156","title":"let KEY_braille_dots_156: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1567","title":"let KEY_braille_dots_1567: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_15678","title":"let KEY_braille_dots_15678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1568","title":"let KEY_braille_dots_1568: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_157","title":"let KEY_braille_dots_157: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1578","title":"let KEY_braille_dots_1578: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_158","title":"let KEY_braille_dots_158: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_16","title":"let KEY_braille_dots_16: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_167","title":"let KEY_braille_dots_167: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_1678","title":"let KEY_braille_dots_1678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_168","title":"let KEY_braille_dots_168: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_17","title":"let KEY_braille_dots_17: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_178","title":"let KEY_braille_dots_178: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_18","title":"let KEY_braille_dots_18: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_2","title":"let KEY_braille_dots_2: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_23","title":"let KEY_braille_dots_23: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_234","title":"let KEY_braille_dots_234: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_2345","title":"let KEY_braille_dots_2345: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_23456","title":"let KEY_braille_dots_23456: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_234567","title":"let KEY_braille_dots_234567: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_2345678","title":"let KEY_braille_dots_2345678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_234568","title":"let KEY_braille_dots_234568: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_23457","title":"let KEY_braille_dots_23457: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_234578","title":"let KEY_braille_dots_234578: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_23458","title":"let KEY_braille_dots_23458: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_2346","title":"let KEY_braille_dots_2346: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_23467","title":"let KEY_braille_dots_23467: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_234678","title":"let KEY_braille_dots_234678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_23468","title":"let KEY_braille_dots_23468: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_2347","title":"let KEY_braille_dots_2347: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_23478","title":"let KEY_braille_dots_23478: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_2348","title":"let KEY_braille_dots_2348: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_235","title":"let KEY_braille_dots_235: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_2356","title":"let KEY_braille_dots_2356: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_23567","title":"let KEY_braille_dots_23567: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_235678","title":"let KEY_braille_dots_235678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_23568","title":"let KEY_braille_dots_23568: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_2357","title":"let KEY_braille_dots_2357: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_23578","title":"let KEY_braille_dots_23578: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_2358","title":"let KEY_braille_dots_2358: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_236","title":"let KEY_braille_dots_236: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_2367","title":"let KEY_braille_dots_2367: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_23678","title":"let KEY_braille_dots_23678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_2368","title":"let KEY_braille_dots_2368: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_237","title":"let KEY_braille_dots_237: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_2378","title":"let KEY_braille_dots_2378: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_238","title":"let KEY_braille_dots_238: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_24","title":"let KEY_braille_dots_24: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_245","title":"let KEY_braille_dots_245: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_2456","title":"let KEY_braille_dots_2456: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_24567","title":"let KEY_braille_dots_24567: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_245678","title":"let KEY_braille_dots_245678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_24568","title":"let KEY_braille_dots_24568: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_2457","title":"let KEY_braille_dots_2457: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_24578","title":"let KEY_braille_dots_24578: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_2458","title":"let KEY_braille_dots_2458: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_246","title":"let KEY_braille_dots_246: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_2467","title":"let KEY_braille_dots_2467: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_24678","title":"let KEY_braille_dots_24678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_2468","title":"let KEY_braille_dots_2468: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_247","title":"let KEY_braille_dots_247: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_2478","title":"let KEY_braille_dots_2478: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_248","title":"let KEY_braille_dots_248: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_25","title":"let KEY_braille_dots_25: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_256","title":"let KEY_braille_dots_256: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_2567","title":"let KEY_braille_dots_2567: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_25678","title":"let KEY_braille_dots_25678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_2568","title":"let KEY_braille_dots_2568: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_257","title":"let KEY_braille_dots_257: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_2578","title":"let KEY_braille_dots_2578: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_258","title":"let KEY_braille_dots_258: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_26","title":"let KEY_braille_dots_26: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_267","title":"let KEY_braille_dots_267: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_2678","title":"let KEY_braille_dots_2678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_268","title":"let KEY_braille_dots_268: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_27","title":"let KEY_braille_dots_27: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_278","title":"let KEY_braille_dots_278: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_28","title":"let KEY_braille_dots_28: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_3","title":"let KEY_braille_dots_3: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_34","title":"let KEY_braille_dots_34: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_345","title":"let KEY_braille_dots_345: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_3456","title":"let KEY_braille_dots_3456: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_34567","title":"let KEY_braille_dots_34567: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_345678","title":"let KEY_braille_dots_345678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_34568","title":"let KEY_braille_dots_34568: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_3457","title":"let KEY_braille_dots_3457: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_34578","title":"let KEY_braille_dots_34578: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_3458","title":"let KEY_braille_dots_3458: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_346","title":"let KEY_braille_dots_346: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_3467","title":"let KEY_braille_dots_3467: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_34678","title":"let KEY_braille_dots_34678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_3468","title":"let KEY_braille_dots_3468: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_347","title":"let KEY_braille_dots_347: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_3478","title":"let KEY_braille_dots_3478: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_348","title":"let KEY_braille_dots_348: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_35","title":"let KEY_braille_dots_35: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_356","title":"let KEY_braille_dots_356: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_3567","title":"let KEY_braille_dots_3567: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_35678","title":"let KEY_braille_dots_35678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_3568","title":"let KEY_braille_dots_3568: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_357","title":"let KEY_braille_dots_357: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_3578","title":"let KEY_braille_dots_3578: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_358","title":"let KEY_braille_dots_358: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_36","title":"let KEY_braille_dots_36: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_367","title":"let KEY_braille_dots_367: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_3678","title":"let KEY_braille_dots_3678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_368","title":"let KEY_braille_dots_368: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_37","title":"let KEY_braille_dots_37: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_378","title":"let KEY_braille_dots_378: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_38","title":"let KEY_braille_dots_38: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_4","title":"let KEY_braille_dots_4: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_45","title":"let KEY_braille_dots_45: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_456","title":"let KEY_braille_dots_456: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_4567","title":"let KEY_braille_dots_4567: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_45678","title":"let KEY_braille_dots_45678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_4568","title":"let KEY_braille_dots_4568: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_457","title":"let KEY_braille_dots_457: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_4578","title":"let KEY_braille_dots_4578: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_458","title":"let KEY_braille_dots_458: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_46","title":"let KEY_braille_dots_46: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_467","title":"let KEY_braille_dots_467: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_4678","title":"let KEY_braille_dots_4678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_468","title":"let KEY_braille_dots_468: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_47","title":"let KEY_braille_dots_47: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_478","title":"let KEY_braille_dots_478: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_48","title":"let KEY_braille_dots_48: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_5","title":"let KEY_braille_dots_5: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_56","title":"let KEY_braille_dots_56: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_567","title":"let KEY_braille_dots_567: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_5678","title":"let KEY_braille_dots_5678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_568","title":"let KEY_braille_dots_568: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_57","title":"let KEY_braille_dots_57: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_578","title":"let KEY_braille_dots_578: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_58","title":"let KEY_braille_dots_58: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_6","title":"let KEY_braille_dots_6: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_67","title":"let KEY_braille_dots_67: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_678","title":"let KEY_braille_dots_678: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_68","title":"let KEY_braille_dots_68: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_7","title":"let KEY_braille_dots_7: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_78","title":"let KEY_braille_dots_78: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_braille_dots_8","title":"let KEY_braille_dots_8: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_breve","title":"let KEY_breve: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_brokenbar","title":"let KEY_brokenbar: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_c-17kf1","title":"let KEY_c: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_c_h-5lwoa","title":"let KEY_c_h: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cabovedot-1jyiu","title":"let KEY_cabovedot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cacute-33s6u","title":"let KEY_cacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_careof","title":"let KEY_careof: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_caret","title":"let KEY_caret: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_caron","title":"let KEY_caron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ccaron-69ez","title":"let KEY_ccaron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ccedilla-razt","title":"let KEY_ccedilla: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ccircumflex-c8my","title":"let KEY_ccircumflex: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cedilla","title":"let KEY_cedilla: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cent","title":"let KEY_cent: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ch-7haqq","title":"let KEY_ch: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_checkerboard","title":"let KEY_checkerboard: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_checkmark","title":"let KEY_checkmark: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_circle","title":"let KEY_circle: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_club","title":"let KEY_club: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_colon","title":"let KEY_colon: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_comma","title":"let KEY_comma: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_containsas","title":"let KEY_containsas: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_copyright","title":"let KEY_copyright: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cr","title":"let KEY_cr: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_crossinglines","title":"let KEY_crossinglines: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cuberoot","title":"let KEY_cuberoot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_currency","title":"let KEY_currency: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_cursor","title":"let KEY_cursor: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_d-1pqaf","title":"let KEY_d: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dabovedot-4mxt8","title":"let KEY_dabovedot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dagger","title":"let KEY_dagger: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dcaron-2azo5","title":"let KEY_dcaron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_a-656ec","title":"let KEY_dead_A: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_e-7h8ml","title":"let KEY_dead_E: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_i-rhg1","title":"let KEY_dead_I: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_o-3tg48","title":"let KEY_dead_O: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_u-77smr","title":"let KEY_dead_U: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_a-4kv3p","title":"let KEY_dead_a: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_abovecomma","title":"let KEY_dead_abovecomma: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_abovedot","title":"let KEY_dead_abovedot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_abovereversedcomma","title":"let KEY_dead_abovereversedcomma: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_abovering","title":"let KEY_dead_abovering: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_aboveverticalline","title":"let KEY_dead_aboveverticalline: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_acute","title":"let KEY_dead_acute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_belowbreve","title":"let KEY_dead_belowbreve: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_belowcircumflex","title":"let KEY_dead_belowcircumflex: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_belowcomma","title":"let KEY_dead_belowcomma: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_belowdiaeresis","title":"let KEY_dead_belowdiaeresis: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_belowdot","title":"let KEY_dead_belowdot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_belowmacron","title":"let KEY_dead_belowmacron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_belowring","title":"let KEY_dead_belowring: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_belowtilde","title":"let KEY_dead_belowtilde: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_belowverticalline","title":"let KEY_dead_belowverticalline: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_breve","title":"let KEY_dead_breve: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_capital_schwa","title":"let KEY_dead_capital_schwa: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_caron","title":"let KEY_dead_caron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_cedilla","title":"let KEY_dead_cedilla: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_circumflex","title":"let KEY_dead_circumflex: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_currency","title":"let KEY_dead_currency: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_dasia","title":"let KEY_dead_dasia: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_diaeresis","title":"let KEY_dead_diaeresis: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_doubleacute","title":"let KEY_dead_doubleacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_doublegrave","title":"let KEY_dead_doublegrave: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_e-28t7b","title":"let KEY_dead_e: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_grave","title":"let KEY_dead_grave: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_greek","title":"let KEY_dead_greek: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_hook","title":"let KEY_dead_hook: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_horn","title":"let KEY_dead_horn: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_i-359cd","title":"let KEY_dead_i: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_invertedbreve","title":"let KEY_dead_invertedbreve: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_iota","title":"let KEY_dead_iota: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_longsolidusoverlay","title":"let KEY_dead_longsolidusoverlay: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_lowline","title":"let KEY_dead_lowline: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_macron","title":"let KEY_dead_macron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_o-43xpg","title":"let KEY_dead_o: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_ogonek","title":"let KEY_dead_ogonek: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_perispomeni","title":"let KEY_dead_perispomeni: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_psili","title":"let KEY_dead_psili: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_semivoiced_sound","title":"let KEY_dead_semivoiced_sound: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_small_schwa","title":"let KEY_dead_small_schwa: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_stroke","title":"let KEY_dead_stroke: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_tilde","title":"let KEY_dead_tilde: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_u-2xii3","title":"let KEY_dead_u: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dead_voiced_sound","title":"let KEY_dead_voiced_sound: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_decimalpoint","title":"let KEY_decimalpoint: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_degree","title":"let KEY_degree: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_diaeresis","title":"let KEY_diaeresis: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_diamond","title":"let KEY_diamond: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_digitspace","title":"let KEY_digitspace: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dintegral","title":"let KEY_dintegral: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_division","title":"let KEY_division: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dollar","title":"let KEY_dollar: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_doubbaselinedot","title":"let KEY_doubbaselinedot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_doubleacute","title":"let KEY_doubleacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_doubledagger","title":"let KEY_doubledagger: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_doublelowquotemark","title":"let KEY_doublelowquotemark: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_downarrow","title":"let KEY_downarrow: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_downcaret","title":"let KEY_downcaret: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_downshoe","title":"let KEY_downshoe: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_downstile","title":"let KEY_downstile: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_downtack","title":"let KEY_downtack: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_dstroke-39vwj","title":"let KEY_dstroke: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_e-tic","title":"let KEY_e: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_eabovedot-31ex9","title":"let KEY_eabovedot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_eacute-5p424","title":"let KEY_eacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ebelowdot-3l0mj","title":"let KEY_ebelowdot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ecaron-w5rk","title":"let KEY_ecaron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ecircumflex-2einm","title":"let KEY_ecircumflex: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ecircumflexacute-6d3a7","title":"let KEY_ecircumflexacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ecircumflexbelowdot-3sha","title":"let KEY_ecircumflexbelowdot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ecircumflexgrave-7y50k","title":"let KEY_ecircumflexgrave: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ecircumflexhook-38uzl","title":"let KEY_ecircumflexhook: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ecircumflextilde-7rbx9","title":"let KEY_ecircumflextilde: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ediaeresis-8lqzd","title":"let KEY_ediaeresis: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_egrave-1scvf","title":"let KEY_egrave: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ehook-7bpr7","title":"let KEY_ehook: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_eightsubscript","title":"let KEY_eightsubscript: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_eightsuperior","title":"let KEY_eightsuperior: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_elementof","title":"let KEY_elementof: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ellipsis","title":"let KEY_ellipsis: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_em3space","title":"let KEY_em3space: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_em4space","title":"let KEY_em4space: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_emacron-7czic","title":"let KEY_emacron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_emdash","title":"let KEY_emdash: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_emfilledcircle","title":"let KEY_emfilledcircle: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_emfilledrect","title":"let KEY_emfilledrect: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_emopencircle","title":"let KEY_emopencircle: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_emopenrectangle","title":"let KEY_emopenrectangle: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_emptyset","title":"let KEY_emptyset: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_emspace","title":"let KEY_emspace: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_endash","title":"let KEY_endash: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_enfilledcircbullet","title":"let KEY_enfilledcircbullet: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_enfilledsqbullet","title":"let KEY_enfilledsqbullet: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_eng-2j55s","title":"let KEY_eng: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_enopencircbullet","title":"let KEY_enopencircbullet: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_enopensquarebullet","title":"let KEY_enopensquarebullet: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_enspace","title":"let KEY_enspace: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_eogonek-4bs8n","title":"let KEY_eogonek: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_equal","title":"let KEY_equal: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_eth-zttl","title":"let KEY_eth: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_etilde-26fjn","title":"let KEY_etilde: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_exclam","title":"let KEY_exclam: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_exclamdown","title":"let KEY_exclamdown: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ezh-9xp0e","title":"let KEY_ezh: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_f-4vcpy","title":"let KEY_f: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_fabovedot-ciiy","title":"let KEY_fabovedot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_femalesymbol","title":"let KEY_femalesymbol: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ff","title":"let KEY_ff: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_figdash","title":"let KEY_figdash: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_filledlefttribullet","title":"let KEY_filledlefttribullet: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_filledrectbullet","title":"let KEY_filledrectbullet: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_filledrighttribullet","title":"let KEY_filledrighttribullet: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_filledtribulletdown","title":"let KEY_filledtribulletdown: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_filledtribulletup","title":"let KEY_filledtribulletup: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_fiveeighths","title":"let KEY_fiveeighths: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_fivesixths","title":"let KEY_fivesixths: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_fivesubscript","title":"let KEY_fivesubscript: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_fivesuperior","title":"let KEY_fivesuperior: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_fourfifths","title":"let KEY_fourfifths: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_foursubscript","title":"let KEY_foursubscript: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_foursuperior","title":"let KEY_foursuperior: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_fourthroot","title":"let KEY_fourthroot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_function","title":"let KEY_function: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_g-2rarw","title":"let KEY_g: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_gabovedot-wpfi","title":"let KEY_gabovedot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_gbreve-79tw","title":"let KEY_gbreve: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_gcaron-7topr","title":"let KEY_gcaron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_gcedilla-33oyj","title":"let KEY_gcedilla: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_gcircumflex-7ak0l","title":"let KEY_gcircumflex: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_grave","title":"let KEY_grave: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greater","title":"let KEY_greater: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_greaterthanequal","title":"let KEY_greaterthanequal: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_guillemotleft","title":"let KEY_guillemotleft: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_guillemotright","title":"let KEY_guillemotright: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_h-1tlwu","title":"let KEY_h: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hairspace","title":"let KEY_hairspace: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hcircumflex-612en","title":"let KEY_hcircumflex: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_heart","title":"let KEY_heart: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_aleph","title":"let KEY_hebrew_aleph: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_ayin","title":"let KEY_hebrew_ayin: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_bet","title":"let KEY_hebrew_bet: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_beth","title":"let KEY_hebrew_beth: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_chet","title":"let KEY_hebrew_chet: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_dalet","title":"let KEY_hebrew_dalet: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_daleth","title":"let KEY_hebrew_daleth: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_doublelowline","title":"let KEY_hebrew_doublelowline: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_finalkaph","title":"let KEY_hebrew_finalkaph: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_finalmem","title":"let KEY_hebrew_finalmem: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_finalnun","title":"let KEY_hebrew_finalnun: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_finalpe","title":"let KEY_hebrew_finalpe: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_finalzade","title":"let KEY_hebrew_finalzade: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_finalzadi","title":"let KEY_hebrew_finalzadi: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_gimel","title":"let KEY_hebrew_gimel: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_gimmel","title":"let KEY_hebrew_gimmel: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_he","title":"let KEY_hebrew_he: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_het","title":"let KEY_hebrew_het: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_kaph","title":"let KEY_hebrew_kaph: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_kuf","title":"let KEY_hebrew_kuf: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_lamed","title":"let KEY_hebrew_lamed: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_mem","title":"let KEY_hebrew_mem: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_nun","title":"let KEY_hebrew_nun: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_pe","title":"let KEY_hebrew_pe: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_qoph","title":"let KEY_hebrew_qoph: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_resh","title":"let KEY_hebrew_resh: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_samech","title":"let KEY_hebrew_samech: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_samekh","title":"let KEY_hebrew_samekh: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_shin","title":"let KEY_hebrew_shin: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_taf","title":"let KEY_hebrew_taf: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_taw","title":"let KEY_hebrew_taw: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_tet","title":"let KEY_hebrew_tet: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_teth","title":"let KEY_hebrew_teth: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_waw","title":"let KEY_hebrew_waw: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_yod","title":"let KEY_hebrew_yod: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_zade","title":"let KEY_hebrew_zade: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_zadi","title":"let KEY_hebrew_zadi: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_zain","title":"let KEY_hebrew_zain: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hebrew_zayin","title":"let KEY_hebrew_zayin: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hexagram","title":"let KEY_hexagram: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_horizconnector","title":"let KEY_horizconnector: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_horizlinescan1","title":"let KEY_horizlinescan1: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_horizlinescan3","title":"let KEY_horizlinescan3: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_horizlinescan5","title":"let KEY_horizlinescan5: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_horizlinescan7","title":"let KEY_horizlinescan7: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_horizlinescan9","title":"let KEY_horizlinescan9: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hstroke-1263z","title":"let KEY_hstroke: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ht","title":"let KEY_ht: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_hyphen","title":"let KEY_hyphen: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_i-8zdtc","title":"let KEY_i: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_itouch","title":"let KEY_iTouch: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iacute-6xkv3","title":"let KEY_iacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ibelowdot-1hz1y","title":"let KEY_ibelowdot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ibreve-1t3b9","title":"let KEY_ibreve: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_icircumflex-71t9","title":"let KEY_icircumflex: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_identical","title":"let KEY_identical: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_idiaeresis-3jdmn","title":"let KEY_idiaeresis: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_idotless","title":"let KEY_idotless: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ifonlyif","title":"let KEY_ifonlyif: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_igrave-50ujp","title":"let KEY_igrave: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ihook-579gc","title":"let KEY_ihook: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_imacron-6p5tw","title":"let KEY_imacron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_implies","title":"let KEY_implies: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_includedin","title":"let KEY_includedin: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_includes","title":"let KEY_includes: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_infinity","title":"let KEY_infinity: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_integral","title":"let KEY_integral: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_intersection","title":"let KEY_intersection: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_iogonek-xcl1","title":"let KEY_iogonek: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_itilde-52pp9","title":"let KEY_itilde: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_j-9hwn7","title":"let KEY_j: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_jcircumflex-6ji58","title":"let KEY_jcircumflex: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_jot","title":"let KEY_jot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_k-1twa2","title":"let KEY_k: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_a-4hg1s","title":"let KEY_kana_A: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_chi","title":"let KEY_kana_CHI: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_e-278en","title":"let KEY_kana_E: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_fu","title":"let KEY_kana_FU: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_ha","title":"let KEY_kana_HA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_he","title":"let KEY_kana_HE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_hi","title":"let KEY_kana_HI: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_ho","title":"let KEY_kana_HO: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_hu","title":"let KEY_kana_HU: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_i-1s9pw","title":"let KEY_kana_I: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_ka","title":"let KEY_kana_KA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_ke","title":"let KEY_kana_KE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_ki","title":"let KEY_kana_KI: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_ko","title":"let KEY_kana_KO: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_ku","title":"let KEY_kana_KU: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_ma","title":"let KEY_kana_MA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_me","title":"let KEY_kana_ME: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_mi","title":"let KEY_kana_MI: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_mo","title":"let KEY_kana_MO: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_mu","title":"let KEY_kana_MU: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_n","title":"let KEY_kana_N: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_na","title":"let KEY_kana_NA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_ne","title":"let KEY_kana_NE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_ni","title":"let KEY_kana_NI: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_no","title":"let KEY_kana_NO: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_nu","title":"let KEY_kana_NU: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_o-4er3u","title":"let KEY_kana_O: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_ra","title":"let KEY_kana_RA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_re","title":"let KEY_kana_RE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_ri","title":"let KEY_kana_RI: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_ro","title":"let KEY_kana_RO: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_ru","title":"let KEY_kana_RU: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_sa","title":"let KEY_kana_SA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_se","title":"let KEY_kana_SE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_shi","title":"let KEY_kana_SHI: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_so","title":"let KEY_kana_SO: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_su","title":"let KEY_kana_SU: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_ta","title":"let KEY_kana_TA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_te","title":"let KEY_kana_TE: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_ti","title":"let KEY_kana_TI: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_to","title":"let KEY_kana_TO: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_tsu-9zgsl","title":"let KEY_kana_TSU: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_tu-15bld","title":"let KEY_kana_TU: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_u-8529t","title":"let KEY_kana_U: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_wa","title":"let KEY_kana_WA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_wo","title":"let KEY_kana_WO: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_ya-46z5l","title":"let KEY_kana_YA: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_yo-3ty55","title":"let KEY_kana_YO: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_yu-8b7o9","title":"let KEY_kana_YU: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_a-3n1ng","title":"let KEY_kana_a: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_closingbracket","title":"let KEY_kana_closingbracket: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_comma","title":"let KEY_kana_comma: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_conjunctive","title":"let KEY_kana_conjunctive: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_e-39iia","title":"let KEY_kana_e: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_fullstop","title":"let KEY_kana_fullstop: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_i-70482","title":"let KEY_kana_i: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_middledot","title":"let KEY_kana_middledot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_o-5fy4p","title":"let KEY_kana_o: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_openingbracket","title":"let KEY_kana_openingbracket: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_switch","title":"let KEY_kana_switch: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_tsu-2ooce","title":"let KEY_kana_tsu: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_tu-47zz","title":"let KEY_kana_tu: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_u-41p0c","title":"let KEY_kana_u: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_ya-3c1cw","title":"let KEY_kana_ya: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_yo-2z0jk","title":"let KEY_kana_yo: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kana_yu-7g9rk","title":"let KEY_kana_yu: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kappa","title":"let KEY_kappa: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kcedilla-2h8vp","title":"let KEY_kcedilla: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_kra","title":"let KEY_kra: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_l-5l09v","title":"let KEY_l: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_lacute-41kk5","title":"let KEY_lacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_latincross","title":"let KEY_latincross: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_lbelowdot-25mnd","title":"let KEY_lbelowdot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_lcaron-nns4","title":"let KEY_lcaron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_lcedilla-9d52h","title":"let KEY_lcedilla: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_leftanglebracket","title":"let KEY_leftanglebracket: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_leftarrow","title":"let KEY_leftarrow: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_leftcaret","title":"let KEY_leftcaret: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_leftdoublequotemark","title":"let KEY_leftdoublequotemark: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_leftmiddlecurlybrace","title":"let KEY_leftmiddlecurlybrace: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_leftopentriangle","title":"let KEY_leftopentriangle: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_leftpointer","title":"let KEY_leftpointer: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_leftradical","title":"let KEY_leftradical: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_leftshoe","title":"let KEY_leftshoe: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_leftsinglequotemark","title":"let KEY_leftsinglequotemark: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_leftt","title":"let KEY_leftt: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_lefttack","title":"let KEY_lefttack: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_less","title":"let KEY_less: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_lessthanequal","title":"let KEY_lessthanequal: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_lf","title":"let KEY_lf: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_logicaland","title":"let KEY_logicaland: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_logicalor","title":"let KEY_logicalor: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_lowleftcorner","title":"let KEY_lowleftcorner: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_lowrightcorner","title":"let KEY_lowrightcorner: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_lstroke-3plu6","title":"let KEY_lstroke: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_m-5ffd1","title":"let KEY_m: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_mabovedot-2jnbw","title":"let KEY_mabovedot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_macron","title":"let KEY_macron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_malesymbol","title":"let KEY_malesymbol: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_maltesecross","title":"let KEY_maltesecross: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_marker","title":"let KEY_marker: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_masculine","title":"let KEY_masculine: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_minus","title":"let KEY_minus: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_minutes","title":"let KEY_minutes: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_mu","title":"let KEY_mu: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_multiply","title":"let KEY_multiply: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_musicalflat","title":"let KEY_musicalflat: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_musicalsharp","title":"let KEY_musicalsharp: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_n-4ihxn","title":"let KEY_n: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_nabla","title":"let KEY_nabla: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_nacute-4qi7l","title":"let KEY_nacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ncaron-8yfhx","title":"let KEY_ncaron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ncedilla-54ti1","title":"let KEY_ncedilla: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ninesubscript","title":"let KEY_ninesubscript: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ninesuperior","title":"let KEY_ninesuperior: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_nl","title":"let KEY_nl: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_nobreakspace","title":"let KEY_nobreakspace: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_notapproxeq","title":"let KEY_notapproxeq: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_notelementof","title":"let KEY_notelementof: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_notequal","title":"let KEY_notequal: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_notidentical","title":"let KEY_notidentical: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_notsign","title":"let KEY_notsign: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ntilde-9303o","title":"let KEY_ntilde: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_numbersign","title":"let KEY_numbersign: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_numerosign","title":"let KEY_numerosign: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_o-4fyz5","title":"let KEY_o: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_oacute-6ofcj","title":"let KEY_oacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_obarred-8su5r","title":"let KEY_obarred: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_obelowdot-2tr8s","title":"let KEY_obelowdot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ocaron-4ydwq","title":"let KEY_ocaron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ocircumflex-9ph5s","title":"let KEY_ocircumflex: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ocircumflexacute-7cnkx","title":"let KEY_ocircumflexacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ocircumflexbelowdot-93mvi","title":"let KEY_ocircumflexbelowdot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ocircumflexgrave-7tndv","title":"let KEY_ocircumflexgrave: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ocircumflexhook-6rfkb","title":"let KEY_ocircumflexhook: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ocircumflextilde-17uqn","title":"let KEY_ocircumflextilde: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_odiaeresis-3mjf4","title":"let KEY_odiaeresis: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_odoubleacute-5y5qt","title":"let KEY_odoubleacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_oe-7ipof","title":"let KEY_oe: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ogonek","title":"let KEY_ogonek: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ograve-8demo","title":"let KEY_ograve: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ohook-8tern","title":"let KEY_ohook: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ohorn-ija6","title":"let KEY_ohorn: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ohornacute-4ohqq","title":"let KEY_ohornacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ohornbelowdot-1a81","title":"let KEY_ohornbelowdot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ohorngrave-6r1xj","title":"let KEY_ohorngrave: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ohornhook-6hu0h","title":"let KEY_ohornhook: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ohorntilde-95825","title":"let KEY_ohorntilde: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_omacron-58kdd","title":"let KEY_omacron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_oneeighth","title":"let KEY_oneeighth: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_onefifth","title":"let KEY_onefifth: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_onehalf","title":"let KEY_onehalf: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_onequarter","title":"let KEY_onequarter: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_onesixth","title":"let KEY_onesixth: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_onesubscript","title":"let KEY_onesubscript: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_onesuperior","title":"let KEY_onesuperior: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_onethird","title":"let KEY_onethird: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ooblique-40evo","title":"let KEY_ooblique: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_openrectbullet","title":"let KEY_openrectbullet: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_openstar","title":"let KEY_openstar: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_opentribulletdown","title":"let KEY_opentribulletdown: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_opentribulletup","title":"let KEY_opentribulletup: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ordfeminine","title":"let KEY_ordfeminine: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_oslash-60b36","title":"let KEY_oslash: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_otilde-9ecgr","title":"let KEY_otilde: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_overbar","title":"let KEY_overbar: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_overline","title":"let KEY_overline: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_p-oqf1","title":"let KEY_p: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_pabovedot-22ibp","title":"let KEY_pabovedot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_paragraph","title":"let KEY_paragraph: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_parenleft","title":"let KEY_parenleft: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_parenright","title":"let KEY_parenright: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_partdifferential","title":"let KEY_partdifferential: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_partialderivative","title":"let KEY_partialderivative: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_percent","title":"let KEY_percent: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_period","title":"let KEY_period: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_periodcentered","title":"let KEY_periodcentered: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_permille","title":"let KEY_permille: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_phonographcopyright","title":"let KEY_phonographcopyright: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_plus","title":"let KEY_plus: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_plusminus","title":"let KEY_plusminus: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_prescription","title":"let KEY_prescription: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_prolongedsound","title":"let KEY_prolongedsound: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_punctspace","title":"let KEY_punctspace: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_q-8q0hr","title":"let KEY_q: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_quad","title":"let KEY_quad: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_question","title":"let KEY_question: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_questiondown","title":"let KEY_questiondown: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_quotedbl","title":"let KEY_quotedbl: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_quoteleft","title":"let KEY_quoteleft: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_quoteright","title":"let KEY_quoteright: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_r-8g42l","title":"let KEY_r: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_racute-2ukm5","title":"let KEY_racute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_radical","title":"let KEY_radical: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_rcaron-5s7wa","title":"let KEY_rcaron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_rcedilla-80dzs","title":"let KEY_rcedilla: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_registered","title":"let KEY_registered: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_rightanglebracket","title":"let KEY_rightanglebracket: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_rightarrow","title":"let KEY_rightarrow: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_rightcaret","title":"let KEY_rightcaret: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_rightdoublequotemark","title":"let KEY_rightdoublequotemark: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_rightmiddlecurlybrace","title":"let KEY_rightmiddlecurlybrace: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_rightmiddlesummation","title":"let KEY_rightmiddlesummation: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_rightopentriangle","title":"let KEY_rightopentriangle: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_rightpointer","title":"let KEY_rightpointer: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_rightshoe","title":"let KEY_rightshoe: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_rightsinglequotemark","title":"let KEY_rightsinglequotemark: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_rightt","title":"let KEY_rightt: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_righttack","title":"let KEY_righttack: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_s-8b86b","title":"let KEY_s: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sabovedot-5rsha","title":"let KEY_sabovedot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sacute-34k3k","title":"let KEY_sacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_scaron-8ydy1","title":"let KEY_scaron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_scedilla-7rgvg","title":"let KEY_scedilla: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_schwa-6q255","title":"let KEY_schwa: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_scircumflex-9exaa","title":"let KEY_scircumflex: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_script_switch","title":"let KEY_script_switch: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_seconds","title":"let KEY_seconds: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_section","title":"let KEY_section: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_semicolon","title":"let KEY_semicolon: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_semivoicedsound","title":"let KEY_semivoicedsound: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_seveneighths","title":"let KEY_seveneighths: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sevensubscript","title":"let KEY_sevensubscript: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sevensuperior","title":"let KEY_sevensuperior: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_signaturemark","title":"let KEY_signaturemark: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_signifblank","title":"let KEY_signifblank: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_similarequal","title":"let KEY_similarequal: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_singlelowquotemark","title":"let KEY_singlelowquotemark: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sixsubscript","title":"let KEY_sixsubscript: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sixsuperior","title":"let KEY_sixsuperior: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_slash","title":"let KEY_slash: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_soliddiamond","title":"let KEY_soliddiamond: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_space","title":"let KEY_space: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_squareroot","title":"let KEY_squareroot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ssharp","title":"let KEY_ssharp: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_sterling","title":"let KEY_sterling: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_stricteq","title":"let KEY_stricteq: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_t-44enz","title":"let KEY_t: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_tabovedot-7kgyy","title":"let KEY_tabovedot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_tcaron-7rwli","title":"let KEY_tcaron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_tcedilla-9mya5","title":"let KEY_tcedilla: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_telephone","title":"let KEY_telephone: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_telephonerecorder","title":"let KEY_telephonerecorder: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_therefore","title":"let KEY_therefore: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thinspace","title":"let KEY_thinspace: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_thorn-7np21","title":"let KEY_thorn: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_threeeighths","title":"let KEY_threeeighths: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_threefifths","title":"let KEY_threefifths: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_threequarters","title":"let KEY_threequarters: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_threesubscript","title":"let KEY_threesubscript: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_threesuperior","title":"let KEY_threesuperior: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_tintegral","title":"let KEY_tintegral: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_topintegral","title":"let KEY_topintegral: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_topleftparens","title":"let KEY_topleftparens: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_topleftradical","title":"let KEY_topleftradical: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_topleftsqbracket","title":"let KEY_topleftsqbracket: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_topleftsummation","title":"let KEY_topleftsummation: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_toprightparens","title":"let KEY_toprightparens: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_toprightsqbracket","title":"let KEY_toprightsqbracket: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_toprightsummation","title":"let KEY_toprightsummation: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_topt","title":"let KEY_topt: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_topvertsummationconnector","title":"let KEY_topvertsummationconnector: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_trademark","title":"let KEY_trademark: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_trademarkincircle","title":"let KEY_trademarkincircle: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_tslash-3x2qf","title":"let KEY_tslash: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_twofifths","title":"let KEY_twofifths: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_twosubscript","title":"let KEY_twosubscript: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_twosuperior","title":"let KEY_twosuperior: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_twothirds","title":"let KEY_twothirds: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_u-2qtvv","title":"let KEY_u: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_uacute-2gbbb","title":"let KEY_uacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ubelowdot-58497","title":"let KEY_ubelowdot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ubreve-3qlq6","title":"let KEY_ubreve: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ucircumflex-6jwxc","title":"let KEY_ucircumflex: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_udiaeresis-1thtn","title":"let KEY_udiaeresis: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_udoubleacute-54j58","title":"let KEY_udoubleacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ugrave-1oa88","title":"let KEY_ugrave: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_uhook-4twir","title":"let KEY_uhook: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_uhorn-917iw","title":"let KEY_uhorn: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_uhornacute-i2iz","title":"let KEY_uhornacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_uhornbelowdot-8p6kc","title":"let KEY_uhornbelowdot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_uhorngrave-81vda","title":"let KEY_uhorngrave: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_uhornhook-5vupm","title":"let KEY_uhornhook: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_uhorntilde-8ey0n","title":"let KEY_uhorntilde: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_umacron-29ob5","title":"let KEY_umacron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_underbar","title":"let KEY_underbar: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_underscore","title":"let KEY_underscore: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_union","title":"let KEY_union: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_uogonek-8gluf","title":"let KEY_uogonek: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_uparrow","title":"let KEY_uparrow: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_upcaret","title":"let KEY_upcaret: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_upleftcorner","title":"let KEY_upleftcorner: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_uprightcorner","title":"let KEY_uprightcorner: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_upshoe","title":"let KEY_upshoe: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_upstile","title":"let KEY_upstile: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_uptack","title":"let KEY_uptack: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_uring-6qax8","title":"let KEY_uring: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_utilde-6fx72","title":"let KEY_utilde: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_v-9pnjp","title":"let KEY_v: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_variation","title":"let KEY_variation: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_vertbar","title":"let KEY_vertbar: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_vertconnector","title":"let KEY_vertconnector: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_voicedsound","title":"let KEY_voicedsound: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_vt","title":"let KEY_vt: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_w-5menx","title":"let KEY_w: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_wacute-7k7di","title":"let KEY_wacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_wcircumflex-4t87r","title":"let KEY_wcircumflex: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_wdiaeresis-6kovc","title":"let KEY_wdiaeresis: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_wgrave-8390y","title":"let KEY_wgrave: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_x-gdst","title":"let KEY_x: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_xabovedot-2cyx0","title":"let KEY_xabovedot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_y-6826n","title":"let KEY_y: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_yacute-dkk3","title":"let KEY_yacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ybelowdot-1kuxg","title":"let KEY_ybelowdot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ycircumflex-38gwx","title":"let KEY_ycircumflex: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ydiaeresis-5rlcw","title":"let KEY_ydiaeresis: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_yen","title":"let KEY_yen: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ygrave-56kk7","title":"let KEY_ygrave: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_yhook-3wsgr","title":"let KEY_yhook: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_ytilde-2tbeo","title":"let KEY_ytilde: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_z-8t75b","title":"let KEY_z: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_zabovedot-2y2c5","title":"let KEY_zabovedot: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_zacute-3fgvf","title":"let KEY_zacute: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_zcaron-8y872","title":"let KEY_zcaron: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_zerosubscript","title":"let KEY_zerosubscript: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_zerosuperior","title":"let KEY_zerosuperior: Int32","type":"var"},{"path":"\/documentation\/gdk\/key_zstroke-3nbzt","title":"let KEY_zstroke: Int32","type":"var"},{"path":"\/documentation\/gdk\/modifier_mask","title":"let MODIFIER_MASK: Int32","type":"var"},{"path":"\/documentation\/gdk\/priority_redraw","title":"let PRIORITY_REDRAW: Int","type":"var"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/gdk\/cairodrawfromgl(cr:surface:source:sourcetype:bufferscale:x:y:width:height:)","title":"func cairoDrawFromGl<CairoContextT, SurfaceT>(cr: CairoContextT, surface: SurfaceT, source: Int, sourceType: Int, bufferScale: Int, x: Int, y: Int, width: Int, height: Int)","type":"func"},{"path":"\/documentation\/gdk\/cairorectangle(cr:rectangle:)","title":"func cairoRectangle<CairoContextT, RectangleT>(cr: CairoContextT, rectangle: RectangleT)","type":"func"},{"path":"\/documentation\/gdk\/cairoregion(cr:region:)","title":"func cairoRegion<CairoContextT, cairoRegionT>(cr: CairoContextT, region: cairoRegionT)","type":"func"},{"path":"\/documentation\/gdk\/cairoregioncreatefrom(surface:)","title":"func cairoRegionCreateFrom<cairoSurfaceT>(surface: cairoSurfaceT) -> RegionRef!","type":"func"},{"path":"\/documentation\/gdk\/cairosetsourcepixbuf(cr:pixbuf:pixbufx:pixbufy:)","title":"func cairoSetSourcePixbuf<CairoContextT, GdkPixbufPixbufT>(cr: CairoContextT, pixbuf: GdkPixbufPixbufT, pixbufX: CDouble, pixbufY: CDouble)","type":"func"},{"path":"\/documentation\/gdk\/cairosetsourcergba(cr:rgba:)","title":"func cairoSetSourceRgba<CairoContextT, RGBAT>(cr: CairoContextT, rgba: RGBAT)","type":"func"},{"path":"\/documentation\/gdk\/contentdeserializeasync(stream:mimetype:type:iopriority:cancellable:callback:userdata:)-8g0q","title":"func contentDeserializeAsync<GIOInputStreamT, GioCancellableT>(stream: GIOInputStreamT, mimeType: UnsafePointer<CChar>!, type: GType, ioPriority: Int, cancellable: GioCancellableT?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"func"},{"path":"\/documentation\/gdk\/contentdeserializeasync(stream:mimetype:type:iopriority:cancellable:callback:userdata:)-931sb","title":"func contentDeserializeAsync<GIOInputStreamT>(stream: GIOInputStreamT, mimeType: UnsafePointer<CChar>!, type: GType, ioPriority: Int, cancellable: CancellableRef?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"func"},{"path":"\/documentation\/gdk\/contentdeserializefinish(result:value:)","title":"func contentDeserializeFinish<GObjectValueT, GioAsyncResultT>(result: GioAsyncResultT, value: GObjectValueT) throws -> Bool","type":"func"},{"path":"\/documentation\/gdk\/contentformatsparse(string:)","title":"func contentFormatsParse(string: UnsafePointer<CChar>!) -> ContentFormatsRef!","type":"func"},{"path":"\/documentation\/gdk\/contentregisterdeserializer(mimetype:type:deserialize:data:notify:)","title":"func contentRegisterDeserializer(mimeType: UnsafePointer<CChar>!, type: GType, deserialize: GdkContentDeserializeFunc?, data: gpointer?, notify: GDestroyNotify?)","type":"func"},{"path":"\/documentation\/gdk\/contentregisterserializer(type:mimetype:serialize:data:notify:)","title":"func contentRegisterSerializer(type: GType, mimeType: UnsafePointer<CChar>!, serialize: GdkContentSerializeFunc?, data: gpointer?, notify: GDestroyNotify?)","type":"func"},{"path":"\/documentation\/gdk\/contentserializeasync(stream:mimetype:value:iopriority:cancellable:callback:userdata:)-3bnsx","title":"func contentSerializeAsync<GObjectValueT, GioOutputStreamT>(stream: GioOutputStreamT, mimeType: UnsafePointer<CChar>!, value: GObjectValueT, ioPriority: Int, cancellable: CancellableRef?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"func"},{"path":"\/documentation\/gdk\/contentserializeasync(stream:mimetype:value:iopriority:cancellable:callback:userdata:)-gh9d","title":"func contentSerializeAsync<GObjectValueT, GioCancellableT, GioOutputStreamT>(stream: GioOutputStreamT, mimeType: UnsafePointer<CChar>!, value: GObjectValueT, ioPriority: Int, cancellable: GioCancellableT?, callback: GAsyncReadyCallback?, userData: gpointer?)","type":"func"},{"path":"\/documentation\/gdk\/contentserializefinish(result:)","title":"func contentSerializeFinish<GioAsyncResultT>(result: GioAsyncResultT) throws -> Bool","type":"func"},{"path":"\/documentation\/gdk\/dragactionisunique(action:)","title":"func dragActionIsUnique(action: DragAction) -> Bool","type":"func"},{"path":"\/documentation\/gdk\/dragsurfacesizegettype()","title":"func dragSurfaceSizeGetType() -> GType","type":"func"},{"path":"\/documentation\/gdk\/eventsgetangle(event1:event2:angle:)","title":"func eventsGetAngle<EventT>(event1: EventT, event2: EventT, angle: UnsafeMutablePointer<CDouble>!) -> Bool","type":"func"},{"path":"\/documentation\/gdk\/eventsgetcenter(event1:event2:x:y:)","title":"func eventsGetCenter<EventT>(event1: EventT, event2: EventT, x: UnsafeMutablePointer<CDouble>!, y: UnsafeMutablePointer<CDouble>!) -> Bool","type":"func"},{"path":"\/documentation\/gdk\/eventsgetdistance(event1:event2:distance:)","title":"func eventsGetDistance<EventT>(event1: EventT, event2: EventT, distance: UnsafeMutablePointer<CDouble>!) -> Bool","type":"func"},{"path":"\/documentation\/gdk\/glerrorquark()","title":"func glErrorQuark() -> GQuark","type":"func"},{"path":"\/documentation\/gdk\/internmimetype(string:)","title":"func internMimeType(string: UnsafePointer<CChar>!) -> String!","type":"func"},{"path":"\/documentation\/gdk\/keyvalconvertcase(symbol:lower:upper:)","title":"func keyvalConvertCase(symbol: Int, lower: UnsafeMutablePointer<guint>!, upper: UnsafeMutablePointer<guint>!)","type":"func"},{"path":"\/documentation\/gdk\/keyvalfromname(keyvalname:)","title":"func keyvalFromName(keyvalName: UnsafePointer<CChar>!) -> Int","type":"func"},{"path":"\/documentation\/gdk\/keyvalislower(keyval:)","title":"func keyvalIsLower(keyval: Int) -> Bool","type":"func"},{"path":"\/documentation\/gdk\/keyvalisupper(keyval:)","title":"func keyvalIsUpper(keyval: Int) -> Bool","type":"func"},{"path":"\/documentation\/gdk\/keyvalname(keyval:)","title":"func keyvalName(keyval: Int) -> String!","type":"func"},{"path":"\/documentation\/gdk\/keyvaltolower(keyval:)","title":"func keyvalToLower(keyval: Int) -> Int","type":"func"},{"path":"\/documentation\/gdk\/keyvaltounicode(keyval:)","title":"func keyvalToUnicode(keyval: Int) -> guint32","type":"func"},{"path":"\/documentation\/gdk\/keyvaltoupper(keyval:)","title":"func keyvalToUpper(keyval: Int) -> Int","type":"func"},{"path":"\/documentation\/gdk\/paintablenewempty(intrinsicwidth:intrinsicheight:)","title":"func paintableNewEmpty(intrinsicWidth: Int, intrinsicHeight: Int) -> PaintableRef!","type":"func"},{"path":"\/documentation\/gdk\/pangolayoutgetclipregion(layout:xorigin:yorigin:indexranges:nranges:)","title":"func pangoLayoutGetClipRegion<PangoLayoutT>(layout: PangoLayoutT, xOrigin: Int, yOrigin: Int, indexRanges: UnsafePointer<gint>!, nRanges: Int) -> RegionRef!","type":"func"},{"path":"\/documentation\/gdk\/pangolayoutlinegetclipregion(line:xorigin:yorigin:indexranges:nranges:)","title":"func pangoLayoutLineGetClipRegion<PangoLayoutLineT>(line: PangoLayoutLineT, xOrigin: Int, yOrigin: Int, indexRanges: UnsafePointer<CInt>!, nRanges: Int) -> RegionRef!","type":"func"},{"path":"\/documentation\/gdk\/pixbufgetfrom(surface:srcx:srcy:width:height:)","title":"func pixbufGetFrom<cairoSurfaceT>(surface: cairoSurfaceT, srcX: Int, srcY: Int, width: Int, height: Int) -> PixbufRef!","type":"func"},{"path":"\/documentation\/gdk\/pixbufgetfrom(texture:)","title":"func pixbufGetFrom<TextureT>(texture: TextureT) -> PixbufRef!","type":"func"},{"path":"\/documentation\/gdk\/setallowed(backends:)","title":"func setAllowed(backends: UnsafePointer<CChar>!)","type":"func"},{"path":"\/documentation\/gdk\/textureerrorquark()","title":"func textureErrorQuark() -> GQuark","type":"func"},{"path":"\/documentation\/gdk\/toplevelsizegettype()","title":"func toplevelSizeGetType() -> GType","type":"func"},{"path":"\/documentation\/gdk\/unicodetokeyval(wc:)","title":"func unicodeToKeyval(wc: guint32) -> Int","type":"func"},{"path":"\/documentation\/gdk\/vulkanerrorquark()","title":"func vulkanErrorQuark() -> GQuark","type":"func"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/gdk\/axisuse","title":"AxisUse","type":"typealias"},{"path":"\/documentation\/gdk\/contentdeserializefunc","title":"ContentDeserializeFunc","type":"typealias"},{"path":"\/documentation\/gdk\/contentserializefunc","title":"ContentSerializeFunc","type":"typealias"},{"path":"\/documentation\/gdk\/crossingmode","title":"CrossingMode","type":"typealias"},{"path":"\/documentation\/gdk\/devicepadfeature","title":"DevicePadFeature","type":"typealias"},{"path":"\/documentation\/gdk\/devicetooltype","title":"DeviceToolType","type":"typealias"},{"path":"\/documentation\/gdk\/dragcancelreason","title":"DragCancelReason","type":"typealias"},{"path":"\/documentation\/gdk\/eventtype","title":"EventType","type":"typealias"},{"path":"\/documentation\/gdk\/fullscreenmode","title":"FullscreenMode","type":"typealias"},{"path":"\/documentation\/gdk\/glerror","title":"GLError","type":"typealias"},{"path":"\/documentation\/gdk\/gdkxevent","title":"GdkXEvent","type":"typealias"},{"path":"\/documentation\/gdk\/gravity","title":"Gravity","type":"typealias"},{"path":"\/documentation\/gdk\/inputsource","title":"InputSource","type":"typealias"},{"path":"\/documentation\/gdk\/keymatch","title":"KeyMatch","type":"typealias"},{"path":"\/documentation\/gdk\/memoryformat","title":"MemoryFormat","type":"typealias"},{"path":"\/documentation\/gdk\/notifytype","title":"NotifyType","type":"typealias"},{"path":"\/documentation\/gdk\/scrolldirection","title":"ScrollDirection","type":"typealias"},{"path":"\/documentation\/gdk\/scrollunit","title":"ScrollUnit","type":"typealias"},{"path":"\/documentation\/gdk\/subpixellayout","title":"SubpixelLayout","type":"typealias"},{"path":"\/documentation\/gdk\/surfaceedge","title":"SurfaceEdge","type":"typealias"},{"path":"\/documentation\/gdk\/textureerror","title":"TextureError","type":"typealias"},{"path":"\/documentation\/gdk\/titlebargesture","title":"TitlebarGesture","type":"typealias"},{"path":"\/documentation\/gdk\/touchpadgesturephase","title":"TouchpadGesturePhase","type":"typealias"},{"path":"\/documentation\/gdk\/vulkanerror","title":"VulkanError","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/applaunchcontextpropertyname\/display","title":"case display","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/applaunchcontextpropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/applaunchcontextpropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/applaunchcontextpropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/applaunchcontextpropertyname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/applaunchcontextpropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/applaunchcontextpropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/applaunchcontextpropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/applaunchcontextpropertyname","title":"AppLaunchContextPropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/applaunchcontextsignalname\/launchfailed","title":"case launchFailed","type":"case"},{"path":"\/documentation\/gdk\/applaunchcontextsignalname\/launchstarted","title":"case launchStarted","type":"case"},{"path":"\/documentation\/gdk\/applaunchcontextsignalname\/launched","title":"case launched","type":"case"},{"path":"\/documentation\/gdk\/applaunchcontextsignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/gdk\/applaunchcontextsignalname\/notifydisplay","title":"case notifyDisplay","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/applaunchcontextsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/applaunchcontextsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/applaunchcontextsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/applaunchcontextsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/applaunchcontextsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/applaunchcontextsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/applaunchcontextsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/applaunchcontextsignalname","title":"AppLaunchContextSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/cairocontextpropertyname\/display","title":"case display","type":"case"},{"path":"\/documentation\/gdk\/cairocontextpropertyname\/surface","title":"case surface","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/cairocontextpropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/cairocontextpropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/cairocontextpropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cairocontextpropertyname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/cairocontextpropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cairocontextpropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/cairocontextpropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/cairocontextpropertyname","title":"CairoContextPropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/cairocontextsignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/gdk\/cairocontextsignalname\/notifydisplay","title":"case notifyDisplay","type":"case"},{"path":"\/documentation\/gdk\/cairocontextsignalname\/notifysurface","title":"case notifySurface","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/cairocontextsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/cairocontextsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/cairocontextsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cairocontextsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/cairocontextsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cairocontextsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/cairocontextsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/cairocontextsignalname","title":"CairoContextSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/clipboardpropertyname\/content","title":"case content","type":"case"},{"path":"\/documentation\/gdk\/clipboardpropertyname\/display","title":"case display","type":"case"},{"path":"\/documentation\/gdk\/clipboardpropertyname\/formats","title":"case formats","type":"case"},{"path":"\/documentation\/gdk\/clipboardpropertyname\/local","title":"case local","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/clipboardpropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/clipboardpropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/clipboardpropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/clipboardpropertyname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/clipboardpropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/clipboardpropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/clipboardpropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/clipboardpropertyname","title":"ClipboardPropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/clipboardsignalname\/changed","title":"case changed","type":"case"},{"path":"\/documentation\/gdk\/clipboardsignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/gdk\/clipboardsignalname\/notifycontent","title":"case notifyContent","type":"case"},{"path":"\/documentation\/gdk\/clipboardsignalname\/notifydisplay","title":"case notifyDisplay","type":"case"},{"path":"\/documentation\/gdk\/clipboardsignalname\/notifyformats","title":"case notifyFormats","type":"case"},{"path":"\/documentation\/gdk\/clipboardsignalname\/notifylocal","title":"case notifyLocal","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/clipboardsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/clipboardsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/clipboardsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/clipboardsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/clipboardsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/clipboardsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/clipboardsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/clipboardsignalname","title":"ClipboardSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentdeserializersignalname\/notify","title":"case notify","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentdeserializersignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentdeserializersignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/contentdeserializersignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentdeserializersignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/contentdeserializersignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentdeserializersignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/contentdeserializersignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/contentdeserializersignalname","title":"ContentDeserializerSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentproviderpropertyname\/formats","title":"case formats","type":"case"},{"path":"\/documentation\/gdk\/contentproviderpropertyname\/storableformats","title":"case storableFormats","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentproviderpropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentproviderpropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/contentproviderpropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentproviderpropertyname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/contentproviderpropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentproviderpropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/contentproviderpropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/contentproviderpropertyname","title":"ContentProviderPropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentprovidersignalname\/contentchanged","title":"case contentChanged","type":"case"},{"path":"\/documentation\/gdk\/contentprovidersignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/gdk\/contentprovidersignalname\/notifyformats","title":"case notifyFormats","type":"case"},{"path":"\/documentation\/gdk\/contentprovidersignalname\/notifystorableformats","title":"case notifyStorableFormats","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentprovidersignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentprovidersignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/contentprovidersignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentprovidersignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/contentprovidersignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentprovidersignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/contentprovidersignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/contentprovidersignalname","title":"ContentProviderSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentserializersignalname\/notify","title":"case notify","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentserializersignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentserializersignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/contentserializersignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentserializersignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/contentserializersignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/contentserializersignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/contentserializersignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/contentserializersignalname","title":"ContentSerializerSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/cursorpropertyname\/fallback","title":"case fallback","type":"case"},{"path":"\/documentation\/gdk\/cursorpropertyname\/hotspotx","title":"case hotspotX","type":"case"},{"path":"\/documentation\/gdk\/cursorpropertyname\/hotspoty","title":"case hotspotY","type":"case"},{"path":"\/documentation\/gdk\/cursorpropertyname\/name-swift.enum.case","title":"case name","type":"case"},{"path":"\/documentation\/gdk\/cursorpropertyname\/texture","title":"case texture","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/cursorpropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/cursorpropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/cursorpropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cursorpropertyname\/name-swift.property","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/cursorpropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cursorpropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/cursorpropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/cursorpropertyname","title":"CursorPropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/cursorsignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/gdk\/cursorsignalname\/notifyfallback","title":"case notifyFallback","type":"case"},{"path":"\/documentation\/gdk\/cursorsignalname\/notifyhotspotx","title":"case notifyHotspotX","type":"case"},{"path":"\/documentation\/gdk\/cursorsignalname\/notifyhotspoty","title":"case notifyHotspotY","type":"case"},{"path":"\/documentation\/gdk\/cursorsignalname\/notifyname","title":"case notifyName","type":"case"},{"path":"\/documentation\/gdk\/cursorsignalname\/notifytexture","title":"case notifyTexture","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/cursorsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/cursorsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/cursorsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cursorsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/cursorsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cursorsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/cursorsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/cursorsignalname","title":"CursorSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepadpropertyname\/capslockstate","title":"case capsLockState","type":"case"},{"path":"\/documentation\/gdk\/devicepadpropertyname\/direction","title":"case direction","type":"case"},{"path":"\/documentation\/gdk\/devicepadpropertyname\/display","title":"case display","type":"case"},{"path":"\/documentation\/gdk\/devicepadpropertyname\/hasbidilayouts","title":"case hasBidiLayouts","type":"case"},{"path":"\/documentation\/gdk\/devicepadpropertyname\/hascursor","title":"case hasCursor","type":"case"},{"path":"\/documentation\/gdk\/devicepadpropertyname\/modifierstate","title":"case modifierState","type":"case"},{"path":"\/documentation\/gdk\/devicepadpropertyname\/naxes","title":"case nAxes","type":"case"},{"path":"\/documentation\/gdk\/devicepadpropertyname\/name-swift.enum.case","title":"case name","type":"case"},{"path":"\/documentation\/gdk\/devicepadpropertyname\/numlockstate","title":"case numLockState","type":"case"},{"path":"\/documentation\/gdk\/devicepadpropertyname\/numtouches","title":"case numTouches","type":"case"},{"path":"\/documentation\/gdk\/devicepadpropertyname\/productid","title":"case productId","type":"case"},{"path":"\/documentation\/gdk\/devicepadpropertyname\/scrolllockstate","title":"case scrollLockState","type":"case"},{"path":"\/documentation\/gdk\/devicepadpropertyname\/seat","title":"case seat","type":"case"},{"path":"\/documentation\/gdk\/devicepadpropertyname\/source","title":"case source","type":"case"},{"path":"\/documentation\/gdk\/devicepadpropertyname\/tool","title":"case tool","type":"case"},{"path":"\/documentation\/gdk\/devicepadpropertyname\/vendorid","title":"case vendorId","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepadpropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepadpropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/devicepadpropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepadpropertyname\/name-swift.property","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/devicepadpropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepadpropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/devicepadpropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/devicepadpropertyname","title":"DevicePadPropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepadsignalname\/changed","title":"case changed","type":"case"},{"path":"\/documentation\/gdk\/devicepadsignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/gdk\/devicepadsignalname\/notifycapslockstate","title":"case notifyCapsLockState","type":"case"},{"path":"\/documentation\/gdk\/devicepadsignalname\/notifydirection","title":"case notifyDirection","type":"case"},{"path":"\/documentation\/gdk\/devicepadsignalname\/notifydisplay","title":"case notifyDisplay","type":"case"},{"path":"\/documentation\/gdk\/devicepadsignalname\/notifyhasbidilayouts","title":"case notifyHasBidiLayouts","type":"case"},{"path":"\/documentation\/gdk\/devicepadsignalname\/notifyhascursor","title":"case notifyHasCursor","type":"case"},{"path":"\/documentation\/gdk\/devicepadsignalname\/notifymodifierstate","title":"case notifyModifierState","type":"case"},{"path":"\/documentation\/gdk\/devicepadsignalname\/notifynaxes","title":"case notifyNAxes","type":"case"},{"path":"\/documentation\/gdk\/devicepadsignalname\/notifyname","title":"case notifyName","type":"case"},{"path":"\/documentation\/gdk\/devicepadsignalname\/notifynumlockstate","title":"case notifyNumLockState","type":"case"},{"path":"\/documentation\/gdk\/devicepadsignalname\/notifynumtouches","title":"case notifyNumTouches","type":"case"},{"path":"\/documentation\/gdk\/devicepadsignalname\/notifyproductid","title":"case notifyProductId","type":"case"},{"path":"\/documentation\/gdk\/devicepadsignalname\/notifyscrolllockstate","title":"case notifyScrollLockState","type":"case"},{"path":"\/documentation\/gdk\/devicepadsignalname\/notifyseat","title":"case notifySeat","type":"case"},{"path":"\/documentation\/gdk\/devicepadsignalname\/notifysource","title":"case notifySource","type":"case"},{"path":"\/documentation\/gdk\/devicepadsignalname\/notifytool","title":"case notifyTool","type":"case"},{"path":"\/documentation\/gdk\/devicepadsignalname\/notifyvendorid","title":"case notifyVendorId","type":"case"},{"path":"\/documentation\/gdk\/devicepadsignalname\/toolchanged","title":"case toolChanged","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepadsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepadsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/devicepadsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepadsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/devicepadsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepadsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/devicepadsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/devicepadsignalname","title":"DevicePadSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepropertyname\/capslockstate","title":"case capsLockState","type":"case"},{"path":"\/documentation\/gdk\/devicepropertyname\/direction","title":"case direction","type":"case"},{"path":"\/documentation\/gdk\/devicepropertyname\/display","title":"case display","type":"case"},{"path":"\/documentation\/gdk\/devicepropertyname\/hasbidilayouts","title":"case hasBidiLayouts","type":"case"},{"path":"\/documentation\/gdk\/devicepropertyname\/hascursor","title":"case hasCursor","type":"case"},{"path":"\/documentation\/gdk\/devicepropertyname\/modifierstate","title":"case modifierState","type":"case"},{"path":"\/documentation\/gdk\/devicepropertyname\/naxes","title":"case nAxes","type":"case"},{"path":"\/documentation\/gdk\/devicepropertyname\/name-swift.enum.case","title":"case name","type":"case"},{"path":"\/documentation\/gdk\/devicepropertyname\/numlockstate","title":"case numLockState","type":"case"},{"path":"\/documentation\/gdk\/devicepropertyname\/numtouches","title":"case numTouches","type":"case"},{"path":"\/documentation\/gdk\/devicepropertyname\/productid","title":"case productId","type":"case"},{"path":"\/documentation\/gdk\/devicepropertyname\/scrolllockstate","title":"case scrollLockState","type":"case"},{"path":"\/documentation\/gdk\/devicepropertyname\/seat","title":"case seat","type":"case"},{"path":"\/documentation\/gdk\/devicepropertyname\/source","title":"case source","type":"case"},{"path":"\/documentation\/gdk\/devicepropertyname\/tool","title":"case tool","type":"case"},{"path":"\/documentation\/gdk\/devicepropertyname\/vendorid","title":"case vendorId","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/devicepropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepropertyname\/name-swift.property","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/devicepropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicepropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/devicepropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/devicepropertyname","title":"DevicePropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicesignalname\/changed","title":"case changed","type":"case"},{"path":"\/documentation\/gdk\/devicesignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/gdk\/devicesignalname\/notifycapslockstate","title":"case notifyCapsLockState","type":"case"},{"path":"\/documentation\/gdk\/devicesignalname\/notifydirection","title":"case notifyDirection","type":"case"},{"path":"\/documentation\/gdk\/devicesignalname\/notifydisplay","title":"case notifyDisplay","type":"case"},{"path":"\/documentation\/gdk\/devicesignalname\/notifyhasbidilayouts","title":"case notifyHasBidiLayouts","type":"case"},{"path":"\/documentation\/gdk\/devicesignalname\/notifyhascursor","title":"case notifyHasCursor","type":"case"},{"path":"\/documentation\/gdk\/devicesignalname\/notifymodifierstate","title":"case notifyModifierState","type":"case"},{"path":"\/documentation\/gdk\/devicesignalname\/notifynaxes","title":"case notifyNAxes","type":"case"},{"path":"\/documentation\/gdk\/devicesignalname\/notifyname","title":"case notifyName","type":"case"},{"path":"\/documentation\/gdk\/devicesignalname\/notifynumlockstate","title":"case notifyNumLockState","type":"case"},{"path":"\/documentation\/gdk\/devicesignalname\/notifynumtouches","title":"case notifyNumTouches","type":"case"},{"path":"\/documentation\/gdk\/devicesignalname\/notifyproductid","title":"case notifyProductId","type":"case"},{"path":"\/documentation\/gdk\/devicesignalname\/notifyscrolllockstate","title":"case notifyScrollLockState","type":"case"},{"path":"\/documentation\/gdk\/devicesignalname\/notifyseat","title":"case notifySeat","type":"case"},{"path":"\/documentation\/gdk\/devicesignalname\/notifysource","title":"case notifySource","type":"case"},{"path":"\/documentation\/gdk\/devicesignalname\/notifytool","title":"case notifyTool","type":"case"},{"path":"\/documentation\/gdk\/devicesignalname\/notifyvendorid","title":"case notifyVendorId","type":"case"},{"path":"\/documentation\/gdk\/devicesignalname\/toolchanged","title":"case toolChanged","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicesignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicesignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/devicesignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicesignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/devicesignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicesignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/devicesignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/devicesignalname","title":"DeviceSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicetoolpropertyname\/axes","title":"case axes","type":"case"},{"path":"\/documentation\/gdk\/devicetoolpropertyname\/hardwareid","title":"case hardwareId","type":"case"},{"path":"\/documentation\/gdk\/devicetoolpropertyname\/serial","title":"case serial","type":"case"},{"path":"\/documentation\/gdk\/devicetoolpropertyname\/tooltype","title":"case toolType","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicetoolpropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicetoolpropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/devicetoolpropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicetoolpropertyname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/devicetoolpropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicetoolpropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/devicetoolpropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/devicetoolpropertyname","title":"DeviceToolPropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicetoolsignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/gdk\/devicetoolsignalname\/notifyaxes","title":"case notifyAxes","type":"case"},{"path":"\/documentation\/gdk\/devicetoolsignalname\/notifyhardwareid","title":"case notifyHardwareId","type":"case"},{"path":"\/documentation\/gdk\/devicetoolsignalname\/notifyserial","title":"case notifySerial","type":"case"},{"path":"\/documentation\/gdk\/devicetoolsignalname\/notifytooltype","title":"case notifyToolType","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicetoolsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicetoolsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/devicetoolsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicetoolsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/devicetoolsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/devicetoolsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/devicetoolsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/devicetoolsignalname","title":"DeviceToolSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaymanagerpropertyname\/defaultdisplay","title":"case defaultDisplay","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaymanagerpropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaymanagerpropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/displaymanagerpropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaymanagerpropertyname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/displaymanagerpropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaymanagerpropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/displaymanagerpropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/displaymanagerpropertyname","title":"DisplayManagerPropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaymanagersignalname\/displayopened","title":"case displayOpened","type":"case"},{"path":"\/documentation\/gdk\/displaymanagersignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/gdk\/displaymanagersignalname\/notifydefaultdisplay","title":"case notifyDefaultDisplay","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaymanagersignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaymanagersignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/displaymanagersignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaymanagersignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/displaymanagersignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaymanagersignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/displaymanagersignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/displaymanagersignalname","title":"DisplayManagerSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaypropertyname\/composited","title":"case composited","type":"case"},{"path":"\/documentation\/gdk\/displaypropertyname\/inputshapes","title":"case inputShapes","type":"case"},{"path":"\/documentation\/gdk\/displaypropertyname\/rgba","title":"case rgba","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaypropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaypropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/displaypropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaypropertyname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/displaypropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaypropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/displaypropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/displaypropertyname","title":"DisplayPropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaysignalname\/closed","title":"case closed","type":"case"},{"path":"\/documentation\/gdk\/displaysignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/gdk\/displaysignalname\/notifycomposited","title":"case notifyComposited","type":"case"},{"path":"\/documentation\/gdk\/displaysignalname\/notifyinputshapes","title":"case notifyInputShapes","type":"case"},{"path":"\/documentation\/gdk\/displaysignalname\/notifyrgba","title":"case notifyRgba","type":"case"},{"path":"\/documentation\/gdk\/displaysignalname\/opened","title":"case opened","type":"case"},{"path":"\/documentation\/gdk\/displaysignalname\/seatadded","title":"case seatAdded","type":"case"},{"path":"\/documentation\/gdk\/displaysignalname\/seatremoved","title":"case seatRemoved","type":"case"},{"path":"\/documentation\/gdk\/displaysignalname\/settingchanged","title":"case settingChanged","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaysignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaysignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/displaysignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaysignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/displaysignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/displaysignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/displaysignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/displaysignalname","title":"DisplaySignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragpropertyname\/actions","title":"case actions","type":"case"},{"path":"\/documentation\/gdk\/dragpropertyname\/content","title":"case content","type":"case"},{"path":"\/documentation\/gdk\/dragpropertyname\/device","title":"case device","type":"case"},{"path":"\/documentation\/gdk\/dragpropertyname\/display","title":"case display","type":"case"},{"path":"\/documentation\/gdk\/dragpropertyname\/formats","title":"case formats","type":"case"},{"path":"\/documentation\/gdk\/dragpropertyname\/selectedaction","title":"case selectedAction","type":"case"},{"path":"\/documentation\/gdk\/dragpropertyname\/surface","title":"case surface","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragpropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragpropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/dragpropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragpropertyname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/dragpropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragpropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/dragpropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/dragpropertyname","title":"DragPropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsignalname\/cancel","title":"case cancel","type":"case"},{"path":"\/documentation\/gdk\/dragsignalname\/dndfinished","title":"case dndFinished","type":"case"},{"path":"\/documentation\/gdk\/dragsignalname\/dropperformed","title":"case dropPerformed","type":"case"},{"path":"\/documentation\/gdk\/dragsignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/gdk\/dragsignalname\/notifyactions","title":"case notifyActions","type":"case"},{"path":"\/documentation\/gdk\/dragsignalname\/notifycontent","title":"case notifyContent","type":"case"},{"path":"\/documentation\/gdk\/dragsignalname\/notifydevice","title":"case notifyDevice","type":"case"},{"path":"\/documentation\/gdk\/dragsignalname\/notifydisplay","title":"case notifyDisplay","type":"case"},{"path":"\/documentation\/gdk\/dragsignalname\/notifyformats","title":"case notifyFormats","type":"case"},{"path":"\/documentation\/gdk\/dragsignalname\/notifyselectedaction","title":"case notifySelectedAction","type":"case"},{"path":"\/documentation\/gdk\/dragsignalname\/notifysurface","title":"case notifySurface","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/dragsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/dragsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/dragsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/dragsignalname","title":"DragSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfacepropertyname\/cursor","title":"case cursor","type":"case"},{"path":"\/documentation\/gdk\/dragsurfacepropertyname\/display","title":"case display","type":"case"},{"path":"\/documentation\/gdk\/dragsurfacepropertyname\/frameclock","title":"case frameClock","type":"case"},{"path":"\/documentation\/gdk\/dragsurfacepropertyname\/height","title":"case height","type":"case"},{"path":"\/documentation\/gdk\/dragsurfacepropertyname\/mapped","title":"case mapped","type":"case"},{"path":"\/documentation\/gdk\/dragsurfacepropertyname\/scale","title":"case scale","type":"case"},{"path":"\/documentation\/gdk\/dragsurfacepropertyname\/scalefactor","title":"case scaleFactor","type":"case"},{"path":"\/documentation\/gdk\/dragsurfacepropertyname\/width","title":"case width","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfacepropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfacepropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/dragsurfacepropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfacepropertyname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/dragsurfacepropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfacepropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/dragsurfacepropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/dragsurfacepropertyname","title":"DragSurfacePropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfacesignalname\/computesize","title":"case computeSize","type":"case"},{"path":"\/documentation\/gdk\/dragsurfacesignalname\/entermonitor","title":"case enterMonitor","type":"case"},{"path":"\/documentation\/gdk\/dragsurfacesignalname\/event","title":"case event","type":"case"},{"path":"\/documentation\/gdk\/dragsurfacesignalname\/layout","title":"case layout","type":"case"},{"path":"\/documentation\/gdk\/dragsurfacesignalname\/leavemonitor","title":"case leaveMonitor","type":"case"},{"path":"\/documentation\/gdk\/dragsurfacesignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/gdk\/dragsurfacesignalname\/notifycursor","title":"case notifyCursor","type":"case"},{"path":"\/documentation\/gdk\/dragsurfacesignalname\/notifydisplay","title":"case notifyDisplay","type":"case"},{"path":"\/documentation\/gdk\/dragsurfacesignalname\/notifyframeclock","title":"case notifyFrameClock","type":"case"},{"path":"\/documentation\/gdk\/dragsurfacesignalname\/notifyheight","title":"case notifyHeight","type":"case"},{"path":"\/documentation\/gdk\/dragsurfacesignalname\/notifymapped","title":"case notifyMapped","type":"case"},{"path":"\/documentation\/gdk\/dragsurfacesignalname\/notifyscale","title":"case notifyScale","type":"case"},{"path":"\/documentation\/gdk\/dragsurfacesignalname\/notifyscalefactor","title":"case notifyScaleFactor","type":"case"},{"path":"\/documentation\/gdk\/dragsurfacesignalname\/notifywidth","title":"case notifyWidth","type":"case"},{"path":"\/documentation\/gdk\/dragsurfacesignalname\/render","title":"case render","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfacesignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfacesignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/dragsurfacesignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfacesignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/dragsurfacesignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dragsurfacesignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/dragsurfacesignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/dragsurfacesignalname","title":"DragSurfaceSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/drawcontextpropertyname\/display","title":"case display","type":"case"},{"path":"\/documentation\/gdk\/drawcontextpropertyname\/surface","title":"case surface","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/drawcontextpropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/drawcontextpropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/drawcontextpropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/drawcontextpropertyname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/drawcontextpropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/drawcontextpropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/drawcontextpropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/drawcontextpropertyname","title":"DrawContextPropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/drawcontextsignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/gdk\/drawcontextsignalname\/notifydisplay","title":"case notifyDisplay","type":"case"},{"path":"\/documentation\/gdk\/drawcontextsignalname\/notifysurface","title":"case notifySurface","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/drawcontextsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/drawcontextsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/drawcontextsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/drawcontextsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/drawcontextsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/drawcontextsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/drawcontextsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/drawcontextsignalname","title":"DrawContextSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/droppropertyname\/actions","title":"case actions","type":"case"},{"path":"\/documentation\/gdk\/droppropertyname\/device","title":"case device","type":"case"},{"path":"\/documentation\/gdk\/droppropertyname\/display","title":"case display","type":"case"},{"path":"\/documentation\/gdk\/droppropertyname\/drag","title":"case drag","type":"case"},{"path":"\/documentation\/gdk\/droppropertyname\/formats","title":"case formats","type":"case"},{"path":"\/documentation\/gdk\/droppropertyname\/surface","title":"case surface","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/droppropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/droppropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/droppropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/droppropertyname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/droppropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/droppropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/droppropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/droppropertyname","title":"DropPropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/dropsignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/gdk\/dropsignalname\/notifyactions","title":"case notifyActions","type":"case"},{"path":"\/documentation\/gdk\/dropsignalname\/notifydevice","title":"case notifyDevice","type":"case"},{"path":"\/documentation\/gdk\/dropsignalname\/notifydisplay","title":"case notifyDisplay","type":"case"},{"path":"\/documentation\/gdk\/dropsignalname\/notifydrag","title":"case notifyDrag","type":"case"},{"path":"\/documentation\/gdk\/dropsignalname\/notifyformats","title":"case notifyFormats","type":"case"},{"path":"\/documentation\/gdk\/dropsignalname\/notifysurface","title":"case notifySurface","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/dropsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/dropsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/dropsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dropsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/dropsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/dropsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/dropsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/dropsignalname","title":"DropSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclocksignalname\/afterpaint","title":"case afterPaint","type":"case"},{"path":"\/documentation\/gdk\/frameclocksignalname\/beforepaint","title":"case beforePaint","type":"case"},{"path":"\/documentation\/gdk\/frameclocksignalname\/flushevents","title":"case flushEvents","type":"case"},{"path":"\/documentation\/gdk\/frameclocksignalname\/layout","title":"case layout","type":"case"},{"path":"\/documentation\/gdk\/frameclocksignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/gdk\/frameclocksignalname\/paint","title":"case paint","type":"case"},{"path":"\/documentation\/gdk\/frameclocksignalname\/resumeevents","title":"case resumeEvents","type":"case"},{"path":"\/documentation\/gdk\/frameclocksignalname\/update","title":"case update","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclocksignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclocksignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/frameclocksignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclocksignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/frameclocksignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/frameclocksignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/frameclocksignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/frameclocksignalname","title":"FrameClockSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/glcontextpropertyname\/allowedapis","title":"case allowedApis","type":"case"},{"path":"\/documentation\/gdk\/glcontextpropertyname\/api","title":"case api","type":"case"},{"path":"\/documentation\/gdk\/glcontextpropertyname\/display","title":"case display","type":"case"},{"path":"\/documentation\/gdk\/glcontextpropertyname\/sharedcontext","title":"case sharedContext","type":"case"},{"path":"\/documentation\/gdk\/glcontextpropertyname\/surface","title":"case surface","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/glcontextpropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/glcontextpropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/glcontextpropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/glcontextpropertyname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/glcontextpropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/glcontextpropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/glcontextpropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/glcontextpropertyname","title":"GLContextPropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/glcontextsignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/gdk\/glcontextsignalname\/notifyallowedapis","title":"case notifyAllowedApis","type":"case"},{"path":"\/documentation\/gdk\/glcontextsignalname\/notifyapi","title":"case notifyApi","type":"case"},{"path":"\/documentation\/gdk\/glcontextsignalname\/notifydisplay","title":"case notifyDisplay","type":"case"},{"path":"\/documentation\/gdk\/glcontextsignalname\/notifysharedcontext","title":"case notifySharedContext","type":"case"},{"path":"\/documentation\/gdk\/glcontextsignalname\/notifysurface","title":"case notifySurface","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/glcontextsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/glcontextsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/glcontextsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/glcontextsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/glcontextsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/glcontextsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/glcontextsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/glcontextsignalname","title":"GLContextSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuilderpropertyname\/context","title":"case context","type":"case"},{"path":"\/documentation\/gdk\/gltexturebuilderpropertyname\/format","title":"case format","type":"case"},{"path":"\/documentation\/gdk\/gltexturebuilderpropertyname\/hasmipmap","title":"case hasMipmap","type":"case"},{"path":"\/documentation\/gdk\/gltexturebuilderpropertyname\/height","title":"case height","type":"case"},{"path":"\/documentation\/gdk\/gltexturebuilderpropertyname\/id","title":"case id","type":"case"},{"path":"\/documentation\/gdk\/gltexturebuilderpropertyname\/sync","title":"case sync","type":"case"},{"path":"\/documentation\/gdk\/gltexturebuilderpropertyname\/updateregion","title":"case updateRegion","type":"case"},{"path":"\/documentation\/gdk\/gltexturebuilderpropertyname\/updatetexture","title":"case updateTexture","type":"case"},{"path":"\/documentation\/gdk\/gltexturebuilderpropertyname\/width","title":"case width","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuilderpropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuilderpropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/gltexturebuilderpropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuilderpropertyname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/gltexturebuilderpropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuilderpropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/gltexturebuilderpropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/gltexturebuilderpropertyname","title":"GLTextureBuilderPropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuildersignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/gdk\/gltexturebuildersignalname\/notifycontext","title":"case notifyContext","type":"case"},{"path":"\/documentation\/gdk\/gltexturebuildersignalname\/notifyformat","title":"case notifyFormat","type":"case"},{"path":"\/documentation\/gdk\/gltexturebuildersignalname\/notifyhasmipmap","title":"case notifyHasMipmap","type":"case"},{"path":"\/documentation\/gdk\/gltexturebuildersignalname\/notifyheight","title":"case notifyHeight","type":"case"},{"path":"\/documentation\/gdk\/gltexturebuildersignalname\/notifyid","title":"case notifyId","type":"case"},{"path":"\/documentation\/gdk\/gltexturebuildersignalname\/notifysync","title":"case notifySync","type":"case"},{"path":"\/documentation\/gdk\/gltexturebuildersignalname\/notifyupdateregion","title":"case notifyUpdateRegion","type":"case"},{"path":"\/documentation\/gdk\/gltexturebuildersignalname\/notifyupdatetexture","title":"case notifyUpdateTexture","type":"case"},{"path":"\/documentation\/gdk\/gltexturebuildersignalname\/notifywidth","title":"case notifyWidth","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuildersignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuildersignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/gltexturebuildersignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuildersignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/gltexturebuildersignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturebuildersignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/gltexturebuildersignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/gltexturebuildersignalname","title":"GLTextureBuilderSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturepropertyname\/height","title":"case height","type":"case"},{"path":"\/documentation\/gdk\/gltexturepropertyname\/width","title":"case width","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturepropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturepropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/gltexturepropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturepropertyname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/gltexturepropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturepropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/gltexturepropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/gltexturepropertyname","title":"GLTexturePropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturesignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/gdk\/gltexturesignalname\/notifyheight","title":"case notifyHeight","type":"case"},{"path":"\/documentation\/gdk\/gltexturesignalname\/notifywidth","title":"case notifyWidth","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturesignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturesignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/gltexturesignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturesignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/gltexturesignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/gltexturesignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/gltexturesignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/gltexturesignalname","title":"GLTextureSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytexturepropertyname\/height","title":"case height","type":"case"},{"path":"\/documentation\/gdk\/memorytexturepropertyname\/width","title":"case width","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytexturepropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytexturepropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/memorytexturepropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytexturepropertyname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/memorytexturepropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytexturepropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/memorytexturepropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/memorytexturepropertyname","title":"MemoryTexturePropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytexturesignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/gdk\/memorytexturesignalname\/notifyheight","title":"case notifyHeight","type":"case"},{"path":"\/documentation\/gdk\/memorytexturesignalname\/notifywidth","title":"case notifyWidth","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytexturesignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytexturesignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/memorytexturesignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytexturesignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/memorytexturesignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/memorytexturesignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/memorytexturesignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/memorytexturesignalname","title":"MemoryTextureSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitorpropertyname\/connector","title":"case connector","type":"case"},{"path":"\/documentation\/gdk\/monitorpropertyname\/description","title":"case description","type":"case"},{"path":"\/documentation\/gdk\/monitorpropertyname\/display","title":"case display","type":"case"},{"path":"\/documentation\/gdk\/monitorpropertyname\/geometry","title":"case geometry","type":"case"},{"path":"\/documentation\/gdk\/monitorpropertyname\/heightmm","title":"case heightMm","type":"case"},{"path":"\/documentation\/gdk\/monitorpropertyname\/manufacturer","title":"case manufacturer","type":"case"},{"path":"\/documentation\/gdk\/monitorpropertyname\/model","title":"case model","type":"case"},{"path":"\/documentation\/gdk\/monitorpropertyname\/refreshrate","title":"case refreshRate","type":"case"},{"path":"\/documentation\/gdk\/monitorpropertyname\/scalefactor","title":"case scaleFactor","type":"case"},{"path":"\/documentation\/gdk\/monitorpropertyname\/subpixellayout","title":"case subpixelLayout","type":"case"},{"path":"\/documentation\/gdk\/monitorpropertyname\/valid","title":"case valid","type":"case"},{"path":"\/documentation\/gdk\/monitorpropertyname\/widthmm","title":"case widthMm","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitorpropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitorpropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/monitorpropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitorpropertyname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/monitorpropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitorpropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/monitorpropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/monitorpropertyname","title":"MonitorPropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitorsignalname\/invalidate","title":"case invalidate","type":"case"},{"path":"\/documentation\/gdk\/monitorsignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/gdk\/monitorsignalname\/notifyconnector","title":"case notifyConnector","type":"case"},{"path":"\/documentation\/gdk\/monitorsignalname\/notifydescription","title":"case notifyDescription","type":"case"},{"path":"\/documentation\/gdk\/monitorsignalname\/notifydisplay","title":"case notifyDisplay","type":"case"},{"path":"\/documentation\/gdk\/monitorsignalname\/notifygeometry","title":"case notifyGeometry","type":"case"},{"path":"\/documentation\/gdk\/monitorsignalname\/notifyheightmm","title":"case notifyHeightMm","type":"case"},{"path":"\/documentation\/gdk\/monitorsignalname\/notifymanufacturer","title":"case notifyManufacturer","type":"case"},{"path":"\/documentation\/gdk\/monitorsignalname\/notifymodel","title":"case notifyModel","type":"case"},{"path":"\/documentation\/gdk\/monitorsignalname\/notifyrefreshrate","title":"case notifyRefreshRate","type":"case"},{"path":"\/documentation\/gdk\/monitorsignalname\/notifyscalefactor","title":"case notifyScaleFactor","type":"case"},{"path":"\/documentation\/gdk\/monitorsignalname\/notifysubpixellayout","title":"case notifySubpixelLayout","type":"case"},{"path":"\/documentation\/gdk\/monitorsignalname\/notifyvalid","title":"case notifyValid","type":"case"},{"path":"\/documentation\/gdk\/monitorsignalname\/notifywidthmm","title":"case notifyWidthMm","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitorsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitorsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/monitorsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitorsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/monitorsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/monitorsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/monitorsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/monitorsignalname","title":"MonitorSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintablesignalname\/invalidatecontents","title":"case invalidateContents","type":"case"},{"path":"\/documentation\/gdk\/paintablesignalname\/invalidatesize","title":"case invalidateSize","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintablesignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintablesignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/paintablesignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintablesignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/paintablesignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/paintablesignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/paintablesignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/paintablesignalname","title":"PaintableSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/popuppropertyname\/autohide","title":"case autohide","type":"case"},{"path":"\/documentation\/gdk\/popuppropertyname\/cursor","title":"case cursor","type":"case"},{"path":"\/documentation\/gdk\/popuppropertyname\/display","title":"case display","type":"case"},{"path":"\/documentation\/gdk\/popuppropertyname\/frameclock","title":"case frameClock","type":"case"},{"path":"\/documentation\/gdk\/popuppropertyname\/height","title":"case height","type":"case"},{"path":"\/documentation\/gdk\/popuppropertyname\/mapped","title":"case mapped","type":"case"},{"path":"\/documentation\/gdk\/popuppropertyname\/parent","title":"case parent","type":"case"},{"path":"\/documentation\/gdk\/popuppropertyname\/scale","title":"case scale","type":"case"},{"path":"\/documentation\/gdk\/popuppropertyname\/scalefactor","title":"case scaleFactor","type":"case"},{"path":"\/documentation\/gdk\/popuppropertyname\/width","title":"case width","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/popuppropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/popuppropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/popuppropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/popuppropertyname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/popuppropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/popuppropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/popuppropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/popuppropertyname","title":"PopupPropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/popupsignalname\/entermonitor","title":"case enterMonitor","type":"case"},{"path":"\/documentation\/gdk\/popupsignalname\/event","title":"case event","type":"case"},{"path":"\/documentation\/gdk\/popupsignalname\/layout","title":"case layout","type":"case"},{"path":"\/documentation\/gdk\/popupsignalname\/leavemonitor","title":"case leaveMonitor","type":"case"},{"path":"\/documentation\/gdk\/popupsignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/gdk\/popupsignalname\/notifyautohide","title":"case notifyAutohide","type":"case"},{"path":"\/documentation\/gdk\/popupsignalname\/notifycursor","title":"case notifyCursor","type":"case"},{"path":"\/documentation\/gdk\/popupsignalname\/notifydisplay","title":"case notifyDisplay","type":"case"},{"path":"\/documentation\/gdk\/popupsignalname\/notifyframeclock","title":"case notifyFrameClock","type":"case"},{"path":"\/documentation\/gdk\/popupsignalname\/notifyheight","title":"case notifyHeight","type":"case"},{"path":"\/documentation\/gdk\/popupsignalname\/notifymapped","title":"case notifyMapped","type":"case"},{"path":"\/documentation\/gdk\/popupsignalname\/notifyparent","title":"case notifyParent","type":"case"},{"path":"\/documentation\/gdk\/popupsignalname\/notifyscale","title":"case notifyScale","type":"case"},{"path":"\/documentation\/gdk\/popupsignalname\/notifyscalefactor","title":"case notifyScaleFactor","type":"case"},{"path":"\/documentation\/gdk\/popupsignalname\/notifywidth","title":"case notifyWidth","type":"case"},{"path":"\/documentation\/gdk\/popupsignalname\/render","title":"case render","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/popupsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/popupsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/popupsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/popupsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/popupsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/popupsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/popupsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/popupsignalname","title":"PopupSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatpropertyname\/display","title":"case display","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatpropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatpropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/seatpropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatpropertyname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/seatpropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatpropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/seatpropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/seatpropertyname","title":"SeatPropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatsignalname\/deviceadded","title":"case deviceAdded","type":"case"},{"path":"\/documentation\/gdk\/seatsignalname\/deviceremoved","title":"case deviceRemoved","type":"case"},{"path":"\/documentation\/gdk\/seatsignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/gdk\/seatsignalname\/notifydisplay","title":"case notifyDisplay","type":"case"},{"path":"\/documentation\/gdk\/seatsignalname\/tooladded","title":"case toolAdded","type":"case"},{"path":"\/documentation\/gdk\/seatsignalname\/toolremoved","title":"case toolRemoved","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/seatsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/seatsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/seatsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/seatsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/seatsignalname","title":"SeatSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/snapshotsignalname\/notify","title":"case notify","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/snapshotsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/snapshotsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/snapshotsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/snapshotsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/snapshotsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/snapshotsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/snapshotsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/snapshotsignalname","title":"SnapshotSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/surfacepropertyname\/cursor","title":"case cursor","type":"case"},{"path":"\/documentation\/gdk\/surfacepropertyname\/display","title":"case display","type":"case"},{"path":"\/documentation\/gdk\/surfacepropertyname\/frameclock","title":"case frameClock","type":"case"},{"path":"\/documentation\/gdk\/surfacepropertyname\/height","title":"case height","type":"case"},{"path":"\/documentation\/gdk\/surfacepropertyname\/mapped","title":"case mapped","type":"case"},{"path":"\/documentation\/gdk\/surfacepropertyname\/scale","title":"case scale","type":"case"},{"path":"\/documentation\/gdk\/surfacepropertyname\/scalefactor","title":"case scaleFactor","type":"case"},{"path":"\/documentation\/gdk\/surfacepropertyname\/width","title":"case width","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/surfacepropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/surfacepropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/surfacepropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/surfacepropertyname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/surfacepropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/surfacepropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/surfacepropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/surfacepropertyname","title":"SurfacePropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/surfacesignalname\/entermonitor","title":"case enterMonitor","type":"case"},{"path":"\/documentation\/gdk\/surfacesignalname\/event","title":"case event","type":"case"},{"path":"\/documentation\/gdk\/surfacesignalname\/layout","title":"case layout","type":"case"},{"path":"\/documentation\/gdk\/surfacesignalname\/leavemonitor","title":"case leaveMonitor","type":"case"},{"path":"\/documentation\/gdk\/surfacesignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/gdk\/surfacesignalname\/notifycursor","title":"case notifyCursor","type":"case"},{"path":"\/documentation\/gdk\/surfacesignalname\/notifydisplay","title":"case notifyDisplay","type":"case"},{"path":"\/documentation\/gdk\/surfacesignalname\/notifyframeclock","title":"case notifyFrameClock","type":"case"},{"path":"\/documentation\/gdk\/surfacesignalname\/notifyheight","title":"case notifyHeight","type":"case"},{"path":"\/documentation\/gdk\/surfacesignalname\/notifymapped","title":"case notifyMapped","type":"case"},{"path":"\/documentation\/gdk\/surfacesignalname\/notifyscale","title":"case notifyScale","type":"case"},{"path":"\/documentation\/gdk\/surfacesignalname\/notifyscalefactor","title":"case notifyScaleFactor","type":"case"},{"path":"\/documentation\/gdk\/surfacesignalname\/notifywidth","title":"case notifyWidth","type":"case"},{"path":"\/documentation\/gdk\/surfacesignalname\/render","title":"case render","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/surfacesignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/surfacesignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/surfacesignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/surfacesignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/surfacesignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/surfacesignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/surfacesignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/surfacesignalname","title":"SurfaceSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/texturepropertyname\/height","title":"case height","type":"case"},{"path":"\/documentation\/gdk\/texturepropertyname\/width","title":"case width","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/texturepropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/texturepropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/texturepropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/texturepropertyname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/texturepropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/texturepropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/texturepropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/texturepropertyname","title":"TexturePropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/texturesignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/gdk\/texturesignalname\/notifyheight","title":"case notifyHeight","type":"case"},{"path":"\/documentation\/gdk\/texturesignalname\/notifywidth","title":"case notifyWidth","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/texturesignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/texturesignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/texturesignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/texturesignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/texturesignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/texturesignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/texturesignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/texturesignalname","title":"TextureSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelpropertyname\/cursor","title":"case cursor","type":"case"},{"path":"\/documentation\/gdk\/toplevelpropertyname\/decorated","title":"case decorated","type":"case"},{"path":"\/documentation\/gdk\/toplevelpropertyname\/deletable","title":"case deletable","type":"case"},{"path":"\/documentation\/gdk\/toplevelpropertyname\/display","title":"case display","type":"case"},{"path":"\/documentation\/gdk\/toplevelpropertyname\/frameclock","title":"case frameClock","type":"case"},{"path":"\/documentation\/gdk\/toplevelpropertyname\/fullscreenmode","title":"case fullscreenMode","type":"case"},{"path":"\/documentation\/gdk\/toplevelpropertyname\/height","title":"case height","type":"case"},{"path":"\/documentation\/gdk\/toplevelpropertyname\/iconlist","title":"case iconList","type":"case"},{"path":"\/documentation\/gdk\/toplevelpropertyname\/mapped","title":"case mapped","type":"case"},{"path":"\/documentation\/gdk\/toplevelpropertyname\/modal","title":"case modal","type":"case"},{"path":"\/documentation\/gdk\/toplevelpropertyname\/scale","title":"case scale","type":"case"},{"path":"\/documentation\/gdk\/toplevelpropertyname\/scalefactor","title":"case scaleFactor","type":"case"},{"path":"\/documentation\/gdk\/toplevelpropertyname\/shortcutsinhibited","title":"case shortcutsInhibited","type":"case"},{"path":"\/documentation\/gdk\/toplevelpropertyname\/startupid","title":"case startupId","type":"case"},{"path":"\/documentation\/gdk\/toplevelpropertyname\/state","title":"case state","type":"case"},{"path":"\/documentation\/gdk\/toplevelpropertyname\/title","title":"case title","type":"case"},{"path":"\/documentation\/gdk\/toplevelpropertyname\/transientfor","title":"case transientFor","type":"case"},{"path":"\/documentation\/gdk\/toplevelpropertyname\/width","title":"case width","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelpropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelpropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/toplevelpropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelpropertyname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/toplevelpropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelpropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/toplevelpropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/toplevelpropertyname","title":"ToplevelPropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelsignalname\/computesize","title":"case computeSize","type":"case"},{"path":"\/documentation\/gdk\/toplevelsignalname\/entermonitor","title":"case enterMonitor","type":"case"},{"path":"\/documentation\/gdk\/toplevelsignalname\/event","title":"case event","type":"case"},{"path":"\/documentation\/gdk\/toplevelsignalname\/layout","title":"case layout","type":"case"},{"path":"\/documentation\/gdk\/toplevelsignalname\/leavemonitor","title":"case leaveMonitor","type":"case"},{"path":"\/documentation\/gdk\/toplevelsignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/gdk\/toplevelsignalname\/notifycursor","title":"case notifyCursor","type":"case"},{"path":"\/documentation\/gdk\/toplevelsignalname\/notifydecorated","title":"case notifyDecorated","type":"case"},{"path":"\/documentation\/gdk\/toplevelsignalname\/notifydeletable","title":"case notifyDeletable","type":"case"},{"path":"\/documentation\/gdk\/toplevelsignalname\/notifydisplay","title":"case notifyDisplay","type":"case"},{"path":"\/documentation\/gdk\/toplevelsignalname\/notifyframeclock","title":"case notifyFrameClock","type":"case"},{"path":"\/documentation\/gdk\/toplevelsignalname\/notifyfullscreenmode","title":"case notifyFullscreenMode","type":"case"},{"path":"\/documentation\/gdk\/toplevelsignalname\/notifyheight","title":"case notifyHeight","type":"case"},{"path":"\/documentation\/gdk\/toplevelsignalname\/notifyiconlist","title":"case notifyIconList","type":"case"},{"path":"\/documentation\/gdk\/toplevelsignalname\/notifymapped","title":"case notifyMapped","type":"case"},{"path":"\/documentation\/gdk\/toplevelsignalname\/notifymodal","title":"case notifyModal","type":"case"},{"path":"\/documentation\/gdk\/toplevelsignalname\/notifyscale","title":"case notifyScale","type":"case"},{"path":"\/documentation\/gdk\/toplevelsignalname\/notifyscalefactor","title":"case notifyScaleFactor","type":"case"},{"path":"\/documentation\/gdk\/toplevelsignalname\/notifyshortcutsinhibited","title":"case notifyShortcutsInhibited","type":"case"},{"path":"\/documentation\/gdk\/toplevelsignalname\/notifystartupid","title":"case notifyStartupId","type":"case"},{"path":"\/documentation\/gdk\/toplevelsignalname\/notifystate","title":"case notifyState","type":"case"},{"path":"\/documentation\/gdk\/toplevelsignalname\/notifytitle","title":"case notifyTitle","type":"case"},{"path":"\/documentation\/gdk\/toplevelsignalname\/notifytransientfor","title":"case notifyTransientFor","type":"case"},{"path":"\/documentation\/gdk\/toplevelsignalname\/notifywidth","title":"case notifyWidth","type":"case"},{"path":"\/documentation\/gdk\/toplevelsignalname\/render","title":"case render","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/toplevelsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/toplevelsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/toplevelsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/toplevelsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/toplevelsignalname","title":"ToplevelSignalName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontextpropertyname\/display","title":"case display","type":"case"},{"path":"\/documentation\/gdk\/vulkancontextpropertyname\/surface","title":"case surface","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontextpropertyname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontextpropertyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/vulkancontextpropertyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontextpropertyname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/vulkancontextpropertyname\/propertynameprotocol-implementations","title":"PropertyNameProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontextpropertyname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/vulkancontextpropertyname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/vulkancontextpropertyname","title":"VulkanContextPropertyName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontextsignalname\/imagesupdated","title":"case imagesUpdated","type":"case"},{"path":"\/documentation\/gdk\/vulkancontextsignalname\/notify","title":"case notify","type":"case"},{"path":"\/documentation\/gdk\/vulkancontextsignalname\/notifydisplay","title":"case notifyDisplay","type":"case"},{"path":"\/documentation\/gdk\/vulkancontextsignalname\/notifysurface","title":"case notifySurface","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontextsignalname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontextsignalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gdk\/vulkancontextsignalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontextsignalname\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/gdk\/vulkancontextsignalname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/vulkancontextsignalname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/gdk\/vulkancontextsignalname\/signalnameprotocol-implementations","title":"SignalNameProtocol Implementations","type":"symbol"}],"path":"\/documentation\/gdk\/vulkancontextsignalname","title":"VulkanContextSignalName","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdkaxisuse\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdkaxisuse\/deltax","title":"static let deltaX: GdkAxisUse","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkaxisuse\/deltay","title":"static let deltaY: GdkAxisUse","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkaxisuse\/distance","title":"static let distance: GdkAxisUse","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkaxisuse\/ignore","title":"static let ignore: GdkAxisUse","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkaxisuse\/last","title":"static let last: GdkAxisUse","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkaxisuse\/pressure","title":"static let pressure: GdkAxisUse","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkaxisuse\/rotation","title":"static let rotation: GdkAxisUse","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkaxisuse\/slider","title":"static let slider: GdkAxisUse","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkaxisuse\/wheel","title":"static let wheel: GdkAxisUse","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkaxisuse\/x","title":"static let x: GdkAxisUse","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkaxisuse\/xtilt","title":"static let xtilt: GdkAxisUse","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkaxisuse\/y","title":"static let y: GdkAxisUse","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkaxisuse\/ytilt","title":"static let ytilt: GdkAxisUse","type":"property"}],"path":"\/documentation\/gdk\/cgdk\/gdkaxisuse","title":"GdkAxisUse","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdkcrossingmode\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdkcrossingmode\/deviceswitch","title":"static let deviceSwitch: GdkCrossingMode","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkcrossingmode\/grab","title":"static let grab: GdkCrossingMode","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkcrossingmode\/gtkgrab","title":"static let gtkGrab: GdkCrossingMode","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkcrossingmode\/gtkungrab","title":"static let gtkUngrab: GdkCrossingMode","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkcrossingmode\/normal","title":"static let normal: GdkCrossingMode","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkcrossingmode\/statechanged","title":"static let stateChanged: GdkCrossingMode","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkcrossingmode\/touchbegin","title":"static let touchBegin: GdkCrossingMode","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkcrossingmode\/touchend","title":"static let touchEnd: GdkCrossingMode","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkcrossingmode\/ungrab","title":"static let ungrab: GdkCrossingMode","type":"property"}],"path":"\/documentation\/gdk\/cgdk\/gdkcrossingmode","title":"GdkCrossingMode","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdkdevicepadfeature\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdkdevicepadfeature\/button","title":"static let button: GdkDevicePadFeature","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkdevicepadfeature\/ring","title":"static let ring: GdkDevicePadFeature","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkdevicepadfeature\/strip","title":"static let strip: GdkDevicePadFeature","type":"property"}],"path":"\/documentation\/gdk\/cgdk\/gdkdevicepadfeature","title":"GdkDevicePadFeature","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdkdevicetooltype\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdkdevicetooltype\/airbrush","title":"static let airbrush: GdkDeviceToolType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkdevicetooltype\/brush","title":"static let brush: GdkDeviceToolType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkdevicetooltype\/eraser","title":"static let eraser: GdkDeviceToolType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkdevicetooltype\/lens","title":"static let lens: GdkDeviceToolType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkdevicetooltype\/mouse","title":"static let mouse: GdkDeviceToolType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkdevicetooltype\/pen","title":"static let pen: GdkDeviceToolType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkdevicetooltype\/pencil","title":"static let pencil: GdkDeviceToolType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkdevicetooltype\/unknown","title":"static let unknown: GdkDeviceToolType","type":"property"}],"path":"\/documentation\/gdk\/cgdk\/gdkdevicetooltype","title":"GdkDeviceToolType","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdkdragcancelreason\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdkdragcancelreason\/error","title":"static let error: GdkDragCancelReason","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkdragcancelreason\/notarget","title":"static let noTarget: GdkDragCancelReason","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkdragcancelreason\/usercancelled","title":"static let userCancelled: GdkDragCancelReason","type":"property"}],"path":"\/documentation\/gdk\/cgdk\/gdkdragcancelreason","title":"GdkDragCancelReason","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdkeventtype\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdkeventtype\/buttonpress","title":"static let buttonPress: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkeventtype\/buttonrelease","title":"static let buttonRelease: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkeventtype\/delete","title":"static let delete: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkeventtype\/dragenter","title":"static let dragEnter: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkeventtype\/dragleave","title":"static let dragLeave: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkeventtype\/dragmotion","title":"static let dragMotion: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkeventtype\/dropstart","title":"static let dropStart: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkeventtype\/enternotify","title":"static let enterNotify: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkeventtype\/eventlast","title":"static let eventLast: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkeventtype\/focuschange","title":"static let focusChange: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkeventtype\/grabbroken","title":"static let grabBroken: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkeventtype\/keypress","title":"static let keyPress: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkeventtype\/keyrelease","title":"static let keyRelease: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkeventtype\/leavenotify","title":"static let leaveNotify: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkeventtype\/motionnotify","title":"static let motionNotify: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkeventtype\/padbuttonpress","title":"static let padButtonPress: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkeventtype\/padbuttonrelease","title":"static let padButtonRelease: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkeventtype\/padgroupmode","title":"static let padGroupMode: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkeventtype\/padring","title":"static let padRing: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkeventtype\/padstrip","title":"static let padStrip: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkeventtype\/proximityin","title":"static let proximityIn: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkeventtype\/proximityout","title":"static let proximityOut: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkeventtype\/scroll","title":"static let scroll: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkeventtype\/touchbegin","title":"static let touchBegin: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkeventtype\/touchcancel","title":"static let touchCancel: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkeventtype\/touchend","title":"static let touchEnd: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkeventtype\/touchupdate","title":"static let touchUpdate: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkeventtype\/touchpadhold","title":"static let touchpadHold: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkeventtype\/touchpadpinch","title":"static let touchpadPinch: GdkEventType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkeventtype\/touchpadswipe","title":"static let touchpadSwipe: GdkEventType","type":"property"}],"path":"\/documentation\/gdk\/cgdk\/gdkeventtype","title":"GdkEventType","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdkfullscreenmode\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdkfullscreenmode\/allmonitors","title":"static let allMonitors: GdkFullscreenMode","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkfullscreenmode\/currentmonitor","title":"static let currentMonitor: GdkFullscreenMode","type":"property"}],"path":"\/documentation\/gdk\/cgdk\/gdkfullscreenmode","title":"GdkFullscreenMode","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdkglerror\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdkglerror\/compilationfailed","title":"static let compilationFailed: GdkGLError","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkglerror\/linkfailed","title":"static let linkFailed: GdkGLError","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkglerror\/notavailable","title":"static let notAvailable: GdkGLError","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkglerror\/unsupportedformat","title":"static let unsupportedFormat: GdkGLError","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkglerror\/unsupportedprofile","title":"static let unsupportedProfile: GdkGLError","type":"property"}],"path":"\/documentation\/gdk\/cgdk\/gdkglerror","title":"GdkGLError","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdkgravity\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdkgravity\/center","title":"static let center: GdkGravity","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkgravity\/east","title":"static let east: GdkGravity","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkgravity\/north","title":"static let north: GdkGravity","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkgravity\/northeast","title":"static let northEast: GdkGravity","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkgravity\/northwest","title":"static let northWest: GdkGravity","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkgravity\/south","title":"static let south: GdkGravity","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkgravity\/southeast","title":"static let southEast: GdkGravity","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkgravity\/southwest","title":"static let southWest: GdkGravity","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkgravity\/static","title":"static let `static`: GdkGravity","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkgravity\/west","title":"static let west: GdkGravity","type":"property"}],"path":"\/documentation\/gdk\/cgdk\/gdkgravity","title":"GdkGravity","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdkinputsource\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdkinputsource\/keyboard","title":"static let keyboard: GdkInputSource","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkinputsource\/mouse","title":"static let mouse: GdkInputSource","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkinputsource\/pen","title":"static let pen: GdkInputSource","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkinputsource\/tabletpad","title":"static let tabletPad: GdkInputSource","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkinputsource\/touchpad","title":"static let touchpad: GdkInputSource","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkinputsource\/touchscreen","title":"static let touchscreen: GdkInputSource","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkinputsource\/trackpoint","title":"static let trackpoint: GdkInputSource","type":"property"}],"path":"\/documentation\/gdk\/cgdk\/gdkinputsource","title":"GdkInputSource","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdkkeymatch\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdkkeymatch\/exact","title":"static let exact: GdkKeyMatch","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkkeymatch\/none","title":"static let none: GdkKeyMatch","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkkeymatch\/partial","title":"static let partial: GdkKeyMatch","type":"property"}],"path":"\/documentation\/gdk\/cgdk\/gdkkeymatch","title":"GdkKeyMatch","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdkmemoryformat\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdkmemoryformat\/a16","title":"static let a16: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkmemoryformat\/a16float","title":"static let a16Float: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkmemoryformat\/a32float","title":"static let a32Float: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkmemoryformat\/a8","title":"static let a8: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkmemoryformat\/a8b8g8r8","title":"static let a8b8g8r8: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkmemoryformat\/a8r8g8b8","title":"static let a8r8g8b8: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkmemoryformat\/a8r8g8b8premultiplied","title":"static let a8r8g8b8Premultiplied: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkmemoryformat\/b8g8r8","title":"static let b8g8r8: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkmemoryformat\/b8g8r8a8","title":"static let b8g8r8a8: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkmemoryformat\/b8g8r8a8premultiplied","title":"static let b8g8r8a8Premultiplied: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkmemoryformat\/g16","title":"static let g16: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkmemoryformat\/g16a16","title":"static let g16a16: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkmemoryformat\/g16a16premultiplied","title":"static let g16a16Premultiplied: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkmemoryformat\/g8","title":"static let g8: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkmemoryformat\/g8a8","title":"static let g8a8: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkmemoryformat\/g8a8premultiplied","title":"static let g8a8Premultiplied: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkmemoryformat\/nformats","title":"static let nFormats: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkmemoryformat\/r16g16b16","title":"static let r16g16b16: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkmemoryformat\/r16g16b16float","title":"static let r16g16b16Float: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkmemoryformat\/r16g16b16a16","title":"static let r16g16b16a16: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkmemoryformat\/r16g16b16a16float","title":"static let r16g16b16a16Float: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkmemoryformat\/r16g16b16a16floatpremultiplied","title":"static let r16g16b16a16FloatPremultiplied: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkmemoryformat\/r16g16b16a16premultiplied","title":"static let r16g16b16a16Premultiplied: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkmemoryformat\/r32g32b32float","title":"static let r32g32b32Float: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkmemoryformat\/r32g32b32a32float","title":"static let r32g32b32a32Float: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkmemoryformat\/r32g32b32a32floatpremultiplied","title":"static let r32g32b32a32FloatPremultiplied: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkmemoryformat\/r8g8b8","title":"static let r8g8b8: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkmemoryformat\/r8g8b8a8","title":"static let r8g8b8a8: GdkMemoryFormat","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkmemoryformat\/r8g8b8a8premultiplied","title":"static let r8g8b8a8Premultiplied: GdkMemoryFormat","type":"property"}],"path":"\/documentation\/gdk\/cgdk\/gdkmemoryformat","title":"GdkMemoryFormat","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdknotifytype\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdknotifytype\/ancestor","title":"static let ancestor: GdkNotifyType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdknotifytype\/inferior","title":"static let inferior: GdkNotifyType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdknotifytype\/nonlinear","title":"static let nonlinear: GdkNotifyType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdknotifytype\/nonlinearvirtual","title":"static let nonlinearVirtual: GdkNotifyType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdknotifytype\/unknown","title":"static let unknown: GdkNotifyType","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdknotifytype\/virtual","title":"static let virtual: GdkNotifyType","type":"property"}],"path":"\/documentation\/gdk\/cgdk\/gdknotifytype","title":"GdkNotifyType","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdkscrolldirection\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdkscrolldirection\/down","title":"static let down: GdkScrollDirection","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkscrolldirection\/left","title":"static let left: GdkScrollDirection","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkscrolldirection\/right","title":"static let right: GdkScrollDirection","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkscrolldirection\/smooth","title":"static let smooth: GdkScrollDirection","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkscrolldirection\/up","title":"static let up: GdkScrollDirection","type":"property"}],"path":"\/documentation\/gdk\/cgdk\/gdkscrolldirection","title":"GdkScrollDirection","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdkscrollunit\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdkscrollunit\/surface","title":"static let surface: GdkScrollUnit","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkscrollunit\/wheel","title":"static let wheel: GdkScrollUnit","type":"property"}],"path":"\/documentation\/gdk\/cgdk\/gdkscrollunit","title":"GdkScrollUnit","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdksubpixellayout\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdksubpixellayout\/horizontalbgr","title":"static let horizontalBgr: GdkSubpixelLayout","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdksubpixellayout\/horizontalrgb","title":"static let horizontalRgb: GdkSubpixelLayout","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdksubpixellayout\/none","title":"static let none: GdkSubpixelLayout","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdksubpixellayout\/unknown","title":"static let unknown: GdkSubpixelLayout","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdksubpixellayout\/verticalbgr","title":"static let verticalBgr: GdkSubpixelLayout","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdksubpixellayout\/verticalrgb","title":"static let verticalRgb: GdkSubpixelLayout","type":"property"}],"path":"\/documentation\/gdk\/cgdk\/gdksubpixellayout","title":"GdkSubpixelLayout","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdksurfaceedge\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdksurfaceedge\/east","title":"static let east: GdkSurfaceEdge","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdksurfaceedge\/north","title":"static let north: GdkSurfaceEdge","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdksurfaceedge\/northeast","title":"static let northEast: GdkSurfaceEdge","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdksurfaceedge\/northwest","title":"static let northWest: GdkSurfaceEdge","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdksurfaceedge\/south","title":"static let south: GdkSurfaceEdge","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdksurfaceedge\/southeast","title":"static let southEast: GdkSurfaceEdge","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdksurfaceedge\/southwest","title":"static let southWest: GdkSurfaceEdge","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdksurfaceedge\/west","title":"static let west: GdkSurfaceEdge","type":"property"}],"path":"\/documentation\/gdk\/cgdk\/gdksurfaceedge","title":"GdkSurfaceEdge","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdktextureerror\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdktextureerror\/corruptimage","title":"static let corruptImage: GdkTextureError","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdktextureerror\/toolarge","title":"static let tooLarge: GdkTextureError","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdktextureerror\/unsupportedcontent","title":"static let unsupportedContent: GdkTextureError","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdktextureerror\/unsupportedformat","title":"static let unsupportedFormat: GdkTextureError","type":"property"}],"path":"\/documentation\/gdk\/cgdk\/gdktextureerror","title":"GdkTextureError","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdktitlebargesture\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdktitlebargesture\/doubleclick","title":"static let doubleClick: GdkTitlebarGesture","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdktitlebargesture\/middleclick","title":"static let middleClick: GdkTitlebarGesture","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdktitlebargesture\/rightclick","title":"static let rightClick: GdkTitlebarGesture","type":"property"}],"path":"\/documentation\/gdk\/cgdk\/gdktitlebargesture","title":"GdkTitlebarGesture","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdktouchpadgesturephase\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdktouchpadgesturephase\/begin","title":"static let begin: GdkTouchpadGesturePhase","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdktouchpadgesturephase\/cancel","title":"static let cancel: GdkTouchpadGesturePhase","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdktouchpadgesturephase\/end","title":"static let end: GdkTouchpadGesturePhase","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdktouchpadgesturephase\/update","title":"static let update: GdkTouchpadGesturePhase","type":"property"}],"path":"\/documentation\/gdk\/cgdk\/gdktouchpadgesturephase","title":"GdkTouchpadGesturePhase","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdkvulkanerror\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gdk\/cgdk\/gdkvulkanerror\/notavailable","title":"static let notAvailable: GdkVulkanError","type":"property"},{"path":"\/documentation\/gdk\/cgdk\/gdkvulkanerror\/unsupported","title":"static let unsupported: GdkVulkanError","type":"property"}],"path":"\/documentation\/gdk\/cgdk\/gdkvulkanerror","title":"GdkVulkanError","type":"extension"}],"path":"\/documentation\/gdk\/cgdk","title":"CGdk","type":"extension"}],"path":"\/documentation\/gdk","title":"Gdk","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}