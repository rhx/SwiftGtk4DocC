{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setPreviousRange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"first"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"hb_codepoint_t","preciseIdentifier":"c:@T@hb_codepoint_t"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"last"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"hb_codepoint_t","preciseIdentifier":"c:@T@hb_codepoint_t"},{"kind":"text","text":">!) -> "},{"kind":"typeIdentifier","text":"hb_bool_t","preciseIdentifier":"c:@T@hb_bool_t"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Set "},{"type":"codeVoice","code":"first"},{"type":"text","text":" to "},{"type":"codeVoice","code":"HB_SET_VALUE_INVALID"},{"type":"text","text":" to get started."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/harfbuzz\/set_t\/setpreviousrange(first:last:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/HarfBuzz\/documentation\/HarfBuzz\/set_t\/setPreviousRange(first:last:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Fetches the previous consecutive range of elements in "},{"type":"codeVoice","code":"set"},{"type":"text","text":" that"},{"type":"text","text":" "},{"type":"text","text":"are greater than current value of "},{"type":"codeVoice","code":"last"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"role":"symbol","title":"setPreviousRange(first:last:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setPreviousRange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"first"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"hb_codepoint_t","preciseIdentifier":"c:@T@hb_codepoint_t"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"last"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"hb_codepoint_t","preciseIdentifier":"c:@T@hb_codepoint_t"},{"kind":"text","text":">!) -> "},{"kind":"typeIdentifier","text":"hb_bool_t","preciseIdentifier":"c:@T@hb_bool_t"}],"symbolKind":"method","externalID":"s:8HarfBuzz13set_tProtocolPAAE0C13PreviousRange5first4lasts5Int32VSpys6UInt32VGSg_ALtF::SYNTHESIZED::s:8HarfBuzz5set_tC","extendedModule":"HarfBuzz","modules":[{"name":"HarfBuzz"}]},"hierarchy":{"paths":[["doc:\/\/HarfBuzz\/documentation\/HarfBuzz","doc:\/\/HarfBuzz\/documentation\/HarfBuzz\/set_t","doc:\/\/HarfBuzz\/documentation\/HarfBuzz\/set_t\/set_tProtocol-Implementations"]]},"references":{"doc://HarfBuzz/documentation/HarfBuzz":{"role":"collection","title":"HarfBuzz","abstract":[],"identifier":"doc:\/\/HarfBuzz\/documentation\/HarfBuzz","kind":"symbol","type":"topic","url":"\/documentation\/harfbuzz"},"doc://HarfBuzz/documentation/HarfBuzz/set_t":{"role":"symbol","title":"set_t","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"set_t"}],"abstract":[{"type":"text","text":"Data type for holding a set of integers. "},{"type":"codeVoice","code":"hb_set_t"},{"type":"text","text":"â€™s are"},{"type":"text","text":" "},{"type":"text","text":"used to gather and contain glyph IDs, Unicode code"},{"type":"text","text":" "},{"type":"text","text":"points, and various other collections of discrete"},{"type":"text","text":" "},{"type":"text","text":"values."}],"identifier":"doc:\/\/HarfBuzz\/documentation\/HarfBuzz\/set_t","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"set_t"}],"url":"\/documentation\/harfbuzz\/set_t"},"doc://HarfBuzz/documentation/HarfBuzz/set_t/set_tProtocol-Implementations":{"role":"collectionGroup","title":"set_tProtocol Implementations","abstract":[],"identifier":"doc:\/\/HarfBuzz\/documentation\/HarfBuzz\/set_t\/set_tProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/harfbuzz\/set_t\/set_tprotocol-implementations"},"doc://HarfBuzz/documentation/HarfBuzz/set_t/setPreviousRange(first:last:)":{"role":"symbol","title":"setPreviousRange(first:last:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setPreviousRange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"first"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"hb_codepoint_t","preciseIdentifier":"c:@T@hb_codepoint_t"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"last"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"hb_codepoint_t","preciseIdentifier":"c:@T@hb_codepoint_t"},{"kind":"text","text":">!) -> "},{"kind":"typeIdentifier","text":"hb_bool_t","preciseIdentifier":"c:@T@hb_bool_t"}],"abstract":[{"type":"text","text":"Fetches the previous consecutive range of elements in "},{"type":"codeVoice","code":"set"},{"type":"text","text":" that"},{"type":"text","text":" "},{"type":"text","text":"are greater than current value of "},{"type":"codeVoice","code":"last"},{"type":"text","text":"."}],"identifier":"doc:\/\/HarfBuzz\/documentation\/HarfBuzz\/set_t\/setPreviousRange(first:last:)","kind":"symbol","type":"topic","url":"\/documentation\/harfbuzz\/set_t\/setpreviousrange(first:last:)"}}}