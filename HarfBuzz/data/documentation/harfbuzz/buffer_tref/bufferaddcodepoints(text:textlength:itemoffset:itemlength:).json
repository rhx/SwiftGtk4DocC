{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"bufferAddCodepoints"},{"kind":"text","text":"("},{"kind":"externalParam","text":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"hb_codepoint_t","preciseIdentifier":"c:@T@hb_codepoint_t"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"textLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"itemOffset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"itemLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function does not check the validity of "},{"type":"codeVoice","code":"text"},{"type":"text","text":", it is up to the caller"},{"type":"text","text":" "},{"type":"text","text":"to ensure it contains a valid Unicode scalar values.  In contrast,"},{"type":"text","text":" "},{"type":"codeVoice","code":"hb_buffer_add_utf32()"},{"type":"text","text":" can be used that takes similar input but performs"},{"type":"text","text":" "},{"type":"text","text":"sanity-check on the input."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/harfbuzz\/buffer_tref\/bufferaddcodepoints(text:textlength:itemoffset:itemlength:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/HarfBuzz\/documentation\/HarfBuzz\/buffer_tRef\/bufferAddCodepoints(text:textLength:itemOffset:itemLength:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Appends characters from "},{"type":"codeVoice","code":"text"},{"type":"text","text":" array to "},{"type":"codeVoice","code":"buffer"},{"type":"text","text":". The "},{"type":"codeVoice","code":"item_offset"},{"type":"text","text":" is the"},{"type":"text","text":" "},{"type":"text","text":"position of the first character from "},{"type":"codeVoice","code":"text"},{"type":"text","text":" that will be appended, and"},{"type":"text","text":" "},{"type":"codeVoice","code":"item_length"},{"type":"text","text":" is the number of character. When shaping part of a larger text"},{"type":"text","text":" "},{"type":"text","text":"(e.g. a run of text from a paragraph), instead of passing just the substring"},{"type":"text","text":" "},{"type":"text","text":"corresponding to the run, it is preferable to pass the whole"},{"type":"text","text":" "},{"type":"text","text":"paragraph and specify the run start and length as "},{"type":"codeVoice","code":"item_offset"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"codeVoice","code":"item_length"},{"type":"text","text":", respectively, to give HarfBuzz the full context to be able,"},{"type":"text","text":" "},{"type":"text","text":"for example, to do cross-run Arabic shaping or properly handle combining"},{"type":"text","text":" "},{"type":"text","text":"marks at stat of run."}],"kind":"symbol","metadata":{"role":"symbol","title":"bufferAddCodepoints(text:textLength:itemOffset:itemLength:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"bufferAddCodepoints"},{"kind":"text","text":"("},{"kind":"externalParam","text":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"hb_codepoint_t","preciseIdentifier":"c:@T@hb_codepoint_t"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"textLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"itemOffset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"itemLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"symbolKind":"method","externalID":"s:8HarfBuzz16buffer_tProtocolPAAE0C13AddCodepoints4text0G6Length10itemOffset0iH0ySPys6UInt32VGSg_S3itF::SYNTHESIZED::s:8HarfBuzz11buffer_tRefV","extendedModule":"HarfBuzz","modules":[{"name":"HarfBuzz"}]},"hierarchy":{"paths":[["doc:\/\/HarfBuzz\/documentation\/HarfBuzz","doc:\/\/HarfBuzz\/documentation\/HarfBuzz\/buffer_tRef","doc:\/\/HarfBuzz\/documentation\/HarfBuzz\/buffer_tRef\/buffer_tProtocol-Implementations"]]},"references":{"doc://HarfBuzz/documentation/HarfBuzz/buffer_tRef":{"role":"symbol","title":"buffer_tRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"buffer_tRef"}],"abstract":[{"type":"text","text":"The main structure holding the input text and its properties before shaping,"},{"type":"text","text":" "},{"type":"text","text":"and output glyphs and their information after shaping."}],"identifier":"doc:\/\/HarfBuzz\/documentation\/HarfBuzz\/buffer_tRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"buffer_tRef"}],"url":"\/documentation\/harfbuzz\/buffer_tref"},"doc://HarfBuzz/documentation/HarfBuzz/buffer_tRef/bufferAddCodepoints(text:textLength:itemOffset:itemLength:)":{"role":"symbol","title":"bufferAddCodepoints(text:textLength:itemOffset:itemLength:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"bufferAddCodepoints"},{"kind":"text","text":"("},{"kind":"externalParam","text":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"hb_codepoint_t","preciseIdentifier":"c:@T@hb_codepoint_t"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"textLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"itemOffset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"itemLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Appends characters from "},{"type":"codeVoice","code":"text"},{"type":"text","text":" array to "},{"type":"codeVoice","code":"buffer"},{"type":"text","text":". The "},{"type":"codeVoice","code":"item_offset"},{"type":"text","text":" is the"},{"type":"text","text":" "},{"type":"text","text":"position of the first character from "},{"type":"codeVoice","code":"text"},{"type":"text","text":" that will be appended, and"},{"type":"text","text":" "},{"type":"codeVoice","code":"item_length"},{"type":"text","text":" is the number of character. When shaping part of a larger text"},{"type":"text","text":" "},{"type":"text","text":"(e.g. a run of text from a paragraph), instead of passing just the substring"},{"type":"text","text":" "},{"type":"text","text":"corresponding to the run, it is preferable to pass the whole"},{"type":"text","text":" "},{"type":"text","text":"paragraph and specify the run start and length as "},{"type":"codeVoice","code":"item_offset"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"codeVoice","code":"item_length"},{"type":"text","text":", respectively, to give HarfBuzz the full context to be able,"},{"type":"text","text":" "},{"type":"text","text":"for example, to do cross-run Arabic shaping or properly handle combining"},{"type":"text","text":" "},{"type":"text","text":"marks at stat of run."}],"identifier":"doc:\/\/HarfBuzz\/documentation\/HarfBuzz\/buffer_tRef\/bufferAddCodepoints(text:textLength:itemOffset:itemLength:)","kind":"symbol","type":"topic","url":"\/documentation\/harfbuzz\/buffer_tref\/bufferaddcodepoints(text:textlength:itemoffset:itemlength:)"},"doc://HarfBuzz/documentation/HarfBuzz/buffer_tRef/buffer_tProtocol-Implementations":{"role":"collectionGroup","title":"buffer_tProtocol Implementations","abstract":[],"identifier":"doc:\/\/HarfBuzz\/documentation\/HarfBuzz\/buffer_tRef\/buffer_tProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/harfbuzz\/buffer_tref\/buffer_tprotocol-implementations"},"doc://HarfBuzz/documentation/HarfBuzz":{"role":"collection","title":"HarfBuzz","abstract":[],"identifier":"doc:\/\/HarfBuzz\/documentation\/HarfBuzz","kind":"symbol","type":"topic","url":"\/documentation\/harfbuzz"}}}