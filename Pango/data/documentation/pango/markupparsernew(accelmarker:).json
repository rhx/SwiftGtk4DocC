{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"markupParserNew"},{"kind":"text","text":"("},{"kind":"externalParam","text":"accelMarker"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gunichar","preciseIdentifier":"c:gunicode.h@T@gunichar"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MarkupParseContextRef","preciseIdentifier":"s:4GLib21MarkupParseContextRefV"},{"kind":"text","text":"!"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"See the "},{"type":"reference","isActive":true,"identifier":"pango_markup.html"},{"type":"text","text":" docs for details about the"},{"type":"text","text":" "},{"type":"text","text":"supported markup."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"accelMarker"},{"type":"text","text":" is nonzero, the given character will mark the"},{"type":"text","text":" "},{"type":"text","text":"character following it as an accelerator. For example, "},{"type":"codeVoice","code":"accelMarker"},{"type":"text","text":" "},{"type":"text","text":"might be an ampersand or underscore. All characters marked"},{"type":"text","text":" "},{"type":"text","text":"as an accelerator will receive a "},{"type":"codeVoice","code":"low"},{"type":"text","text":" attribute,"},{"type":"text","text":" "},{"type":"text","text":"and the first character so marked will be returned in "},{"type":"codeVoice","code":"accel_char"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"when calling [func"},{"type":"codeVoice","code":"markup_parser_finish"},{"type":"text","text":"]. Two "},{"type":"codeVoice","code":"accelMarker"},{"type":"text","text":" characters"},{"type":"text","text":" "},{"type":"text","text":"following each other produce a single literal "},{"type":"codeVoice","code":"accelMarker"},{"type":"text","text":" character."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To feed markup to the parser, use [method"},{"type":"codeVoice","code":"GLib.MarkupParseContext.parse"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"on the returned [struct[MarkupParseContext](\/\/documentation\/glib\/markupparsecontext]. When done with feeding markup"},{"type":"text","text":" "},{"type":"text","text":"to the parser, use [func"},{"type":"codeVoice","code":"markup_parser_finish"},{"type":"text","text":"] to get the data out"},{"type":"text","text":" "},{"type":"text","text":"of it, and then use [method"},{"type":"codeVoice","code":"GLib.MarkupParseContext.free"},{"type":"text","text":"] to free it."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function is designed for applications that read Pango markup"},{"type":"text","text":" "},{"type":"text","text":"from streams. To simply parse a string containing Pango markup,"},{"type":"text","text":" "},{"type":"text","text":"the [func"},{"type":"codeVoice","code":"Pango.parse_markup"},{"type":"text","text":"] API is recommended instead."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/pango\/markupparsernew(accelmarker:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Pango\/documentation\/Pango\/markupParserNew(accelMarker:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Incrementally parses marked-up text to create a plain-text string"},{"type":"text","text":" "},{"type":"text","text":"and an attribute list."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"markupParserNew"},{"kind":"text","text":"("},{"kind":"externalParam","text":"accelMarker"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gunichar","preciseIdentifier":"c:gunicode.h@T@gunichar"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MarkupParseContextRef","preciseIdentifier":"s:4GLib21MarkupParseContextRefV"},{"kind":"text","text":"!"}],"title":"markupParserNew(accelMarker:)","roleHeading":"Function","role":"symbol","symbolKind":"func","externalID":"s:5Pango15markupParserNew11accelMarker4GLib21MarkupParseContextRefVSgs6UInt32V_tF","modules":[{"name":"Pango"}]},"hierarchy":{"paths":[["doc:\/\/Pango\/documentation\/Pango"]]},"references":{"pango_markup.html":{"title":"Pango Markup","titleInlineContent":[{"type":"text","text":"Pango Markup"}],"type":"link","identifier":"pango_markup.html","url":"pango_markup.html"},"doc://Pango/documentation/Pango/markupParserNew(accelMarker:)":{"role":"symbol","title":"markupParserNew(accelMarker:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"markupParserNew"},{"kind":"text","text":"("},{"kind":"externalParam","text":"accelMarker"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gunichar","preciseIdentifier":"c:gunicode.h@T@gunichar"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MarkupParseContextRef","preciseIdentifier":"s:4GLib21MarkupParseContextRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Incrementally parses marked-up text to create a plain-text string"},{"type":"text","text":" "},{"type":"text","text":"and an attribute list."}],"identifier":"doc:\/\/Pango\/documentation\/Pango\/markupParserNew(accelMarker:)","kind":"symbol","type":"topic","url":"\/documentation\/pango\/markupparsernew(accelmarker:)"},"doc://Pango/documentation/Pango":{"role":"collection","title":"Pango","abstract":[],"identifier":"doc:\/\/Pango\/documentation\/Pango","kind":"symbol","type":"topic","url":"\/documentation\/pango"}}}