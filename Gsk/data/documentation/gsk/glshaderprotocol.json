{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"GLShaderProtocol"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"ObjectProtocol","preciseIdentifier":"s:10GLibObject0B8ProtocolP"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A fragment shader gets the coordinates being rendered as input and"},{"type":"text","text":" "},{"type":"text","text":"produces the pixel values for that particular pixel. Additionally,"},{"type":"text","text":" "},{"type":"text","text":"the shader can declare a set of other input arguments, called"},{"type":"text","text":" "},{"type":"text","text":"uniforms (as they are uniform over all the calls to your shader in"},{"type":"text","text":" "},{"type":"text","text":"each instance of use). A shader can also receive up to 4"},{"type":"text","text":" "},{"type":"text","text":"textures that it can use as input when producing the pixel data."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GskGLShader"},{"type":"text","text":" is usually used with "},{"type":"codeVoice","code":"gtk_snapshot_push_gl_shader()"},{"type":"text","text":" "},{"type":"text","text":"to produce a [class"},{"type":"codeVoice","code":"Gsk.GLShaderNode"},{"type":"text","text":"] in the rendering hierarchy,"},{"type":"text","text":" "},{"type":"text","text":"and then its input textures are constructed by rendering the child"},{"type":"text","text":" "},{"type":"text","text":"nodes to textures before rendering the shader node itself. (You can"},{"type":"text","text":" "},{"type":"text","text":"pass texture nodes as children if you want to directly use a texture"},{"type":"text","text":" "},{"type":"text","text":"as input)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The actual shader code is GLSL code that gets combined with"},{"type":"text","text":" "},{"type":"text","text":"some other code into the fragment shader. Since the exact"},{"type":"text","text":" "},{"type":"text","text":"capabilities of the GPU driver differs between different OpenGL"},{"type":"text","text":" "},{"type":"text","text":"drivers and hardware, GTK adds some defines that you can use"},{"type":"text","text":" "},{"type":"text","text":"to ensure your GLSL code runs on as many drivers as it can."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the OpenGL driver is GLES, then the shader language version"},{"type":"text","text":" "},{"type":"text","text":"is set to 100, and GSK_GLES will be defined in the shader."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Otherwise, if the OpenGL driver does not support the 3.2 core profile,"},{"type":"text","text":" "},{"type":"text","text":"then the shader will run with language version 110 for GL2 and 130 for GL3,"},{"type":"text","text":" "},{"type":"text","text":"and GSK_LEGACY will be defined in the shader."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the OpenGL driver supports the 3.2 code profile, it will be used,"},{"type":"text","text":" "},{"type":"text","text":"the shader language version is set to 150, and GSK_GL3 will be defined"},{"type":"text","text":" "},{"type":"text","text":"in the shader."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The main function the shader must implement is:"}]},{"type":"codeListing","syntax":"glsl","code":[" void `mainImage(out vec4 fragColor,                 in vec2 fragCoord,                 in vec2 resolution,                 in vec2 uv)`"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Where the input "},{"type":"codeVoice","code":"fragCoord"},{"type":"text","text":" is the coordinate of the pixel we’re"},{"type":"text","text":" "},{"type":"text","text":"currently rendering, relative to the boundary rectangle that was"},{"type":"text","text":" "},{"type":"text","text":"specified in the "},{"type":"codeVoice","code":"GskGLShaderNode"},{"type":"text","text":", and "},{"type":"codeVoice","code":"resolution"},{"type":"text","text":" is the width and"},{"type":"text","text":" "},{"type":"text","text":"height of that rectangle. This is in the typical GTK coordinate"},{"type":"text","text":" "},{"type":"text","text":"system with the origin in the top left. "},{"type":"codeVoice","code":"uv"},{"type":"text","text":" contains the u and v"},{"type":"text","text":" "},{"type":"text","text":"coordinates that can be used to index a texture at the"},{"type":"text","text":" "},{"type":"text","text":"corresponding point. These coordinates are in the [0..1]x[0..1]"},{"type":"text","text":" "},{"type":"text","text":"region, with 0, 0 being in the lower left corder (which is typical"},{"type":"text","text":" "},{"type":"text","text":"for OpenGL)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The output "},{"type":"codeVoice","code":"fragColor"},{"type":"text","text":" should be a RGBA color (with"},{"type":"text","text":" "},{"type":"text","text":"premultiplied alpha) that will be used as the output for the"},{"type":"text","text":" "},{"type":"text","text":"specified pixel location. Note that this output will be"},{"type":"text","text":" "},{"type":"text","text":"automatically clipped to the clip region of the glshader node."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In addition to the function arguments the shader can define"},{"type":"text","text":" "},{"type":"text","text":"up to 4 uniforms for textures which must be called u_textureN"},{"type":"text","text":" "},{"type":"text","text":"(i.e. u_texture1 to u_texture4) as well as any custom uniforms"},{"type":"text","text":" "},{"type":"text","text":"you want of types int, uint, bool, float, vec2, vec3 or vec4."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"All textures sources contain premultiplied alpha colors, but if some"},{"type":"text","text":" "},{"type":"text","text":"there are outer sources of colors there is a "},{"type":"codeVoice","code":"gsk_premultiply()"},{"type":"text","text":" helper"},{"type":"text","text":" "},{"type":"text","text":"to compute premultiplication when needed."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that GTK parses the uniform declarations, so each uniform has to"},{"type":"text","text":" "},{"type":"text","text":"be on a line by itself with no other code, like so:"}]},{"type":"codeListing","syntax":"glsl","code":["uniform float u_time;","uniform vec3 u_color;","uniform sampler2D u_texture1;","uniform sampler2D u_texture2;"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"GTK uses the “gsk” namespace in the symbols it uses in the"},{"type":"text","text":" "},{"type":"text","text":"shader, so your code should not use any symbols with the prefix gsk"},{"type":"text","text":" "},{"type":"text","text":"or GSK. There are some helper functions declared that you can use:"}]},{"type":"codeListing","syntax":"glsl","code":["vec4 `GskTexture(sampler2D sampler, vec2 texCoords)`;"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This samples a texture (e.g. u_texture1) at the specified"},{"type":"text","text":" "},{"type":"text","text":"coordinates, and contains some helper ifdefs to ensure that"},{"type":"text","text":" "},{"type":"text","text":"it works on all OpenGL versions."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can compile the shader yourself using [method"},{"type":"codeVoice","code":"Gsk.GLShader.compile"},{"type":"text","text":"],"},{"type":"text","text":" "},{"type":"text","text":"otherwise the GSK renderer will do it when it handling the glshader"},{"type":"text","text":" "},{"type":"text","text":"node. If errors occurs, the returned "},{"type":"codeVoice","code":"error"},{"type":"text","text":" will include the glsl"},{"type":"text","text":" "},{"type":"text","text":"sources, so you can see what GSK was passing to the compiler. You"},{"type":"text","text":" "},{"type":"text","text":"can also set GSK_DEBUG=shaders in the environment to see the sources"},{"type":"text","text":" "},{"type":"text","text":"and other relevant information about all shaders that GSK is handling."}]},{"anchor":"An-example-shader","level":1,"type":"heading","text":"An example shader"},{"type":"codeListing","syntax":"glsl","code":["uniform float position;","uniform sampler2D u_texture1;","uniform sampler2D u_texture2;","","void `mainImage(out vec4 fragColor,                in vec2 fragCoord,                in vec2 resolution,                in vec2 uv)` {","  vec4 source1 = `GskTexture(u_texture1, uv)`;","  vec4 source2 = `GskTexture(u_texture2, uv)`;","","  fragColor = position * source1 + (1.0 - position) * source2;","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GLShaderProtocol"},{"type":"text","text":" protocol exposes the methods and properties of an underlying "},{"type":"codeVoice","code":"GskGLShader"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"The default implementation of these can be found in the protocol extension below."},{"type":"text","text":" "},{"type":"text","text":"For a concrete class that implements these methods and properties, see "},{"type":"codeVoice","code":"GLShader"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Alternatively, use "},{"type":"codeVoice","code":"GLShaderRef"},{"type":"text","text":" as a lighweight, "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference if you already have an instance you just want to use."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gsk\/glshaderprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Gsk\/4GLib14PointerWrapperP","doc:\/\/Gsk\/10GLibObject0B8ProtocolP"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/Gsk\/documentation\/Gsk\/GLShader","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"identifier":{"url":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GskGLShader"},{"type":"text","text":" is a snippet of GLSL that is meant to run in the"},{"type":"text","text":" "},{"type":"text","text":"fragment shader of the rendering pipeline."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"GLShaderProtocol"}],"title":"GLShaderProtocol","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:3Gsk16GLShaderProtocolP","modules":[{"name":"Gsk"}],"navigatorTitle":[{"kind":"identifier","text":"GLShaderProtocol"}]},"hierarchy":{"paths":[["doc:\/\/Gsk\/documentation\/Gsk"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/argsSize","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/gl_shader_ptr-9icsu","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/nTextures","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/nUniforms","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/resource","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/source"]},{"title":"Instance Methods","identifiers":["doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/bind(property:to:_:flags:transformFrom:transformTo:)","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/compile(renderer:)","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/findUniformBy(name:)","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/formatArgsVa(uniforms:)","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/get(property:)","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/getArgBool(args:idx:)","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/getArgFloat(args:idx:)","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/getArgInt(args:idx:)","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/getArgUint(args:idx:)","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/getArgVec2(args:idx:outValue:)","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/getArgVec3(args:idx:outValue:)","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/getArgVec4(args:idx:outValue:)","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/getArgsSize()","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/getNTextures()","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/getNUniforms()","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/getResource()","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/getSource()","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/getUniformName(idx:)","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/getUniformOffset(idx:)","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/getUniformType(idx:)","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/set(property:value:)"]}],"references":{"doc://Gsk/documentation/Gsk/GLShaderProtocol/getUniformType(idx:)":{"role":"symbol","title":"getUniformType(idx:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getUniformType"},{"kind":"text","text":"("},{"kind":"externalParam","text":"idx"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GskGLUniformType","preciseIdentifier":"c:@EA@GskGLUniformType"}],"abstract":[{"type":"text","text":"Get the type of the declared uniform for this shader at index "},{"type":"codeVoice","code":"idx"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/getUniformType(idx:)","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderprotocol\/getuniformtype(idx:)"},"doc://Gsk/documentation/Gsk/GLShaderProtocol/getArgVec2(args:idx:outValue:)":{"role":"symbol","title":"getArgVec2(args:idx:outValue:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getArgVec2"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GLibBytesT"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GrapheneVec2T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"args"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GLibBytesT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"idx"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"outValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GrapheneVec2T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Gets the value of the uniform "},{"type":"codeVoice","code":"idx"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"args"},{"type":"text","text":" block."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/getArgVec2(args:idx:outValue:)","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderprotocol\/getargvec2(args:idx:outvalue:)"},"doc://Gsk/documentation/Gsk/GLShaderProtocol/source":{"role":"symbol","title":"source","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"source"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"BytesRef","preciseIdentifier":"s:4GLib8BytesRefV"},{"kind":"text","text":"!"}],"abstract":[],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/source","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderprotocol\/source"},"doc://Gsk/documentation/Gsk/GLShaderProtocol/getArgBool(args:idx:)":{"role":"symbol","title":"getArgBool(args:idx:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getArgBool"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GLibBytesT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"args"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GLibBytesT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"idx"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Gets the value of the uniform "},{"type":"codeVoice","code":"idx"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"args"},{"type":"text","text":" block."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/getArgBool(args:idx:)","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderprotocol\/getargbool(args:idx:)"},"doc://Gsk/documentation/Gsk/GLShaderProtocol/gl_shader_ptr-9icsu":{"defaultImplementations":1,"role":"symbol","title":"gl_shader_ptr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"gl_shader_ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GskGLShader"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Typed pointer to the underlying "},{"type":"codeVoice","code":"GskGLShader"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/gl_shader_ptr-9icsu","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/gsk\/glshaderprotocol\/gl_shader_ptr-9icsu"},"doc://Gsk/documentation/Gsk/GLShaderProtocol/getUniformOffset(idx:)":{"role":"symbol","title":"getUniformOffset(idx:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getUniformOffset"},{"kind":"text","text":"("},{"kind":"externalParam","text":"idx"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Get the offset into the data block where data for this uniforms is stored."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/getUniformOffset(idx:)","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderprotocol\/getuniformoffset(idx:)"},"doc://Gsk/10GLibObject0B8ProtocolP":{"type":"unresolvable","title":"GLibObject.ObjectProtocol","identifier":"doc:\/\/Gsk\/10GLibObject0B8ProtocolP"},"doc://Gsk/documentation/Gsk/GLShaderProtocol/resource":{"role":"symbol","title":"resource","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"resource"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Resource containing the source code for the shader."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/resource","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderprotocol\/resource"},"doc://Gsk/documentation/Gsk/GLShader":{"role":"symbol","title":"GLShader","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"GLShader"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GskGLShader"},{"type":"text","text":" is a snippet of GLSL that is meant to run in the"},{"type":"text","text":" "},{"type":"text","text":"fragment shader of the rendering pipeline."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShader","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GLShader"}],"url":"\/documentation\/gsk\/glshader"},"doc://Gsk/documentation/Gsk/GLShaderProtocol/bind(property:to:_:flags:transformFrom:transformTo:)":{"role":"symbol","title":"bind(property:to:_:flags:transformFrom:transformTo:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"bind"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Q"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"property"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GLShaderPropertyName","preciseIdentifier":"s:3Gsk20GLShaderPropertyNameO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Q"},{"kind":"text","text":", "},{"kind":"externalParam","text":"flags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"BindingFlags","preciseIdentifier":"s:10GLibObject12BindingFlagsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"transformFrom"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ValueTransformer","preciseIdentifier":"s:10GLibObject16ValueTransformera"},{"kind":"text","text":", "},{"kind":"externalParam","text":"transformTo"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ValueTransformer","preciseIdentifier":"s:10GLibObject16ValueTransformera"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"BindingRef","preciseIdentifier":"s:10GLibObject10BindingRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Bind a "},{"type":"codeVoice","code":"GLShaderPropertyName"},{"type":"text","text":" source property to a given target object."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/bind(property:to:_:flags:transformFrom:transformTo:)","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderprotocol\/bind(property:to:_:flags:transformfrom:transformto:)"},"doc://Gsk/documentation/Gsk/GLShaderProtocol/argsSize":{"role":"symbol","title":"argsSize","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"argsSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Get the size of the data block used to specify arguments for this shader."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/argsSize","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderprotocol\/argssize"},"doc://Gsk/documentation/Gsk/GLShaderProtocol/formatArgsVa(uniforms:)":{"role":"symbol","title":"formatArgsVa(uniforms:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"formatArgsVa"},{"kind":"text","text":"("},{"kind":"externalParam","text":"uniforms"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CVaListPointer","preciseIdentifier":"s:s14CVaListPointerV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"BytesRef","preciseIdentifier":"s:4GLib8BytesRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Formats the uniform data as needed for feeding the named uniforms"},{"type":"text","text":" "},{"type":"text","text":"values into the shader."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/formatArgsVa(uniforms:)","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderprotocol\/formatargsva(uniforms:)"},"doc://Gsk/documentation/Gsk/GLShaderProtocol/getArgUint(args:idx:)":{"role":"symbol","title":"getArgUint(args:idx:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getArgUint"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GLibBytesT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"args"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GLibBytesT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"idx"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"guint32","preciseIdentifier":"c:@T@guint32"}],"abstract":[{"type":"text","text":"Gets the value of the uniform "},{"type":"codeVoice","code":"idx"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"args"},{"type":"text","text":" block."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/getArgUint(args:idx:)","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderprotocol\/getarguint(args:idx:)"},"doc://Gsk/documentation/Gsk/GLShaderProtocol":{"role":"symbol","title":"GLShaderProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"GLShaderProtocol"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GskGLShader"},{"type":"text","text":" is a snippet of GLSL that is meant to run in the"},{"type":"text","text":" "},{"type":"text","text":"fragment shader of the rendering pipeline."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GLShaderProtocol"}],"url":"\/documentation\/gsk\/glshaderprotocol"},"doc://Gsk/documentation/Gsk/GLShaderProtocol/get(property:)":{"role":"symbol","title":"get(property:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"("},{"kind":"externalParam","text":"property"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GLShaderPropertyName","preciseIdentifier":"s:3Gsk20GLShaderPropertyNameO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:10GLibObject5ValueC"}],"abstract":[{"type":"text","text":"Get the value of a GLShader property"}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/get(property:)","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderprotocol\/get(property:)"},"doc://Gsk/documentation/Gsk/GLShaderProtocol/getUniformName(idx:)":{"role":"symbol","title":"getUniformName(idx:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getUniformName"},{"kind":"text","text":"("},{"kind":"externalParam","text":"idx"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Get the name of the declared uniform for this shader at index "},{"type":"codeVoice","code":"idx"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/getUniformName(idx:)","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderprotocol\/getuniformname(idx:)"},"doc://Gsk/documentation/Gsk/GLShaderRef":{"role":"symbol","title":"GLShaderRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GLShaderRef"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GskGLShader"},{"type":"text","text":" is a snippet of GLSL that is meant to run in the"},{"type":"text","text":" "},{"type":"text","text":"fragment shader of the rendering pipeline."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GLShaderRef"}],"url":"\/documentation\/gsk\/glshaderref"},"doc://Gsk/documentation/Gsk/GLShaderProtocol/getArgsSize()":{"role":"symbol","title":"getArgsSize()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getArgsSize"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Get the size of the data block used to specify arguments for this shader."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/getArgsSize()","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderprotocol\/getargssize()"},"doc://Gsk/documentation/Gsk/GLShaderProtocol/compile(renderer:)":{"role":"symbol","title":"compile(renderer:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compile"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"RendererT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"renderer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RendererT"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Tries to compile the "},{"type":"codeVoice","code":"shader"},{"type":"text","text":" for the given "},{"type":"codeVoice","code":"renderer"},{"type":"text","text":"."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/compile(renderer:)","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderprotocol\/compile(renderer:)"},"doc://Gsk/documentation/Gsk/GLShaderProtocol/getArgFloat(args:idx:)":{"role":"symbol","title":"getArgFloat(args:idx:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getArgFloat"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GLibBytesT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"args"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GLibBytesT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"idx"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"CFloat","preciseIdentifier":"s:s6CFloata"}],"abstract":[{"type":"text","text":"Gets the value of the uniform "},{"type":"codeVoice","code":"idx"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"args"},{"type":"text","text":" block."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/getArgFloat(args:idx:)","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderprotocol\/getargfloat(args:idx:)"},"doc://Gsk/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/Gsk\/4GLib14PointerWrapperP"},"doc://Gsk/documentation/Gsk/GLShaderProtocol/nUniforms":{"role":"symbol","title":"nUniforms","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"nUniforms"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Get the number of declared uniforms for this shader."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/nUniforms","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderprotocol\/nuniforms"},"doc://Gsk/documentation/Gsk/GLShaderProtocol/getNTextures()":{"role":"symbol","title":"getNTextures()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getNTextures"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Returns the number of textures that the shader requires."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/getNTextures()","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderprotocol\/getntextures()"},"doc://Gsk/documentation/Gsk":{"role":"collection","title":"Gsk","abstract":[],"identifier":"doc:\/\/Gsk\/documentation\/Gsk","kind":"symbol","type":"topic","url":"\/documentation\/gsk"},"doc://Gsk/documentation/Gsk/GLShaderProtocol/getArgInt(args:idx:)":{"role":"symbol","title":"getArgInt(args:idx:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getArgInt"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GLibBytesT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"args"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GLibBytesT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"idx"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"gint32","preciseIdentifier":"c:@T@gint32"}],"abstract":[{"type":"text","text":"Gets the value of the uniform "},{"type":"codeVoice","code":"idx"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"args"},{"type":"text","text":" block."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/getArgInt(args:idx:)","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderprotocol\/getargint(args:idx:)"},"doc://Gsk/documentation/Gsk/GLShaderProtocol/getResource()":{"role":"symbol","title":"getResource()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getResource"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Gets the resource path for the GLSL sourcecode being used"},{"type":"text","text":" "},{"type":"text","text":"to render this shader."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/getResource()","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderprotocol\/getresource()"},"doc://Gsk/documentation/Gsk/GLShaderProtocol/nTextures":{"role":"symbol","title":"nTextures","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"nTextures"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Returns the number of textures that the shader requires."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/nTextures","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderprotocol\/ntextures"},"doc://Gsk/documentation/Gsk/GLShaderProtocol/getNUniforms()":{"role":"symbol","title":"getNUniforms()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getNUniforms"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Get the number of declared uniforms for this shader."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/getNUniforms()","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderprotocol\/getnuniforms()"},"doc://Gsk/documentation/Gsk/GLShaderProtocol/getSource()":{"role":"symbol","title":"getSource()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getSource"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"BytesRef","preciseIdentifier":"s:4GLib8BytesRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Gets the GLSL sourcecode being used to render this shader."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/getSource()","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderprotocol\/getsource()"},"doc://Gsk/documentation/Gsk/GLShaderProtocol/getArgVec4(args:idx:outValue:)":{"role":"symbol","title":"getArgVec4(args:idx:outValue:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getArgVec4"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GLibBytesT"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GrapheneVec4T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"args"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GLibBytesT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"idx"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"outValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GrapheneVec4T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Gets the value of the uniform "},{"type":"codeVoice","code":"idx"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"args"},{"type":"text","text":" block."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/getArgVec4(args:idx:outValue:)","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderprotocol\/getargvec4(args:idx:outvalue:)"},"doc://Gsk/documentation/Gsk/GLShaderProtocol/findUniformBy(name:)":{"role":"symbol","title":"findUniformBy(name:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"findUniformBy"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">!) -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Looks for a uniform by the name "},{"type":"codeVoice","code":"name"},{"type":"text","text":", and returns the index"},{"type":"text","text":" "},{"type":"text","text":"of the uniform, or -1 if it was not found."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/findUniformBy(name:)","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderprotocol\/finduniformby(name:)"},"doc://Gsk/documentation/Gsk/GLShaderProtocol/set(property:value:)":{"role":"symbol","title":"set(property:value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"kind":"externalParam","text":"property"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GLShaderPropertyName","preciseIdentifier":"s:3Gsk20GLShaderPropertyNameO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:10GLibObject5ValueC"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Set the value of a GLShader property."},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Note"}]},{"type":"text","text":" that this will only have an effect on properties that are writable and not construct-only!"}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/set(property:value:)","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderprotocol\/set(property:value:)"},"doc://Gsk/documentation/Gsk/GLShaderProtocol/getArgVec3(args:idx:outValue:)":{"role":"symbol","title":"getArgVec3(args:idx:outValue:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getArgVec3"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GLibBytesT"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GrapheneVec3T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"args"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GLibBytesT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"idx"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"outValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GrapheneVec3T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Gets the value of the uniform "},{"type":"codeVoice","code":"idx"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"args"},{"type":"text","text":" block."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/getArgVec3(args:idx:outValue:)","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderprotocol\/getargvec3(args:idx:outvalue:)"}}}