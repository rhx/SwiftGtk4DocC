{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GLShaderRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A fragment shader gets the coordinates being rendered as input and"},{"type":"text","text":" "},{"type":"text","text":"produces the pixel values for that particular pixel. Additionally,"},{"type":"text","text":" "},{"type":"text","text":"the shader can declare a set of other input arguments, called"},{"type":"text","text":" "},{"type":"text","text":"uniforms (as they are uniform over all the calls to your shader in"},{"type":"text","text":" "},{"type":"text","text":"each instance of use). A shader can also receive up to 4"},{"type":"text","text":" "},{"type":"text","text":"textures that it can use as input when producing the pixel data."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GskGLShader"},{"type":"text","text":" is usually used with "},{"type":"codeVoice","code":"gtk_snapshot_push_gl_shader()"},{"type":"text","text":" "},{"type":"text","text":"to produce a [class"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderNode"},{"type":"text","text":"] in the rendering hierarchy,"},{"type":"text","text":" "},{"type":"text","text":"and then its input textures are constructed by rendering the child"},{"type":"text","text":" "},{"type":"text","text":"nodes to textures before rendering the shader node itself. (You can"},{"type":"text","text":" "},{"type":"text","text":"pass texture nodes as children if you want to directly use a texture"},{"type":"text","text":" "},{"type":"text","text":"as input)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The actual shader code is GLSL code that gets combined with"},{"type":"text","text":" "},{"type":"text","text":"some other code into the fragment shader. Since the exact"},{"type":"text","text":" "},{"type":"text","text":"capabilities of the GPU driver differs between different OpenGL"},{"type":"text","text":" "},{"type":"text","text":"drivers and hardware, GTK adds some defines that you can use"},{"type":"text","text":" "},{"type":"text","text":"to ensure your GLSL code runs on as many drivers as it can."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the OpenGL driver is GLES, then the shader language version"},{"type":"text","text":" "},{"type":"text","text":"is set to 100, and GSK_GLES will be defined in the shader."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Otherwise, if the OpenGL driver does not support the 3.2 core profile,"},{"type":"text","text":" "},{"type":"text","text":"then the shader will run with language version 110 for GL2 and 130 for GL3,"},{"type":"text","text":" "},{"type":"text","text":"and GSK_LEGACY will be defined in the shader."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the OpenGL driver supports the 3.2 code profile, it will be used,"},{"type":"text","text":" "},{"type":"text","text":"the shader language version is set to 150, and GSK_GL3 will be defined"},{"type":"text","text":" "},{"type":"text","text":"in the shader."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The main function the shader must implement is:"}]},{"type":"codeListing","syntax":"glsl","code":[" void `mainImage(out vec4 fragColor,                 in vec2 fragCoord,                 in vec2 resolution,                 in vec2 uv)`"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Where the input "},{"type":"codeVoice","code":"fragCoord"},{"type":"text","text":" is the coordinate of the pixel we’re"},{"type":"text","text":" "},{"type":"text","text":"currently rendering, relative to the boundary rectangle that was"},{"type":"text","text":" "},{"type":"text","text":"specified in the "},{"type":"codeVoice","code":"GskGLShaderNode"},{"type":"text","text":", and "},{"type":"codeVoice","code":"resolution"},{"type":"text","text":" is the width and"},{"type":"text","text":" "},{"type":"text","text":"height of that rectangle. This is in the typical GTK coordinate"},{"type":"text","text":" "},{"type":"text","text":"system with the origin in the top left. "},{"type":"codeVoice","code":"uv"},{"type":"text","text":" contains the u and v"},{"type":"text","text":" "},{"type":"text","text":"coordinates that can be used to index a texture at the"},{"type":"text","text":" "},{"type":"text","text":"corresponding point. These coordinates are in the [0..1]x[0..1]"},{"type":"text","text":" "},{"type":"text","text":"region, with 0, 0 being in the lower left corder (which is typical"},{"type":"text","text":" "},{"type":"text","text":"for OpenGL)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The output "},{"type":"codeVoice","code":"fragColor"},{"type":"text","text":" should be a RGBA color (with"},{"type":"text","text":" "},{"type":"text","text":"premultiplied alpha) that will be used as the output for the"},{"type":"text","text":" "},{"type":"text","text":"specified pixel location. Note that this output will be"},{"type":"text","text":" "},{"type":"text","text":"automatically clipped to the clip region of the glshader node."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In addition to the function arguments the shader can define"},{"type":"text","text":" "},{"type":"text","text":"up to 4 uniforms for textures which must be called u_textureN"},{"type":"text","text":" "},{"type":"text","text":"(i.e. u_texture1 to u_texture4) as well as any custom uniforms"},{"type":"text","text":" "},{"type":"text","text":"you want of types int, uint, bool, float, vec2, vec3 or vec4."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"All textures sources contain premultiplied alpha colors, but if some"},{"type":"text","text":" "},{"type":"text","text":"there are outer sources of colors there is a "},{"type":"codeVoice","code":"gsk_premultiply()"},{"type":"text","text":" helper"},{"type":"text","text":" "},{"type":"text","text":"to compute premultiplication when needed."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that GTK parses the uniform declarations, so each uniform has to"},{"type":"text","text":" "},{"type":"text","text":"be on a line by itself with no other code, like so:"}]},{"type":"codeListing","syntax":"glsl","code":["uniform float u_time;","uniform vec3 u_color;","uniform sampler2D u_texture1;","uniform sampler2D u_texture2;"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"GTK uses the “gsk” namespace in the symbols it uses in the"},{"type":"text","text":" "},{"type":"text","text":"shader, so your code should not use any symbols with the prefix gsk"},{"type":"text","text":" "},{"type":"text","text":"or GSK. There are some helper functions declared that you can use:"}]},{"type":"codeListing","syntax":"glsl","code":["vec4 `GskTexture(sampler2D sampler, vec2 texCoords)`;"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This samples a texture (e.g. u_texture1) at the specified"},{"type":"text","text":" "},{"type":"text","text":"coordinates, and contains some helper ifdefs to ensure that"},{"type":"text","text":" "},{"type":"text","text":"it works on all OpenGL versions."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can compile the shader yourself using [method"},{"type":"codeVoice","code":"Gsk.GLShader.compile"},{"type":"text","text":"],"},{"type":"text","text":" "},{"type":"text","text":"otherwise the GSK renderer will do it when it handling the glshader"},{"type":"text","text":" "},{"type":"text","text":"node. If errors occurs, the returned "},{"type":"codeVoice","code":"error"},{"type":"text","text":" will include the glsl"},{"type":"text","text":" "},{"type":"text","text":"sources, so you can see what GSK was passing to the compiler. You"},{"type":"text","text":" "},{"type":"text","text":"can also set GSK_DEBUG=shaders in the environment to see the sources"},{"type":"text","text":" "},{"type":"text","text":"and other relevant information about all shaders that GSK is handling."}]},{"anchor":"An-example-shader","level":1,"type":"heading","text":"An example shader"},{"type":"codeListing","syntax":"glsl","code":["uniform float position;","uniform sampler2D u_texture1;","uniform sampler2D u_texture2;","","void `mainImage(out vec4 fragColor,                in vec2 fragCoord,                in vec2 resolution,                in vec2 uv)` {","  vec4 source1 = `GskTexture(u_texture1, uv)`;","  vec4 source2 = `GskTexture(u_texture2, uv)`;","","  fragColor = position * source1 + (1.0 - position) * source2;","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GskGLShader"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"GskGLShader"},{"type":"text","text":" instance."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShader"},{"type":"text","text":" (instead of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef"},{"type":"text","text":") if you want to use Automatic Reference Counting for memory management of the underlying "},{"type":"codeVoice","code":"GskGLShader"},{"type":"text","text":" instance."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gsk\/glshaderref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol","doc:\/\/Gsk\/4GLib14PointerWrapperP","doc:\/\/Gsk\/10GLibObject14GWeakCapturingP","doc:\/\/Gsk\/10GLibObject0B8ProtocolP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GskGLShader"},{"type":"text","text":" is a snippet of GLSL that is meant to run in the"},{"type":"text","text":" "},{"type":"text","text":"fragment shader of the rendering pipeline."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GLShaderRef"}],"title":"GLShaderRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:3Gsk11GLShaderRefV","modules":[{"name":"Gsk"}],"navigatorTitle":[{"kind":"identifier","text":"GLShaderRef"}]},"hierarchy":{"paths":[["doc:\/\/Gsk\/documentation\/Gsk"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/init(_:)-19qb9","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/init(_:)-2x61q","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/init(_:)-61tne","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/init(_:)-8a0ap","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/init(_:)-8nv23","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/init(bytes:)","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/init(cPointer:)","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/init(constPointer:)","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/init(gconstpointer:)","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/init(gpointer:)","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/init(mutating:)","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/init(opaquePointer:)","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/init(resource:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/ptr"]},{"title":"Type Methods","identifiers":["doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/newFrom(bytes:)","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/newFrom(resource:)","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/unowned(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/GLShaderProtocol-Implementations","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/GWeakCapturing-Implementations","doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/ObjectProtocol-Implementations"],"generated":true}],"references":{"doc://Gsk/documentation/Gsk/GLShaderRef/init(_:)-61tne":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GskGLShader"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/init(_:)-61tne","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderref\/init(_:)-61tne"},"doc://Gsk/documentation/Gsk/GLShaderRef/ObjectProtocol-Implementations":{"role":"collectionGroup","title":"ObjectProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/ObjectProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gsk\/glshaderref\/objectprotocol-implementations"},"doc://Gsk/documentation/Gsk/GLShader":{"role":"symbol","title":"GLShader","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"GLShader"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GskGLShader"},{"type":"text","text":" is a snippet of GLSL that is meant to run in the"},{"type":"text","text":" "},{"type":"text","text":"fragment shader of the rendering pipeline."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShader","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GLShader"}],"url":"\/documentation\/gsk\/glshader"},"doc://Gsk/documentation/Gsk/GLShaderRef/init(_:)-19qb9":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GskGLShader"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/init(_:)-19qb9","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderref\/init(_:)-19qb9"},"doc://Gsk/documentation/Gsk/GLShaderRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderref\/init(gconstpointer:)"},"doc://Gsk/documentation/Gsk/GLShaderRef/init(bytes:)":{"role":"symbol","title":"init(bytes:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GLibBytesT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"bytes"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GLibBytesT"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a "},{"type":"codeVoice","code":"GskGLShader"},{"type":"text","text":" that will render pixels using the specified code."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/init(bytes:)","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderref\/init(bytes:)"},"doc://Gsk/documentation/Gsk/GLShaderProtocol":{"role":"symbol","title":"GLShaderProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"GLShaderProtocol"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GskGLShader"},{"type":"text","text":" is a snippet of GLSL that is meant to run in the"},{"type":"text","text":" "},{"type":"text","text":"fragment shader of the rendering pipeline."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GLShaderProtocol"}],"url":"\/documentation\/gsk\/glshaderprotocol"},"doc://Gsk/documentation/Gsk/GLShaderRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderref\/init(opaquepointer:)"},"doc://Gsk/documentation/Gsk/GLShaderRef/init(_:)-8a0ap":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol"}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/init(_:)-8a0ap","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderref\/init(_:)-8a0ap"},"doc://Gsk/documentation/Gsk/GLShaderRef":{"role":"symbol","title":"GLShaderRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GLShaderRef"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GskGLShader"},{"type":"text","text":" is a snippet of GLSL that is meant to run in the"},{"type":"text","text":" "},{"type":"text","text":"fragment shader of the rendering pipeline."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GLShaderRef"}],"url":"\/documentation\/gsk\/glshaderref"},"doc://Gsk/documentation/Gsk/GLShaderRef/init(_:)-2x61q":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GskGLShader"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/init(_:)-2x61q","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderref\/init(_:)-2x61q"},"doc://Gsk/documentation/Gsk/GLShaderRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GskGLShader"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/gl_shader_ptr-9icsu"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderref\/ptr"},"doc://Gsk/10GLibObject0B8ProtocolP":{"type":"unresolvable","title":"GLibObject.ObjectProtocol","identifier":"doc:\/\/Gsk\/10GLibObject0B8ProtocolP"},"doc://Gsk/documentation/Gsk/GLShaderRef/init(resource:)":{"role":"symbol","title":"init(resource:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"resource"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">!)"}],"abstract":[{"type":"text","text":"Creates a "},{"type":"codeVoice","code":"GskGLShader"},{"type":"text","text":" that will render pixels using the specified code."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/init(resource:)","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderref\/init(resource:)"},"doc://Gsk/documentation/Gsk/GLShaderRef/init(_:)-8nv23":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GskGLShader"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/init(_:)-8nv23","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderref\/init(_:)-8nv23"},"doc://Gsk/documentation/Gsk/GLShaderProtocol/gl_shader_ptr-9icsu":{"defaultImplementations":1,"role":"symbol","title":"gl_shader_ptr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"gl_shader_ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GskGLShader"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Typed pointer to the underlying "},{"type":"codeVoice","code":"GskGLShader"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol\/gl_shader_ptr-9icsu","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/gsk\/glshaderprotocol\/gl_shader_ptr-9icsu"},"doc://Gsk/documentation/Gsk/GLShaderRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderref\/init(cpointer:)"},"doc://Gsk/10GLibObject14GWeakCapturingP":{"type":"unresolvable","title":"GLibObject.GWeakCapturing","identifier":"doc:\/\/Gsk\/10GLibObject14GWeakCapturingP"},"doc://Gsk/documentation/Gsk/GLShaderNode":{"role":"symbol","title":"GLShaderNode","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"GLShaderNode"}],"abstract":[{"type":"text","text":"A render node using a GL shader when drawing its children nodes."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderNode","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GLShaderNode"}],"url":"\/documentation\/gsk\/glshadernode"},"doc://Gsk/documentation/Gsk/GLShaderRef/newFrom(bytes:)":{"role":"symbol","title":"newFrom(bytes:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"newFrom"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GLibBytesT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"bytes"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GLibBytesT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GLShaderRef","preciseIdentifier":"s:3Gsk11GLShaderRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Creates a "},{"type":"codeVoice","code":"GskGLShader"},{"type":"text","text":" that will render pixels using the specified code."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/newFrom(bytes:)","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderref\/newfrom(bytes:)"},"doc://Gsk/documentation/Gsk/GLShaderRef/GWeakCapturing-Implementations":{"role":"collectionGroup","title":"GWeakCapturing Implementations","abstract":[],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/GWeakCapturing-Implementations","kind":"article","type":"topic","url":"\/documentation\/gsk\/glshaderref\/gweakcapturing-implementations"},"doc://Gsk/documentation/Gsk/GLShaderRef/GLShaderProtocol-Implementations":{"role":"collectionGroup","title":"GLShaderProtocol Implementations","abstract":[],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/GLShaderProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/gsk\/glshaderref\/glshaderprotocol-implementations"},"doc://Gsk/documentation/Gsk/GLShaderRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderref\/init(mutating:)"},"doc://Gsk/documentation/Gsk/GLShaderRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderref\/init(gpointer:)"},"doc://Gsk/4GLib14PointerWrapperP":{"type":"unresolvable","title":"GLib.PointerWrapper","identifier":"doc:\/\/Gsk\/4GLib14PointerWrapperP"},"doc://Gsk/documentation/Gsk/GLShaderRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderref\/init(constpointer:)"},"doc://Gsk/documentation/Gsk/GLShaderRef/unowned(_:)":{"role":"symbol","title":"unowned(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unowned"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GLShaderRef","preciseIdentifier":"s:3Gsk11GLShaderRefV"}],"abstract":[{"type":"text","text":"This factory is syntactic sugar for setting weak pointers wrapped in "},{"type":"codeVoice","code":"GWeak<T>"}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/unowned(_:)","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderref\/unowned(_:)"},"doc://Gsk/documentation/Gsk/GLShaderRef/newFrom(resource:)":{"role":"symbol","title":"newFrom(resource:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"newFrom"},{"kind":"text","text":"("},{"kind":"externalParam","text":"resource"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">!) -> "},{"kind":"typeIdentifier","text":"GLShaderRef","preciseIdentifier":"s:3Gsk11GLShaderRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Creates a "},{"type":"codeVoice","code":"GskGLShader"},{"type":"text","text":" that will render pixels using the specified code."}],"identifier":"doc:\/\/Gsk\/documentation\/Gsk\/GLShaderRef\/newFrom(resource:)","kind":"symbol","type":"topic","url":"\/documentation\/gsk\/glshaderref\/newfrom(resource:)"},"doc://Gsk/documentation/Gsk":{"role":"collection","title":"Gsk","abstract":[],"identifier":"doc:\/\/Gsk\/documentation\/Gsk","kind":"symbol","type":"topic","url":"\/documentation\/gsk"}}}